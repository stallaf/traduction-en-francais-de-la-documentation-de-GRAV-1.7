{"config":{"indexing":"full","lang":["fr"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Documentation Grav 1.7 en fran\u00e7ais. Contexte. Je ferais court en guise d'explication sur ce que vous avez sous les yeux. Je suis, par passion, d\u00e9veloppeur autodidacte, c'est un hobby. Ce travail a \u00e9t\u00e9 fait pour d\u00e9panner un pote voulant d\u00e9velopper son site lui-m\u00eame mais qui est une buse en anglais. Si cela peut \u00eatre utile \u00e0 d'autres alors je partage volontier. Je rapelle que seule la documentation d'origine est la r\u00e9f\u00e9rence . Et puis ... Je n'ai pas utilis\u00e9 Grav pour vous servir cette traduction mais MkDocs et Read the Docs . J'ai, par contre, voulu me rapporcher de la pr\u00e9sentation d'origine que je trouve agr\u00e9able, sans en faire un cl\u00f4ne pour autant. J'ai \u00e9galement simplifi\u00e9 certains aspects cosm\u00e9tiques. Je vous pr\u00e9viens, la traduction a \u00e9t\u00e9 r\u00e9alis\u00e9e par une application d\u00e9di\u00e9e avec quelques corrections de ma part. Elle n'est sans doute pas d'une qualit\u00e9 exemplaire mais elle rend le texte d'origine compr\u00e9hensible. Il reste dans ce cas toujours le m\u00eame probl\u00e8me : certains termes ou expressions ne trouvent pas correctement leur \u00e9quivalent en fran\u00e7ais. Grav c'est o\u00f9 ? Le site est \u00e0 cette adresse ; La documentaion est par ici ; Pour \u00e9changer sur Discord, commencez par l\u00e0 ; Cette oeuvre est mise \u00e0 disposition selon les termes de la Licence Creative Commons 4.0 International Attribution - Partage dans les M\u00eames Conditions A propos Mentions l\u00e9glaes Plus","title":"Documentation Grav 1.7 en fran\u00e7ais."},{"location":"#documentation-grav-17-en-francais","text":"","title":"Documentation Grav 1.7 en fran\u00e7ais."},{"location":"#contexte","text":"Je ferais court en guise d'explication sur ce que vous avez sous les yeux. Je suis, par passion, d\u00e9veloppeur autodidacte, c'est un hobby. Ce travail a \u00e9t\u00e9 fait pour d\u00e9panner un pote voulant d\u00e9velopper son site lui-m\u00eame mais qui est une buse en anglais. Si cela peut \u00eatre utile \u00e0 d'autres alors je partage volontier. Je rapelle que seule la documentation d'origine est la r\u00e9f\u00e9rence .","title":"Contexte."},{"location":"#et-puis","text":"Je n'ai pas utilis\u00e9 Grav pour vous servir cette traduction mais MkDocs et Read the Docs . J'ai, par contre, voulu me rapporcher de la pr\u00e9sentation d'origine que je trouve agr\u00e9able, sans en faire un cl\u00f4ne pour autant. J'ai \u00e9galement simplifi\u00e9 certains aspects cosm\u00e9tiques. Je vous pr\u00e9viens, la traduction a \u00e9t\u00e9 r\u00e9alis\u00e9e par une application d\u00e9di\u00e9e avec quelques corrections de ma part. Elle n'est sans doute pas d'une qualit\u00e9 exemplaire mais elle rend le texte d'origine compr\u00e9hensible. Il reste dans ce cas toujours le m\u00eame probl\u00e8me : certains termes ou expressions ne trouvent pas correctement leur \u00e9quivalent en fran\u00e7ais.","title":"Et puis ..."},{"location":"#grav-cest-ou","text":"Le site est \u00e0 cette adresse ; La documentaion est par ici ; Pour \u00e9changer sur Discord, commencez par l\u00e0 ; Cette oeuvre est mise \u00e0 disposition selon les termes de la Licence Creative Commons 4.0 International Attribution - Partage dans les M\u00eames Conditions A propos Mentions l\u00e9glaes Plus","title":"Grav c'est o\u00f9 ?"},{"location":"a-propos/","text":"Licence Le contenu de ce site est plac\u00e9 sous licence Creative Commons 4.0 International Attribution - Partage dans les M\u00eames Conditions. Toute reproduction, repr\u00e9sentation, modification, publication, adaptation de tout ou partie des \u00e9l\u00e9ments du site, quel que soit le moyen ou le proc\u00e9d\u00e9 utilis\u00e9, est autoris\u00e9e, dans le respect de la licence . Comment faire, c'est simple. Il faut titrer, citer l'auteur (donc maoua), la source et la licence. Voici un exemple de cr\u00e9dit pour un renvoi vers la page \"C'est quoi Grav ?\" : C'est quoi grav ? par Stallaf - CC-BY-SA 4.0 . Les ressources utiles : C\u00e9diter selon Creative Common ; La licence sous sa forme r\u00e9sum\u00e9e ; La licence compl\u00e8te . Acc\u00e8s au site Le site est accessible gratuitement \u00e0 tout utilisateur ayant un acc\u00e8s \u00e0 Internet. Tous les frais support\u00e9s par l\u2019utilisateur pour acc\u00e9der au service (mat\u00e9riel informatique, logiciels, abonnement Internet, etc.) sont \u00e0 sa charge. L\u2019\u00e9diteur met en \u0153uvre tous les moyens mis \u00e0 sa disposition pour assurer un acc\u00e8s de qualit\u00e9 au site. L\u2019obligation \u00e9tant de moyens, le site ne s\u2019engage pas \u00e0 atteindre ce r\u00e9sultat. L\u2019acc\u00e8s au site peut \u00e0 tout moment faire l\u2019objet d\u2019une interruption \u00e0 des fins de maintenance, de mise \u00e0 jour et pour toute autre raison (raisons techniques, force majeure, etc.) sans que l\u2019interruption n\u2019ouvre droit \u00e0 aucune obligation ni indemnisation. Tout \u00e9v\u00e9nement d\u00fb \u00e0 un cas de force majeure ayant pour cons\u00e9quence un dysfonctionnement du r\u00e9seau ou du serveur n\u2019engage pas la responsabilit\u00e9 de l\u2019\u00e9diteur. Liens hypertextes De nombreux liens hypertextes sortants sont pr\u00e9sents sur le site, cependant les pages web o\u00f9 m\u00e8nent ces liens n\u2019engagent en rien la responsabilit\u00e9 du site qui n\u2019a pas le contr\u00f4le de ces liens. Limite de responsabilit\u00e9 Les informations pr\u00e9sentes sur le site sont fournies en l\u2019\u00e9tat et proviennent de sources r\u00e9put\u00e9es fiables. Cependant, l\u2019\u00e9diteur du site ne peut garantir l\u2019exactitude ou la pertinence de ces donn\u00e9es. En outre, les informations mises \u00e0 disposition sur ce site le sont uniquement \u00e0 titre purement p\u00e9dagogique et informatif. L\u2019utilisateur du site assume l\u2019ensemble des risques d\u00e9coulant de l\u2019utilisation des informations pr\u00e9sentes sur le site ou dans les sites joignables au travers des liens hypertextes. Tout cela est barbant mais devait \u00eatre rappel\u00e9.","title":"A propos"},{"location":"a-propos/#licence","text":"Le contenu de ce site est plac\u00e9 sous licence Creative Commons 4.0 International Attribution - Partage dans les M\u00eames Conditions. Toute reproduction, repr\u00e9sentation, modification, publication, adaptation de tout ou partie des \u00e9l\u00e9ments du site, quel que soit le moyen ou le proc\u00e9d\u00e9 utilis\u00e9, est autoris\u00e9e, dans le respect de la licence . Comment faire, c'est simple. Il faut titrer, citer l'auteur (donc maoua), la source et la licence. Voici un exemple de cr\u00e9dit pour un renvoi vers la page \"C'est quoi Grav ?\" : C'est quoi grav ? par Stallaf - CC-BY-SA 4.0 . Les ressources utiles : C\u00e9diter selon Creative Common ; La licence sous sa forme r\u00e9sum\u00e9e ; La licence compl\u00e8te .","title":"Licence"},{"location":"a-propos/#acces-au-site","text":"Le site est accessible gratuitement \u00e0 tout utilisateur ayant un acc\u00e8s \u00e0 Internet. Tous les frais support\u00e9s par l\u2019utilisateur pour acc\u00e9der au service (mat\u00e9riel informatique, logiciels, abonnement Internet, etc.) sont \u00e0 sa charge. L\u2019\u00e9diteur met en \u0153uvre tous les moyens mis \u00e0 sa disposition pour assurer un acc\u00e8s de qualit\u00e9 au site. L\u2019obligation \u00e9tant de moyens, le site ne s\u2019engage pas \u00e0 atteindre ce r\u00e9sultat. L\u2019acc\u00e8s au site peut \u00e0 tout moment faire l\u2019objet d\u2019une interruption \u00e0 des fins de maintenance, de mise \u00e0 jour et pour toute autre raison (raisons techniques, force majeure, etc.) sans que l\u2019interruption n\u2019ouvre droit \u00e0 aucune obligation ni indemnisation. Tout \u00e9v\u00e9nement d\u00fb \u00e0 un cas de force majeure ayant pour cons\u00e9quence un dysfonctionnement du r\u00e9seau ou du serveur n\u2019engage pas la responsabilit\u00e9 de l\u2019\u00e9diteur.","title":"Acc\u00e8s au site"},{"location":"a-propos/#liens-hypertextes","text":"De nombreux liens hypertextes sortants sont pr\u00e9sents sur le site, cependant les pages web o\u00f9 m\u00e8nent ces liens n\u2019engagent en rien la responsabilit\u00e9 du site qui n\u2019a pas le contr\u00f4le de ces liens.","title":"Liens hypertextes"},{"location":"a-propos/#limite-de-responsabilite","text":"Les informations pr\u00e9sentes sur le site sont fournies en l\u2019\u00e9tat et proviennent de sources r\u00e9put\u00e9es fiables. Cependant, l\u2019\u00e9diteur du site ne peut garantir l\u2019exactitude ou la pertinence de ces donn\u00e9es. En outre, les informations mises \u00e0 disposition sur ce site le sont uniquement \u00e0 titre purement p\u00e9dagogique et informatif. L\u2019utilisateur du site assume l\u2019ensemble des risques d\u00e9coulant de l\u2019utilisation des informations pr\u00e9sentes sur le site ou dans les sites joignables au travers des liens hypertextes. Tout cela est barbant mais devait \u00eatre rappel\u00e9.","title":"Limite de responsabilit\u00e9"},{"location":"api/","text":"API Grav Table des mati\u00e8res. NDT :Je renvoie ici le lecteur vers la documentation officielle \\Grav\\Common\\Iterator \\Grav\\Common\\Plugin \\Grav\\Common\\Taxonomy \\Grav\\Common\\Utils (abstract) \\Grav\\Common\\Uri \\Grav\\Common\\Assets \\Grav\\Common\\Getters (abstract) \\Grav\\Common\\Cache \\Grav\\Common\\Theme \\Grav\\Common\\Themes \\Grav\\Common\\Yaml (abstract) \\Grav\\Common\\Composer \\Grav\\Common\\Browser \\Grav\\Common\\Inflector \\Grav\\Common\\Security \\Grav\\Common\\Session \\Grav\\Common\\Assets\\Css \\Grav\\Common\\Assets\\Js \\Grav\\Common\\Assets\\InlineCss \\Grav\\Common\\Assets\\Pipeline \\Grav\\Common\\Assets\\BaseAsset (abstract) \\Grav\\Common\\Assets\\InlineJs \\Grav\\Common\\Backup\\Backups \\Grav\\Common\\Config\\CompiledConfig \\Grav\\Common\\Config\\CompiledLanguages \\Grav\\Common\\Config\\Setup \\Grav\\Common\\Config\\Config \\Grav\\Common\\Config\\ConfigFileFinder \\Grav\\Common\\Config\\CompiledBlueprints \\Grav\\Common\\Config\\Languages \\Grav\\Common\\Data\\Blueprints \\Grav\\Common\\Data\\Blueprint \\Grav\\Common\\Data\\DataInterface (interface) \\Grav\\Common\\Data\\ValidationException \\Grav\\Common\\Data\\Validation \\Grav\\Common\\Data\\Data \\Grav\\Common\\Data\\BlueprintSchema \\Grav\\Common\\Errors\\BareHandler \\Grav\\Common\\Errors\\SystemFacade \\Grav\\Common\\Errors\\Errors \\Grav\\Common\\Errors\\SimplePageHandler \\Grav\\Common\\File\\CompiledYamlFile \\Grav\\Common\\File\\CompiledJsonFile \\Grav\\Common\\File\\CompiledMarkdownFile \\Grav\\Common\\Filesystem\\RecursiveFolderFilterIterator \\Grav\\Common\\Filesystem\\Archiver (abstract) \\Grav\\Common\\Filesystem\\RecursiveDirectoryFilterIterator \\Grav\\Common\\Filesystem\\Folder (abstract) \\Grav\\Common\\Filesystem\\ZipArchiver \\Grav\\Common\\Flex\\Types\\Generic\\GenericCollection \\Grav\\Common\\Flex\\Types\\Generic\\GenericIndex \\Grav\\Common\\Flex\\Types\\Generic\\GenericObject \\Grav\\Common\\Flex\\Types\\Pages\\PageObject \\Grav\\Common\\Flex\\Types\\Pages\\PageCollection \\Grav\\Common\\Flex\\Types\\Pages\\PageIndex \\Grav\\Common\\Flex\\Types\\Pages\\Storage\\PageStorage \\Grav\\Common\\Flex\\Types\\UserGroups\\UserGroupCollection \\Grav\\Common\\Flex\\Types\\UserGroups\\UserGroupIndex \\Grav\\Common\\Flex\\Types\\UserGroups\\UserGroupObject \\Grav\\Common\\Flex\\Types\\Users\\UserCollection \\Grav\\Common\\Flex\\Types\\Users\\UserIndex \\Grav\\Common\\Flex\\Types\\Users\\UserObject \\Grav\\Common\\Flex\\Types\\Users\\Storage\\UserFolderStorage \\Grav\\Common\\Flex\\Types\\Users\\Storage\\UserFileStorage \\Grav\\Common\\Form\\FormFlash \\Grav\\Common\\GPM\\Upgrader \\Grav\\Common\\GPM\\AbstractCollection (abstract) \\Grav\\Common\\GPM\\GPM \\Grav\\Common\\GPM\\Licenses \\Grav\\Common\\GPM\\Response \\Grav\\Common\\GPM\\Installer \\Grav\\Common\\GPM\\Common\\CachedCollection \\Grav\\Common\\GPM\\Common\\Package \\Grav\\Common\\GPM\\Common\\AbstractPackageCollection (abstract) \\Grav\\Common\\GPM\\Local\\Packages \\Grav\\Common\\GPM\\Local\\Themes \\Grav\\Common\\GPM\\Local\\Plugins \\Grav\\Common\\GPM\\Local\\Package \\Grav\\Common\\GPM\\Local\\AbstractPackageCollection (abstract) \\Grav\\Common\\GPM\\Remote\\Packages \\Grav\\Common\\GPM\\Remote\\Themes \\Grav\\Common\\GPM\\Remote\\Plugins \\Grav\\Common\\GPM\\Remote\\Package \\Grav\\Common\\GPM\\Remote\\AbstractPackageCollection \\Grav\\Common\\GPM\\Remote\\GravCore \\Grav\\Common\\Helpers\\Base32 \\Grav\\Common\\Helpers\\Excerpts \\Grav\\Common\\Helpers\\Exif \\Grav\\Common\\Helpers\\Truncator \\Grav\\Common\\Helpers\\LogViewer \\Grav\\Common\\Helpers\\YamlLinter \\Grav\\Common\\Language\\Language \\Grav\\Common\\Language\\LanguageCodes \\Grav\\Common\\Markdown\\ParsedownExtra \\Grav\\Common\\Markdown\\Parsedown \\Grav\\Common\\Media\\Interfaces\\VideoMediaInterface (interface) \\Grav\\Common\\Media\\Interfaces\\MediaLinkInterface (interface) \\Grav\\Common\\Media\\Interfaces\\MediaFileInterface (interface) \\Grav\\Common\\Media\\Interfaces\\ImageManipulateInterface (interface) \\Grav\\Common\\Media\\Interfaces\\MediaPlayerInterface (interface) \\Grav\\Common\\Media\\Interfaces\\MediaCollectionInterface (interface) \\Grav\\Common\\Media\\Interfaces\\ImageMediaInterface (interface) \\Grav\\Common\\Media\\Interfaces\\MediaUploadInterface (interface) \\Grav\\Common\\Media\\Interfaces\\MediaObjectInterface (interface) \\Grav\\Common\\Media\\Interfaces\\MediaInterface (interface) \\Grav\\Common\\Media\\Interfaces\\AudioMediaInterface (interface) \\Grav\\Common\\Page\\Collection \\Grav\\Common\\Page\\Pages \\Grav\\Common\\Page\\Media \\Grav\\Common\\Page\\Header \\Grav\\Common\\Page\\Types \\Grav\\Common\\Page\\Page \\Grav\\Common\\Page\\Interfaces\\PageInterface (interface) \\Grav\\Common\\Page\\Interfaces\\PageCollectionInterface (interface) \\Grav\\Common\\Page\\Interfaces\\PageRoutableInterface (interface) \\Grav\\Common\\Page\\Interfaces\\PageLegacyInterface (interface) \\Grav\\Common\\Page\\Interfaces\\PageFormInterface (interface) \\Grav\\Common\\Page\\Interfaces\\PageContentInterface (interface) \\Grav\\Common\\Page\\Interfaces\\PagesSourceInterface (interface) \\Grav\\Common\\Page\\Interfaces\\PageTranslateInterface (interface) \\Grav\\Common\\Page\\Markdown\\Excerpts \\Grav\\Common\\Page\\Medium\\AudioMedium \\Grav\\Common\\Page\\Medium\\MediumFactory \\Grav\\Common\\Page\\Medium\\VideoMedium \\Grav\\Common\\Page\\Medium\\ThumbnailImageMedium \\Grav\\Common\\Page\\Medium\\StaticImageMedium \\Grav\\Common\\Page\\Medium\\AbstractMedia (abstract) \\Grav\\Common\\Page\\Medium\\RenderableInterface (interface) \\Grav\\Common\\Page\\Medium\\ImageMedium \\Grav\\Common\\Page\\Medium\\Medium \\Grav\\Common\\Page\\Medium\\ImageFile \\Grav\\Common\\Page\\Medium\\GlobalMedia \\Grav\\Common\\Processors\\DebuggerAssetsProcessor \\Grav\\Common\\Processors\\PluginsProcessor \\Grav\\Common\\Processors\\ThemesProcessor \\Grav\\Common\\Processors\\ProcessorBase (abstract) \\Grav\\Common\\Processors\\AssetsProcessor \\Grav\\Common\\Processors\\PagesProcessor \\Grav\\Common\\Processors\\BackupsProcessor \\Grav\\Common\\Processors\\RequestProcessor \\Grav\\Common\\Processors\\RenderProcessor \\Grav\\Common\\Processors\\TwigProcessor \\Grav\\Common\\Processors\\TasksProcessor \\Grav\\Common\\Processors\\InitializeProcessor \\Grav\\Common\\Processors\\ProcessorInterface (interface) \\Grav\\Common\\Processors\\Events\\RequestHandlerEvent \\Grav\\Common\\Scheduler\\Cron \\Grav\\Common\\Scheduler\\Job \\Grav\\Common\\Scheduler\\Scheduler \\Grav\\Common\\Service\\RequestServiceProvider \\Grav\\Common\\Service\\StreamsServiceProvider \\Grav\\Common\\Service\\BackupsServiceProvider \\Grav\\Common\\Service\\PagesServiceProvider \\Grav\\Common\\Service\\ErrorServiceProvider \\Grav\\Common\\Service\\FlexServiceProvider \\Grav\\Common\\Service\\AccountsServiceProvider \\Grav\\Common\\Service\\ConfigServiceProvider \\Grav\\Common\\Service\\SchedulerServiceProvider \\Grav\\Common\\Service\\FilesystemServiceProvider \\Grav\\Common\\Service\\LoggerServiceProvider \\Grav\\Common\\Service\\AssetsServiceProvider \\Grav\\Common\\Service\\OutputServiceProvider \\Grav\\Common\\Service\\SessionServiceProvider \\Grav\\Common\\Service\\TaskServiceProvider \\Grav\\Common\\Service\\InflectorServiceProvider \\Grav\\Common\\Twig\\TwigProfileProcessor \\Grav\\Common\\Twig\\TwigEnvironment \\Grav\\Common\\Twig\\TwigClockworkDataSource \\Grav\\Common\\Twig\\Twig \\Grav\\Common\\Twig\\Node\\TwigNodeThrow \\Grav\\Common\\Twig\\Node\\TwigNodeSwitch \\Grav\\Common\\Twig\\Node\\TwigNodeStyle \\Grav\\Common\\Twig\\Node\\TwigNodeMarkdown \\Grav\\Common\\Twig\\Node\\TwigNodeScript \\Grav\\Common\\Twig\\Node\\TwigNodeRender \\Grav\\Common\\Twig\\Node\\TwigNodeCache \\Grav\\Common\\Twig\\Node\\TwigNodeTryCatch \\Grav\\Common\\Twig\\TokenParser\\TwigTokenParserRender \\Grav\\Common\\Twig\\TokenParser\\TwigTokenParserCache \\Grav\\Common\\Twig\\TokenParser\\TwigTokenParserTryCatch \\Grav\\Common\\Twig\\TokenParser\\TwigTokenParserMarkdown \\Grav\\Common\\Twig\\TokenParser\\TwigTokenParserSwitch \\Grav\\Common\\Twig\\TokenParser\\TwigTokenParserStyle \\Grav\\Common\\Twig\\TokenParser\\TwigTokenParserThrow \\Grav\\Common\\Twig\\TokenParser\\TwigTokenParserScript \\Grav\\Common\\User\\Group \\Grav\\Common\\User\\Access \\Grav\\Common\\User\\Authentication (abstract) \\Grav\\Common\\User\\DataUser\\UserCollection \\Grav\\Common\\User\\DataUser\\User \\Grav\\Common\\User\\Interfaces\\UserGroupInterface (interface) \\Grav\\Common\\User\\Interfaces\\AuthorizeInterface (interface) \\Grav\\Common\\User\\Interfaces\\UserInterface (interface) \\Grav\\Common\\User\\Interfaces\\UserCollectionInterface (interface) \\Grav\\Console\\ConsoleCommand \\Grav\\Console\\Cli\\PageSystemValidatorCommand \\Grav\\Console\\Cli\\LogViewerCommand \\Grav\\Console\\Cli\\CleanCommand \\Grav\\Console\\Cli\\ComposerCommand \\Grav\\Console\\Cli\\SchedulerCommand \\Grav\\Console\\Cli\\NewProjectCommand \\Grav\\Console\\Cli\\SandboxCommand \\Grav\\Console\\Cli\\InstallCommand \\Grav\\Console\\Cli\\YamlLinterCommand \\Grav\\Console\\Cli\\ClearCacheCommand \\Grav\\Console\\Cli\\BackupCommand \\Grav\\Console\\Cli\\SecurityCommand \\Grav\\Console\\Cli\\ServerCommand \\Grav\\Console\\Gpm\\DirectInstallCommand \\Grav\\Console\\Gpm\\IndexCommand \\Grav\\Console\\Gpm\\UninstallCommand \\Grav\\Console\\Gpm\\InstallCommand \\Grav\\Console\\Gpm\\VersionCommand \\Grav\\Console\\Gpm\\SelfupgradeCommand \\Grav\\Console\\Gpm\\UpdateCommand \\Grav\\Console\\Gpm\\InfoCommand \\Grav\\Console\\TerminalObjects\\Table \\Grav\\Events\\FlexRegisterEvent \\Grav\\Events\\PluginsLoadedEvent \\Grav\\Events\\PermissionsRegisterEvent \\Grav\\Events\\SessionStartEvent \\Grav\\Framework\\Acl\\Action \\Grav\\Framework\\Acl\\PermissionsReader \\Grav\\Framework\\Acl\\RecursiveActionIterator \\Grav\\Framework\\Acl\\Access \\Grav\\Framework\\Acl\\Permissions \\Grav\\Framework\\Cache\\CacheInterface (interface) \\Grav\\Framework\\Cache\\AbstractCache (abstract) \\Grav\\Framework\\Cache\\Adapter\\FileCache \\Grav\\Framework\\Cache\\Adapter\\SessionCache \\Grav\\Framework\\Cache\\Adapter\\ChainCache \\Grav\\Framework\\Cache\\Adapter\\MemoryCache \\Grav\\Framework\\Cache\\Adapter\\DoctrineCache \\Grav\\Framework\\Cache\\Exception\\InvalidArgumentException \\Grav\\Framework\\Cache\\Exception\\CacheException \\Grav\\Framework\\Collection\\AbstractIndexCollection (abstract) \\Grav\\Framework\\Collection\\CollectionInterface (interface) \\Grav\\Framework\\Collection\\AbstractLazyCollection (abstract) \\Grav\\Framework\\Collection\\FileCollectionInterface (interface) \\Grav\\Framework\\Collection\\ArrayCollection \\Grav\\Framework\\Collection\\AbstractFileCollection \\Grav\\Framework\\Collection\\FileCollection \\Grav\\Framework\\ContentBlock\\HtmlBlock \\Grav\\Framework\\ContentBlock\\ContentBlockInterface (interface) \\Grav\\Framework\\ContentBlock\\ContentBlock \\Grav\\Framework\\ContentBlock\\HtmlBlockInterface (interface) \\Grav\\Framework\\DI\\Container \\Grav\\Framework\\File\\DataFile \\Grav\\Framework\\File\\AbstractFile \\Grav\\Framework\\File\\File \\Grav\\Framework\\File\\MarkdownFile \\Grav\\Framework\\File\\YamlFile \\Grav\\Framework\\File\\CsvFile \\Grav\\Framework\\File\\IniFile \\Grav\\Framework\\File\\JsonFile \\Grav\\Framework\\File\\Formatter\\YamlFormatter \\Grav\\Framework\\File\\Formatter\\AbstractFormatter (abstract) \\Grav\\Framework\\File\\Formatter\\IniFormatter \\Grav\\Framework\\File\\Formatter\\FormatterInterface (interface) \\Grav\\Framework\\File\\Formatter\\JsonFormatter \\Grav\\Framework\\File\\Formatter\\SerializeFormatter \\Grav\\Framework\\File\\Formatter\\CsvFormatter \\Grav\\Framework\\File\\Formatter\\MarkdownFormatter \\Grav\\Framework\\File\\Interfaces\\FileFormatterInterface (interface) \\Grav\\Framework\\File\\Interfaces\\FileInterface (interface) \\Grav\\Framework\\Filesystem\\Filesystem \\Grav\\Framework\\Filesystem\\Interfaces\\FilesystemInterface (interface) \\Grav\\Framework\\Flex\\Flex \\Grav\\Framework\\Flex\\FlexForm \\Grav\\Framework\\Flex\\FlexFormFlash \\Grav\\Framework\\Flex\\FlexDirectoryForm \\Grav\\Framework\\Flex\\FlexDirectory \\Grav\\Framework\\Flex\\Interfaces\\FlexTranslateInterface (interface) \\Grav\\Framework\\Flex\\Interfaces\\FlexFormInterface (interface) \\Grav\\Framework\\Flex\\Interfaces\\FlexInterface (interface) \\Grav\\Framework\\Flex\\Interfaces\\FlexObjectInterface (interface) \\Grav\\Framework\\Flex\\Interfaces\\FlexObjectFormInterface (interface) \\Grav\\Framework\\Flex\\Interfaces\\FlexCollectionInterface (interface) \\Grav\\Framework\\Flex\\Interfaces\\FlexAuthorizeInterface (interface) \\Grav\\Framework\\Flex\\Interfaces\\FlexIndexInterface (interface) \\Grav\\Framework\\Flex\\Interfaces\\FlexStorageInterface (interface) \\Grav\\Framework\\Flex\\Interfaces\\FlexCommonInterface (interface) \\Grav\\Framework\\Flex\\Interfaces\\FlexDirectoryFormInterface (interface) \\Grav\\Framework\\Flex\\Pages\\FlexPageCollection \\Grav\\Framework\\Flex\\Pages\\FlexPageObject \\Grav\\Framework\\Flex\\Pages\\FlexPageIndex \\Grav\\Framework\\Flex\\Storage\\SimpleStorage \\Grav\\Framework\\Flex\\Storage\\FolderStorage \\Grav\\Framework\\Flex\\Storage\\AbstractFilesystemStorage (abstract) \\Grav\\Framework\\Flex\\Storage\\FileStorage \\Grav\\Framework\\Form\\FormFlash \\Grav\\Framework\\Form\\FormFlashFile \\Grav\\Framework\\Form\\Interfaces\\FormFlashInterface (interface) \\Grav\\Framework\\Form\\Interfaces\\FormFactoryInterface (interface) \\Grav\\Framework\\Form\\Interfaces\\FormInterface (interface) \\Grav\\Framework\\Interfaces\\RenderInterface (interface) \\Grav\\Framework\\Media\\Interfaces\\MediaManipulationInterface (interface) \\Grav\\Framework\\Media\\Interfaces\\MediaCollectionInterface (interface) \\Grav\\Framework\\Media\\Interfaces\\MediaObjectInterface (interface) \\Grav\\Framework\\Media\\Interfaces\\MediaInterface (interface) \\Grav\\Framework\\Object\\ArrayObject \\Grav\\Framework\\Object\\ObjectIndex (abstract) \\Grav\\Framework\\Object\\LazyObject \\Grav\\Framework\\Object\\ObjectCollection \\Grav\\Framework\\Object\\PropertyObject \\Grav\\Framework\\Object\\Collection\\ObjectExpressionVisitor \\Grav\\Framework\\Object\\Interfaces\\ObjectInterface (interface) \\Grav\\Framework\\Object\\Interfaces\\NestedObjectCollectionInterface (interface) \\Grav\\Framework\\Object\\Interfaces\\NestedObjectInterface (interface) \\Grav\\Framework\\Object\\Interfaces\\ObjectCollectionInterface (interface) \\Grav\\Framework\\Pagination\\AbstractPaginationPage (abstract) \\Grav\\Framework\\Pagination\\Pagination \\Grav\\Framework\\Pagination\\AbstractPagination \\Grav\\Framework\\Pagination\\PaginationPage \\Grav\\Framework\\Pagination\\Interfaces\\PaginationInterface (interface) \\Gav\\Framework\\Pagination\\Interfaces\\PaginationPageInterface (interface) \\Grav\\Framework\\Psr7\\Request \\Grav\\Framework\\Psr7\\ServerRequest \\Grav\\Framework\\Psr7\\UploadedFile \\Grav\\Framework\\Psr7\\Uri \\Grav\\Framework\\Psr7\\Stream \\Grav\\Framework\\Psr7\\Response \\Grav\\Framework\\Psr7\\AbstractUri (abstract) \\Grav\\Framework\\RequestHandler\\RequestHandler \\Grav\\Framework\\RequestHandler\\Exception\\InvalidArgumentException \\Grav\\Framework\\RequestHandler\\Exception\\NotFoundException \\Grav\\Framework\\RequestHandler\\Exception\\RequestException \\Grav\\Framework\\RequestHandler\\Exception\\PageExpiredException \\Grav\\Framework\\RequestHandler\\Exception\\NotHandledException \\Grav\\Framework\\RequestHandler\\Middlewares\\Exceptions \\Grav\\Framework\\Route\\RouteFactory \\Grav\\Framework\\Route\\Route \\Grav\\Framework\\Session\\SessionInterface (interface) \\Grav\\Framework\\Session\\Session \\Grav\\Framework\\Session\\Exceptions\\SessionException \\Grav\\Framework\\Uri\\UriFactory \\Grav\\Framework\\Uri\\Uri \\Grav\\Framework\\Uri\\UriPartsFilter \\Grav\\Installer\\Install","title":"Api"},{"location":"asset-manager/","text":"Gestionnaire d'actifs Dans Grav 1.6, le Gestionnaire d'Actifs a \u00e9t\u00e9 compl\u00e8tement r\u00e9\u00e9crit pour fournir un m\u00e9canisme plus flexible de gestion des actifs CSS et JavaScript dans les th\u00e8mes. L'objectif principal du gestionnaire d'actifs est de simplifier le processus d'ajout d'actifs \u00e0 partir de th\u00e8mes et de plug-ins tout en offrant des fonctionnalit\u00e9s am\u00e9lior\u00e9es telles que la priorit\u00e9 et en fournissant un Pipeline d'Actifs pouvant \u00eatre utilis\u00e9 pour r\u00e9duire , compresser et int\u00e9grer des actifs afin de r\u00e9duire le nombre de requ\u00eates de navigateur. , ainsi que la taille globale des actifs. C'est beaucoup plus flexible et plus fiable qu'auparavant. De plus, c'est consid\u00e9rablement plus \"propre\" et plus facile \u00e0 suivre si vous commencez \u00e0 parcourir le code. Le gestionnaire d'actifs est disponible dans Grav et est accessible dans les crochets d'\u00e9v\u00e9nement du plugin, mais aussi directement dans les th\u00e8mes via des appels Twig. D\u00e9tails techniques : la classe d'actifs principale a \u00e9t\u00e9 consid\u00e9rablement simplifi\u00e9e et r\u00e9duite. Une grande partie de la logique a \u00e9t\u00e9 divis\u00e9e en 3 traits. Un trait de test qui contient des fonctions principalement utilis\u00e9es dans notre suite de tests, un trait utils qui contient des m\u00e9thodes partag\u00e9es entre les types d'actifs r\u00e9guliers (js, inline_js, css, inline_css) et le pipeline d'actifs qui peut minifier et compresser, et enfin un trait h\u00e9rit\u00e9 qui contient des m\u00e9thodes qui sont des raccourcis ou des solutions de contournement, et ne doivent g\u00e9n\u00e9ralement pas \u00eatre utilis\u00e9es \u00e0 l'avenir. Le gestionnaire d'actifs est enti\u00e8rement r\u00e9trocompatible avec la syntaxe utilis\u00e9e dans les versions ant\u00e9rieures \u00e0 Grav 1.6, cependant, la documentation ci-dessous couvrira la nouvelle syntaxe pr\u00e9f\u00e9r\u00e9e . Configuration Le Grav Asset Manager dispose d'un ensemble simple d'options de configuration. Les valeurs par d\u00e9faut se trouvent dans le fichier syst\u00e8me system.yaml , mais vous pouvez remplacer tout ou partie d'entre elles dans votre fichier user/config/system.yaml : 1 | assets: # Configuration for Assets Manager (JS, CSS) 2 | css_pipeline: false # The CSS pipeline is the unification of multiple CSS resources into one file 3 | css_pipeline_include_externals: true # Include external URLs in the pipeline by default 4 | css_pipeline_before_excludes: true # Render the pipeline before any excluded files 5 | css_minify: true # Minify the CSS during pipelining 6 | css_minify_windows: false # Minify Override for Windows platforms, also applies to js. False by default due to ThreadStackSize 7 | css_rewrite: true # Rewrite any CSS relative URLs during pipelining 8 | js_pipeline: false # The JS pipeline is the unification of multiple JS resources into one file 9 | js_pipeline_include_externals: true # Include external URLs in the pipeline by default 10 | js_pipeline_before_excludes: true # Render the pipeline before any excluded files 11 | js_module_pipeline: false # The JS Module pipeline is the unification of multiple JS Module resources into one file 12 | js_module_pipeline_include_externals: true # Include external URLs in the pipeline by default 13 | js_module_pipeline_before_excludes: true # Render the pipeline before any excluded files 14 | js_minify: true # Minify the JS during pipelining 15 | enable_asset_timestamp: false # Enable asset timestamps 16 | collections: 17 | jquery: system://assets/jquery/jquery-2.x.min.js Structure Il existe plusieurs niveaux de contr\u00f4le de positionnement, comme indiqu\u00e9 dans le sch\u00e9ma ci-dessous. Dans l'ordre de port\u00e9e, ils sont: Group - permet le regroupement d'actifs tels que la t\u00eate (par d\u00e9faut) et le bas Position - before , pipeline (par d\u00e9faut) et after . Fondamentalement, cela vous permet de sp\u00e9cifier o\u00f9 dans le groupe l'actif doit \u00eatre charg\u00e9. Priority - Ceci contr\u00f4le l'ordre , o\u00f9 les entiers plus grands (par exemple 100 ) seront sortis avant les entiers inf\u00e9rieurs. 10 est la valeur par d\u00e9faut. CSS \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502 Group (head) \u2502 \u2502\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\u2502 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502\u2502 Position \u2502\u2502 \u2502 priority 100 \u2502\u2500\u2500\u2500\u2510 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502\u2502\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\u2502\u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u251c\u2500\u2500\u2500>\u2502 CSS \u2502 \u2502\u2502\u2502 \u2502\u2502\u2502 \u2502 priority 99 \u2502\u2500\u2500\u2500\u2524 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2502\u2502\u2502 before \u2502\u251c\u253c\u2500\u2500\u252c\u2500\u2500\u2500>\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502 \u2502\u2502\u2502 \u2502\u2502\u2502 \u2502 \u2502 priority 1 \u2502\u2500\u2500\u2500\u2524 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502\u2502\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\u2502\u2502 \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u251c\u2500\u2500\u2500>\u2502inline CSS \u2502 \u2502\u2502\u2502 \u2502\u2502\u2502 \u2502 \u2502 priority 0 \u2502\u2500\u2500\u2500\u2518 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2502\u2502\u2502 pipeline \u2502\u251c\u253c\u2500\u2500\u2524 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2502\u2502\u2502 \u2502\u2502\u2502 \u2502 \u2502\u2502\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\u2502\u2502 \u2502 \u2502\u2502\u2502 \u2502\u2502\u2502 \u2502 \u2502\u2502\u2502 after \u2502\u251c\u253c\u2500\u2500\u2518 \u2502\u2502\u2502 \u2502\u2502\u2502 \u2502\u2502\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\u2502\u2502 \u2502\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 JS \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502 Group (head) \u2502 \u2502\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\u2502 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502\u2502 Position \u2502\u2502 \u2502 priority 100 \u2502\u2500\u2500\u2500\u2510 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502\u2502\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\u2502\u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u251c\u2500\u2500\u2500> \u2502 JS \u2502 \u2502\u2502\u2502 \u2502\u2502\u2502 \u2502 priority 99 \u2502\u2500\u2500\u2500\u2524 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2502\u2502\u2502 before \u2502\u251c\u253c\u2500\u2500\u252c\u2500\u2500\u2500>\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502 \u2502\u2502\u2502 \u2502\u2502\u2502 \u2502 \u2502 priority 1 \u2502\u2500\u2500\u2500\u2524 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502\u2502\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\u2502\u2502 \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u251c\u2500\u2500\u2500> \u2502inline JS \u2502 \u2502\u2502\u2502 \u2502\u2502\u2502 \u2502 \u2502 priority 0 \u2502\u2500\u2500\u2500\u2518 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2502\u2502\u2502 pipeline \u2502\u251c\u253c\u2500\u2500\u2524 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2502\u2502\u2502 \u2502\u2502\u2502 \u2502 \u2502\u2502\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\u2502\u2502 \u2502 \u2502\u2502\u2502 \u2502\u2502\u2502 \u2502 \u2502\u2502\u2502 after \u2502\u251c\u253c\u2500\u2500\u2518 \u2502\u2502\u2502 \u2502\u2502\u2502 \u2502\u2502\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\u2502\u2502 \u2502\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 JS Module \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502 Group (head) \u2502 \u2502\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\u2502 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502\u2502 Position \u2502\u2502 \u2502 priority 100 \u2502\u2500\u2500\u2500\u2510 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502\u2502\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\u2502\u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u251c\u2500\u2500\u2500>\u2502 JS Module \u2502 \u2502\u2502\u2502 \u2502\u2502\u2502 \u2502 priority 99 \u2502\u2500\u2500\u2500\u2524 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2502\u2502\u2502 before \u2502\u251c\u253c\u2500\u2500\u252c\u2500\u2500\u2500>\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502 \u2502\u2502\u2502 \u2502\u2502\u2502 \u2502 \u2502 priority 1 \u2502\u2500\u2500\u2500\u2524 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502\u2502\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\u2502\u2502 \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u251c\u2500\u2500\u2500>\u2502inline JS Module\u2502 \u2502\u2502\u2502 \u2502\u2502\u2502 \u2502 \u2502 priority 0 \u2502\u2500\u2500\u2500\u2518 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2502\u2502\u2502 pipeline \u2502\u251c\u253c\u2500\u2500\u2524 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2502\u2502\u2502 \u2502\u2502\u2502 \u2502 \u2502\u2502\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\u2502\u2502 \u2502 \u2502\u2502\u2502 \u2502\u2502\u2502 \u2502 \u2502\u2502\u2502 after \u2502\u251c\u253c\u2500\u2500\u2518 \u2502\u2502\u2502 \u2502\u2502\u2502 \u2502\u2502\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\u2502\u2502 \u2502\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 Par d\u00e9faut, CSS , JS et JS Module s'affichent par d\u00e9faut dans la position du pipeline lors de leur sortie. Alors que InlineCSS , InlineJS et Inline JS Module sont par d\u00e9faut dans la position after . Ceci est cependant configurable et vous pouvez d\u00e9finir n'importe quel actif dans n'importe quelle position. Assets dans les th\u00e8mes Aper\u00e7u En g\u00e9n\u00e9ral, vous ajoutez des actifs CSS un par un \u00e0 l'aide des appels assets.addCss() ou assets.addInlineCss() , puis restituez ces actifs via assets.css() . Les options contr\u00f4lant la priorit\u00e9, le pipelining ou l'inlining peuvent \u00eatre sp\u00e9cifi\u00e9es par ressource lors de son ajout, ou au moment du rendu pour un groupe de ressources. Les ressources JS sont g\u00e9r\u00e9es de la m\u00eame mani\u00e8re avec les appels assets.addJs() et assets.addInlineJs() . Il existe \u00e9galement une m\u00e9thode g\u00e9n\u00e9rique assets.add() qui essaie de deviner le type d'actif que vous ajoutez, mais il est recommand\u00e9 d'utiliser les appels de m\u00e9thode plus sp\u00e9cifiques. Depuis la version 1.7.27, Grav's Assets Manager prend \u00e9galement en charge les modules JS. Ces actifs fonctionnent exactement comme les actifs JS mais leur type est type=\"module\" et ils sont g\u00e9r\u00e9s avec des appels assets.addJsModule() et assets.addInlineJsModule() . La m\u00e9thode g\u00e9n\u00e9rique assets.add() ne reviendra au module JS que si l'extension d\u00e9tect\u00e9e est .mjs . Sinon, tout fichier .js sera trait\u00e9 comme JS normal. Pour en savoir plus sur les modules JS https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Modules https://v8.dev/features/modules https://javascript.info/modules-intro L'Asset Manager prend \u00e9galement en charge : ajouter des actifs \u00e0 des groupes nomm\u00e9s afin de rendre ces groupes \u00e0 diff\u00e9rents endroits et/ou avec diff\u00e9rents ensembles d'options, configurer des collections de ressources nomm\u00e9es, qui peuvent \u00eatre ajout\u00e9es en un seul appel assets.add*() . Exemple Un exemple de la fa\u00e7on dont vous pouvez ajouter des fichiers CSS dans votre th\u00e8me peut \u00eatre trouv\u00e9 dans le th\u00e8me quark par d\u00e9faut fourni avec Grav. Si vous regardez le partiel templates/partials/base.html.twig , vous verrez quelque chose de similaire \u00e0 ce qui suit : 1 | <!DOCTYPE html> 2 | <html> 3 | <head> 4 | ... 5 | 6 | {% block stylesheets %} 7 | {% do assets.addCss('theme://css-compiled/spectre.css') %} 8 | {% do assets.addCss('theme://css-compiled/theme.css') %} 9 | {% do assets.addCss('theme://css/custom.css') %} 10 | {% do assets.addCss('theme://css/line-awesome.min.css') %} 11 | {% endblock %} 12 | 13 | {% block javascripts %} 14 | {% do assets.addJs('jquery', 101) %} 15 | {% do assets.addJs('theme://js/jquery.treemenu.js', { group: 'bottom' }) %} 16 | {% do assets.addJs('theme://js/site.js', { group: 'bottom' }) %} 17 | {% do assets.addJsModule('plugin://my_plugin/app/main.js', { group: 'bottom' }) %} 18 | {% endblock %} 19 | 20 | {% block assets deferred %} 21 | {{ assets.css()|raw }} 22 | {{ assets.js()|raw }} 23 | {% endblock %} 24 | </head> 25 | 26 | <body> 27 | ... 28 | 29 | {% block bottom %} 30 | {{ assets.js('bottom')|raw }} 31 | {% endblock %} 32 | </body> 33 | </html> La balise twig block stylesheets d\u00e9finit simplement une r\u00e9gion qui peut \u00eatre remplac\u00e9e ou ajout\u00e9e dans les mod\u00e8les qui \u00e9tendent celle-ci. Dans le bloc, vous verrez un certain nombre d'appels \u00e0 do assets.addCss() . La balise {% do %} est en fait int\u00e9gr\u00e9e \u00e0 Twig lui-m\u00eame, et elle vous permet de manipuler des variables sans g\u00e9n\u00e9rer de sortie. La m\u00e9thode addCss() ajoute des assets CSS au Asset Manager. Si vous sp\u00e9cifiez un deuxi\u00e8me param\u00e8tre num\u00e9rique, cela d\u00e9finit la priorit\u00e9 de la feuille de style. Si vous ne sp\u00e9cifiez pas de priorit\u00e9, la priorit\u00e9 \u00e0 laquelle les ressources sont ajout\u00e9es dictera l'ordre dans lequel elles sont rendues. Vous remarquerez l'utilisation d'un wrapper de flux PHP theme:// pour fournir \u00e0 Grav un moyen simple de d\u00e9terminer le chemin relatif du th\u00e8me actuel. Le fichier assets.addJs('jquery', 101) inclura la collection jquery d\u00e9finie dans la configuration globale des actifs. Le param\u00e8tre facultatif ici de 101 d\u00e9finit la priorit\u00e9 sur une valeur assez \u00e9lev\u00e9e pour s'assurer qu'il est rendu en premier. La priorit\u00e9 par d\u00e9faut lorsqu'elle n'est pas fournie est une valeur de 10 . Une mani\u00e8re plus flexible d'\u00e9crire ceci serait assets.addJs('jquery', {priority: 101}) . Cela vous permet d'ajouter d'autres param\u00e8tres \u00e0 c\u00f4t\u00e9 de la priorit\u00e9. L'appel assets.css()|raw restitue les ressources CSS sous forme de balises HTML. Comme il n'y a pas de param\u00e8tre fourni \u00e0 cette m\u00e9thode, le groupe est d\u00e9fini par d\u00e9faut sur head . Notez comment cela est envelopp\u00e9 dans un bloc assets defered . Il s'agit d'une nouvelle fonctionnalit\u00e9 de Grav 1.6 qui vous permet d'ajouter des ressources \u00e0 partir d'autres mod\u00e8les Twig qui sont inclus plus bas dans la page (ou n'importe o\u00f9 en r\u00e9alit\u00e9), tout en garantissant qu'ils peuvent s'afficher dans ce bloc head si n\u00e9cessaire. Le bloc bottom \u00e0 la toute fin de la sortie de votre th\u00e8me rend le JavaScript qui a \u00e9t\u00e9 attribu\u00e9 au groupe bottom . Ajout d'actifs add(asset, [options]) La m\u00e9thode d'ajout fait de son mieux pour faire correspondre un actif en fonction de l'extension de fichier. C'est une m\u00e9thode de commodit\u00e9, il est pr\u00e9f\u00e9rable d'appeler l'une des m\u00e9thodes directes pour CSS, Link, JS et JS Module. Voir les m\u00e9thodes directes pour plus de d\u00e9tails. Le tableau d'options est l'approche pr\u00e9f\u00e9r\u00e9e pour passer plusieurs options. Cependant, comme dans l'exemple pr\u00e9c\u00e9dent avec jquery , vous pouvez utiliser un raccourci et passer un entier pour le deuxi\u00e8me argument de la m\u00e9thode si tout ce que vous souhaitez d\u00e9finir est la priorit\u00e9 . addCss(asset, [options]) Cette m\u00e9thode ajoutera des actifs \u00e0 la liste des actifs CSS. La priorit\u00e9 par d\u00e9faut est 10 si elle n'est pas fournie. Un nombre plus \u00e9lev\u00e9 signifie qu'il s'affichera avant les \u00e9l\u00e9ments de priorit\u00e9 inf\u00e9rieure. L'option de pipeline contr\u00f4le si cet actif doit \u00eatre inclus dans le pipeline de combinaison/r\u00e9duction. S'il n'est pas en pipeline, l'option loading contr\u00f4le si la ressource doit \u00eatre rendue sous forme de lien vers une feuille de style externe ou si son contenu doit \u00eatre int\u00e9gr\u00e9 dans une balise de style en ligne. addLink($asset, [options]) Cette m\u00e9thode ajoutera des actifs aux actifs de Link, sous la forme d'une balise <link> . Il est utile pour ajouter des balises de lien \u00e0 la t\u00eate de n'importe o\u00f9 sur votre site qui ne sont pas des fichiers CSS. La priorit\u00e9 par d\u00e9faut est 10 si elle n'est pas fournie. Un nombre plus \u00e9lev\u00e9 signifie qu'il s'affichera avant les \u00e9l\u00e9ments de priorit\u00e9 inf\u00e9rieure. Contrairement aux autres m\u00e9thodes d'ajout d'actifs, link() ne prend pas en charge le pipelining, ni ne prend en charge inline . addInlineCss(css, [options]) Vous permet d'ajouter une cha\u00eene de CSS \u00e0 l'int\u00e9rieur d'une balise de style en ligne. Utile pour l'initialisation ou tout ce qui est dynamique. Pour incorporer le contenu d'un fichier de ressources standard, consultez l'option { 'loading': 'inline' } des m\u00e9thodes addCss() et css() . addJs(asset, [options]) Cette m\u00e9thode ajoutera des actifs \u00e0 la liste des actifs JavaScript. La priorit\u00e9 par d\u00e9faut est 10 si elle n'est pas fournie. Un nombre plus \u00e9lev\u00e9 signifie qu'il s'affichera avant les \u00e9l\u00e9ments de priorit\u00e9 inf\u00e9rieure. L'option de pipeline contr\u00f4le si cet actif doit \u00eatre inclus dans le pipeline de combinaison/r\u00e9duction. S'il n'est pas en pipeline, l'option loading contr\u00f4le si la ressource doit \u00eatre rendue sous forme de lien vers un fichier de script externe ou si son contenu doit \u00eatre int\u00e9gr\u00e9 dans une balise de script en ligne. addInlineJs(javascript, [options]) Vous permet d'ajouter une cha\u00eene de caract\u00e8res JavaScript dans une balise de script en ligne. Utile pour l'initialisation ou tout ce qui est dynamique. Pour incorporer le contenu d'un fichier de ressources standard, consultez l'option { 'loading': 'inline' } des m\u00e9thodes addJs() et js() . addJsModule(asset, [options]) Cette m\u00e9thode ajoutera des actifs \u00e0 la liste des actifs des modules JavaScript. La priorit\u00e9 par d\u00e9faut est 10 si elle n'est pas fournie. Un nombre plus \u00e9lev\u00e9 signifie qu'il s'affichera avant les \u00e9l\u00e9ments de priorit\u00e9 inf\u00e9rieure. L'option pipeline contr\u00f4le si cet actif doit \u00eatre inclus dans le pipeline de combinaison/r\u00e9duction. S'il n'est pas en pipeline, l'option loading contr\u00f4le si la ressource doit \u00eatre rendue sous forme de lien vers un fichier de script externe ou si son contenu doit \u00eatre int\u00e9gr\u00e9 dans une balise de script en ligne. addInlineJsModule(javascript, [options]) Vous permet d'ajouter une cha\u00eene de caract\u00e8res JavaScript \u00e0 l'int\u00e9rieur d'une balise de script de module en ligne. Pour incorporer le contenu d'un fichier de ressources standard, consultez l'option { 'loading': 'inline' } des m\u00e9thodes addJsModule() et js() . registerCollection(name, array) Vous permet d'enregistrer un tableau d'actifs CSS et JavaScript avec un nom pour une utilisation ult\u00e9rieure par la m\u00e9thode add() . Particuli\u00e8rement utile si vous souhaitez enregistrer une collection pouvant \u00eatre utilis\u00e9e par plusieurs th\u00e8mes ou plugins, tels que jQuery ou Bootstrap. Options Le cas \u00e9ch\u00e9ant, vous pouvez transmettre un tableau d'options d'actifs. Les options de base sont : Pour CSS priority : valeur enti\u00e8re (la valeur par d\u00e9faut est 10 ) position : le pipeline est par d\u00e9faut mais peut \u00e9galement \u00eatre before ou after les actifs en position pipeline . loading : inline si cet \u00e9l\u00e9ment doit \u00eatre sorti plut\u00f4t en ligne (par d\u00e9faut : r\u00e9f\u00e9renc\u00e9 via un lien vers la feuille de style). Doit \u00eatre utilis\u00e9 en conjonction avec position : before ou position : after car il n'aura aucun effet avec position : pipeline (par d\u00e9faut). group : cha\u00eene permettant de sp\u00e9cifier un nom de groupe unique pour l'actif (la valeur par d\u00e9faut est head ) Pour JS et les modules JS priority : valeur enti\u00e8re (la valeur par d\u00e9faut est 10 ) position : le pipeline est par d\u00e9faut mais peut \u00e9galement \u00eatre avant ou apr\u00e8s les actifs en position de pipeline. loading : prend en charge tout type de chargement, tel que async , defer , asyncdefer ou inline . Doit \u00eatre utilis\u00e9 en conjonction avec position : before ou position : after car il n'aura aucun effet avec position : pipeline (par d\u00e9faut). group : cha\u00eene permettant de sp\u00e9cifier un nom de groupe unique pour l'actif (la valeur par d\u00e9faut est head) Autres attributs Vous pouvez \u00e9galement passer tout ce que vous voulez dans le tableau d'options, et s'il ne s'agit pas de ces types standard, ils seront simplement rendus sous forme d'attributs tels que {id : 'custom-id'} sera rendu comme id=\"custom-id\" dans la balise HTML. Cela peut \u00e9galement \u00eatre utilis\u00e9 pour inclure des donn\u00e9es structur\u00e9es telles que json-ld via addInlineJs() en utilisant {type : 'application/ld+json'} . Exemples Par exemple: {% do assets.addCss('page://01.blog/assets-test/example.css?foo=bar', { priority: 20, loading: 'inline', position: 'before'}) %} Rendu comme suit : 1 | <style> 2 | h1.clignotant { 3 | d\u00e9coration de texte : soulign\u00e9 ; 4 | } 5 | </style> 6 | <lien..... Un autre exemple: {% do assets.addJs('page://01.blog/assets-test/example.js', {loading: 'async', id: 'custom-css'}) %} Rendu comme suit : <script src=\"/grav/user/pages/01.blog/assets-test/example.js\" async id=\"custom-css\"></script>` Un exemple de lien : {% do assets.addLink('theme://images/favicon.png', { rel: 'icon', type: 'image/png' }) %} {% do assets.addLink('plugin://grav-plugin/build/js/vendor.js', { rel: 'modulepreload' }) %} Rendu comme suit : <link rel=\"icon\" type=\"image/png\" href=\"/user/themes/quark/images/favicon.png\"> <link href=\"/user/plugins/grav-plugin/build/js/vendor.js\" rel=\"modulepreload\"> Actifs de rendu Les \u00e9l\u00e9ments suivants vous permettent de rendre l'\u00e9tat actuel des actifs CSS et JavaScript. css(group, [options], include_link = true) Rend les actifs CSS qui ont \u00e9t\u00e9 ajout\u00e9s au groupe d'un gestionnaire d'actifs (la valeur par d\u00e9faut est head ). Les options sont : loading : inline si tous les \u00e9l\u00e9ments de ce groupe doivent \u00eatre align\u00e9s (par d\u00e9faut : afficher chaque \u00e9l\u00e9ment en fonction de son option de position ). link attribute : attributs de lien, voir ci-dessous (par d\u00e9faut : {'type' : 'text/css', 'rel' : 'stylesheet'} ). Efficace uniquement si inline n'est pas utilis\u00e9 comme option de rendu de ce groupe. Lorsque include_link est activ\u00e9, ce qui est le cas par d\u00e9faut, l'appel de css() se propagera \u00e9galement \u00e0 l'appel de link() . Si le pipelining est d\u00e9sactiv\u00e9 dans la configuration, les actifs du groupe sont rendus individuellement, class\u00e9s par priorit\u00e9 d'actif (de haut en bas), suivis de l'ordre dans lequel les actifs ont \u00e9t\u00e9 ajout\u00e9s. Si le pipelining est activ\u00e9 dans la configuration, les actifs dans la position du pipeline sont combin\u00e9s dans l'ordre dans lequel les actifs ont \u00e9t\u00e9 ajout\u00e9s, puis trait\u00e9s en fonction de la configuration du pipeline. Chaque \u00e9l\u00e9ment est rendu soit sous forme de lien de feuille de style, soit en ligne, selon l'option loading de l'\u00e9l\u00e9ment et si loading' : 'inline'} est utilis\u00e9 pour le rendu de ce groupe. Le CSS ajout\u00e9 par addInlineCss() sera rendu dans la position after par d\u00e9faut, mais vous pouvez le configurer pour qu'il soit rendu avant la sortie en pipeline avec la position : before . link(group, [options] Renders Link assets qui ont \u00e9t\u00e9 ajout\u00e9s au groupe d'un Asset Manager (la valeur par d\u00e9faut est head ). Il n'est pas recommand\u00e9 d'utiliser un groupe diff\u00e9rent de head, c'est l\u00e0 que le navigateur s'attend \u00e0 ce que la balise soit trouv\u00e9e et trait\u00e9e. Contrairement aux autres m\u00e9thodes d'ajout d'actifs, link() ne prend pas en charge le pipelining, ni ne prend en charge inline . js(group, [options], include_js_module = true) Rend les actifs JavaScript qui ont \u00e9t\u00e9 ajout\u00e9s au groupe d'un gestionnaire d'actifs (la valeur par d\u00e9faut est head ). Les options sont : loading : inline si tous les \u00e9l\u00e9ments de ce groupe doivent \u00eatre align\u00e9s (par d\u00e9faut : afficher chaque \u00e9l\u00e9ment en fonction de son option de position ). script attributes , voir ci-dessous (par d\u00e9faut : {'type' : 'text/javascript'} ). Efficace uniquement si inline n'est pas utilis\u00e9 comme option de rendu de ce groupe. Lorsque include_js_module est activ\u00e9, ce qui est le cas par d\u00e9faut, l'appel de js() se propagera \u00e9galement \u00e0 l'appel de jsModule() . Si le pipelining est d\u00e9sactiv\u00e9 dans la configuration, les actifs du groupe sont rendus individuellement, class\u00e9s par priorit\u00e9 d'actif (de haut en bas), suivis de l'ordre dans lequel les actifs ont \u00e9t\u00e9 ajout\u00e9s. Si le pipelining est activ\u00e9 dans la configuration, les actifs dans la position du pipeline sont combin\u00e9s dans l'ordre dans lequel les actifs ont \u00e9t\u00e9 ajout\u00e9s, puis trait\u00e9s en fonction de la configuration du pipeline. Le r\u00e9sultat du pipeline combin\u00e9 est ensuite rendu avant ou apr\u00e8s les actifs non pipelin\u00e9s en fonction du param\u00e8tre de js_pipeline_before_excludes . Chaque \u00e9l\u00e9ment est rendu sous forme de lien de script ou en ligne, selon l'option loading de l'\u00e9l\u00e9ment et si {'loading' : 'inline'} est utilis\u00e9 pour le rendu de ce groupe. Notez que la seule fa\u00e7on d'int\u00e9grer un pipeline JS est d'utiliser le chargement en ligne comme option de la m\u00e9thode js() . JS ajout\u00e9 par addInlineJs() sera rendu dans la position apr\u00e8s par d\u00e9faut, mais vous pouvez le configurer pour qu'il soit rendu avant la sortie en pipeline avec la position : before . jsModule(group, [options]) Fonctionne exactement comme le moteur de rendu js() , mais pour les modules JavaScript. L'attribut de type de script par d\u00e9faut est type=\"module\" , m\u00eame lors du rendu inline . all(group, [options]) Rend chaque \u00e9l\u00e9ment ci-dessus dans l'ordre : css() , link() , js() , jsModule() . C'est la m\u00e9thode recommand\u00e9e pour inclure les actifs diff\u00e9r\u00e9s dans votre fichier twig principal (g\u00e9n\u00e9ralement base.html.twig ). 1 | {% block assets deferred %} 2 | {{ assets.all()|raw }} 3 | {% endblock %} Actifs et collections nomm\u00e9s Grav dispose d\u00e9sormais d'une fonctionnalit\u00e9 puissante appel\u00e9e named assts qui vous permet d'enregistrer une collection d'actifs CSS et JavaScript avec un nom. Ensuite, vous pouvez simplement ajouter ces actifs au gestionnaire d'actifs via le nom avec lequel vous avez enregistr\u00e9 la collection. Grav est pr\u00e9configur\u00e9 avec jQuery mais a la capacit\u00e9 de d\u00e9finir des collections personnalis\u00e9es dans le system.yaml \u00e0 utiliser par n'importe quel th\u00e8me ou plugin : 1 | assets: 2 | collections: 3 | jquery: system://assets/jquery/jquery-2.1.3.min.js 4 | bootstrap: 5 | - https://maxcdn.bootstrapcdn.com/bootstrap/3.3.4/css/ bootstrap.min.css 6 | - https://maxcdn.bootstrapcdn.com/bootstrap/3.3.4/css/bootstrap-theme.min.css 7 | - https://maxcdn.bootstrapcdn.com/bootstrap/3.3.4/js/bootstrap.min.js Vous pouvez \u00e9galement utiliser la m\u00e9thode registerCollection() par programmation. 1 | $assets = $this->grav['assets']; 2 | $bootstrapper_bits = [https://maxcdn.bootstrapcdn.com/bootstrap/3.3.4/css/bootstrap.min.css, 3 | https://maxcdn.bootstrapcdn.com/bootstrap/3.3.4/css/bootstrap-theme.min.css, 4 | https://maxcdn.bootstrapcdn.com/bootstrap/3.3.4/js/bootstrap.min.js]; 5 | $assets->registerCollection('bootstrap', $bootstrap_bits); 6 | $assets->add('bootstrap', 100); Un exemple de cette action peut \u00eatre trouv\u00e9 dans le plugin bootstrapper . Collections avec attributs Parfois, vous souhaiterez peut-\u00eatre sp\u00e9cifier des attributs personnalis\u00e9s et/ou diff\u00e9rents pour des \u00e9l\u00e9ments sp\u00e9cifiques d'une collection, par exemple si vous chargez des actifs \u00e0 partir d'un CDN distant et que vous souhaitez inclure le contr\u00f4le d'int\u00e9grit\u00e9 (SRI). Ceci est possible en traitant la valeur de l'actif nomm\u00e9 comme un tableau o\u00f9 la cl\u00e9 est l'emplacement de l'actif et la valeur est la liste des attributs suppl\u00e9mentaires. Par example: 1 | assets: 2 | collections: 3 | jquery_and_ui: 4 | https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js: 5 | integrity: 'sha512-894YE6QWD5I59HgZOGReFYm4dnWc1Qt5NtvYSaNcOP+u1T9qYdvdihz0PPSiiqn/+/3e7Jo4EaG7TubfWGUrMQ==' 6 | group: 'bottom' 7 | https://cdnjs.cloudflare.com/ajax/libs/jqueryui/1.12.1/jquery-ui.min.js: 8 | integrity: 'sha512-uto9mlQzrs59VwILcLiRYeLKPPbS/bT71da/OEBYEwcdNUk8jYIy+D176RYoop1Da+f9mvkYrmj5MCLZWEtQuA==' 9 | group: 'bottom' Ensuite, apr\u00e8s avoir ajout\u00e9 le JS dans votre twig via {% do assets.addJs('jquery_and_ui', { defer: true }) %} , les actifs se chargeront comme : <script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js\" defer=\"1\" integrity=\"sha512-894YE6QWD5I59HgZOGReFYm4dnWc1Qt5NtvYSaNcOP+u1T9qYdvdihz0PPSiiqn/+/3e7Jo4EaM7TubfWG7Tubf= \"> </script> <script src=\"https://cdnjs.cloudflare.com/ajax/libs/jqueryui/1.12.1/jquery-ui.min.js\" defer=\"1\" integrity=\"sha512-uto9mlQzrs59VwILcLiRYeLKPPbS/bT71da/OEBYEwcdNUk8jYIy+D176RYoop1Da +f9mvkYrmj5MCLZWEtQuA==\"> </script> Notez que defer a \u00e9t\u00e9 d\u00e9fini au niveau de la brindille et qu'il a \u00e9t\u00e9 appliqu\u00e9 \u00e0 tous les actifs de la collection. En effet, Grav fusionnera les attributs de la d\u00e9finition twig et yaml, en donnant la priorit\u00e9 \u00e0 ceux de la d\u00e9finition yaml. Si l'actif jquery-ui.min.js incluait \u00e9galement un attribut defer : null , il aurait alors pris le pas sur le twig defer : 1 et il n'aurait pas \u00e9t\u00e9 rendu. Actifs group\u00e9s Le gestionnaire d'actifs vous permet de transmettre un group facultatif dans le cadre d'un tableau d'options lors de l'ajout d'actifs. Bien que cela soit d'une utilit\u00e9 marginale pour CSS, il est particuli\u00e8rement utile pour JavaScript o\u00f9 vous devrez peut-\u00eatre avoir des fichiers JS ou Inline JS r\u00e9f\u00e9renc\u00e9s dans l'en-t\u00eate, et d'autres au bas de la page. Pour tirer parti de cette fonctionnalit\u00e9, vous devez sp\u00e9cifier le groupe lors de l'ajout de l'actif et utiliser la syntaxe des options : {% do assets.addJs('theme://js/example.js', {'priority':102, 'group':'bottom'}) %} Ensuite, pour que ces actifs du groupe inf\u00e9rieur s'affichent, vous devez ajouter les \u00e9l\u00e9ments suivants \u00e0 votre th\u00e8me : {{ assets.js('bottom')|raw }} Si aucun groupe n'est d\u00e9fini pour un actif, head est le groupe par d\u00e9faut. Si aucun groupe n'est d\u00e9fini pour le rendu, le groupe head sera rendu. Cela garantit que la nouvelle fonctionnalit\u00e9 est 100 % r\u00e9trocompatible avec les th\u00e8mes existants. Il en va de m\u00eame pour les fichiers CSS : {% do assets.addCss('theme://css/ie8.css', {'group':'ie'}) %} rendu comme suit : {{ assets.css('ie')|raw }} Modifier l'attribut des \u00e9l\u00e9ments CSS/JS rendus CSS est ajout\u00e9 par d\u00e9faut en utilisant l'attribut rel=\"stylesheet\" et type=\"text/css\" , tandis que JS a type=\"text/javascript\" . Pour modifier les valeurs par d\u00e9faut ou pour ajouter de nouveaux attributs, vous devez cr\u00e9er un nouveau groupe d'actifs et dire \u00e0 Grav de le rendre avec cet attribut. Exemple de modification de l'attribut rel sur un groupe d'assets : 1 | {% do assets.addCSS('theme://whatever.css', {'group':'my-alternate-group'}) %} 2 | ... 3 | {{ assets.css('my-alternate-group', {'rel': 'alternate'})|raw }} Inlining Assets L'inlining permet de placer le code CSS (et JS) critique directement dans le document HTML et permet au navigateur d'afficher une page imm\u00e9diatement sans attendre les t\u00e9l\u00e9chargements de feuilles de style ou de scripts externes. Cela peut am\u00e9liorer sensiblement les performances du site pour les utilisateurs, en particulier sur les r\u00e9seaux mobiles. Vous trouverez des d\u00e9tails dans cet article sur l'optimisation de la livraison CSS . Cependant, l'insertion directe de code CSS ou JavaScript dans un mod\u00e8le de page n'est pas toujours possible, par exemple, lorsque le CSS conforme \u00e0 Sass est utilis\u00e9. La conservation des actifs CSS et JS dans des fichiers s\u00e9par\u00e9s simplifie \u00e9galement la maintenance. L'utilisation de la capacit\u00e9 en ligne d'Asset Manager vous permet d'optimiser la vitesse sans modifier la fa\u00e7on dont vos actifs sont stock\u00e9s. M\u00eame des pipelines entiers peuvent \u00eatre align\u00e9s. Pour incorporer le contenu d'un fichier de ressources, utilisez l'option {'loading' : 'inline'} avec addCss() ou addJs() . Vous pouvez \u00e9galement int\u00e9grer tous les actifs lors du rendu d'un groupe avec js() ou css() , qui fournissent la m\u00eame option. Exemple d'utilisation de system.yaml pour d\u00e9finir des collections de ressources nomm\u00e9es en fonction des exigences de chargement des ressources, avec app.css \u00e9tant un fichier CSS g\u00e9n\u00e9r\u00e9 par Sass : 1 | assets: 2 | collections: 3 | css-inline: 4 | - 'http://fonts.googleapis.com/css?family=Ubuntu:400|Open+Sans: 400,400i,700' 5 | - 'theme://css-compiled/app.css' 6 | js-inline: 7 | - 'https://use.fontawesome.com/<embedcode>.js' 8 | js-async: 9 | - 'theme://foundation/dist/assets/js/app.js' 10 | - 'theme://js/header-display.js' Le mod\u00e8le ins\u00e8re chaque collection dans son groupe correspondant, \u00e0 savoir head et head-link pour CSS, head et head-async pour JS. L'en-t\u00eate de groupe par d\u00e9faut est utilis\u00e9 pour le chargement en ligne dans chaque cas : 1 | {% block stylesheets %} 2 | {% do assets.addCss('css-inline') %} 3 | {% do assets.addCss('css-link', {'group': 'head-link'}) %} 4 | {% endblock %} 5 | {{ assets.css('head-link')|raw }} 6 | {{ assets.css('head', {'loading': 'inline'})|raw }} 7 | {% block javascripts %} 8 | {% do assets.addJs('js-inline') %} 9 | {% do assets.addJs('js-async', {'group': 'head-async'}) %} 10 | {% endblock %} 11 | {{ assets.js('head-async', {'loading': 'async'})|raw }} 12 | {{ assets.js('head', {'loading': 'inline'})|raw }} Actifs statiques Parfois, il est n\u00e9cessaire de r\u00e9f\u00e9rencer des actifs sans utiliser Asset Manager. Il existe une m\u00e9thode d'assistance url() disponible pour y parvenir. Un exemple de cela pourrait \u00eatre si vous vouliez r\u00e9f\u00e9rencer une image du th\u00e8me. La syntaxe pour cela est : <img src=\"{{ url(\"theme://\" ~ widget.image)|e }}\" alt=\"{{ widget.text|e }}\" /> La m\u00e9thode url() prend un deuxi\u00e8me param\u00e8tre facultatif true ou false pour permettre \u00e0 l'URL d'inclure le sch\u00e9ma et le domaine. Par d\u00e9faut, cette valeur est suppos\u00e9e false , ce qui donne uniquement l'URL relative. Par example: <script src=\"{{ url('theme://some/extra.css', true)|e }}\"></script>","title":"Asset Manager"},{"location":"avance-config-environnement/","text":"Configuration de l'environnement Grav a la capacit\u00e9 d'\u00e9tendre les puissantes capacit\u00e9s de configuration pour diff\u00e9rents environnements afin de prendre en charge diff\u00e9rentes configurations pour les sc\u00e9narios de d\u00e9veloppement , de mise en sc\u00e8ne et de production . Jusqu'\u00e0 Grav 1.6, les environnements \u00e9taient stock\u00e9s dans le dossier user/ . Grav 1.7 d\u00e9place les environnements vers user/env/ pour faciliter la maintenance des environnements. Il est fortement recommand\u00e9 de d\u00e9placer tous les environnements vers ce nouvel emplacement sur vos sites existants. Configuration automatique de l'environnement. Cela signifie que vous pouvez fournir aussi peu ou autant de modifications de configuration par environnement que n\u00e9cessaire. Un bon exemple de ceci est la barre de d\u00e9bogage . Par d\u00e9faut, la nouvelle barre de d\u00e9bogage est d\u00e9sactiv\u00e9e dans le fichier core system/config/system.yaml , ainsi que dans le fichier de remplacement utilisateur : $ | user/config/system.yaml Si vous vouliez l'activer, vous pouvez facilement l'activer dans votre fichier user/config/system.yaml , mais une meilleure solution pourrait \u00eatre de l'activer pour votre environnement de d\u00e9veloppement lors de l'acc\u00e8s via localhost , mais d\u00e9sactiv\u00e9 sur votre serveur de production . Cela peut \u00eatre facilement accompli en fournissant un remplacement de ce param\u00e8tre dans le fichier : $ | user/env/localhost/config/system.yaml o\u00f9 localhost est le nom d'h\u00f4te de l'environnement (c'est ce que l'h\u00f4te que vous entrez dans votre navigateur, par exemple http://localhost/votre-site) et votre fichier de configuration contient : 1 |debugger: 2 | enabled: true De m\u00eame, vous pouvez activer CSS, Link, JS et JS Module Asset Pipelining (combinant + minification) pour votre site de production uniquement ( user/env/www.mysite.com/config/system.yaml ) : 1 | assets: 2 | css_pipeline: true 3 | js_pipeline: true 4 | js_module_pipeline: true Si votre serveur de production \u00e9tait accessible via http://www.mysite.com , vous pouvez \u00e9galement fournir une configuration sp\u00e9cifique \u00e0 ce site de production avec un fichier situ\u00e9 \u00e0 user/env/www.mysite.com/config/system.yaml . Bien s\u00fbr, vous n'\u00eates pas limit\u00e9 aux modifications apport\u00e9es \u00e0 system.yaml , vous pouvez en fait fournir des remplacements pour n'importe quel param\u00e8tre Grav dans le site.yaml ou m\u00eame dans n'importe quelle configuration de plug-in ! Si vous utilisez le Grav Scheduler , sachez qu'il utilise l'environnement localhost et donc sa configuration. Remplacements de plugins. Remplacer un fichier YAML de configuration de plug-in est simplement le m\u00eame processus que remplacer un fichier normal. Si le fichier de configuration standard se trouve dans : $ | user/config/plugins/email.yaml Ensuite, vous pouvez remplacer cela par un param\u00e8tre qui remplace uniquement les options sp\u00e9cifiques que vous souhaitez utiliser pour les tests locaux : $ | user/env/localhost/config/plugins/email.yaml Avec la configuration : 1 | mailer: 2 | engine: smtp 3 | smtp: 4 | server: smtp.mailtrap.io 5 | port: 2525 6 | encryption: none 7 | user: '9a320798e65135' 8 | password: 'a13e6e27bc7205' Remplacements de th\u00e8me. Vous pouvez remplacer les th\u00e8mes de la m\u00eame mani\u00e8re : $ | user/config/themes/antimatter.yaml Peut \u00eatre remplac\u00e9 pour n'importe quel environnement, disons un site de production ( http://www.mysite.com ) : $ | user/env/www.mysite.com/config/themes/antimatter.yaml Configuration de l'environnement bas\u00e9 sur le serveur. \u00c0 partir de Grav 1.7, il est possible de d\u00e9finir l'environnement en utilisant la configuration du serveur. Dans ce sc\u00e9nario d'utilisation, vous d\u00e9finissez des variables d'environnement \u00e0 partir du serveur ou d'un script qui s'ex\u00e9cute avant Grav pour s\u00e9lectionner l'environnement \u00e0 utiliser. Le moyen le plus simple de d\u00e9finir l'environnement consiste \u00e0 utiliser GRAV_ENVIRONMENT . La valeur de GRAV_ENVIRONMENT doit \u00eatre un nom de serveur valide avec ou sans domaine. L'exemple suivant s\u00e9lectionne l'environnement de d\u00e9veloppement pour l'h\u00f4te local : - Apache 2 1 | <VirtualHost 127.0.0.1:80> 2 | ... 3 | 4 | SetEnv GRAV_ENVIRONMENT development 5 | </VirtualHost> - NGINX php-fpm location / { ... fastcgi_param GRAV_ENVIRONMENT development; } - NGINX php-cgi location / { ... env[GRAV_ENVIRONMENT] = development } - Docker web: environment: - GRAV_ENVIRONMENT=development - PHP // Set environment in setup.php or make sure it runs before Grav. define('GRAV_ENVIRONMENT', 'development'); Chemins d'environnement personnalis\u00e9s. \u00c0 partir de Grav 1.7, vous pouvez \u00e9galement modifier l'emplacement des environnements. Deux possibilit\u00e9s s'offrent \u00e0 vous : soit vous configurez un emplacement commun \u00e0 tous les environnements, soit vous les d\u00e9finissez un par un. Emplacement personnalis\u00e9 pour tous les environnements. Si, pour une raison quelconque, vous n'\u00eates pas satisfait de l'emplacement user/env par d\u00e9faut pour vos environnements, vous pouvez le modifier \u00e0 l'aide de la variable d'environnement GRAV_ENVIRONMENTS_PATH . La valeur de GRAV_ENVIRONMENTS_PATH doit \u00eatre un chemin existant sous GRAV_ROOT . N'utilisez pas de barre oblique \u00e0 la fin. Dans l'exemple suivant, tous les environnements seront situ\u00e9s dans user/sites/GRAV_ENVIRONMENT , o\u00f9 GRAV_ENVIRONMENT est soit d\u00e9tect\u00e9 automatiquement, soit d\u00e9fini manuellement dans la configuration du serveur : - Apache 2 1 | <VirtualHost 127.0.0.1:80> 2 | ... 3 | 4 | SetEnv GRAV_ENVIRONMENTS_PATH user://sites 5 | </VirtualHost> - NGINX php-fpm location / { ... fastcgi_param GRAV_ENVIRONMENTS_PATH user://sites; } - NGINX php-cgi location / { ... env[GRAV_ENVIRONMENTS_PATH] = user://sites } - Docker web: environment: - GRAV_ENVIRONMENTS_PATH=user://sites - PHP // Set environments path in setup.php or make sure that the following code runs before Grav. define('GRAV_ENVIRONMENTS_PATH', 'user://sites'); Emplacement personnalis\u00e9 pour l'environnement actuel. Parfois, il peut \u00eatre utile d'avoir un emplacement personnalis\u00e9 pour votre environnement La valeur de GRAV_ENVIRONMENT_PATH doit \u00eatre un chemin existant sous GRAV_ROOT . N'utilisez pas de barre oblique \u00e0 la fin. Dans l'exemple suivant, seul l'environnement courant sera situ\u00e9 dans user/development : - Apache 2 1 | <VirtualHost 127.0.0.1:80> 2 | ... 3 | 4 | SetEnv GRAV_ENVIRONMENT_PATH user://development 5 | </VirtualHost> - NGINX php-fpm location / { ... fastcgi_param GRAV_ENVIRONMENT_PATH user://development; } - NGINX php-cgi location / { ... env[GRAV_ENVIRONMENT_PATH] = user://development } - Docker web: environment: - GRAV_ENVIRONMENT_PATH=user://development - PHP // Set environment path in setup.php or make sure that the following code runs before Grav. define('GRAV_ENVIRONMENT_PATH', 'user://development'); Notez que GRAV_ENVIRONMENT_PATH est distinct de GRAV_ENVIRONMENT , vous pouvez donc \u00e9galement d\u00e9finir le nom de l'environnement si vous ne souhaitez pas qu'il soit automatiquement d\u00e9fini pour correspondre au nom de domaine actuel. Personnalisation suppl\u00e9mentaire. Les environnements peuvent \u00eatre personnalis\u00e9s bien plus loin que d\u00e9crit dans cette page. Pour plus d'informations, veuillez passer \u00e0 la page suivante : Configuration multisite .","title":"Configuration de l'envirronement"},{"location":"avance-config-multisite/","text":"Configuration multisite Grav a un support multisite pr\u00e9liminaire disponible. Cependant, le plugin Admin doit encore \u00eatre mis \u00e0 jour pour prendre pleinement en charge les configurations multisites. Nous continuerons \u00e0 travailler l\u00e0-dessus dans les prochaines versions de Grav. Qu'est-ce qu'une configuration multisite ? Une configuration multisite vous permet de cr\u00e9er et de g\u00e9rer un r\u00e9seau de plusieurs sites Web, tous ex\u00e9cut\u00e9s sur une seule installation. Grav a un support multisite int\u00e9gr\u00e9. Cette fonctionnalit\u00e9 \u00e9tend la configuration de l'environnement de base , ce qui vous permet de d\u00e9finir des environnements personnalis\u00e9s pour vos sites de production et de d\u00e9veloppement. Une configuration multisite compl\u00e8te vous donne le pouvoir de changer la fa\u00e7on dont et d'o\u00f9 Grav charge tous ses fichiers. Exigences pour une configuration multisite Grav. La chose la plus importante dont vous aurez besoin pour faire fonctionner un r\u00e9seau multisite Grav est un bon h\u00e9bergement de site Web. Si vous ne pr\u00e9voyez pas de cr\u00e9er de nombreux sites et que vous n'attendez pas beaucoup de visiteurs, vous pouvez vous en tirer avec un h\u00e9bergement mutualis\u00e9. Cependant, en raison de la nature des multisites, vous aurez probablement besoin d'un VPS ou d'un serveur d\u00e9di\u00e9 \u00e0 mesure que vos sites se d\u00e9veloppent. Configuration et installation. Avant de commencer, vous devez vous assurer que votre serveur Web est capable d'ex\u00e9cuter plusieurs sites Web, c'est-\u00e0-dire que vous avez acc\u00e8s \u00e0 votre r\u00e9pertoire racine Grav. Ceci est essentiel car servir plusieurs sites Web \u00e0 partir de la m\u00eame installation est bas\u00e9 sur un fichier setup.php situ\u00e9 dans votre racine Grav. D\u00e9marrage rapide (pour les d\u00e9butants). Une fois cr\u00e9\u00e9, le setup.php est appel\u00e9 chaque fois qu'un utilisateur demande une page. Afin de servir plusieurs sites Web \u00e0 partir d'une seule installation, ce script (en gros) doit indiquer \u00e0 Grav o\u00f9 se trouvent les fichiers (pour les configurations, les th\u00e8mes, les plugins, les pages, etc.) d'un sous-site sp\u00e9cifique. Les extraits fournis ci-dessous configurent votre installation Grav de telle mani\u00e8re qu'une demande comme https://<subsite>.example.com --> user/env/<subsite>.example.com ou https://example.com/<subsite> --> user/env/<subsite> utilisera le r\u00e9pertoire user/env comme chemin \"utilisateur\" de base au lieu du r\u00e9pertoire user . Si vous choisissez des sous-r\u00e9pertoires ou des URL bas\u00e9es sur des chemins pour les sous-sites, la seule chose dont vous avez besoin est de cr\u00e9er un r\u00e9pertoire pour chaque sous-site dans le r\u00e9pertoire user/env contenant au moins les dossiers requis config , pages , plugins et themes . Si vous choisissez des sous-domaines pour structurer votre r\u00e9seau de sites Web, vous devrez alors configurer des sous-domaines (wildcard) sur votre serveur en plus de la configuration de vos sous-sites dans votre r\u00e9pertoire user/env . Dans tous les cas, choisissez la configuration qui vous convient le mieux. Extraits. Pour les sous-sites accessibles via des sous-domaines copiez le fichier setup_subdomain.php , sinon pour les sous-sites accessibles via des sous-r\u00e9pertoires le fichier setup_subdirectory.php dans votre setup.php . Le fichier setup.php doit \u00eatre plac\u00e9 dans le dossier racine Grav, le m\u00eame dossier o\u00f9 vous pouvez trouver index.php , README.md et les autres fichiers Grav. setup_subdomain.php : 1 | <?php 2 | /** 3 | * Multisite setup for subsites accessible via sub-domains. 4 | * 5 | * DO NOT EDIT UNLESS YOU KNOW WHAT YOU ARE DOING! 6 | */ 7 | 8 | use Grav\\Common\\Utils; 9 | 10 | // Get subsite name from sub-domain 11 | $environment = isset($_SERVER['HTTP_HOST']) 12 | ? $_SERVER['HTTP_HOST'] 13 | : (isset($_SERVER['SERVER_NAME']) ? $_SERVER['SERVER_NAME'] : 'localhost'); 14 | // Remove port from HTTP_HOST generated $environment 15 | $environment = strtolower(Utils::substrToString($environment, ':')); 16 | $folder = \"env/{$environment}\"; 17 | 18 | if ($environment === 'localhost' || !is_dir(ROOT_DIR . \"user/{$folder}\")) { 19 | return []; 20 | } 21 | [ 22 | return [ 23 | 'environment' => $environment, 24 | 'streams' => [ 25 | 'schemes' => [ 26 | 'user' => [ 27 | 'type' => 'ReadOnlyStream', 28 | 'prefixes' => [ 29 | '' => [\"user/{$folder}\"], 30 | ] 31 | ] 32 | ] 33 | ] 34 | ]; setup_subdirectory.php : 1 | <?php 2 | /** 3 | * Multisite setup for sub-directories or path based 4 | * URLs for subsites. 5 | * 6 | * DO NOT EDIT UNLESS YOU KNOW WHAT YOU ARE DOING! 7 | */ 8 | 9 | use Grav\\Common\\Filesystem\\Folder; 10 | 11 | // Get relative path from Grav root. 12 | $path = isset($_SERVER['PATH_INFO']) 13 | ? $_SERVER['PATH_INFO'] 14 | : Folder::getRelativePath($_SERVER['REQUEST_URI'], ROOT_DIR); 15 | 16 | // Extract name of subsite from path 17 | $name = Folder::shift($path); 18 | $folder = \"env/{$name}\"; 19 | $prefix = \"/{$name}\"; 20 | 21 | if (!$name || !is_dir(ROOT_DIR . \"user/{$folder}\")) { 22 | return []; 23 | } 24 | 25 | // Prefix all pages with the name of the subsite 26 | $container['pages']->base($prefix); 27 | 28 | return [ 29 | 'environment' => $name, 30 | 'streams' => [ 31 | 'schemes' => [ 32 | 'user' => [ 33 | 'type' => 'ReadOnlyStream', 34 | 'prefixes' => [ 35 | '' => [\"user/{$folder}\"], 36 | ] 37 | ] 38 | ] 39 | ] 40 | ]; Lorsque vous utilisez des sous-r\u00e9pertoires pour changer de contexte de langue, vous devrez peut-\u00eatre charger diff\u00e9rentes configurations en fonction de la langue. Vous pouvez placer vos configurations sp\u00e9cifiques \u00e0 la langue dans config/<lang-context>/site.yaml en utilisant l'exemple pour setup_subdir_config_switch.php ci-dessous. De cette fa\u00e7on yoursite.com/de-AT/index.html chargerait config/de-AT/site.yaml , yoursite.com/de-CH/index.html chargerait config/de-CH/site.yaml et ainsi de suite. setup_subdir_config_switch.php : 1 | <?php 2 | /** 3 | * Switch config based on the language context subdir 4 | * 5 | * DO NOT EDIT UNLESS YOU KNOW WHAT YOU ARE DOING! 6 | */ 7 | 8 | use Grav\\Common\\Filesystem\\Folder; 9 | 10 | $languageContexts = [ 11 | 'de-AT', 12 | 'de-CH', 13 | 'de-DE', 14 | ]; 15 | 16 | // Get relative path from Grav root. 17 | $path = isset($_SERVER['PATH_INFO']) 18 | ? $_SERVER['PATH_INFO'] 19 | : Folder::getRelativePath($_SERVER['REQUEST_URI'], ROOT_DIR); 20 | 21 | // Extract name of subdir from path 22 | $name = Folder::shift($path); 23 | 24 | if (in_array($name, $languageContexts)) { 25 | return [ 26 | 'streams' => [ 27 | 'schemes' => [ 28 | 'config' => [ 29 | 'type' => 'ReadOnlyStream', 30 | 'prefixes' => [ 31 | '' => [ 32 | 'environment://config', 33 | 'user://config/' . $name, 34 | 'user://config', 35 | 'system/config', 36 | ], 37 | ], 38 | ], 39 | ], 40 | ], 41 | ]; 42 | } 43 | 44 | return []; GPM (Grav Package Manager) et plusieurs configurations. Si vous avez besoin de g\u00e9rer les plugins et les th\u00e8mes de vos sous-sites avec le GPM , conservez \u00e0 la fois user/themes + user/plugins , afin que le GPM les r\u00e9cup\u00e8re et les mette \u00e0 jour \u00e0 un seul endroit. Ensuite, cr\u00e9ez un lien symbolique vers les \u00e9l\u00e9ments n\u00e9cessaires sous user/env/my.site.com/themes ou user/env/my.site.com/plugins . Ensuite, configurez les configurations yaml individuelles user/env/my.site.com/config/plugins pour chaque sous-sites. Configuration avanc\u00e9e (pour les Experts). Une fois cr\u00e9\u00e9, un setup.php a acc\u00e8s \u00e0 deux variables importantes : (i) $container , qui est l'instance Grav pas encore correctement initialis\u00e9e et (ii) $self , qui est une instance de la classe ConfigServiceProvider . Dans ce script, vous pouvez faire n'importe quoi, mais sachez que setup.php est appel\u00e9 chaque fois qu'un utilisateur demande une page. Cela signifie que les op\u00e9rations d'initialisation critiques en termes de m\u00e9moire ou chronophages entra\u00eenent un ralentissement de l'ensemble de votre syst\u00e8me et doivent donc \u00eatre \u00e9vit\u00e9es. Au final, le setup.php doit retourner un tableau associatif avec le nom d'environnement optionnel environment et une collection de flux streams (pour plus d'informations et afin de les param\u00e9trer correctement, voir la section Streams : 1 | return [ 2 | 'environment' => '<name>', // A name for the environment 3 | 'streams' => [ 4 | 'schemes' => [ 5 | '<stream_name>' => [ // The name of the stream 6 | 'type' => 'ReadOnlyStream', // Stream object e.g. 'ReadOnlyStream' or 'Stream' 7 | 'prefixes' => [ 8 | '<prefix>' => [ 9 | '<path1>', 10 | '<path2>', 11 | '<etc>' 12 | ] 13 | ], 14 | 'paths' => [ // Paths (optional) 15 | '<paths1>', 16 | '<paths2>', 17 | '<etc>' 18 | ] 19 | ] 20 | ] 21 | ] 22 | ] Veuillez noter qu'\u00e0 ce stade tr\u00e8s pr\u00e9coce, vous n'avez acc\u00e8s ni \u00e0 la configuration ni \u00e0 l'instance URI et donc tout appel \u00e0 une classe non initialis\u00e9e peut entra\u00eener un blocage du syst\u00e8me, des erreurs inattendues ou une perte (compl\u00e8te) de donn\u00e9es . Streams. Grav utilise des URI comme des flux pour d\u00e9finir tous les chemins de fichiers dans Grav. L'utilisation de flux facilite la personnalisation des chemins de recherche pour n'importe quel fichier. Par d\u00e9faut, les flux ont \u00e9t\u00e9 configur\u00e9s comme ceci : user:// - dossier utilisateur. par exemple. user/ page:// - dossier de pages. par exemple. user://pages/ image:// - dossier d'images. par exemple. user://images/ , system://images/ account:// - dossier des comptes. par exemple. user://accounts/ environment:// - emplacement multisite actuel. asset:// - dossier JS/CSS compil\u00e9. par exemple. des assets/ blueprints:// - dossier blueprints. par exemple. environment://blueprints/ , user://blueprints/ , system://blueprints/ config:// - dossier de configuration. par exemple. environment://config/ , user://config/ , system://config/ plugins:// - dossier des plugins. par exemple. user://plugins/ themes:// - th\u00e8me actuel. par exemple. user://themes/ theme:// - th\u00e8me actuel. par exemple. themes://antimatter/ languages:// - dossier langues. par exemple. environment://languages/ , user://languages/ , system://languages/ user-data:// - dossier de donn\u00e9es. par exemple. user/data/ system:// - dossier syst\u00e8me. par exemple. system/ cache:// - dossier cache. par exemple. cache/ , images/ log:// - dossier du journal. par exemple. logs/ backup:// - dossier de sauvegarde. par exemple. backups/ tmp:// - dossier temporaire. par exemple. tmp/ Dans les configurations multi-sites, certains de ces param\u00e8tres par d\u00e9faut peuvent ne pas correspondre \u00e0 ce que vous souhaitez. Grav fournit un moyen simple de personnaliser les flux \u00e0 partir de la configuration de l'environnement \u00e0 l'aide de config/streams.yaml . De plus, vous pouvez cr\u00e9er et utiliser vos propres flux si n\u00e9cessaire. Le mappage des r\u00e9pertoires physiques sur un p\u00e9riph\u00e9rique logique peut \u00eatre effectu\u00e9 en configurant des prefixes . Voici un exemple o\u00f9 nous s\u00e9parons les pages, les images, les comptes, les donn\u00e9es, le cache et les journaux du reste des sites, mais faisons en sorte que tout le reste soit recherch\u00e9 \u00e0 partir des emplacements par d\u00e9faut : user/env/domain.com/config/streams.yaml : 1 | schemes: 2 | account: 3 | type: ReadOnlyStream 4 | prefixes: 5 | '': ['environment://accounts'] 6 | page: 7 | type: ReadOnlyStream 8 | prefixes: 9 | '': ['environment://user'] 10 | image: 11 | type: Stream 12 | prefixes: 13 | '': ['environment://images', 'system://images/'] 14 | 'user-data': 15 | type: Stream 16 | prefixes: 17 | '': ['environment://data'] 18 | cache: 19 | type: Stream 20 | prefixes: 21 | '': ['cache/domain.com'] 22 | images: ['images/domain.com'] 23 | log: 24 | type: Stream 25 | prefixes: 26 | '': ['logs/domain.com'] Dans Grav, les flux sont des objets, mappant un ensemble de r\u00e9pertoires physiques du syst\u00e8me \u00e0 un p\u00e9riph\u00e9rique logique. Ils sont class\u00e9s via leur attribut de type . Pour les flux en lecture seule, il s'agit du type ReadOnlyStream et pour les flux en lecture-\u00e9criture, il s'agit du type Stream . Par exemple, si vous utilisez le flux image://mountain.jpg , Grav recherche environment://images ( user/env/domain.com/images ) et system://images ( system/images ). Cela signifie que les flux peuvent \u00eatre utilis\u00e9s pour d\u00e9finir d'autres flux. Les pr\u00e9fixes vous permettent de combiner plusieurs chemins physiques en un seul flux logique. Si vous regardez attentivement la d\u00e9finition du flux de cache , c'est un peu diff\u00e9rent. Dans ce cas, cache:// se r\u00e9sout en cache , mais cache://images se r\u00e9sout en images . Configuration multisite bas\u00e9e sur serveur. Grav 1.7 ajoute le support pour personnaliser l'environnement initial \u00e0 partir de la configuration de votre serveur. Cette fonctionnalit\u00e9 est pratique si vous souhaitez utiliser par exemple des conteneurs Docker et que vous souhaitez les rendre ind\u00e9pendants du domaine que vous utilisez. Ou si vous ne souhaitez pas stocker de secrets dans la configuration, mais les stocker dans la configuration de votre serveur. Les variables d'environnement suivantes peuvent \u00eatre utilis\u00e9es pour personnaliser les chemins par d\u00e9faut que Grav utilise pour configurer l'environnement. Apr\u00e8s l'initialisation, les flux peuvent pointer vers un emplacement diff\u00e9rent. Remarque : Vous pouvez utiliser des variables d'environnement ou des constantes PHP, mais elles doivent \u00eatre d\u00e9finies avant l'ex\u00e9cution de Grav. Variable Par d\u00e9faut Description GRAV_SETUP_PATH AUTO DETECT Un chemin personnalis\u00e9 vers le fichier setup.php incluant le nom du fichier. Par d\u00e9faut, Grav regarde le fichier de GRAV_ROOT/setup.php et GRAV_ROOT/ GRAV_USER_PATH/setup.php . GRAV_USER_PATH user Un chemin relatif pour le flux user:// . GRAV_CACHE_PATH cache Un chemin relatif pour le flux cache:// . GRAV_LOG_PATH logs Un chemin relatif pour le flux log:// . GRAV_TMP_PATH tmp Un chemin relatif pour le flux tmp:// . GRAV_BACKUP_PATH backup Un chemin relatif pour le flux backup:// . De plus, il existe des variables pour personnaliser les environnements. Une meilleure documentation pour ceux-ci peut \u00eatre trouv\u00e9e dans Configuration de l'environnement bas\u00e9 sur le serveur . Remarque : Ceux-ci fonctionnent \u00e9galement \u00e0 partir du fichier setup.php . Vous pouvez en faire des constantes en utilisant define() ou des variables d'environnement avec putenv() . Les constantes sont pr\u00e9f\u00e9r\u00e9es aux variables d'environnement. Variable Par d\u00e9faut Description GRAV_ENVIRONMENT DOMAIN NAME Nom de l'environnement. Peut \u00eatre utilis\u00e9 par exemple dans les conteneurs Docker pour d\u00e9finir un environnement personnalis\u00e9 qui ne repose pas sur le nom de domaine, comme production et develop . GRAV_ENVIRONMENTS_PATH user://env Chemin de recherche pour tous les environnements si vous pr\u00e9f\u00e9rez quelque chose comme user://sites . Il peut s'agir d'un flux ou d'un chemin relatif \u00e0 partir de GRAV_ROOT . GRAV_ENVIRONMENT_PATH user://env/ENVIRONMENT Parfois, il peut \u00eatre utile d'avoir un emplacement personnalis\u00e9 pour votre environnement. Remplacements de la configuration bas\u00e9e sur le serveur. Si vous ne souhaitez pas stocker d'informations d'identification secr\u00e8tes dans la configuration, vous pouvez \u00e9galement les fournir en utilisant des variables d'environnement de votre serveur. Comme les variables d'environnement ont des exigences de nommage strictes (elles ne peuvent contenir que A-Z, a-z, 0-9 et _), certaines astuces sont n\u00e9cessaires pour que les remplacements de configuration fonctionnent. Voici un exemple de remplacement de configuration simple utilisant le format YAML pour la pr\u00e9sentation : GRAV_CONFIG: true # If false, the configuration here will be ignored. GRAV_CONFIG_ALIAS__GITHUB: plugins.github # Create alias GITHUB='plugins.github' to shorten the variable names below GRAV_CONFIG__GITHUB__auth__method: api # Override config.plugins.github.auth.method = api GRAV_CONFIG__GITHUB__auth__token: xxxxxxxx # Override config.plugins.github.auth.token = xxxxxxxx Dans l'exemple ci-dessus, __ (double trait de soulignement) repr\u00e9sente une variable imbriqu\u00e9e, qui dans twig est repr\u00e9sent\u00e9e par . (point). Vous pouvez \u00e9galement utiliser des variables d'environnement dans setup.php . Cela vous permet par exemple de stocker des secrets en dehors de la configuration : user/setup.php : <?php // Use following environment variables in your server configuration: // // DYNAMODB_SESSION_KEY: DynamoDb server key for the PHP session storage // DYNAMODB_SESSION_SECRET: DynamoDb server secret // DYNAMODB_SESSION_REGION: DynamoDb server region // GOOGLE_MAPS_KEY: Google Maps secret key return [ 'plugins' => [ // This plugin does not exist 'dynamodb_session' => [ 'credentials' => [ 'key' => getenv('DYNAMODB_SESSION_KEY') ?: null, 'secret' => getenv('DYNAMODB_SESSION_SECRET') ?: null ], 'region' => getenv('DYNAMODB_SESSION_REGION') ?: null ], // This plugin does not exist 'google_maps' => [ 'key' => getenv('GOOGLE_MAPS_KEY') ?: null ] ] ]; ATTENTION : setup.php est utilis\u00e9 pour d\u00e9finir la configuration initiale. Si le plug-in ou votre configuration remplacent ult\u00e9rieurement ces param\u00e8tres, les valeurs initiales sont perdues. Apr\u00e8s avoir d\u00e9fini les variables dans setup.php , vous pouvez ensuite d\u00e9finir celles de votre serveur : - Apache 2 1 | <VirtualHost 127.0.0.1:80> 2 | ... 3 | 4 | SetEnv GRAV_SETUP_PATH user/setup.php 5 | SetEnv GRAV_ENVIRONMENT production 6 | SetEnv DYNAMODB_SESSION_KEY JBGARDQ06UNJV00DL0R9 7 | SetEnv DYNAMODB_SESSION_SECRET CVjwH+QkfnPhKgVvJvrG24s0ABi343cJ7WTPxvb7 8 | SetEnv DYNAMODB_SESSION_REGION us-east-1 9 | SetEnv GOOGLE_MAPS_KEY XWIozB2R2GmYInTqZ6jnKuUrdELounUb4BIxYmp 10 | </VirtualHost> - GINX php-fpm location / { ... fastcgi_param GRAV_SETUP_PATH user/setup.php; fastcgi_param GRAV_ENVIRONMENT production; fastcgi_param DYNAMODB_SESSION_KEY JBGARDQ06UNJV00DL0R9; fastcgi_param DYNAMODB_SESSION_SECRET CVjwH+QkfnPhKgVvJvrG24s0ABi343cJ7WTPxvb7; fastcgi_param DYNAMODB_SESSION_REGION us-east-1; fastcgi_param GOOGLE_MAPS_KEY XWIozB2R2GmYInTqZ6jnKuUrdELounUb4BIxYmp; } - NGINX php-cgi location / { ... env[GRAV_SETUP_PATH] = user/setup.php env[GRAV_ENVIRONMENT] = production env[DYNAMODB_SESSION_KEY] = JBGARDQ06UNJV00DL0R9 env[DYNAMODB_SESSION_SECRET] = CVjwH+QkfnPhKgVvJvrG24s0ABi343cJ7WTPxvb7 env[GDYNAMODB_SESSION_REGION] = us-east-1 env[GGOOGLE_MAPS_KEY] = XWIozB2R2GmYInTqZ6jnKuUrdELounUb4BIxYmp } - Docker web: environment: - GRAV_SETUP_PATH=user/setup.php - GRAV_ENVIRONMENT=production - DYNAMODB_SESSION_KEY=JBGARDQ06UNJV00DL0R9 - DYNAMODB_SESSION_SECRET=CVjwH+QkfnPhKgVvJvrG24s0ABi343cJ7WTPxvb7 - DYNAMODB_SESSION_REGION=us-east-1 - GOOGLE_MAPS_KEY=XWIozB2R2GmYInTqZ6jnKuUrdELounUb4BIxYmp - PHP putenv('GRAV_SETUP_PATH', 'user/setup.php'); putenv('GRAV_ENVIRONMENT', 'production'); putenv('DYNAMODB_SESSION_KEY', 'JBGARDQ06UNJV00DL0R9'); putenv('DYNAMODB_SESSION_SECRET', 'CVjwH+QkfnPhKgVvJvrG24s0ABi343cJ7WTPxvb7'); putenv('DYNAMODB_SESSION_REGION', 'us-east-1'); putenv('GOOGLE_MAPS_KEY', 'XWIozB2R2GmYInTqZ6jnKuUrdELounUb4BIxYmp'); Dans cet exemple, le serveur utilisera \u00e9galement l'environnement production stock\u00e9 dans le dossier user/env/production .","title":"Configuration multisite"},{"location":"avance-debogage-journalisation/","text":"D\u00e9bogage et journalisation Lors du d\u00e9veloppement de th\u00e8mes et de plugins, il est souvent n\u00e9cessaire d'afficher des informations de d\u00e9bogage . Grav dispose de puissantes capacit\u00e9s de d\u00e9bogage via une vari\u00e9t\u00e9 de fonctionnalit\u00e9s : Barre de d\u00e9bogage. Grav est livr\u00e9 avec un excellent outil pour faciliter cet effort appel\u00e9 via une Barre de D\u00e9bogage . Cette fonctionnalit\u00e9 est d\u00e9sactiv\u00e9e par d\u00e9faut, mais peut \u00eatre activ\u00e9e globalement ou pour votre environnement de d\u00e9veloppement uniquement via le fichier de configuration system.yaml : 1 | debugger: 2 | enabled: true # Enable Grav debugger and following settings 3 | provider: debugbar # Set provider to debugbar 4 | shutdown: 5 | close_connection: true # Close the connection before calling onShutdown(). false for debugging La premi\u00e8re fois que vous l'activez, la barre de d\u00e9bogage peut appara\u00eetre sous la forme d'une petite ic\u00f4ne Grav en bas \u00e0 gauche de la page. Cliquez dessus pour afficher la barre de d\u00e9bogage compl\u00e8te. La barre de d\u00e9bogage PHP fournit toujours un temps de traitement global ainsi que l'utilisation de la m\u00e9moire , mais elle comporte d\u00e9sormais plusieurs onglets qui fournissent des informations plus d\u00e9taill\u00e9es. Le premier onglet est pour les messages et vous pouvez l'utiliser pour aider \u00e0 d\u00e9boguer votre processus de d\u00e9veloppement Grav en publiant des informations sur cet onglet \u00e0 partir de votre code. En plus des informations sur les requ\u00eates , les exceptions et la configuration , vous pouvez \u00e9galement voir une ventilation d\u00e9taill\u00e9e de la synchronisation Grav dans le panneau Chronologie : Commande de vidage pour PHP. Si vous essayez de d\u00e9boguer du PHP, par exemple un plugin personnalis\u00e9 que vous d\u00e9veloppez, et que vous souhaitez examiner rapidement un objet ou une variable, vous pouvez utiliser la puissante commande dump() . Cela accepte pratiquement toutes les variables PHP valides et affichera les r\u00e9sultats dans un affichage bien format\u00e9 et coloris\u00e9 dans votre navigateur. Par exemple, vous pouvez facilement vider une variable ou un objet PHP : dump($myvariable); et voir les r\u00e9sultats dans votre navigateur : Vous pouvez \u00e9galement vider des variables dans l'onglet Messages de la barre de d\u00e9bogage en utilisant la syntaxe : $this->grav['debugger']->addMessage($myvariable) Commande de vidage pour Twig. Vous pouvez \u00e9galement afficher les variables Twig \u00e0 partir de vos mod\u00e8les Twig. Cela se fait de la m\u00eame mani\u00e8re, mais les r\u00e9sultats sont affich\u00e9s dans le panneau Messages de la barre de d\u00e9bogage. Cette fonctionnalit\u00e9 est d\u00e9sactiv\u00e9e par d\u00e9faut, mais peut \u00eatre activ\u00e9e globalement ou pour votre environnement de d\u00e9veloppement uniquement via le fichier de configuration system.yaml : 1 | twig: 2 | debug: true # Enable Twig debugger Par exemple, vous pouvez facilement vider une variable ou un objet Twig : 1 | {{ dump(page.header) }} et voir les r\u00e9sultats dans la barre de d\u00e9bogage : Il est possible de g\u00e9n\u00e9rer plusieurs commandes de vidage en m\u00eame temps, mais il peut \u00eatre difficile de les distinguer. Ajoutez du texte statique comme ceci : 1 | {{ dump('page.header output:',page.header) }} Dump \u00e0 la console du navigateur depuis Twig. Pour afficher des variables avant qu'une page ne soit renvoy\u00e9e par Grav ou dans le cas o\u00f9 aucune actualisation de page ne se produit, comme lors de l'utilisation d'AJAX, il existe une autre alternative. En utilisant une seule ligne de Javascript, n'importe quelle variable peut \u00eatre affich\u00e9e dans la console d\u00e9veloppeur de votre navigateur, par exemple : <script> console.log({{ page.header|json_encode|raw }}) </script> Examinez ensuite la valeur dans la console du navigateur : Affichage d'erreurs. Notre nouvelle page d'affichage des erreurs fournit des informations d\u00e9taill\u00e9es, des backtraces et m\u00eame des blocs de code pertinents. Cela permet d'isoler, d'identifier et de r\u00e9soudre plus rapidement les erreurs critiques. Par d\u00e9faut dans Grav, ceux-ci sont d\u00e9sactiv\u00e9s par d\u00e9faut, vous devrez donc les activer pour profiter de cette gestion des erreurs utile pour le d\u00e9veloppement : 1 | errors: 2 | display: true Pour les environnements de production, vous pouvez d\u00e9sactiver la page d'erreur d\u00e9taill\u00e9e avec quelque chose de plus subtil en configurant les options d'erreurs dans votre fichier user/config/system.yaml et compter sur les erreurs enregistr\u00e9es dans le fichier : 1 | errors: 2 | display: false 3 | log: true Enregistrement. La possibilit\u00e9 de consigner des informations est souvent utile, et encore une fois, Grav nous fournit une fonctionnalit\u00e9 de journalisation simple et puissante. Utilisez l'une des syntaxes suivantes : 1 | $this->grav['log']->info('My informational message'); 2 | $this->grav['log']->notice('My notice message'); 3 | $this->grav['log']->debug('My debug message'); 4 | $this->grav['log']->warning('My warning message'); 5 | $this->grav['log']->error('My error message'); 6 | $this->grav['log']->critical('My critical message'); 7 | $this->grav['log']->alert('My alert message'); 8 | $this->grav['log']->emergency('Emergency, emergency, there is an emergency here!'); Tous vos messages seront ajout\u00e9s au fichier /logs/grav.log .","title":"D\u00e9bogage et journalisation"},{"location":"avance-flex-administration/","text":"Administration Si vous avez utilis\u00e9 le panneau d'administration dans Grav 1.7, vous avez d\u00e9j\u00e0 utilis\u00e9 les objets Flex . Les meilleurs exemples sont les comptes et les pages , qui sont d'excellents exemples de ce qui peut \u00eatre fait avec Flex . Par d\u00e9faut, l' Administration Flex est invisible pour l'utilisateur. Pour voir un r\u00e9pertoire , il doit \u00eatre activ\u00e9. Les r\u00e9pertoires activ\u00e9s peuvent appara\u00eetre dans le menu de navigation , dans l'\u00e9l\u00e9ment de menu Flex Objects ou m\u00eame dans d'autres plugins. Le plugin Flex Objects doit \u00eatre activ\u00e9 pour pouvoir utiliser des r\u00e9pertoires personnalis\u00e9s. Activer un r\u00e9pertoire. Pour activer un r\u00e9pertoire Flex personnalis\u00e9, vous devez acc\u00e9der \u00e0 Plugins > Flex Objects . Nous sommes int\u00e9ress\u00e9s par l'option R\u00e9pertoires dans le plugin, qui r\u00e9pertorie tous les r\u00e9pertoires Flex d\u00e9tect\u00e9s. S\u00e9lectionnez simplement les r\u00e9pertoires qui vous int\u00e9ressent et assurez-vous que l'option Enabled est coch\u00e9e. Appuyez sur Enregistrer et le r\u00e9pertoire devrait appara\u00eetre apr\u00e8s le chargement d'une page. ASTUCE : Consultez l'introduction pour une proc\u00e9dure pas \u00e0 pas compl\u00e8te sur la cr\u00e9ation d'une page pour votre r\u00e9pertoire. Liste du r\u00e9pertoire. Affichage des r\u00e9pertoires Par d\u00e9faut, l'\u00e9l\u00e9ment de menu de navigation Flex Objects contient tous les r\u00e9pertoires Flex qui ont \u00e9t\u00e9 activ\u00e9s sur votre site. Certains r\u00e9pertoires Flex choisissent de se cacher de cette liste et de s'afficher ailleurs. Les comptes et les pages en sont de bons exemples. Les contr\u00f4les. En haut de la page, vous trouverez les contr\u00f4les administratifs. Retour : Revenir au tableau de bord Configure : redirige vers les plugins > les objets flexibles , voir Activer un r\u00e9pertoire . Annuaires. Lorsque vous s\u00e9lectionnez un r\u00e9pertoire, vous acc\u00e9dez \u00e0 la vue Liste de contenu . Dans la liste de contenu , vous pouvez parcourir les objets, utiliser la recherche et modifier l'ordre . De plus, chaque objet a des actions , g\u00e9n\u00e9ralement au moins Editer et Supprimer . Vous pouvez \u00e9galement Ajouter de nouveaux objets en utilisant un bouton en haut de la page. \u00c0 c\u00f4t\u00e9 se trouve \u00e9galement le bouton Configuration pour modifier les param\u00e8tres \u00e0 l'\u00e9chelle du r\u00e9pertoire. Dans l'\u00e9diteur de contenu , vous pouvez modifier l'objet et l'enregistrer. Dans Configuration , vous pouvez modifier la configuration, ce qui modifie le comportement de l'ensemble du r\u00e9pertoire. La mise en cache fait g\u00e9n\u00e9ralement partie de ces options.","title":"R\u00e9sum\u00e9"},{"location":"avance-flex-collection/","text":"Flex Collection Flex Collection est une carte ordonn\u00e9e d'objets qui peut \u00e9galement \u00eatre utilis\u00e9e comme une liste. Collection fournit quelques m\u00e9thodes utiles, qui peuvent \u00eatre utilis\u00e9es pour rendre la sortie, r\u00e9cup\u00e9rer des objets, filtrer et trier, etc. ASTUCE : Flex Collection \u00e9tend Doctrine Collections . Collection de rendu. render(). render( [layout], [context] ): Block Rend la collection. Param\u00e8tres: layout Nom de la mise en page ( string ) context Variables suppl\u00e9mentaires pouvant \u00eatre utilis\u00e9es dans le fichier de mod\u00e8le Twig ( array ) Retour: Bloc ( object ) Classe HtmlBlock contenant la sortie REMARQUE : dans twig, il existe une balise {% render %} , qui doit \u00eatre utilis\u00e9e au lieu d'appeler directement la m\u00e9thode. Cela permettra aux ressources JS/CSS de la collection de fonctionner correctement. - Twig {% set contacts = grav.get('flex').collection('contacts') %} {% set page = 2 %} {% set limit = 10 %} {% set start = (page - 1) * limit %} <h2>Contacts:</h2> {% render contacts.limit(start, limit) layout: 'cards' with { background: 'gray', color: 'white' } %} - PHP use Grav\\Common\\Grav; use Grav\\Framework\\ContentBlock\\HtmlBlock; use Grav\\Framework\\Flex\\Interfaces\\FlexCollectionInterface; $page = 2; $limit = 10; $start = ($page-1)*$limit; /** @var FlexCollectionInterface|null $collection */ $collection = Grav::instance()->get('flex')->getCollection('contacts'); if ($collection) { $collection = $collection->limit($start, $limit); /** @var HtmlBlock $block */ $block = $collection->render('cards', ['background' =>'gray', 'color' => 'white']); } Manipulation de collection. Toutes ces m\u00e9thodes renvoient une copie modifi\u00e9e de la collection. La collection originale reste inchang\u00e9e. sort(). sort( orderings ): Collection Trie la collection par liste paires de property : direction . Param\u00e8tres: orderings Ordres Paires de property : direction o\u00f9 la direction est soit 'ASC' soit 'DESC' ( array ) Retour: Collection ( object ) Nouvelle instance tri\u00e9e de la collection ASTUCE : L'ordre de tri par d\u00e9faut peut \u00eatre d\u00e9fini pour le frontend dans les blueprints Flex Type . - Twig {% set contacts = grav.get('flex').collection('contacts') %} {% set contacts = contacts.sort({last_name: 'ASC', first_name: 'ASC'}) %} <div>Displaying all contacts in alphabetical order:</div> {% render contacts layout: 'cards' %} - PHP use Grav\\Common\\Grav; use Grav\\Framework\\Flex\\Interfaces\\FlexCollectionInterface; /** @var FlexCollectionInterface|null $collection */ $collection = Grav::instance()->get('flex')->getCollection('contacts'); if ($collection) { $collection = $collection->sort(['last_name' => 'ASC', 'first_name' => 'ASC']); // Collection has now be sorted by last name, first name... } limit(). limit( start, limit ): Collection Renvoie un sous-ensemble de la collection \u00e0 partir de start et n'incluant qu'un nombre limit d'objets. Param\u00e8tres: start Indice de d\u00e9part \u00e0 partir de 0 (`int) limit Nombre maximal d'objets ( int ) Retour: Collection ( object ) Nouvelle instance filtr\u00e9e de la collection - Twig {% set contacts = grav.get('flex').collection('contacts') %} {% set page = 3 %} {% set limit = 6 %} {% set start = (page - 1) * limit %} {% set contacts = contacts.limit(start, limit) %} <div>Displaying page {{ page|e }}:</div> {% render contacts layout: 'cards' %} - PHP use Grav\\Common\\Grav; use Grav\\Framework\\Flex\\Interfaces\\FlexCollectionInterface; $start = 0; $limit = 6; /** @var FlexCollectionInterface|null $collection */ $collection = Grav::instance()->get('flex')->getCollection('contacts'); if ($collection) { $collection = $collection->limit($start, $limit); // Collection contains only the objects in the current page... } filterBy(). filterBy( filter ): Collection Filtrer la collection par liste de paires property : value . Param\u00e8tres: filter Paires de \u00e8property : value qui sont utilis\u00e9es pour filtrer la collection ( array`) Retour: Collection ( object ) Nouvelle instance filtr\u00e9e de la collection ASTUCE : le filtrage par d\u00e9faut peut \u00eatre d\u00e9fini pour le frontend dans les blueprints Flex Type . - Twig {% set contacts = grav.get('flex').collection('contacts') %} {% set contacts = contacts.filterBy({'published': true}) %} <div>Displaying only published contacts:</div> {% render contacts layout: 'cards' %} - PHP use Grav\\Common\\Grav; use Grav\\Framework\\Flex\\Interfaces\\FlexCollectionInterface; $start = 0; $limit = 6; /** @var FlexCollectionInterface|null $collection */ $collection = Grav::instance()->get('flex')->getCollection('contacts'); if ($collection) { $collection = $collection->filterBy(['published' => true]); // Collection contains only published objects... } reverse(). reverse() : Collection Inverse l'ordre des objets dans la Collection. Retour: Collection ( object ) Nouvelle instance invers\u00e9e de la collection ASTUCE : si vous utilisez sort() , il est recommand\u00e9 d'inverser l'ordre car cela permet d'\u00e9conomiser une \u00e9tape suppl\u00e9mentaire. - Twig {% set contacts = grav.get('flex').collection('contacts') %} {% set contacts = contacts.reverse() %} <div>Displaying contacts in reverse ordering:</div> {% render contacts layout: 'cards' %} - PHP use Grav\\Common\\Grav; use Grav\\Framework\\Flex\\Interfaces\\FlexCollectionInterface; $start = 0; $limit = 6; /** @var FlexCollectionInterface|null $collection */ $collection = Grav::instance()->get('flex')->getCollection('contacts'); if ($collection) { $collection = $collection->reverse(); // Collection is now in reverse ordering... } shuffle(). shuffle() : Collection M\u00e9lange les objets dans un ordre al\u00e9atoire. Retour: Collection ( object ) Nouvelle instance ordonn\u00e9e au hasard de la collection. - Twig {% set contacts = grav.get('flex').collection('contacts') %} {% set contacts = contacts.shuffle().limit(0, 6) %} <div>Displaying 6 random contacts:</div> {% render contacts layout: 'cards' %} - PHP use Grav\\Common\\Grav; use Grav\\Framework\\Flex\\Interfaces\\FlexCollectionInterface; /** @var FlexCollectionInterface|null $collection */ $collection = Grav::instance()->get('flex')->getCollection('contacts'); if ($collection) { $collection = $collection->shuffle()->limit(0,6); // Collection contains 6 random contacts... } select(). select( keys ): Collection S\u00e9lectionne des objets (par leurs cl\u00e9s) dans la collection. Param\u00e8tres: keys Liste des cl\u00e9s d'objets utilis\u00e9es pour s\u00e9lectionner les objets ( array ) Retour: Collection ( object ) Nouvelle instance de la collection. - Twig {% set contacts = grav.get('flex').collection('contacts') %} {% set selected = ['gizwsvkyo5xtms2s', 'gjmva53uoncdo4sb', 'mfzwwtcugv5hkocd', 'k5nfctkeoftwi4zu'] %} {% set contacts = contacts.select(selected) %} <div>Displaying 4 selected contacts:</div> {% render contacts layout: 'cards' %} - PHP use Grav\\Common\\Grav; use Grav\\Framework\\Flex\\Interfaces\\FlexCollectionInterface; $selected = ['gizwsvkyo5xtms2s', 'gjmva53uoncdo4sb', 'mfzwwtcugv5hkocd', 'k5nfctkeoftwi4zu']; /** @var FlexCollectionInterface|null $collection */ $collection = Grav::instance()->get('flex')->getCollection('contacts'); if ($collection) { $collection = $collection->select($selected); // Collection now contains the 4 selected contacts... } unselect(). unselect( keys ): Collection Supprime les objets (par leurs cl\u00e9s) de la collection. Param\u00e8tres: keys Liste des cl\u00e9s d'objet utilis\u00e9es pour supprimer les objets ( array ) Retour: Collection ( object ) Nouvelle instance de la collection. - Twig {% set contacts = grav.get('flex').collection('contacts') %} {% set ignore = ['gizwsvkyo5xtms2s', 'gjmva53uoncdo4sb', 'mfzwwtcugv5hkocd', 'k5nfctkeoftwi4zu'] %} {% set contacts = contacts.unselect(ignore) %} <div>Displaying all but 4 ignored contacts:</div> {% render contacts layout: 'cards' %} - PHP use Grav\\Common\\Grav; use Grav\\Framework\\Flex\\Interfaces\\FlexCollectionInterface; $ignore = ['gizwsvkyo5xtms2s', 'gjmva53uoncdo4sb', 'mfzwwtcugv5hkocd', 'k5nfctkeoftwi4zu']; /** @var FlexCollectionInterface|null $collection */ $collection = Grav::instance()->get('flex')->getCollection('contacts'); if ($collection) { $collection = $collection->unselect($ignore); // Collection now contains all but 4 ignored contacts... } search(). search( string, [properties], [options] ): Collection Recherche une cha\u00eene dans la collection. Param\u00e8tres: string Cha\u00eene de recherche ( string ) property Propri\u00e9t\u00e9s \u00e0 rechercher, si null (ou non fournies), utilisez les valeurs par d\u00e9faut ( array ou null ) options Options suppl\u00e9mentaires utilis\u00e9es lors de la recherche ( array ) commence_par : bool se termine par : bool contient : bool sensible \u00e0 la casse : bool Retour: Collection ( object ) Nouvelle instance filtr\u00e9e de la collection. - Twig {% set contacts = grav.get('flex').collection('contacts') %} {% set contacts = contacts.search('Jack', ['first_name', 'last_name', 'email'], {'contains': true}) %} <div>Displaying all search results for 'Jack':</div> {% render contacts layout: 'cards' %} - PHP use Grav\\Common\\Grav; use Grav\\Framework\\Flex\\Interfaces\\FlexCollectionInterface; /** @var FlexCollectionInterface|null $collection */ $collection = Grav::instance()->get('flex')->getCollection('contacts'); if ($collection) { $collection = $collection->search('Jack', ['first_name', 'last_name', 'email'], ['contains' => true]); // Collection now contains all search results... } copy(). copy() : Collection Cr\u00e9e une copie de la collection en clonant tous les objets de la collection. Retour: Collection ( object ) Nouvelle instance de la collection, maintenant avec des objets clon\u00e9s. ATTENTION : Si vous modifiez des objets dans votre collection, vous devez toujours utiliser des copies ! - Twig {% set contacts = grav.get('flex').collection('contacts') %} {% set contacts = contacts.shuffle().limit(0, 10) %} {% set fakes = contacts.copy() %} {% do fakes.setProperty('first_name', 'JACK') %} <h2>Fake cards</h2> {% render fakes layout: 'cards' %} <h2>Original cards</h2> {% render contacts layout: 'cards' %} - PHP use Grav\\Common\\Grav; use Grav\\Framework\\Flex\\Interfaces\\FlexCollectionInterface; /** @var FlexCollectionInterface|null $collection */ $collection = Grav::instance()->get('flex')->getCollection('contacts'); if ($collection) { $collection = $collection->search('Jack', ['first_name', 'last_name', 'email'], ['contains' => true]); // Collection now contains all search results... } It\u00e9rer dans la collection. Les Collections peuvent \u00eatre it\u00e9r\u00e9es. - Twig {% set contacts = grav.get('flex').collection('contacts') %} <h2>All contacts:</h2> <ul> {% for contact in contacts %} <li>{{ contact.first_name|e }} {{ contact.last_name|e }}</li> {% endfor %} </ul> - PHP use Grav\\Common\\Grav; use Grav\\Framework\\Flex\\Interfaces\\FlexCollectionInterface; use Grav\\Framework\\Flex\\Interfaces\\FlexObjectInterface; /** @var FlexCollectionInterface|null $collection */ $collection = Grav::instance()->get('flex')->getCollection('contacts'); if ($collection) { /** @var FlexObjectInterface $object */ foreach ($collection as $object) { // Do something with the object... } } first(). first() : Object | false D\u00e9finit l'it\u00e9rateur sur le premier objet de la collection et renvoie cet objet. Retour: Collection ( object ) Premier objet false Aucun objet dans la collection. - Twig {% set contacts = grav.get('flex').collection('contacts') %} {% set contact = contacts.first() %} {% if contact %} <h2>First contact:</h2> <div>{{ contact.first_name|e }} {{ contact.last_name|e }}</div> {% endif %} </ul> - PHP use Grav\\Common\\Grav; use Grav\\Framework\\Flex\\Interfaces\\FlexCollectionInterface; use Grav\\Framework\\Flex\\Interfaces\\FlexObjectInterface; /** @var FlexCollectionInterface|null $collection */ $collection = Grav::instance()->get('flex')->getCollection('contacts'); if ($collection) { /** @var FlexObjectInterface|false $object */ $object = $collection->first(); if ($object) { // Do something with the object... } } last(). last() : Object | false D\u00e9finit l'it\u00e9rateur sur le dernier objet de la collection et renvoie cet objet. Retour: Collection ( object ) Dernier objet false Aucun objet dans la collection. - Twig {% set contacts = grav.get('flex').collection('contacts') %} {% set contact = contacts.last() %} {% if contact %} <h2>Last contact:</h2> <div>{{ contact.first_name|e }} {{ contact.last_name|e }}</div> {% endif %} - PHP use Grav\\Common\\Grav; use Grav\\Framework\\Flex\\Interfaces\\FlexCollectionInterface; use Grav\\Framework\\Flex\\Interfaces\\FlexObjectInterface; /** @var FlexCollectionInterface|null $collection */ $collection = Grav::instance()->get('flex')->getCollection('contacts'); if ($collection) { /** @var FlexObjectInterface|false $object */ $object = $collection->last(); if ($object) { // Do something with the object... } } next(). next() : object | false D\u00e9place la position de l'it\u00e9rateur vers l'objet suivant et renvoie cet \u00e9l\u00e9ment. Retour: Collection ( object ) Objet suivant false Plus d'objets dans la collection. - Twig {% set contacts = grav.get('flex').collection('contacts') %} {% set first = contacts.first() %} ... {% set contact = contacts.next() %} {% if contact %} <h2>Next contact is:</h2> <div>{{ contact.first_name|e }} {{ contact.last_name|e }}</div> {% endif %} - PHP use Grav\\Common\\Grav; use Grav\\Framework\\Flex\\Interfaces\\FlexCollectionInterface; use Grav\\Framework\\Flex\\Interfaces\\FlexObjectInterface; /** @var FlexCollectionInterface|null $collection */ $collection = Grav::instance()->get('flex')->getCollection('contacts'); if ($collection) { /** @var FlexObjectInterface|false $object */ while ($object = $collection->next()) { // Do something with the object... } } current(). current() : object | false Obtient l'objet de la collection \u00e0 la position actuelle de l'it\u00e9rateur. Retour: Collection ( object ) Objet courant false Plus d'objets dans la collection. - Twig {% set contacts = grav.get('flex').collection('contacts') %} {% do contacts.next() %} {% do contacts.next() %} ... {% set contact = contacts.current() %} {% if contact %} <h2>Current contact is:</h2> <div>{{ contact.first_name|e }} {{ contact.last_name|e }}</div> {% endif %} - PHP use Grav\\Common\\Grav; use Grav\\Framework\\Flex\\Interfaces\\FlexCollectionInterface; use Grav\\Framework\\Flex\\Interfaces\\FlexObjectInterface; /** @var FlexCollectionInterface|null $collection */ $collection = Grav::instance()->get('flex')->getCollection('contacts'); if ($collection) { while ($collection->next()) { /** @var FlexObjectInterface|false $object */ $object = $collection->current(); // Do something with the object... } } key(). key () : key | null Obtient la cl\u00e9 de l'objet \u00e0 la position actuelle de l'it\u00e9rateur. Retour: key ( string ) Cl\u00e9 d'objet null Plus d'objets dans la collection. - Twig {% set contacts = grav.get('flex').collection('contacts') %} {% do contacts.next() %} {% do contacts.next() %} ... {% set key = contacts.key() %} {% if key %} Current contact key is: <strong>{{ key|e }}</strong> {% endif %} - PHP use Grav\\Common\\Grav; use Grav\\Framework\\Flex\\Interfaces\\FlexCollectionInterface; /** @var FlexCollectionInterface|null $collection */ $collection = Grav::instance()->get('flex')->getCollection('contacts'); if ($collection) { while ($collection->next()) { $key = $collection->key(); // Do something with the key... } } Obtenir objet/cl\u00e9. Acc\u00e8s au tableau. Les Collections sont accessibles comme des tableaux associatifs ou des cartes. REMARQUE : null est renvoy\u00e9 si l'objet avec la cl\u00e9 donn\u00e9e n'est pas dans la collection. - Twig {% set contacts = grav.get('flex').collection('contacts') %} {% set contact = contacts['ki2ts4cbivggmtlj'] {# Do something #} {% if contact %} {# Got Bruce Day #} Email for {{ contact.first_name|e }} {{ contact.last_name|e }} is {{ contact.email|e }} {% else %} Oops, contact has been removed! {% endif %} - PHP use Grav\\Common\\Grav; use Grav\\Framework\\Flex\\Interfaces\\FlexCollectionInterface; use Grav\\Framework\\Flex\\Interfaces\\FlexObjectInterface; /** @var FlexCollectionInterface|null $collection */ $collection = Grav::instance()->get('flex')->getCollection('contacts'); if ($collection) { /** @var FlexObjectInterface|null $object */ $object = $collection['ki2ts4cbivggmtlj']; if ($object) { // Object exists, do something with it... } } get(). get( cl\u00e9 ): Object | null Obtient l'objet avec la cl\u00e9 sp\u00e9cifi\u00e9e. Param\u00e8tres: key Cl\u00e9 d'objet ( string ) Retour: Object ( object ) null L'objet avec la cl\u00e9 donn\u00e9e n'est pas dans la collection. Alternative \u00e0 l'acc\u00e8s aux tableaux . - Twig {% set contacts = grav.get('flex').collection('contacts') %} {% set contact = contacts.get('ki2ts4cbivggmtlj') {# Do something #} {% if contact %} {# Got Bruce Day #} Email for {{ contact.first_name|e }} {{ contact.last_name|e }} is {{ contact.email|e }} {% else %} Oops, contact has been removed! {% endif %} - PHP use Grav\\Common\\Grav; use Grav\\Framework\\Flex\\Interfaces\\FlexCollectionInterface; use Grav\\Framework\\Flex\\Interfaces\\FlexObjectInterface; /** @var FlexCollectionInterface|null $collection */ $collection = Grav::instance()->get('flex')->getCollection('contacts'); if ($collection) { /** @var FlexObjectInterface|null $object */ $object = $collection->get('ki2ts4cbivggmtlj'); if ($object) { // Object exists, do something with it... } } Collection en tant que tableau. getKeys(). getKeys() : array R\u00e9cup\u00e8re toutes les cl\u00e9s de la collection. Retour: array Liste des cl\u00e9s - Twig {% set contacts = grav.get('flex').collection('contacts') %} {% set keys = contacts.keys() %} Keys are: {{ keys|join(', ')|e }} - PHP use Grav\\Common\\Grav; use Grav\\Framework\\Flex\\Interfaces\\FlexCollectionInterface; /** @var FlexCollectionInterface|null $collection */ $collection = Grav::instance()->get('flex')->getCollection('contacts'); if ($collection) { /** @var string[] $keys */ $keys = $collection->getKeys(); $keysList = implode(', ', $keys); } GetObjectKeys(). GetObjectKeys() : array Alias \u200b\u200bde la m\u00e9thode getKeys(). Retour: array Liste des cl\u00e9s getValues(). getValues() : array R\u00e9cup\u00e8re tous les objets de la collection. Convertit la collection en tableau. Les cl\u00e9s ne sont pas conserv\u00e9es. Retour: Liste des Objects ( array ) - Twig {% set contacts = grav.get('flex').collection('contacts') %} {% set list = contacts.values() %} <ol> {% for i,object in list %} <li>#{{ (i+1)|e }}: {{ object.email|e }}</li> {% endfor %} </ol> - PHP use Grav\\Common\\Grav; use Grav\\Framework\\Flex\\Interfaces\\FlexCollectionInterface; use Grav\\Framework\\Flex\\Interfaces\\FlexObjectInterface; /** @var FlexCollectionInterface|null $collection */ $collection = Grav::instance()->get('flex')->getCollection('contacts'); if ($collection) { /** @var FlexObjectInterface[] $objects */ $objects = $collection->getValues(); foreach ($objects as $pos => $object) { // Do something with the object and its position... } } toArray(). toArray() : array Obtient une repr\u00e9sentation PHP native de tableau de la collection. Similaire \u00e0 getValues() mais pr\u00e9serve les cl\u00e9s. Retour: array Liste de paires key : Objects . - Twig {% set contacts = grav.get('flex').collection('contacts') %} {% set list = contacts.toArray() %} <ol> {% for key,object in list %} <li>ID: {{ key|e }}: {{ object.email|e }}</li> {% endfor %} </ol> - PHP use Grav\\Common\\Grav; use Grav\\Framework\\Flex\\Interfaces\\FlexCollectionInterface; use Grav\\Framework\\Flex\\Interfaces\\FlexObjectInterface; /** @var FlexCollectionInterface|null $collection */ $collection = Grav::instance()->get('flex')->getCollection('contacts'); if ($collection) { /** @var array<string, FlexObjectInterface> $objects */ $objects = $collection->toArray(); foreach ($objects as $key => $object) { // Do something with the object and its key... } } slice(). slice( offset, length ): array Extrait une tranche de lenght \u00e9l\u00e9ments commen\u00e7ant \u00e0 la position offset de la Collection. Param\u00e8tres: offset D\u00e9calage de d\u00e9part \u00e0 partir de 0 (int). lenght Nombre maximal d'objets (int). Retour: array Liste de paires key : Objects . CONSEIL : Cette m\u00e9thode peut \u00eatre utilis\u00e9e pour la pagination. - Twig {% set contacts = grav.get('flex').collection('contacts') %} {% set list = contacts.slice(10, 5) %} <div>Displaying 5 emails starting from offset 10:</div> <ol> {% for key,object in list %} <li>ID: {{ key|e }}: {{ object.email|e }}</li> {% endfor %} </ol> - PHP use Grav\\Common\\Grav; use Grav\\Framework\\Flex\\Interfaces\\FlexCollectionInterface; use Grav\\Framework\\Flex\\Interfaces\\FlexObjectInterface; /** @var FlexCollectionInterface|null $collection */ $collection = Grav::instance()->get('flex')->getCollection('contacts'); if ($collection) { /** @var array<string, FlexObjectInterface> $objects */ $objects = $collection->slice(10, 5); // Do something with the object and its key... } chunk(). chunk( size ): array Divise la collection en morceaux d'objets de taille. Param\u00e8tres: size Taille des morceaux (int). Retour: array Liste bidimensionnelle de paires key : Objects . CONSEIL : Cette m\u00e9thode peut \u00eatre utilis\u00e9e pour diviser le contenu en lignes et en colonnes. - Twig {% set contacts = grav.get('flex').collection('contacts') %} {% set columns = contacts.limit(0, 10).chunk(5) %} <div>Displaying two columns of 5 emails each:</div> <div class=\"columns\"> {% for column,list in columns %} <div class=\"column\"> {% for object in list %} <div>{{ object.email|e }}</div> {% endfor %} </div> {% endfor %} </div> - PHP use Grav\\Common\\Grav; use Grav\\Framework\\Flex\\Interfaces\\FlexCollectionInterface; use Grav\\Framework\\Flex\\Interfaces\\FlexObjectInterface; /** @var FlexCollectionInterface|null $collection */ $collection = Grav::instance()->get('flex')->getCollection('contacts'); if ($collection) { /** @var array $columns */ $columns = $collection->limit(0, 10)->chunk(5); /** @var int $column array<string, FlexObjectInterface> $objects */ foreach ($columns as $column => $objects) { // Do something with the objects... } } } group(). group( property ): array Regrouper les objets de la collection par une propri\u00e9t\u00e9 et les renvoyer sous forme de tableau associ\u00e9. Param\u00e8tres: property Nom de la propri\u00e9t\u00e9 utilis\u00e9e pour regrouper les objets ( string ). Retour: array Liste bidimensionnelle de paires key : Objects o\u00f9 la valeur de la propri\u00e9t\u00e9 est la cl\u00e9 du premier niveau - Twig {% set contacts = grav.get('flex').collection('contacts') %} {% set by_name = contacts.sort({last_name: 'ASC', first_name: 'ASC'}).group('last_name') %} <div>Displaying contacts grouped by last name:</div> <div> {% for last_name,list in by_name %} {{ last_name|e }}: <ul> {% for object in list %} <li>{{ object.first_name|e }}</li> {% endfor %} </ul> {% endfor %} </div> - PHP use Grav\\Common\\Grav; use Grav\\Framework\\Flex\\Interfaces\\FlexCollectionInterface; use Grav\\Framework\\Flex\\Interfaces\\FlexObjectInterface; /** @var FlexCollectionInterface|null $collection */ $collection = Grav::instance()->get('flex')->getCollection('contacts'); if ($collection) { /** @var array $byName */ $byName = $collection->group('last_name'); /** @var string $lastName array<string, FlexObjectInterface> $objects */ foreach ($byName as $lastName => $objects) { // Do something with the objects... } } } Ajout et suppression d'objets. add(). add( Object ) Ajoute un Object \u00e0 la fin de la collection. Param\u00e8tres: Objet Objet \u00e0 ajouter ( objet ). remove(). remove (key): Objet | null Supprime l'\u00e9l\u00e9ment \u00e0 l'index sp\u00e9cifi\u00e9 de la collection. Param\u00e8tres: key Cl\u00e9 de l'objet \u00e0 supprimer ( object ). Retour: Objet Objet supprim\u00e9 ( object ) ou null s'il n'a pas \u00e9t\u00e9 trouv\u00e9 removeElement(). removeElement( Object ): bool Supprime l'objet sp\u00e9cifi\u00e9 de la collection, s'il est trouv\u00e9. Param\u00e8tres: Objet Objet \u00e0 supprimer ( object ). Retour: true si l'objet \u00e9tait dans la collection, false sinon. clear(). clear() Efface la collection, supprimant tous les \u00e9l\u00e9ments. Essais. containsKey(). containsKey( key ): bool V\u00e9rifie si la collection contient un objet avec la cl\u00e9 sp\u00e9cifi\u00e9e. Param\u00e8tres: key Cl\u00e9 \u00e0 tester ( string ) Retour: true si l'objet est dans la collection, false sinon contains(). contains( object ): bool V\u00e9rifie si un \u00e9l\u00e9ment est contenu dans la collection. Param\u00e8tres: Objet Objet \u00e0 tester ( object ). Retour: true si l'objet est dans la collection, false sinon indesOf(). indexOf( objet ): string | false Obtient l'index/la cl\u00e9 d'un objet donn\u00e9. Param\u00e8tres: Objet Objet \u00e0 tester ( object ). Retour: string index/key de l'objet, false si l'objet n'a pas \u00e9t\u00e9 trouv\u00e9. isEmpty(). isEmpty() : bool V\u00e9rifie si la collection est vide (ne contient aucun objet). Retour: true si la collection est vide, false sinon. count(). count') : int Retour: int Nombre d'objets dans la collection. Actions group\u00e9es pour les objets. hasProperty(). hasProperty( property ): array Renvoie une liste de paires key:boolean si l'objet avec key a une propri\u00e9t\u00e9 d\u00e9finie ou non. Param\u00e8tres: property Nom de la propri\u00e9t\u00e9 ( string ). Retour: array de paires de key: bool , o\u00f9 key est la cl\u00e9 de l'objet et bool est soit vrai soit faux. getProperty(). getProperty( property, default ): array Renvoie une liste de key: value pour chaque objet. Param\u00e8tres: property Nom de la propri\u00e9t\u00e9 ( string ). Retour: array de paires de key: value , o\u00f9 key est la cl\u00e9 de l'objet et value est la valeur de la propri\u00e9t\u00e9. setProperty(). setProperty( property, value ): Collection D\u00e9finit une nouvelle valeur pour la propri\u00e9t\u00e9 de chaque objet de la collection. Param\u00e8tres: property Nom de la propri\u00e9t\u00e9 ( string ). value Nouvelle valeur ( mixed ). Retour: Collection ( object ) La collection pour encha\u00eener les appels de m\u00e9thode. AVERTISSEMENT : Cette m\u00e9thode modifie les instances d'objet partag\u00e9es entre toutes les collections, si ce n'est pas pr\u00e9vu, veuillez copy la collection avant d'utiliser cette m\u00e9thode. defProperty(). defProperty( property, default ): Collection D\u00e9finit la valeur par d\u00e9faut de la propri\u00e9t\u00e9 pour chaque objet de la collection. Param\u00e8tres: property Nom de la propri\u00e9t\u00e9 ( string ). default Valeur par d\u00e9faut ( mixed ). Retour: Collection ( object ) La collection pour encha\u00eener les appels de m\u00e9thode. AVERTISSEMENT : Cette m\u00e9thode modifie les instances d'objet partag\u00e9es entre toutes les collections, si ce n'est pas pr\u00e9vu, veuillez copy la collection avant d'utiliser cette m\u00e9thode. unsetProperty(). unsetProperty( property ): Collection Supprime la valeur de la propri\u00e9t\u00e9 pour chaque objet de la collection. Param\u00e8tres: property Nom de la propri\u00e9t\u00e9 ( string ). Retour: Collection ( object ) La collection pour encha\u00eener les appels de m\u00e9thode. AVERTISSEMENT : Cette m\u00e9thode modifie les instances d'objet partag\u00e9es entre toutes les collections, si ce n'est pas pr\u00e9vu, veuillez copy la collection avant d'utiliser cette m\u00e9thode. call(). call( method, arguments): array Appelle une m\u00e9thode pour chaque objet de la collection. Renvoie les r\u00e9sultats de chaque appel. Param\u00e8tres: method Nom de la m\u00e9thode ( string ). arguments Liste des arguments ( array ). Retour: Liste de paires key: result ( array ) AVERTISSEMENT : Si la m\u00e9thode modifie l'objet, veuillez copy la collection avant d'utiliser cette m\u00e9thode. getTimestamps(). getTimestamps() : array Renvoie une liste de key : timestamp pour chaque objet. Retour: Liste de paires key : timestamp o\u00f9 l'horodatage est un entier ( array ). getStorageKeys(). getStorageKeys() : array Renvoie une liste de key: storage_key pour chaque objet. Retour: Liste de paires key : storage_key ( array ). getFlexKeys(). getFlexKeys() : array Renvoie une liste de key : flex_key pour chaque objet. Retour: Liste de paires key : flex_key ( array ). withKeyField(). withKeyField( field ): Collection Renvoie une nouvelle collection avec une cl\u00e9 diff\u00e9rente. Param\u00e8tres: field Champ cl\u00e9 ( string ) 'key' : cl\u00e9 par d\u00e9faut utilis\u00e9e par le r\u00e9pertoire 'storage_key' : cl\u00e9 de la couche de stockage 'flex_key' : cl\u00e9 unique pouvant \u00eatre utilis\u00e9e sans conna\u00eetre le r\u00e9pertoire Retour: Collection ( object ) La collection, mais index\u00e9e avec la nouvelle cl\u00e9. Tests de fermeture (PHP uniquement). exist(). exists( Closure ): bool Teste l'existence d'un objet qui satisfait le pr\u00e9dicat donn\u00e9. Param\u00e8tres: Closure M\u00e9thode utilis\u00e9e pour tester chaque objet. Retour: bool True si votre fonction de rappel renvoie true pour n'importe quel objet. forAll(). forAll( Closure ): bool Teste si le pr\u00e9dicat donn\u00e9 est valable pour tous les objets de cette collection. Param\u00e8tres: Closure M\u00e9thode utilis\u00e9e pour tester chaque objet. Retour: bool True si votre fonction de rappel renvoie true pour n'importe quel objet. Filtrage de fermeture (PHP uniquement). filter. filter( Closure ): Collection Renvoie tous les objets de cette collection qui satisfont le pr\u00e9dicat. L'ordre des \u00e9l\u00e9ments est conserv\u00e9. Param\u00e8tres: Closure M\u00e9thode utilis\u00e9e pour tester un seul objet. Retour: Collection ( object ) Nouvelle collection avec tous les objets pour lesquels votre fonction de rappel renvoie true. map(). map( Closure ): Collection Applique la fonction donn\u00e9e \u00e0 chaque objet de la collection et renvoie une nouvelle collection avec les objets renvoy\u00e9s par la fonction. Param\u00e8tres: Closure M\u00e9thode utilis\u00e9e pour tester un seul objet. Retour: Collection ( object ) Nouvelle collection avec des objets renvoy\u00e9s par la fonction de rappel. collectionGroup(). collectionGroup( property ): Collection[] Regrouper les objets de la collection par un champ et les renvoyer sous forme de tableau associ\u00e9 de collections. Param\u00e8tres: property ( string ) Propri\u00e9t\u00e9 utilis\u00e9e pour regrouper les objets. Retour: array Plusieurs collections dans un tableau, key \u00e9tant la valeur de la propri\u00e9t\u00e9. matching(). matching( Criteria ): Collection S\u00e9lectionne tous les objets qui correspondent \u00e0 l'expression et renvoie une nouvelle collection contenant ces objets. Param\u00e8tres: Criteria Expression. Retour: Collection ( object ) Nouvelle collection avec des objets correspondant aux crit\u00e8res. ASTUCE : consultez la documentation de Doctrine pour le g\u00e9n\u00e9rateur d'expressions et les expressions . orderBy(). orderBy( array ): Collection R\u00e9organise la collection par liste de paires propri\u00e9t\u00e9/valeur. Param\u00e8tres: array Retour: Collection ( object ) Nouvelle collection avec le nouvel ordre. partition(). partition( Closure ): array Partitionne cette collection en deux collections selon un pr\u00e9dicat. Les cl\u00e9s sont conserv\u00e9es dans les collections r\u00e9sultantes. Param\u00e8tres: Closue M\u00e9thode utilis\u00e9e pour partitionner un seul objet. Renvoie vrai ou faux. Retour: array Objets partitionn\u00e9s [[a, b], [c, d, e]] .","title":"Collection Flex"},{"location":"avance-flex-configuration/","text":"Configuration La Configuration a des param\u00e8tres communs pour le Flex Directory . Ces param\u00e8tres sont g\u00e9n\u00e9ralement utilis\u00e9s pour modifier le comportement du r\u00e9pertoire, d\u00e9finir des valeurs par d\u00e9faut pour les objets ou modifier le rendu des mises en page. Les param\u00e8tres sont diff\u00e9rents dans chaque r\u00e9pertoire, ce document ne contient que les param\u00e8tres communs trouv\u00e9s dans chaque r\u00e9pertoire. Les contr\u00f4les. En haut de la page, vous trouverez les contr\u00f4les administratifs. Retour : Retour \u00e0 la Liste de Contenus . Enregistrer : Enregistrez la configuration et revenez \u00e0 la Liste de Contenus . Onglet Mise en cache. OPTION DESCRIPTION Enable Index Caching La mise en cache de l'index acc\u00e9l\u00e8re les recherches en cr\u00e9ant des index de recherche temporaires pour les requ\u00eates. Index Cache Lifetime (seconds) Dur\u00e9e de vie de la mise en cache d'index en secondes. Enable Object Caching La mise en cache des objets acc\u00e9l\u00e8re le chargement des donn\u00e9es et des images des objets. Object Cache Lifetime (seconds) Dur\u00e9e de vie de la mise en cache d'objets en secondes. Enable Render Caching La mise en cache du rendu acc\u00e9l\u00e8re le rendu du contenu en mettant en cache le code HTML r\u00e9sultant. Render Cache Lifetime (seconds) Dur\u00e9e de vie du cache de rendu en secondes. Si le rendu HTML a un contenu dynamique, le cache de rendu peut \u00eatre d\u00e9sactiv\u00e9 \u00e0 partir du mod\u00e8le Twig par {% do block.disableCache() %} .","title":"Configuration"},{"location":"avance-flex-editeur-contenus/","text":"\u00c9diteur de contenu L'Editeur de Contenu est une vue puissante dans Flex Objects qui vous permet de cr\u00e9er et de mettre \u00e0 jour votre type de contenu. L'\u00e9diteur peut sembler tr\u00e8s diff\u00e9rent avec diff\u00e9rents Contr\u00f4les , Onglets et Champs de Formulaire , car ils sont tous sp\u00e9cifiques au type de r\u00e9pertoire que vous modifiez. Les contr\u00f4les. En haut de la page, vous trouverez les contr\u00f4les administratifs. Par d\u00e9faut, il y a trois boutons Retour , Enregistrer et Supprimer . Les contr\u00f4les peuvent \u00e9galement inclure d'autres actions, telles que l'aper\u00e7u, l'exportation, etc. Retour : Retour \u00e0 la Liste de Contenus . Enregistrer : Enregistrer l'objet et revenir \u00e0 la Liste de Contenus . Supprimer : Supprimer l'objet et revenir \u00e0 la Liste de Contenus . Modifier le formulaire. Le formulaire est g\u00e9n\u00e9ralement organis\u00e9 par Onglets et Sections pour faciliter la modification du contenu. Champs de formulaire . M\u00e9dias (images et autres fichiers).","title":"Editeur de contenu"},{"location":"avance-flex-flex/","text":"Flex ASTUCE : la liste compl\u00e8te des m\u00e9thodes est disponible dans la section Personnalisation des objets Flex. compter(). count() : int Compte le nombre de r\u00e9pertoires enregistr\u00e9s dans Flex. Retour: int Nombre de R\u00e9pertoires . Twig {% set flex = grav.get('flex') %} Flex has {{ flex.count() }} enabled directories. PHP use Grav\\Common\\Grav; use Grav\\Framework\\Flex\\Interfaces\\FlexInterface; /** @var FlexInterface $flex */ $flex = Grav::instance()->get('flex'); /** @var int $count */ $count = $flex->count(); getDirectories(). getDirectories( [names] ): array R\u00e9cup\u00e8re la liste des r\u00e9pertoires. Param\u00e8tres: names Facultatif : Liste des noms de r\u00e9pertoires ( array ). Retour: array liste des R\u00e9pertoires . ASTUCE : Si aucune liste de noms n'a \u00e9t\u00e9 fournie, la m\u00e9thode renvoie tous les r\u00e9pertoires enregistr\u00e9s dans Flex. Twig {% set flex = grav.get('flex') %} {# Get all directories #} {% set directories = flex.directories() %} {# Get listed directories #} {% set listed_directories = flex.directories(['contacts', 'phonebook']) %} {# Do something with the directories #} PHP use Grav\\Common\\Grav; use Grav\\Framework\\Flex\\Interfaces\\FlexInterface; use Grav\\Framework\\Flex\\Interfaces\\FlexDirectoryInterface; /** @var FlexInterface $flex */ $flex = Grav::instance()->get('flex'); /** @var FlexDirectoryInterface[] $directories */ $directories = $flex->getDirectories(); // = ['contacts' => FlexDirectory, ...] /** @var FlexDirectoryInterface[] $directories */ $listedDirectories = $flex->getDirectories(['contacts', 'phonebook']); // = ['contacts' => FlexDirectory] /** @var array $directories */ $listedDirectoriesWithMissing = $flex->getDirectories(['contacts', 'phonebook'], true); // = ['contacts' => FlexDirectory, 'phonebook' => null] ASTUCE : Vous voudrez peut-\u00eatre vous assurer de ne renvoyer que les r\u00e9pertoires souhait\u00e9s. hasDirectory(). hasDirectory( name ): bool : V\u00e9rifie si le r\u00e9pertoire existe. Param\u00e8tres: name Nom du r\u00e9pertoire ( string ) Retour: bool Vrai si trouv\u00e9, faux sinon Twig {% set flex = grav.get('flex') %} Flex has {{ not flex.hasDirectory('contacts') ? 'not' }} contacts directory. PHP use Grav\\Common\\Grav; use Grav\\Framework\\Flex\\Interfaces\\FlexInterface; /** @var FlexInterface $flex */ $flex = Grav::instance()->get('flex'); /** @var bool $exists */ $exists = $flex->hasDirectory('contacts'); getDirectory(). getDirectory( name ): Directory | null obtient un r\u00e9pertoire, renvoie null s'il n'a pas \u00e9t\u00e9 trouv\u00e9. Param\u00e8tres: name Nom du r\u00e9pertoire ( string ) Retour: R\u00e9pertoires ( objet ) null R\u00e9pertoire introuvable Twig {% set flex = grav.get('flex') %} {# Get contacts directory (null if not found) #} {% set directory = flex.directory('contacts') %} {# Do something with the contacts directory #} PHP use Grav\\Common\\Grav; use Grav\\Framework\\Flex\\Interfaces\\FlexInterface; use Grav\\Framework\\Flex\\Interfaces\\FlexDirectoryInterface; /** @var FlexInterface $flex */ $flex = Grav::instance()->get('flex'); /** @var FlexDirectoryInterface|null $directory */ $directory = $flex->getDirectory('contacts'); if ($directory) { // Directory exists, do something with it... } V\u00e9rifiez ce que vous pouvez faire avec [Flex Directory](avance-flex-repertoire.md). getObjet(). getObject( id, r\u00e9pertoire ): Objet | null Obtient un objet, renvoie null s'il n'a pas \u00e9t\u00e9 trouv\u00e9. Param\u00e8tres: id ID de l'objet ( string ) directory Nom du r\u00e9pertoire ( string ) Retour: Object ( Object ) null Objet introuvable Twig {% set flex = grav.get('flex') %} {% set contact = flex.object('ki2ts4cbivggmtlj', 'contacts') %} {# Do something #} {% if contact %} {# Got Bruce Day #} {{ contact.first_name|e }} {{ contact.last_name|e }} has a website: {{ contact.website|e }} {% else %} Oops, contact has been removed! {% endif %} PHP use Grav\\Common\\Grav; use Grav\\Framework\\Flex\\Interfaces\\FlexInterface; use Grav\\Framework\\Flex\\Interfaces\\FlexObjectInterface; /** @var FlexInterface $flex */ $flex = Grav::instance()->get('flex'); /** @var FlexObjectInterface|null $object */ $object = $flex->getObject('ki2ts4cbivggmtlj', 'contacts'); if ($object) { // Object exists, do something with it... } V\u00e9rifiez ce que vous pouvez faire avec Flex Object . getCollection(). getCollection( r\u00e9pertoire ): Collection | null Obtient la collection, renvoie null si elle n'a pas \u00e9t\u00e9 trouv\u00e9e. Param\u00e8tres: directory Nom du r\u00e9pertoire ( string ) Retour: Collection ( object ) null R\u00e9pertoire introuvable Twig {% set flex = grav.get('flex') %} {% set contacts = flex.collection('contacts') %} {# Do something #} <h2>Ten random contacts:</h2> <ul> {% for contact in contacts.filterBy({published: true}).shuffle().limit(0, 10) %} <li>{{ contact.first_name|e }} {{ contact.last_name|e }}</li> {% endfor %} </ul> PHP use Grav\\Common\\Grav; use Grav\\Framework\\Flex\\Interfaces\\FlexCollectionInterface; use Grav\\Framework\\Flex\\Interfaces\\FlexInterface; /** @var FlexInterface $flex */ $flex = Grav::instance()->get('flex'); /** @var FlexCollectionInterface|null $collection */ $collection = $flex->getCollection('contacts'); if ($collection) { // Collection exists, do something with it... } V\u00e9rifiez ce que vous pouvez faire avec Collection Flexible .","title":"Flex"},{"location":"avance-flex-intro/","text":"Introduction Cette section contient une proc\u00e9dure pas \u00e0 pas pour activer rapidement le R\u00e9pertoire existant et comment l'afficher sur votre site. Dans nos exemples, nous utilisons le R\u00e9pertoire de Contacts qui existe d\u00e9j\u00e0 sur votre site. Activer un r\u00e9pertoire. Pour activer un R\u00e9pertoire Flex personnalis\u00e9, vous devez acc\u00e9der \u00e0 Plugins > Flex Objects . Nous sommes int\u00e9ress\u00e9s par l'option R\u00e9pertoires dans le plugin, qui r\u00e9pertorie tous les R\u00e9pertoires Flex d\u00e9tect\u00e9s. S\u00e9lectionnez simplement les r\u00e9pertoires qui vous int\u00e9ressent et assurez-vous que l'option `Enabled\u00e8 est coch\u00e9e. ASTUCE : Activez le r\u00e9pertoire appel\u00e9 Contacts . Appuyez sur Enregistrer et le r\u00e9pertoire devrait appara\u00eetre apr\u00e8s le chargement d'une page. Installer des exemples de donn\u00e9es (facultatif). Pour notre exemple, nous supposons que vous avez copi\u00e9 l'exemple d'ensemble de donn\u00e9es pour le R\u00e9pertoire des Contacts : $ | cp user/plugins/flex-objects/data/flex-objects/contacts.json user/data/flex-objects/contacts.json Cr\u00e9er une page. Acc\u00e9dez \u00e0 Pages et ajoutez une nouvelle page . Saisissez les valeurs suivantes : Titre de la page : Flex-Objects Mod\u00e8le de page : Flex-Objects Apr\u00e8s cela, vous pouvez cliquer sur le bouton Continuer . Dans l'\u00e9diteur de contenu , entrez le r\u00e9pertoire et ajoutez du contenu : R\u00e9pertoire Flex : Contacts Contenu : # Directory Example Lorsque vous \u00eates satisfait de la page, appuyez sur Enregistrer . ASTUCE : Si vous ne sp\u00e9cifiez pas Flex Directory , la page listera tous les r\u00e9pertoires au lieu d'afficher les entr\u00e9es d'un seul r\u00e9pertoire. Afficher la page. Vous pouvez simplement aller sur votre site et regarder le menu. Il doit contenir des Contacts . L'acc\u00e8s \u00e0 cette page devrait afficher : Au cas o\u00f9 vous n'auriez s\u00e9lectionn\u00e9 aucun r\u00e9pertoire, voici ce que vous verriez \u00e0 la place :","title":"Introduction"},{"location":"avance-flex-liste-contenus/","text":"Liste de contenu La Liste de Contenu contient g\u00e9n\u00e9ralement une liste pagin\u00e9e de votre contenu, mais certains r\u00e9pertoires, comme les Pages , peuvent avoir une apparence hautement personnalis\u00e9e. C'est ici que vous pouvez cr\u00e9er, modifier et supprimer votre contenu. La page dispose \u00e9galement d'outils puissants pour Rechercher et Commander les articles. Les contr\u00f4les. En haut de la page, vous trouverez les contr\u00f4les administratifs. Les commandes peuvent diff\u00e9rer selon le Type Flex , mais voici une liste des plus courantes : Retour : Remonter d'un niveau, g\u00e9n\u00e9ralement vers le Tableau de Bord ou la Liste des R\u00e9pertoires . Exporter : Exporter le contenu vers un fichier, g\u00e9n\u00e9ralement CSV. Ajouter : Ajouter un nouvel \u00e9l\u00e9ment de contenu. Configuration : modifier les param\u00e8tres du r\u00e9pertoire. La navigation. Filtre : Saisie de texte pour la recherche. Afficher le nombre : Nombre d'objets \u00e0 afficher. Ordre : Cliquez sur les titres des colonnes pour modifier l'ordre. Pagination : naviguer rapidement dans les objets. Une rang\u00e9e. Colonnes : Tapez des colonnes sp\u00e9cifiques pour un aper\u00e7u rapide des objets. Actions : Actions pour l'objet unique, g\u00e9n\u00e9ralement : Aper\u00e7u , Modifier , Supprimer ...","title":"Liste de contenus"},{"location":"avance-flex-objets-flex/","text":"Objet flexible Objet de rendu. render(). render( [layout], [context] ): Block Rend l'objet. Param\u00e8tres: layout Nom de la mise en page ( string ). context Variables suppl\u00e9mentaires pouvant \u00eatre utilis\u00e9es dans le fichier de mod\u00e8le Twig ( array ) Retour: Block ( object ) Classe HtmlBlock contenant la sortie. REMARQUE : dans twig, il existe une balise {% render %} , qui doit \u00eatre utilis\u00e9e au lieu d'appeler directement la m\u00e9thode. Cela permettra aux ressources JS/CSS de l'objet de fonctionner correctement. - Twig {% set contact = grav.get('flex').object('gizwsvkyo5xtms2s', 'contacts') %} {% render contact layout: 'details' with { my_variable: true } %} - PHP use Grav\\Common\\Grav; use Grav\\Framework\\ContentBlock\\HtmlBlock; use Grav\\Framework\\Flex\\Interfaces\\FlexObjectInterface; /** @var FlexObjectInterface|null $collection */ $object = Grav::instance()->get('flex')->getObject('gizwsvkyo5xtms2s', 'contacts'); if ($object) { /** @var HtmlBlock $block */ $block = $object->render('details', ['my_variable' => true]); } Other. getKey(). getKey() : string` R\u00e9cup\u00e8re la cl\u00e9 de l'objet. Retour: string Cl\u00e9 d'objet hasKey() hasKey() : bool Renvoie vrai si la cl\u00e9 de l'objet a \u00e9t\u00e9 d\u00e9finie. Retour: true si l'objet a une cl\u00e9, false sinon getFlexType(). getFlexType() : string R\u00e9cup\u00e8re le type de l'objet. Retour: string Nom du r\u00e9pertoire Flex auquel appartient l'objet. hasProperty() hasProperty( property ): bool Renvoie vrai si la propri\u00e9t\u00e9 de l'objet a \u00e9t\u00e9 d\u00e9finie et a une valeur (non nulle). Param\u00e8tres: property Nom de la propri\u00e9t\u00e9 ( string ). Retour: true si la propri\u00e9t\u00e9 a une valeur, false sinon. getProperty(). getProperty( property, default ): mixed Renvoie la valeur de la propri\u00e9t\u00e9 de l'objet. Param\u00e8tres: property Nom de la propri\u00e9t\u00e9 ( string ). Retour: `mixed Valeur du bien. null si la propri\u00e9t\u00e9 n'est pas d\u00e9finie ou n'a pas de valeur. setProperty(). setProperty( property, value ): Object D\u00e9finit une nouvelle valeur pour la propri\u00e9t\u00e9 de l'objet. Param\u00e8tres: property Nom de la propri\u00e9t\u00e9 ( string ). value Nouvelle valeur ( mixed ). Retour: Object ( object ) L'objet pour encha\u00eener les appels de m\u00e9thode. ATTENTION : Cette m\u00e9thode modifie l'instance d'objet partag\u00e9e entre toutes les collections. Si ce n'est pas pr\u00e9vu, veuillez cloner clone l'objet avant d'utiliser cette m\u00e9thode. defProperty(). defProperty( property, default ): Object D\u00e9finit la valeur par d\u00e9faut de la propri\u00e9t\u00e9 de l'objet. Param\u00e8tres: property Nom de la propri\u00e9t\u00e9 ( string ). default Valeur par d\u00e9faut ( mixed ). Retour: Object ( object ) L'objet pour encha\u00eener les appels de m\u00e9thode. ATTENTION : Cette m\u00e9thode modifie l'instance d'objet partag\u00e9e entre toutes les collections. Si ce n'est pas pr\u00e9vu, veuillez cloner clone l'objet avant d'utiliser cette m\u00e9thode. unsetProperty(). unsetProperty( property ): Object Supprime la valeur de la propri\u00e9t\u00e9 de l'objet. Param\u00e8tres: property Nom de la propri\u00e9t\u00e9 ( string ). Retour: Object ( object ) L'objet pour encha\u00eener les appels de m\u00e9thode. ATTENTION : Cette m\u00e9thode modifie l'instance d'objet partag\u00e9e entre toutes les collections. Si ce n'est pas pr\u00e9vu, veuillez cloner clone l'objet avant d'utiliser cette m\u00e9thode. isAuthorized(). isAuthorized( action, [port\u00e9e], [utilisateur] ): bool | null V\u00e9rifie si l'utilisateur est autoris\u00e9 pour l'action. Param\u00e8tres: action ( string ) L'un des suivants : create , read , update , delete , list . scope Facultatif ( string ) G\u00e9n\u00e9ralement admin ou site . user Objet utilisateur facultatif ( object ) Retour: true Autoriser l'action. false Refuser l'action. `null\u00e8 Non d\u00e9fini (agit comme un refus) NOTE : Il existe deux valeurs de refus : refus\u00e9 (faux), non d\u00e9fini (null). Cela permet d'encha\u00eener plusieurs r\u00e8gles lorsque les r\u00e8gles pr\u00e9c\u00e9dentes ne correspondent pas. getFlexDirectory(). getFlexDirectory() : Directory Retour: Directory ( object ) getTimestamp(). getTimestamp() : int R\u00e9cup\u00e8re le dernier horodatage modifi\u00e9 pour l'objet. Retour: int Horodatage. search(). search(string, [properties], [options] ): float Recherche une cha\u00eene \u00e0 partir de l'objet, renvoie un poids compris entre 0 et 1. Param\u00e8tres: string Cha\u00eene de recherche ( string ) property Propri\u00e9t\u00e9s \u00e0 rechercher, si null (ou non fournies), utilisez les valeurs par d\u00e9faut * options Options suppl\u00e9mentaires utilis\u00e9es lors de la recherche (tableau) commence_par : bool se termine par : bool contient : bool sensible \u00e0 la casse : bool Retour: float Poids de la recherche entre 0 et 1, utilis\u00e9 pour ordonner les r\u00e9sultats 0 L'objet ne correspond pas \u00e0 la recherche. NOTE : Si vous remplacez cette fonction, assurez-vous de renvoyer une valeur comprise entre 0 et 1 ! getFlexKey(). getFlexKey() : string R\u00e9cup\u00e8re une cl\u00e9 unique pour l'objet. Retour: string Cl\u00e9 flexible de l'objet Les cl\u00e9s flexibles peuvent \u00eatre utilis\u00e9es sans conna\u00eetre le r\u00e9pertoire auquel appartient l'objet. getStorageKey(). getStorageKey() : string R\u00e9cup\u00e8re une cl\u00e9 de stockage unique (dans le r\u00e9pertoire) utilis\u00e9e pour d\u00e9terminer le nom du fichier ou l'identifiant de la base de donn\u00e9es. Retour: string Cl\u00e9 de stockage de l'objet. exist(). exists() : bool Renvoie vrai si l'objet existe dans le stockage. Retour: true L'objet existe dans le stockage. false L'objet n'a pas \u00e9t\u00e9 enregistr\u00e9. update(). update( data, files ): Object Met \u00e0 jour l'objet dans la m\u00e9moire. Param\u00e8tres: data ( array ) Tableaux imbriqu\u00e9s de propri\u00e9t\u00e9s avec leurs valeurs. files ( array ) Tableau d'objets Psr\\Http\\Message\\UploadedFileInterface . Retour: Object ( object ) L'objet pour encha\u00eener les appels de m\u00e9thode. NOTE : Vous devez enregistrer l'objet apr\u00e8s avoir appel\u00e9 cette m\u00e9thode. create(). create( [key] ): Object Cr\u00e9e un nouvel objet dans le stockage. Param\u00e8tres: key ( string ) Cl\u00e9 facultative. Retour: Object ( object ) Objet enregistr\u00e9. createCopy(). createCopy( [key] ): Object Cr\u00e9e un nouvel objet \u00e0 partir de l'actuel et enregistre-le dans le stockage. key ( string ) Cl\u00e9 facultative. Retour: Object ( object ) Objet enregistr\u00e9. save(). save() : Object Enregistrer l'objet dans le stockage. Retour: Object ( object ) Objet enregistr\u00e9. delete(). delete() : Object Supprime l'objet du stockage. Retour: Object ( object ) Objet supprim\u00e9. getBlueprint(). getBlueprint( [name] ): Blueprint Renvoie le plan de l'objet. Param\u00e8tres: name ( string ) Nom facultatif du blueprint. Retour: Blueprint ( object ) getForm(). getForm( [name], [options] ): Form Renvoie une instance de formulaire pour l'objet. Param\u00e8tres: name ( string ) Nom facultatif du formulaire. options ( array ) Options facultatives du formulaire. Retour: Form ( object ) getDefaultValue(). getDefaultValue( name, [separator] ): mixed Renvoie la valeur par d\u00e9faut pouvant \u00eatre utilis\u00e9e dans un formulaire pour la propri\u00e9t\u00e9 donn\u00e9e. Param\u00e8tres: name ( string ) Nom de la propri\u00e9t\u00e9. separator ( string ) Caract\u00e8re s\u00e9parateur facultatif pour les propri\u00e9t\u00e9s imbriqu\u00e9es, par d\u00e9faut . (dot) Retour: mixed Valeur par d\u00e9faut de la propri\u00e9t\u00e9. getDefaultValues(). getDefaultValues() : array Renvoie les valeurs par d\u00e9faut pouvant \u00eatre utilis\u00e9es dans un formulaire pour la propri\u00e9t\u00e9 donn\u00e9e. Retour: array Toutes les valeurs par d\u00e9faut. getFormValue(). getFormValue( name, [default], [separator] ): mixed Renvoie une valeur brute pouvant \u00eatre utilis\u00e9e dans un formulaire pour la propri\u00e9t\u00e9 donn\u00e9e. Param\u00e8tres: name ( string ) Nom de la propri\u00e9t\u00e9. default ( mixed) Valeur optionnelle par d\u00e9faut du champ, null si non renseign\u00e9. separator ( string ) Caract\u00e8re s\u00e9parateur facultatif pour les propri\u00e9t\u00e9s imbriqu\u00e9es, par d\u00e9faut . (dot) Retour: |mixed` Valeur du champ du formulaire. triggerEvent(). triggerEvent( name, [Event] ): Object D\u00e9clenche un \u00e9v\u00e9nement de votre choix. Param\u00e8tres: name ( string ) Nom de l'\u00e9v\u00e9nement. Event ( object ) Classe d'\u00e9v\u00e9nement facultative. Retour: Object ( object ) L'objet pour encha\u00eener les appels de m\u00e9thode.","title":"Objets Flex"},{"location":"avance-flex-objets/","text":"Objets flexibles Flex Objects est un nouveau concept de Grav 1.7, qui ajoute la prise en charge des types de donn\u00e9es personnalis\u00e9s qui peuvent \u00eatre facilement int\u00e9gr\u00e9s \u00e0 votre site. La prise en charge des types personnalis\u00e9s et des fonctionnalit\u00e9s d'administration est fournie par le plugin Flex Objects , qui est requis par le panneau d'administration . Ce plugin g\u00e8re \u00e9galement la cr\u00e9ation d'objets dans le frontend au cas o\u00f9 vous auriez besoin que les utilisateurs puissent soumettre de nouveaux objets ou y apporter des modifications. Les fonctionnalit\u00e9s de base de Grav telles que les comptes d'utilisateurs , les groupes d'utilisateurs et les pages ont d\u00e9j\u00e0 \u00e9t\u00e9 converties en objets Flex, bien qu'elles ne soient utilis\u00e9es que dans le panneau d'administration . Les r\u00e9pertoires Flex de cette documentation n'ont rien \u00e0 voir avec l'ancien plugin Flex Directories . En fait, l'ancien plugin a \u00e9t\u00e9 remplac\u00e9 par cette fonctionnalit\u00e9 avec le plugin Flex Objects . Introduction. Flex est un ensemble de r\u00e9pertoires d'un seul type . Grav a ses propres types int\u00e9gr\u00e9s, tels que les comptes d'utilisateurs et les pages . Les plugins et les th\u00e8mes peuvent \u00e9galement d\u00e9finir leurs propres types et les enregistrer dans Grav. Avec Flex Objects Plugin , vous pouvez \u00e9galement cr\u00e9er vos propres types et r\u00e9pertoires personnalis\u00e9s. Flex. Flex est un conteneur pour les r\u00e9pertoires Flex . Cela donne un point d'acc\u00e8s unique pour toutes les donn\u00e9es du site, \u00e9tant donn\u00e9 que les donn\u00e9es se trouvent dans un r\u00e9pertoire Flex. Cela rend tous les objets disponibles pour chaque page et plug-in de votre site. ASTUCE : M\u00eame si les comptes d'utilisateur ou les pages Flex ne sont pas activ\u00e9s, vous pouvez toujours acc\u00e9der \u00e0 leurs versions Flex \u00e0 la fois dans l'interface et dans le panneau d'administration. Type flexible. Flex Type est le mod\u00e8le de votre r\u00e9pertoire Flex . Il d\u00e9finit tout ce qui est n\u00e9cessaire pour afficher et modifier le contenu : structure des donn\u00e9es, champs de formulaire, autorisations, fichiers de mod\u00e8le, m\u00eame couche de stockage. R\u00e9pertoire flexible. Flex Directory conserve une collection d'objets Flex d'un seul type Flex . Chaque r\u00e9pertoire contient une collection d'objets avec une prise en charge facultative des index pour acc\u00e9l\u00e9rer les requ\u00eates vers le stockage . Collection flexible. Flex Collection est une structure qui contient des objets Flex . La collection ne contient g\u00e9n\u00e9ralement que les objets n\u00e9cessaires pour afficher la page ou pour effectuer l'action donn\u00e9e. Il fournit des outils utiles pour filtrer ou manipuler davantage les donn\u00e9es ainsi que des m\u00e9thodes pour rendre l'ensemble de la collection. Objet flexible. Flex Object est une instance unique d'un type Flex . L'objet repr\u00e9sente une seule entit\u00e9. L'objet donne acc\u00e8s \u00e0 ses propri\u00e9t\u00e9s, y compris toutes les donn\u00e9es associ\u00e9es, telles que Media . L'objet sait \u00e9galement comment s'afficher ou quel formulaire utiliser pour modifier son contenu. Les actions telles que la cr\u00e9ation, la mise \u00e0 jour et la suppression d'objets sont prises en charge par l'objet lui-m\u00eame. Index flexible. Flex Index est utilis\u00e9 pour effectuer des requ\u00eates rapides vers Flex Directory . Il contient des m\u00e9tadonn\u00e9es pour les objets Flex , mais pas les objets eux-m\u00eames. Stockage flexible. Flex Storage est une couche de stockage pour les objets Flex . Il peut s'agir d'un seul fichier, d'un ensemble de fichiers dans un seul dossier ou d'un ensemble de dossiers. Flex prend \u00e9galement en charge les stockages personnalis\u00e9s, tels que les stockages de base de donn\u00e9es. Formulaire flexible. Flex Form s'int\u00e8gre au pluin de formulaire et permet de cr\u00e9er ou de modifier un objet Flex . Flex prend en charge plusieurs vues, ce qui permet de modifier diff\u00e9rentes parties de l'objet. Administration flexible. Flex Administration est impl\u00e9ment\u00e9 par Flex Objects Plugin . Il ajoute une nouvelle section au plugin d'administration permettant aux administrateurs de site de g\u00e9rer les objets flexibles . Chaque r\u00e9pertoire Flex est livr\u00e9 avec une liste de contr\u00f4le d'acc\u00e8s de type CRUD, qui peut \u00eatre utilis\u00e9e pour restreindre des parties d'Admin et des actions qu'elles contiennent \u00e0 certains utilisateurs. Limites actuelles. Il reste encore beaucoup de travail \u00e0 faire. Voici les limitations actuelles lors de l'utilisation d'objets Flex : La prise en charge multilingue n'a \u00e9t\u00e9 impl\u00e9ment\u00e9e que pour les pages , l'administrateur ne peut pas encore \u00eatre enti\u00e8rement traduit Le frontend n'a qu'un routage de base ; pour vos t\u00e2ches personnalis\u00e9es, telles que l'enregistrement, vous avez besoin de votre propre impl\u00e9mentation Les fonctionnalit\u00e9s de mise \u00e0 jour en masse n'ont pas encore \u00e9t\u00e9 impl\u00e9ment\u00e9es dans Admin (dans le code, elles sont faciles) En raison des limitations d'indexation, il n'est pas recommand\u00e9 d'utiliser Flex pour les objets qui sont constamment mis \u00e0 jour La personnalisation de votre Flex Type n\u00e9cessite une bonne connaissance du codage et la cr\u00e9ation de vos propres classes.","title":"Objets flexibles"},{"location":"avance-flex-repertoire/","text":"R\u00e9pertoire Flex getTitle(). getTitle() : cha\u00eene R\u00e9cup\u00e8re le titre du r\u00e9pertoire Retour: string Titre Twig {% set directory = grav.get('flex').directory('contacts') %} <h2>{{ directory.title|e }}</h2> PHP use Grav\\Common\\Grav; use Grav\\Framework\\Flex\\Interfaces\\FlexDirectoryInterface; /** @var FlexDirectoryInterface|null $directory */ $directory = Grav::instance()->get('flex')->getDirectory('contacts'); if ($directory) { /** @var string $title */ $title = $directory->getTitle(); } getDescription(). getDescription() : string R\u00e9cup\u00e8re la description du r\u00e9pertoire Retour: string Description Twig {% set directory = grav.get('flex').directory('contacts') %} <p>{{ directory.description|e }}</p> PHP use Grav\\Common\\Grav; use Grav\\Framework\\Flex\\Interfaces\\FlexDirectoryInterface; /** @var FlexDirectoryInterface|null $directory */ $directory = Grav::instance()->get('flex')->getDirectory('contacts'); if ($directory) { /** @var string $title */ $description = $directory->getDescription(); } getObjet(). getObject( id ): Object | null Obtient un objet, renvoie null s'il n'a pas \u00e9t\u00e9 trouv\u00e9. Param\u00e8tres: id ID de l'objet ( string ) Retour: Objet ( object ) null Objet introuvable Twig {% set directory = grav.get('flex').directory('contacts') %} {% set contact = directory.object('ki2ts4cbivggmtlj') %} {# Do something #} {% if contact %} {# Got Bruce Day #} Email for {{ contact.first_name|e }} {{ contact.last_name|e }} is {{ contact.email|e }} {% else %} Oops, contact has been removed! {% endif %} PHP use Grav\\Common\\Grav; use Grav\\Framework\\Flex\\Interfaces\\FlexDirectoryInterface; use Grav\\Framework\\Flex\\Interfaces\\FlexObjectInterface; /** @var FlexDirectoryInterface|null $directory */ $directory = Grav::instance()->get('flex')->getDirectory('contacts'); if ($directory) { /** @var FlexObjectInterface|null $object */ $object = $directory->getObject('ki2ts4cbivggmtlj'); if ($object) { // Object exists, do something with it... } } V\u00e9rifiez ce que vous pouvez faire avec Flex Object . getCollection(). getCollection() : Collection R\u00e9cup\u00e8re la collection, renvoie null si elle n'a pas \u00e9t\u00e9 trouv\u00e9e. Retour: Collection ( object ) Twig {% set directory = grav.get('flex').directory('contacts') %} {% set contacts = directory.collection() %} {# Do something #} <h2>Ten first contacts:</h2> <ul> {% for contact in contacts.filterBy({published: true}).limit(0, 10) %} <li>{{ contact.first_name|e }} {{ contact.last_name|e }}<li> {% endfor %} </ul> PHP use Grav\\Common\\Grav; use Grav\\Framework\\Flex\\Interfaces\\FlexDirectoryInterface; use Grav\\Framework\\Flex\\Interfaces\\FlexCollectionInterface; /** @var FlexDirectoryInterface|null $directory */ $directory = Grav::instance()->get('flex')->getDirectory('contacts'); if ($directory) { /** @var FlexCollectionInterface $collection */ $collection = $directory->getCollection(); // Do something with the collection... } V\u00e9rifiez ce que vous pouvez faire avec Flex Collection .","title":"R\u00e9pertoire Flex"},{"location":"avance-flex-type-blueprint/","text":"Blueprint La structure de base de Flex Blueprint contient le title , la description et le type , qui d\u00e9crivent le type et trois sections : config , blueprints et form , qui d\u00e9crivent diff\u00e9rents aspects du type de r\u00e9pertoire. Structure principale de contacts.yaml : title: Contacts description: Simple contact directory with tags. type: flex-objects # do not change # Flex Configuration config: {} # Flex Directory Forms blueprints: {} # Flex Object Form form: {} Pour cr\u00e9er votre propre r\u00e9pertoire personnalis\u00e9, vous devez commencer par nommer votre type (nom de fichier) et remplir le title et la description``. Apr\u00e8s avoir cr\u00e9\u00e9 le fichier et rempli les informations de base, l'\u00e9tape suivante consiste \u00e0 copier votre formulaire existant ou \u00e0 ajouter des champs dans le fichier. CONSEIL : Nous supposons que vous savez d\u00e9j\u00e0 comment cr\u00e9er vos propres formulaires et blueprints . ATTENTION : Il est pr\u00e9f\u00e9rable de ne pas utiliser le format liste simple pour d\u00e9crire les champs comme d\u00e9crit dans Cr\u00e9er un formulaire unique simple . Ne transmettez pas non plus la section `process` du formulaire \u00e0 ce fichier, elle ne sera pas utilis\u00e9e par Flex. Form. Dans notre exemple de contacts, la section de formulaire ressemble \u00e0 ceci : # Flex Object Form form: validation: loose fields: published: type: toggle label: Published highlight: 1 default: 1 options: 1: PLUGIN_ADMIN.YES 0: PLUGIN_ADMIN.NO validate: type: bool required: true last_name: type: text label: Last Name validate: required: true first_name: type: text label: First Name validate: required: true email: type: email label: Email Address validate: required: true website: type: url label: Website URL tags: type: selectize size: large label: Tags classes: fancy validate: type: commalist Le formulaire a le m\u00eame aspect, qu'il provienne d'une page ou d'un fichier de configuration, de plug-in ou de th\u00e8me. Il s'agit du plan directeur principal de chaque objet de votre r\u00e9pertoire et il doit contenir tous les champs d\u00e9finis dans l'objet. Consid\u00e9rez-le comme un formulaire qui s'affiche pour l'administrateur. ATTENTION : Soyez prudent lorsque vous modifiez un Blueprint pour un type Flex existant. Assurez-vous que les objets que vous avez d\u00e9j\u00e0 enregistr\u00e9s sont compatibles avec la nouvelle version du plan - ce qui signifie que vous devriez pouvoir \u00e0 la fois enregistrer et afficher les anciens objets. Nous n'avons pas encore tout \u00e0 fait termin\u00e9. Il reste encore deux choses \u00e0 faire pour que l'annuaire fonctionne : nous devons configurer la couche de stockage des donn\u00e9es et d\u00e9finir les champs \u00e0 afficher dans la vue Liste d'administration. Nous pouvons faire les deux dans la section config . Config. La section Config est la partie la plus compliqu\u00e9e de Flex Blueprint, bien qu'une grande partie ne soit destin\u00e9e qu'\u00e0 permettre la personnalisation. Il contient des sections data , admin et site . # Flex Configuration config: # Data Settings data: {} # Admin Settings admin: {} # Site Settings site: {} La configuration minimale ressemble \u00e0 ceci : # Flex Configuration config: # Data Settings data: storage: user-data://flex-objects/contacts.json # Admin Settings admin: # List view list: # List of fields to display fields: last_name: link: edit # Edit link first_name: link: edit # Edit link email: website: Il existe deux sections obligatoires dans la configuration : config.data.storage et config.admin.list.fields . Ce dernier d\u00e9finit les champs affich\u00e9s dans la vue de la liste d'administration. Le stockage des donn\u00e9es, quant \u00e0 lui, d\u00e9finit la mani\u00e8re dont les donn\u00e9es seront stock\u00e9es. Config > Data. Flex Directory est hautement personnalisable. Vous pouvez utiliser vos propres classes PHP object , collection et index pour ajouter votre propre comportement. De plus, vous pouvez configurer la couche storage pour r\u00e9pondre au mieux \u00e0 vos besoins. Directory a \u00e9galement sa fonctionnalit\u00e9 ordering et search par d\u00e9faut. config: data: # Flex Object Class object: CLASSNAME # Flex Collection Class collection: CLASSNAME # Flex Index Class index: CLASSNAME # Storage Options storage: {} # Ordering Options ordering: {} # Search Options search: {} L'objet, la collection et l'index prennent des noms de classe. S'ils ne sont pas fournis, Grav utilisera la configuration par d\u00e9faut suivante : config: data: object: 'Grav\\Common\\Flex\\Types\\Generic\\GenericObject' collection: 'Grav\\Common\\Flex\\Types\\Generic\\GenericCollection' index: 'Grav\\Common\\Flex\\Types\\Generic\\GenericIndex' Ces classes d\u00e9finiront ensemble le comportement de votre type. Si vous souhaitez personnaliser votre propre type, c'est possible en \u00e9tendant ces classes et en passant vos propres classes ici. L'une des parties les plus importantes consiste \u00e0 d\u00e9finir o\u00f9 et comment les donn\u00e9es sont stock\u00e9es : config: data: storage: class: 'Grav\\Framework\\Flex\\Storage\\SimpleStorage' options: formatter: class: 'Grav\\Framework\\File\\Formatter\\JsonFormatter' folder: user-data://flex-objects/contacts.json Ci-dessus, un cas particulier qui peut aussi s'\u00e9crire sous une forme courte : config: data: storage: user-data://flex-objects/contacts.json Grav 1.7 propose 3 strat\u00e9gies de stockage diff\u00e9rentes, bien que vous puissiez facilement cr\u00e9er la v\u00f4tre : Nom Classe Description Simple Storage Grav\\Framework\\Flex\\Storage \\SimpleStorage Tous les objets sont stock\u00e9s dans un seul fichier. Ne prend pas en charge les m\u00e9dias. File Storage Grav\\Framework\\Flex\\Storage \\FileStorage Les objets sont stock\u00e9s dans des fichiers s\u00e9par\u00e9s dans un dossier unique. Folder Storage Grav\\Framework\\Flex\\Storage \\FolderStorage Chaque objet est stock\u00e9 dans un dossier s\u00e9par\u00e9. De plus, vous pouvez fournir un format de fichier avec options.formatter.class : Nom Classe Description JSON Grav\\Framework\\File\\Formatter \\JsonFormatter Utilisez le format de fichier JSON. YAML Grav\\Framework\\File\\Formatter \\YamlFormatter Utilisez le format de fichier YAML. Markdown Grav\\Framework\\File\\Formatter \\MarkdownFormatter Utilisez le format de fichier Markdown de Grav avec le frontmatter YAML. Serialize Grav\\Framework\\File\\Formatter \\SerializeFormatter Utiliser le s\u00e9rialiseur PHP. Rapide mais pas lisible par l'homme. INI Grav\\Framework\\File\\Formatter \\IniFormatter Utilise le format de fichier INI. Non recommand\u00e9. CSV Grav\\Framework\\File\\Formatter \\CsvFormatter Utiliser le format de fichier CSV. Non recommand\u00e9. Les options de configuration (avec les valeurs par d\u00e9faut) pour les formateurs par d\u00e9faut se trouvent ci-dessous dans les onglets : - JSON # JSON formatter: class: 'Grav\\Framework\\File\\Formatter\\JsonFormatter' options: file_extension: '.json' encode_options: '' # See https://www.php.net/manual/en/function.json-encode.php (separate options with space) decode_assoc: true # Decode objects as arrays decode_depth: 512 # Decode up to 512 levels decode_options: '' # See https://www.php.net/manual/en/function.json-decode.php (separate options with space) - YAML # YAML formatter: class: 'Grav\\Framework\\File\\Formatter\\YamlFormatter' options: file_extension: '.yaml' inline: 5 # Save with up to 4 expanded levels indent: 2 # Indent with 2 spaces native: true # Use native YAML decoder if available compat: true # If YAML cannot be decoded, use compatibility mode (SLOW) - Markdown # Markdown formatter: class: 'Grav\\Framework\\File\\Formatter\\MarkdownFormatter' options: file_extension: '.md' header: 'header' # Header variable eg. header.title body: 'markdown' # Body variable raw: 'frontmatter' # RAW YAML variable yaml: inline: 20 # YAML options, see YAML formatter from above - Serailize # PHP Serialize formatter: class: 'Grav\\Framework\\File\\Formatter\\SerializeFormatter' options: file_extension: '.ser' decode_options: allowed_classes: ['stdClass'] # List of allowed / safe classes during unserialize - INI # INI formatter: class: 'Grav\\Framework\\File\\Formatter\\IniFormatter' options: file_extension: '.ini' - CSV # CSV formatter: class: 'Grav\\Framework\\File\\Formatter\\CsvFormatter' options: file_extension: ['.csv', '.tsv'] delimiter: ',' # Delimiter to separate the values mime: 'text/x-csv' # MIME type for downloading file Vous pouvez \u00e9galement d\u00e9finir l'ordre par d\u00e9faut, qui est d\u00e9fini par la paire key: ASC|DESC : config: data: # Ordering Options ordering: key: ASC timestamp: ASC Enfin, vous pouvez ajouter des champs de recherche, qui sont consult\u00e9s lorsque vous appelez collection.search() : config: data: search: # Fields to be searched fields: - last_name - first_name - email # Search Options options: - contains: 1 # If field contains the search string, assign weight 1 to the object Les Champs contiennent une liste de champs \u00e0 rechercher. Les options de recherche peuvent \u00eatre : Nom Valeur Description case_sensible true ou false Si true, toutes les v\u00e9rifications sont sensibles \u00e0 la casse, la valeur par d\u00e9faut est false. same_as 0 ... 1 La valeur du champ doit \u00eatre identique \u00e0 la cha\u00eene de recherche. starts_with 0 ... 1 La valeur du champ doit commencer par la cha\u00eene de recherche. ends_with 0 ... 1 La valeur du champ doit se terminer par la cha\u00eene de recherche. contains 0 ... 1 La valeur du champ doit contenir la cha\u00eene de recherche. La fonction de recherche renvoie 0 si le champ ne correspond pas et pond\u00e8re entre 0 et 1 s'il y a une correspondance. Le poids est utilis\u00e9 pour classer les r\u00e9sultats de la recherche. L'objet qui obtient le noyau le plus \u00e9lev\u00e9 a une meilleure correspondance que celui avec un score inf\u00e9rieur. Actuellement, la recherche ne prend pas en charge les pond\u00e9rations ou strat\u00e9gies diff\u00e9rentes par champ. Config > Admin. La section Admin contient diverses options de configuration pour personnaliser l'administration de l'annuaire. Il contient quelques sections principales : router , actions , permissions , menu , template et views . config: # Admin Settings admin: # Admin router router: {} # Allowed admin actions actions: {} # Permissions permissions: {} # Admin menu menu: {} # Admin template type template: pages # Admin views views: {} La section facultative router peut \u00eatre utilis\u00e9e pour personnaliser les routes d'administration de Flex Directory . Le routage prend en charge un chemin de base, des itin\u00e9raires personnalisables pour chaque action ainsi que des redirections pour g\u00e9rer, par exemple, la r\u00e9trocompatibilit\u00e9. Tous les chemins sont relatifs \u00e0 l'URL de base de l'administrateur. config: admin: # Admin router router: path: '/contacts' # Custom path to the directory actions: configure: # Action name path: '/contacts/configure' # New path to the action. redirects: # List of redirects (from: to) '/flex-objects/contacts': '/contacts' Parfois, vous souhaitez restreindre l'administration pour n'afficher que les entr\u00e9es ou, par exemple, pour autoriser uniquement la modification de celles existantes. Pour ces actions , vous pouvez modifier les op\u00e9rations CRUD autoris\u00e9es pour mieux r\u00e9pondre \u00e0 vos besoins. config: admin: # Allowed admin actions (for all users, including super user) actions: list: true # Needs to be true (may change in the future) create: true # Set to false to disable creating new objects read: true # Set to false to disable link to edit / details of the objects update: false # Set to false to disable saving existing objects delete: false # Set to false to disable deleting objects L'exemple ci-dessus emp\u00eachera la sauvegarde des objets existants et leur suppression pour chaque utilisateur, y compris le super administrateur. La section Autorisations vous permet d'ajouter de nouvelles r\u00e8gles d'autorisation pour Grav. Ces r\u00e8gles appara\u00eetront dans l'administration des utilisateurs/groupes. Vous pouvez cr\u00e9er autant de r\u00e8gles d'autorisation que vous le souhaitez, mais vous devez ajouter votre propre logique ou authorize les r\u00e8gles dans ce fichier pour les utiliser. config: admin: # Permissions permissions: # Primary permissions (used for the objects) admin.contacts: type: crudl # Create, Read, Update, Delete, List label: Contacts Directory # Secondary permissions (you need to assign these to a view, otherwise these will not be used) admin.configuration.contacts: type: default # Simple permission label: Contacts Configuration Si vous ne souhaitez pas afficher votre r\u00e9pertoire dans l'administration des Flex Objects , une option consiste \u00e0 afficher l'\u00e9l\u00e9ment de menu dans la navigation principale. config: admin: # Admin Menu menu: list: hidden: false # If true, hide the menu item. route: '/contacts' # Alias to `config.admin.router.path` if router path is not set. title: Contacts icon: fa-address-card-o authorize: ['admin.contacts.list', 'admin.super'] # Authorization needed to access the menu item. priority: 2 # Priority -10 .. 10 (highest goes up) L'exemple ci-dessus cr\u00e9e un \u00e9l\u00e9ment de menu Contacts pointant vers /admin/contacts . Lorsque vous cr\u00e9ez vos propres r\u00e9pertoires Flex, vous souhaiterez peut-\u00eatre parfois partager les m\u00eames mod\u00e8les entre tous vos r\u00e9pertoires personnalis\u00e9s. Vous pouvez le faire avec le template : config: admin: # Admin template type (folder) template: contacts Flex Admin dispose de plusieurs vues sur les objets. Par d\u00e9faut, les vues suivantes sont prises en charge : list , edit , configure et \u00e9ventuellement preview & export . Il est \u00e9galement possible d'ajouter vos propres vues. config: admin: views: # List view list: {} # Edit view edit: {} # Configure view configure: {} # Preview preview: {} # Data Export export: {} List View. La premi\u00e8re vue dont vous aurez besoin est celle qui r\u00e9pertorie tous vos objets. Par d\u00e9faut, la vue list utilise VueTable et AJAX pour paginer les objets. Il a besoin d'une liste de fields \u00e0 afficher ainsi que d' options pour d\u00e9finir le nombre d'articles \u00e0 afficher en m\u00eame temps ainsi que le champ par d\u00e9faut utilis\u00e9 pour la commande. config: admin: views: # List view list: icon: fa-address-card-o title: Site Contacts fields: {} # See below options: per_page: 20 # Default number of items per page order: by: last_name # Default field used for ordering dir: asc # Default ordering direction Icon et title sont utilis\u00e9s pour personnaliser l'ic\u00f4ne et le titre de la page de liste. Title prend \u00e9galement en charge l'utilisation du mod\u00e8le Twig en utilisant le format suivant : title: template: \"{{ 'PLUGIN_CONTACTS.CONTACTS_TITLE'|tu }}\" Fields contient les champs que vous souhaitez afficher dans la liste du r\u00e9pertoire. Chaque champ poss\u00e8de une cl\u00e9, qui est le nom du champ. La valeur peut \u00eatre omise ou contenir les options de configuration suivantes : Nom Valeur Exemple Description width integer 8 Largeur du champ en pixels. alias string 'header.published' Nom du champ du formulaire \u00e0 utiliser. VueTable n'aime pas les points dans les noms, alors d\u00e9finissez un alias pour les variables imbriqu\u00e9es. field array Remplacement du champ du formulaire. \u00c9crit comme n\u2019importe quel champ de formulaire, mais sans cl\u00e9. link string 'edit' Ajoute un lien d'\u00e9dition au texte. search boolean true Ajoute un lien d'\u00e9dition au texte. sort array field: 'first_name' Vous pouvez sp\u00e9cifier une valeur diff\u00e9rente si vous utilisez un nom de champ diff\u00e9rent lors de l'interrogation de donn\u00e9es c\u00f4t\u00e9 serveur, par exemple : pr\u00e9nom. title_class string 'center' Classes CSS utilis\u00e9es dans les titres. data_class string 'left' Classes CSS utilis\u00e9es dans les colonnes de donn\u00e9es. Edit View. La vue Modifier poss\u00e8de les m\u00eames options de configuration de base que la vue Liste : config: admin: views: # Edit view edit: icon: fa-address-card-o title: template: '{{ object.last_name ?? ''Last'' }}, {{ object.first_name ?? ''First Name'' }}' Configure view. La vue Configurer vous permet d'ajouter des options de configuration \u00e0 l'\u00e9chelle du r\u00e9pertoire, qui peuvent ensuite \u00eatre utilis\u00e9es dans les fichiers mod\u00e8les. config: admin: views: # Configure view configure: hidden: false # Configuration button can be hidden, for example if you have custom tab to replace it, like in Accounts. authorize: 'admin.configuration.contacts' # Optional custom authorize rule for this view. file: 'config://flex/contacts.yaml' # Optional file where the configuration is saved. icon: fa-cog title: template: \"{{ directory.title }} {{ 'PLUGIN_ADMIN.CONFIGURATION'|tu }}\" Preview view. Flex prend \u00e9galement en charge l'aper\u00e7u, bien qu'il fonctionne actuellement en restituant une page \u00e0 partir du frontend, qui peut \u00eatre d\u00e9finie dans le fichier de plan. # Preview View preview: enabled: true route: template: '/contacts' # Twig template to create URL. In this case we use the list view icon: fa-address-card-o title: template: \"{{ object.form.getValue('title') ?? object.title ?? key }}\" Export view. Tous les objets peuvent \u00eatre export\u00e9s dans un seul fichier, voici un exemple de configuration pour exporter des donn\u00e9es dans un fichier YAML : # Data Export export: enabled: true method: 'jsonSerialize' formatter: class: 'Grav\\Framework\\File\\Formatter\\YamlFormatter' filename: 'contacts' Config > Site. config: # Site Settings site: templates: collection: # Lookup for the template layout files for collections of objects paths: - 'flex/{TYPE}/collection/{LAYOUT}{EXT}' object: # Lookup for the template layout files for objects paths: - 'flex/{TYPE}/object/{LAYOUT}{EXT}' defaults: # Default template variable {TYPE}; overridden by filename of this blueprint if template folder exists type: contacts # Default template variable {LAYOUT}; can be overridden in render calls (usually Twig in templates) layout: default Les param\u00e8tres du mod\u00e8le vous permettent de personnaliser les chemins de recherche du mod\u00e8le et de d\u00e9finir le type et le nom de mise en page par d\u00e9faut dans l'interface. Blueprints. La section Blueprints d\u00e9finit les options de configuration communes pour l\u2019ensemble du R\u00e9pertoire. Les options vous permettent de personnaliser un r\u00e9pertoire commun pour mieux r\u00e9pondre aux besoins du site sans n\u00e9cessiter une \u00e9dition manuelle des fichiers. blueprints: # Blueprint for configure view. configure: # We are inside TABS field. fields: # Add our own tab compatibility: type: tab title: Compatibility fields: # Fields should be prefixed with object, collection etc.. object.compat.events: type: toggle toggleable: true label: Admin event compatibility help: Enables onAdminSave and onAdminAfterSave events for plugins highlight: 1 default: 1 options: 1: PLUGIN_ADMIN.ENABLED 0: PLUGIN_ADMIN.DISABLED validate: type: bool ASTUCE : Ces options de configuration peuvent \u00eatre modifi\u00e9es dans la section Configuration de Flex Directory Administration . NOTE: Currently the only used configuration options are inside the cache section. For your custom settings, you need to add logic to use them by yourself.","title":"Blueprintt"},{"location":"avance-flex-type-repertoires/","text":"Types de r\u00e9pertoires personnalis\u00e9s Pour de nombreux sites, la principale raison d'utiliser les R\u00e9pertoires Flexibles est de pouvoir d\u00e9finir vos propres types de donn\u00e9es personnalis\u00e9s, qui ne sont ni simples ni suffisamment petits pour tenir dans la configuration ou adapt\u00e9s pour \u00eatre repr\u00e9sent\u00e9s sous forme de pages individuelles. Les r\u00e9pertoires flexibles r\u00e9solvent ce probl\u00e8me pour vous. \u00c9tant donn\u00e9 que les Types Flex utilisent les principes de conception communs \u00e0 la fois \u00e0 la configuration et aux pages, il est tr\u00e8s facile de convertir votre configuration et vos pages existantes pour utiliser Flex. Vous pouvez \u00e9galement avoir des formulaires existants sur le site, que vous souhaitez g\u00e9rer \u00e0 partir du panneau d'administration, ou peut-\u00eatre souhaitez-vous afficher des commentaires s\u00e9lectionn\u00e9s sur votre site. Ces formulaires peuvent \u00e9galement \u00eatre convertis pour utiliser Flex. La base d'un Flex Type est son Blueprint . Le plan d\u00e9finissait \u00e0 la fois la forme et les champs de l'objet. Il a \u00e9galement une configuration suppl\u00e9mentaire, qui peut \u00eatre utilis\u00e9e pour personnaliser le r\u00e9pertoire et ses objets, o\u00f9 il appara\u00eet dans le panneau d'administration et l'ACL.","title":"R\u00e9sum\u00e9"},{"location":"avance-flex-utilisation/","text":"Utilisation d'objets flexibles Flex Objects est con\u00e7u pour \u00eatre facile \u00e0 utiliser. L'affichage de la collection et des groupes dans vos pages peut principalement \u00eatre effectu\u00e9 \u00e0 partir de mod\u00e8les Twig. ASTUCE : Pour activer et afficher Flex Directory, veuillez lire Activation d'un R\u00e9pertoire . Utilisation du type de page flex-objects . Affichez plusieurs r\u00e9pertoires dans votre page directories/flex-objects.md : title: Directories flex: layout: default list: - contacts - services --- # Directories Vous pouvez \u00e9galement transmettre des param\u00e8tres distincts pour chaque r\u00e9pertoire : title: Directories flex: layout: default directories: contacts: collection: title: '{{ directory.title }}' layout: default object: layout: list-default object: title: 'Contact: {{ object.first_name }} {{ object.last_name }}' layout: default services: --- Affichez un seul r\u00e9pertoire dans votre page contacts/flex-objects.md : title: Contacts flex: directory: contacts collection: title: '{{ directory.title }}' layout: default object: layout: list-default object: title: 'Contact: {{ object.first_name }} {{ object.last_name }}' layout: default --- Affichez un seul objet dans votre page my-contact/flex-objects.md : title: Contact flex: directory: contacts id: ki2ts4cbivggmtlj object: title: 'Contact: {{ object.first_name }} {{ object.last_name }}' layout: default --- # Contacts Par d\u00e9faut, le type de page flex-objects prend deux param\u00e8tres d'URL, directory et id . Ils sont utilis\u00e9s pour naviguer dans les r\u00e9pertoires. Voici des exemples d'URL : https://www.domain.com/directories/directory:contacts/id:ki2ts4cbivggmtlj https://www.domain.com/contacts/id:ki2ts4cbivggmtlj ASTUCE : vous pouvez transmettre vos propres param\u00e8tres \u00e0 l'int\u00e9rieur de flex et les utiliser dans vos fichiers de mod\u00e8le de collection et d'objet. Rendu des collections et des objets. Les collections et les objets prennent en charge le rendu de leur sortie en HTML. La sortie peut \u00eatre personnalis\u00e9e avec deux param\u00e8tres : mise en page et contexte. La mise en page vous permet de d\u00e9finir des apparences personnalis\u00e9es, par exemple, vous pouvez avoir une liste de cartes, puis une sortie plus d\u00e9taill\u00e9e pour les d\u00e9tails. Le contexte vous permet de passer des variables \u00e0 utiliser dans les fichiers de mod\u00e8le. {% render collection layout: 'custom' with { context_variable: true } %} {% render object layout: 'custom' with { context_variable: true } %} Voir la documentation plus d\u00e9taill\u00e9e : Render Collection et Render Object . Notions de base sur les mod\u00e8les. Les mod\u00e8les Flex se trouvent dans le dossier templates/flex : templates/ flex/ contacts/ collection/ default.html.twig object/ default.html.twig Chaque type a deux dossiers, un pour le rendu de la collection et un pour le rendu de l'objet. Les fichiers \u00e0 l'int\u00e9rieur sont des mises en page, nomm\u00e9es d'apr\u00e8s le nom du fichier. Dans notre exemple, nous avons une mise en page par default pour la collection et l'objet. Mod\u00e8le de collecte. Le mod\u00e8le de collection flex/contacts/collection/default.html.twig est responsable du rendu de tous les objets de la collection. La sortie rendue est mise en cache par d\u00e9faut. La cl\u00e9 de cache est d\u00e9finie par la collection et le contexte transmis \u00e0 la m\u00e9thode r ender() . AVERTISSEMENT : si le contexte contient des valeurs non scalaires, la mise en cache sera d\u00e9sactiv\u00e9e. Essayez de garder le contexte aussi simple que possible ! Voici un exemple de Type de contacts : <div id=\"flex-objects\"> <div class=\"text-center\"> <input class=\"form-input search\" type=\"text\" placeholder=\"Search by name, email, etc\" /> <button class=\"button button-primary sort asc\" data-sort=\"name\"> Sort by Name </button> </div> <ul class=\"list\"> {% for object in collection.filterBy({ published: true }) %} <li> {% render object layout: layout with { options: options } %} </li> {% endfor %} </ul> </div> <script> var options = { valueNames: [ 'name', 'email', 'website', 'entry-extra' ] }; var flexList = new List('flex-objects', options); </script> ASTUCE : Si le HTML rendu a un contenu dynamique, le cache de rendu peut \u00eatre d\u00e9sactiv\u00e9 \u00e0 partir du mod\u00e8le Twig par {% do block.disableCache() %} . Mod\u00e8le d'objet. Le mod\u00e8le d'objet flex/contacts/object/default.html.twig est responsable du rendu d'un seul objet. La sortie rendue est mise en cache par d\u00e9faut. La cl\u00e9 de cache est d\u00e9finie par l'objet et le contexte transmis \u00e0 la m\u00e9thode render() . AVERTISSEMENT : si le contexte contient des valeurs non scalaires, la mise en cache sera d\u00e9sactiv\u00e9e. Essayez de garder le contexte aussi simple que possible ! Voici un exemple de Type de contacts : <div class=\"entry-details\"> {% if object.website %} <a href=\"{{ object.website|e }}\"><span class=\"name\">{{ object.last_name|e }}, {{ object.first_name|e }}</span></a> {% else %} <span class=\"name\">{{ object.last_name|e }}, {{ object.first_name|e }}</span> {% endif %} {% if object.email %} <p><a href=\"mailto:{{ object.email|e }}\" class=\"email\">{{ object.email|e }}</a></p> {% endif %} </div> <div class=\"entry-extra\"> {% for tag in object.tags %} <span>{{ tag|e }}</span> {% endfor %} </div> ASTUCE : Si le HTML rendu a un contenu dynamique, le cache de rendu peut \u00eatre d\u00e9sactiv\u00e9 \u00e0 partir du mod\u00e8le Twig par {% do block.disableCache() %} . Dispositions personnalis\u00e9es. En utilisant des mises en page personnalis\u00e9es, vous pouvez cr\u00e9er une quantit\u00e9 infinie de vues diff\u00e9rentes dans vos collections et vos objets. Vous pouvez cr\u00e9er vos mises en page personnalis\u00e9es en ajoutant simplement un nouveau fichier \u00e0 c\u00f4t\u00e9 du fichier default.html.twig . Le nom de base du fichier est le m\u00eame que le nom de votre mise en page. ASTUCE : dans les mises en page de collection, il est recommand\u00e9 d'appeler {% render object layout: 'xxx' %} au lieu de sortir les variables d'objet directement dans le mod\u00e8le de collection.","title":"Utilisation"},{"location":"avance-grav-developpement/","text":"D\u00e9veloppement Grav Si vous souhaitez d\u00e9velopper avec Grav, vous b\u00e9n\u00e9ficierez d'une configuration plus sophistiqu\u00e9e que celle requise pour un utilisateur r\u00e9gulier de Grav. Cela inclut \u00e0 peu pr\u00e8s n'importe quel type de d\u00e9veloppement, tel que : Grav Core, Grav Plugins, Grav Skeletons ou m\u00eame Grav Themes . Tout d'abord, d\u00e9composons les diff\u00e9rents types de d\u00e9veloppement : Noyau Grav. Lorsque nous parlons du Grav Core , nous parlons effectivement de choses dans le dossier system . Ce dossier contr\u00f4le tout ce qui concerne Grav et est vraiment l'essence m\u00eame du flux de travail et du cycle de vie de Grav . Grav se concentre intentionnellement sur le travail efficace avec les pages. La manipulation des pages et les fonctionnalit\u00e9s \u00e9tendues sont souvent mieux servies en cr\u00e9ant un plugin. Nous encourageons fortement notre communaut\u00e9 \u00e0 apporter des corrections de bogues, et m\u00eame \u00e0 proposer le d\u00e9veloppement de fonctionnalit\u00e9s appropri\u00e9es au c\u0153ur de Grav. Tests en cours. Tout d'abord, installez les d\u00e9pendances de d\u00e9veloppement en ex\u00e9cutant composer install \u00e0 partir de la racine Grav. $ | composer install Ensuite, vous pouvez lancer les tests : $ | composer test Cela ex\u00e9cutera la suite compl\u00e8te de tests existants qui doivent toujours \u00eatre ex\u00e9cut\u00e9s avec succ\u00e8s sur n'importe quel site. Vous pouvez \u00e9galement ex\u00e9cuter un seul fichier de test unitaire, par ex. $ | composer test tests/unit/Grav/Common/Markdown/ParsedownTest::testAttributeLinks Une m\u00e9thode alternative \u00e0 l'appel de ces tests est : $ | ./vendor/bin/codecept run $ | ./vendor/bin/codecept run tests/unit/Grav/Common/Markdown/ParsedownTest::testAttributeLinks Plugins Grav. La plupart des efforts de d\u00e9veloppement prendront probablement la forme d'un plugin Grav . Parce que Grav a beaucoup de crochets d'\u00e9v\u00e9nement , il est tr\u00e8s facile de fournir des fonctionnalit\u00e9s am\u00e9lior\u00e9es et sp\u00e9cifiques via la cr\u00e9ation d'un plugin. Nous avons d\u00e9j\u00e0 d\u00e9velopp\u00e9 de nombreux plugins qui fonctionnent de diff\u00e9rentes mani\u00e8res en utilisant de nombreux \u00e9v\u00e9nements diff\u00e9rents pour montrer la puissance de cette fonctionnalit\u00e9. Il y a de nombreux avantages \u00e0 fournir des fonctionnalit\u00e9s dans les plugins, mais quelques-uns des principaux avantages sont : Le noyau Grav reste l\u00e9ger - Il vous suffit d'ajouter les plugins dont vous avez besoin pour un site particulier. Par exemple, un blog peut n\u00e9cessiter beaucoup plus de plugins qu'une simple page de destination. D\u00e9veloppement tiers de nouvelles fonctionnalit\u00e9s - Vous n'avez pas \u00e0 attendre que Grav obtienne les fonctionnalit\u00e9s que vous souhaitez. Vous pouvez simplement cr\u00e9er un plugin pour \u00e9tendre Grav pour faire ce que vous voulez qu'il fasse. Exigences relatives aux plugins. Un plugin Grav appropri\u00e9 n\u00e9cessite certains fichiers pour fonctionner correctement, \u00eatre r\u00e9pertori\u00e9 dans le r\u00e9f\u00e9rentiel Grav et \u00eatre visible dans le plugin d'administration Grav. Veuillez vous assurer que votre plugin contient tous ces fichiers : yourplugin.php - fichier PHP du plugin qui doit porter le m\u00eame nom que le dossier. yourplugin.yaml - fichier de configuration du plugin qui contient toutes les options et les informations d'h\u00e9ritage de flux. blueprints.yaml - fichier de d\u00e9finition de plugin et fichier de d\u00e9finition de formulaire. CHANGELOG.md - un fichier journal des modifications qui doit \u00eatre au format Grav appropri\u00e9 pour un rendu coh\u00e9rent. README.md - fichier requis pour expliquer et pr\u00e9visualiser le plugin. LICENSE - fichier de licence, probablement MIT s'il est conforme au noyau Grav. languages.yaml (optionnel) - un fichier de d\u00e9finition de langue. Squelettes Grav. Un Grav Skeleton est en fait un site d'\u00e9chantillonnage tout-en-un . Ils incluent le Grav Core , les plugins requis, ainsi que les pages appropri\u00e9es pour le contenu et un th\u00e8me pour tout rassembler. Grav a \u00e9t\u00e9 con\u00e7u pour rendre le processus de cr\u00e9ation d'un site aussi simple que possible. Pour cette raison, tout ce dont vous avez besoin pour un site peut \u00eatre contenu dans le dossier user . Chacun des squelettes dont nous disposons actuellement est simplement un dossier user sur GitHub que nous regroupons avec diverses d\u00e9pendances (plugins requis et th\u00e8me) dans un package qui peut \u00eatre simplement d\u00e9compress\u00e9 pour fournir un exemple de travail. Ces squelettes sont une base sur laquelle vous pouvez d\u00e9velopper votre site, rapidement et efficacement. Vous n'\u00eates pas enferm\u00e9 dans un ensemble sp\u00e9cifique de fonctionnalit\u00e9s. Il est tout aussi flexible que n'importe quelle autre installation de Grav. Exigences du squelette. Un squelette Grav appropri\u00e9 n\u00e9cessite certains fichiers pour fonctionner correctement, \u00eatre r\u00e9pertori\u00e9 dans le r\u00e9f\u00e9rentiel Grav et \u00eatre visible dans le plugin d'administration Grav. Veuillez vous assurer que votre squelette contient tous ces fichiers : .dependencies - Un fichier pour d\u00e9finir les d\u00e9pendances du th\u00e8me et du plugin pour ce squelette. blueprints.yaml - fichier de d\u00e9finition de squelette et fichier de d\u00e9finition de formulaire. CHANGELOG.md - un fichier journal des modifications qui doit \u00eatre au format Grav appropri\u00e9 pour un rendu coh\u00e9rent. README.md - fichier requis pour expliquer et pr\u00e9visualiser le plugin. LICENSE - fichier de licence, probablement MIT s'il est conforme au noyau Grav. screenshot.jpg - un aper\u00e7u au format 1:1 du th\u00e8me. Doit \u00eatre d'au moins 800px x 800px. Th\u00e8mes Grav. En raison du couplage \u00e9troit avec les pages et les th\u00e8mes Grav , un th\u00e8me Grav fait partie int\u00e9grante et tr\u00e8s importante d'un site Grav. Nous entendons par l\u00e0 que chaque page Grav fait r\u00e9f\u00e9rence \u00e0 un mod\u00e8le dans le th\u00e8me, de sorte que votre th\u00e8me doit fournir les mod\u00e8les Twig appropri\u00e9s que vos pages utilisent. Le moteur de cr\u00e9ation de mod\u00e8les Twig est un syst\u00e8me tr\u00e8s puissant, et parce qu'il n'y a vraiment aucune restriction de la part de Grav lui-m\u00eame, vous \u00eates libre de cr\u00e9er n'importe quel type de design que vous souhaitez. C'est l'une des grandes choses qui distingue Grav d'un CMS traditionnel qui a un couplage l\u00e2che entre le contenu et la conception. Exigences pour le th\u00e9me. Un th\u00e8me Grav appropri\u00e9 n\u00e9cessite certains fichiers pour fonctionner correctement, \u00eatre r\u00e9pertori\u00e9 dans le r\u00e9f\u00e9rentiel Grav et \u00eatre visible dans le plugin d'administration Grav. Veuillez vous assurer que votre th\u00e8me contient tous ces fichiers : yourtheme.php - fichier PHP du th\u00e8me qui doit porter le m\u00eame nom que le dossier. yourtheme.yaml - fichier de configuration du th\u00e8me qui contient toutes les options et les informations d'h\u00e9ritage de flux. blueprints.yaml - fichier de d\u00e9finition de th\u00e8me et fichier de d\u00e9finition de formulaire. CHANGELOG.md - un fichier journal des modifications qui doit \u00eatre au format Grav appropri\u00e9 pour un rendu coh\u00e9rent. README.md - fichier requis pour expliquer et pr\u00e9visualiser le th\u00e8me. LICENSE - fichier de licence, probablement MIT s'il est conforme au noyau Grav. screenshot.jpg - un aper\u00e7u au format 1:1 du th\u00e8me. Doit \u00eatre d'au moins 800px x 800px. thumbnail.jpg - une image miniature plus petite utilis\u00e9e par le plug-in d'administration. Rapport d'aspect 1: 1 et devrait \u00eatre \u00e0 300px x 300px. languages.yaml (optionnel) - un fichier de d\u00e9finition de langue. Contenu de d\u00e9monstration. Vous pouvez fournir du contenu de d\u00e9monstration dans le cadre d'un plugin ou d'un package th\u00e9matique. Cela signifie que tout ce qui se trouve dans un dossier appel\u00e9 _demo/ sera copi\u00e9 dans le dossier user/ dans le cadre de la proc\u00e9dure d'installation. Cela signifie que vous pouvez fournir des pages , une configuration ou tout autre \u00e9l\u00e9ment se trouvant dans le dossier user/ . L'utilisateur est invit\u00e9 \u00e0 le faire, et c'est purement facultatif. Veuillez noter que le contenu de la d\u00e9mo n'est pas copi\u00e9 lorsque votre plugin ou th\u00e8me est install\u00e9 via le plugin Admin . Processus de publication de th\u00e8me/plugin. Lorsque vous avez cr\u00e9\u00e9 votre nouveau th\u00e8me ou plugin et que vous souhaitez le voir ajout\u00e9 au r\u00e9f\u00e9rentiel Grav , vous devez vous assurer de quelques \u00e9l\u00e9ments standard : Il est open source avec un fichier LICENSE qui fournit une licence compatible MIT Exemple ici . Contient un fichier README.md avec un r\u00e9sum\u00e9 des fonctionnalit\u00e9s et des instructions sur la fa\u00e7on de l'installer et de le configurer. Exemple ici . Contient un fichier blueprints.yaml avec tous les champs obligatoires . Exemple ici . Fournissez un CHANGELOG.md au format correct un exemple ici . Fournit une attribution appropri\u00e9e si vous utilisez d'autres biblioth\u00e8ques, scripts ou codes. Cr\u00e9ez une version pour votre plugin/th\u00e8me fini. Le syst\u00e8me de r\u00e9f\u00e9rentiel Grav n\u00e9cessite une version et ne trouvera pas votre plugin/th\u00e8me \u00e0 moins qu'il n'y ait une version qui contient tout ce qui pr\u00e9c\u00e8de. Ajoutez un probl\u00e8me au suivi des probl\u00e8mes Grav avec des d\u00e9tails sur votre plugin, et nous lui ferons un test rapide pour nous assurer qu'il fonctionne, puis l'ajouterons. Notez que vous n'avez pas \u00e0 le faire si vous publiez une nouvelle version du plugin ou du th\u00e8me qui est d\u00e9j\u00e0 dans le r\u00e9f\u00e9rentiel. Il sera r\u00e9cup\u00e9r\u00e9 automatiquement. Assurez-vous que le nom de chaque balise est coh\u00e9rent . GPM utilise ces informations pour d\u00e9terminer si votre plugin/th\u00e8me est plus r\u00e9cent que le pr\u00e9c\u00e9dent. Nous vous recommandons d'utiliser des num\u00e9ros de version s\u00e9mantiques pour les balises. Par exemple. 1.2.4 . La coh\u00e9rence de toutes les balises est primordiale ! Format du journal des modifications. Le site GetGrav.org utilise un format ChangeLog personnalis\u00e9 qui est \u00e9crit en d\u00e9marque standard mais peut \u00eatre manipul\u00e9 avec quelques CSS simples et affich\u00e9 dans un format attrayant . Afin de vous assurer que vos ChangeLogs peuvent \u00eatre analys\u00e9s et format\u00e9s correctement, veuillez utiliser cette syntaxe : 1 | # vX.Y.Z 2 | ## 01/01/2015 3 | 4 | 1. [](#nouveau) 5 | * Nouvelles fonctionnalit\u00e9s ajout\u00e9es 6 | * Une autre nouvelle fonctionnalit\u00e9 7 | 2. [](#am\u00e9lior\u00e9) 8 | * Am\u00e9lioration apport\u00e9e 9 | * Une autre am\u00e9lioration 10 | 3. [](#bugfix) 11 | * Correction de bug impl\u00e9ment\u00e9e 12 | * Une autre correction de bug 13 | 14 | ...r\u00e9p\u00e9ter... Chaque section #new, #improved, #bugfix est facultative, incluez simplement les sections dont vous avez besoin. Les dates peuvent utiliser soit le format de date am\u00e9ricain m/d/y , soit le format europ\u00e9en d-m-y . Assurez-vous \u00e9galement qu'il y a une nouvelle ligne vide entre les en-t\u00eates (version et date) et les listes (nouveau, am\u00e9lior\u00e9, correction de bogue). Configuration de GitHub. Comme c'est le cas de nos jours, GitHub sera votre meilleur ami en mati\u00e8re de d\u00e9veloppement pour Grav. Nous avons cr\u00e9\u00e9 des outils pour rendre cela aussi simple que possible, mais vous devez suivre certains mod\u00e8les de d\u00e9veloppement pour simplifier le processus. Clonez tous les r\u00e9f\u00e9rentiels avec lesquels vous pr\u00e9voyez de travailler dans un seul dossier Projets ou D\u00e9veloppement sur votre ordinateur. Cela permettra \u00e0 nos outils fournis de trouver les r\u00e9f\u00e9rentiels dont ils ont besoin. Nous utilisons le mod\u00e8le de branchement GitFlow pour tous nos d\u00e9veloppements Grav. Le concept de base de la m\u00e9thodologie GitFlow est que le d\u00e9veloppement se produit dans la branche develop , mais que de nouvelles fonctionnalit\u00e9s sont cr\u00e9\u00e9es dans des branches feature distinctes qui sont fusionn\u00e9es dans develop une fois termin\u00e9es. Les versions fusionnent develop dans master et vous pouvez appliquer des branches hotfix selon vos besoins pendant le processus de publication. La plupart des clients git modernes le supportent. Cependant, nous recommandons Atlassian SourceTree car il est gratuit, multiplateforme et facile \u00e0 utiliser. Grav a \u00e9galement quelques d\u00e9pendances (dict\u00e9es par le fichier .dependencies ) qui incluent les plugins Error et Problems , ainsi que le th\u00e8me Antimatter . Vous pouvez suivre ces instructions pour cloner ces bits sur votre propre ordinateur. Si vous souhaitez apporter des ajouts ou des modifications \u00e0 l'un des r\u00e9f\u00e9rentiels getgrav , vous devrez forker le r\u00e9f\u00e9rentiel appropri\u00e9, puis cloner l'url de votre fork plut\u00f4t que le r\u00e9f\u00e9rentiel getgrav directement. L'exemple ci-dessous utilise les r\u00e9f\u00e9rentiels getgrav directs \u00e0 titre d'exemple uniquement. $ | cd $ | mkdir Projects $ | cd Projects $ | mkdir Grav $ | cd Grav $ | git clone https://github.com/getgrav/grav.git $ | git clone https://github.com/getgrav/grav-plugin-error.git $ | git clone https://github.com/getgrav/grav-plugin-problems.git $ | git clone https://github.com/getgrav/grav-theme-antimatter.git Cela clonera les 4 r\u00e9f\u00e9rentiels dans votre dossier ~/Projects/Grav . Habituellement, la proc\u00e9dure normale pour configurer un site de test pour Grav consiste \u00e0 utiliser la commande bin/grav new-project . Ceci est vrai pour le d\u00e9veloppement, sauf pour une diff\u00e9rence importante. Parce que nous voulons pouvoir d\u00e9velopper \u00e0 partir de votre racine Web, mais que des modifications apparaissent dans votre code clon\u00e9, nous devons lier symboliquement les parties pertinentes. Pour ce faire, nous passons un indicateur -s \u00e0 la commande bin/grav new-project . Il y a une \u00e9tape suppl\u00e9mentaire requise. Vous devez indiquer \u00e0 la commande o\u00f9 elle peut trouver vos r\u00e9f\u00e9rentiels. Suivez donc ces \u00e9tapes pour cr\u00e9er un fichier de configuration dans un nouveau dossier .grav/ que vous devrez cr\u00e9er \u00e0 la racine de votre r\u00e9pertoire personnel : $ | cd $ | mkdir .grav $ | vi .grav/config Dans ce fichier : fournissez un mappage simple de l'emplacement des fichiers pertinents : github_repos : /Users/your_user/Projects/Grav/ Assurez-vous d'avoir enregistr\u00e9 ce fichier et qu'il est lisible. Vous pouvez maintenant configurer votre site symboliquement li\u00e9 o\u00f9 ~/www est votre racine Web et ~/www/grav est l'emplacement o\u00f9 votre nouveau site de test grav sera cr\u00e9\u00e9 : $ | cd ~/Projets/Grav/grav $ | bin/grav nouveau-projet -s ~/www/grav Vous devriez voir une sortie \u00e0 peu pr\u00e8s comme celle-ci : rhukster@gibblets:~/Projects/Grav/grav(develop\u25cb) \u00bb bin/grav new-project -s ~/www/grav Creating Directories /cache /logs /images /assets /user/accounts /user/config /user/pages /user/data /user/plugins /user/themes Resetting Symbolic Links /index.php -> /Users/rhuk/www/grav/index.php /composer.json -> /Users/rhuk/www/grav/composer.json /bin -> /Users/rhuk/www/grav/bin /system -> /Users/rhuk/www/grav/system Pages Initializing /Users/rhuk/Projects/Grav/grav/user/pages -> Created File Initializing /.dependencies -> Created /.htaccess -> Created /user/config/site.yaml -> Created /user/config/system.yaml -> Created Permissions Initializing bin/grav permissions reset to 755 read local config from /Users/rhuk/.grav/config Symlinking Bits =============== SUCCESS symlinked grav-plugin-problems -> user/plugins/problems SUCCESS symlinked grav-plugin-error -> user/plugins/error SUCCESS symlinked grav-theme-antimatter -> user/themes/antimatter Comme vous pouvez le voir, un certain nombre de r\u00e9pertoires par d\u00e9faut ont \u00e9t\u00e9 cr\u00e9\u00e9s et un dossier de pages initiales a \u00e9galement \u00e9t\u00e9 cr\u00e9\u00e9. Une fois la base configur\u00e9e, les autres d\u00e9pendances sont symboliquement li\u00e9es. Vous devriez pouvoir pointer votre navigateur vers http://localhost/grav et voir le site de test que vous venez de configurer. D\u00e9sormais, toutes les modifications que vous apportez dans votre dossier ~/www/grav appara\u00eetront pr\u00eates \u00e0 \u00eatre valid\u00e9es et ins\u00e9r\u00e9es dans vos r\u00e9f\u00e9rentiels clon\u00e9s. Protocole des ressources abandonn\u00e9es. Les gens passent \u00e0 autre chose et le contenu g\u00e9n\u00e9r\u00e9 par les utilisateurs, comme les plugins et les th\u00e8mes, peut \u00eatre abandonn\u00e9. Si vous souhaitez reprendre la maintenance d'un th\u00e8me ou d'un plugin existant, vous devez suivre ce protocole : Soumettez une demande d'extraction bien form\u00e9e et test\u00e9e au r\u00e9f\u00e9rentiel d'origine. Si le responsable ne r\u00e9pond pas du tout apr\u00e8s 30 jours, ou si le responsable d\u00e9clare qu'il abandonne la ressource et ne souhaite pas accorder \u00e0 quelqu'un d'autre l'acc\u00e8s en \u00e9criture, passez \u00e0 l'\u00e9tape suivante. Soumettez un nouveau probl\u00e8me au r\u00e9f\u00e9rentiel GitHub de Grav avec les d\u00e9tails suivants : Titre : [change-resource] Take over plugin/theme Indiquez le nom du plug-in et un lien vers le r\u00e9f\u00e9rentiel d'origine. Lien vers votre demande d'extraction qui est rest\u00e9e sans r\u00e9ponse ou un lien vers la conversation dans laquelle le responsable a abandonn\u00e9 la ressource. Les mainteneurs de Grav examineront le cas et vous feront savoir si la prise de contr\u00f4le est approuv\u00e9e. Si l'approbation est accord\u00e9e, passez \u00e0 l'\u00e9tape suivante. Pr\u00e9parez votre r\u00e9f\u00e9rentiel fork\u00e9 avec une nouvelle version. Ajoutez une note au README indiquant que ce r\u00e9f\u00e9rentiel est le nouveau r\u00e9f\u00e9rentiel et un lien vers l'ancien r\u00e9f\u00e9rentiel. R\u00e9pondez au probl\u00e8me en donnant aux mainteneurs la nouvelle URL du plugin. Les mainteneurs mettront \u00e0 jour GPM et les installations nouvelles et mises \u00e0 jour proviendront d\u00e9sormais de votre r\u00e9f\u00e9rentiel fork\u00e9.","title":"D\u00e9veloppement Grav"},{"location":"avance-grav-up-1-6/","text":"Mise \u00e0 niveau depuis Grav < 1.6 Ce guide a \u00e9t\u00e9 test\u00e9 pour Grav v1.2.0 et toutes les versions ult\u00e9rieures. AVERTISSEMENT : La mise \u00e0 niveau directe de Grav vers la derni\u00e8re version fonctionne, mais n'est pas enti\u00e8rement prise en charge et entra\u00eenera probablement la panne de votre site ! Les pr\u00e9paratifs. Le moyen le plus simple de mettre \u00e0 niveau les anciennes versions de Grav consiste \u00e0 cr\u00e9er une copie de votre site sur un serveur Linux/Unix sur lequel PHP 7.3 est install\u00e9 et prend en charge la connexion SSH pour acc\u00e9der aux commandes CLI. Ce guide fonctionne \u00e9galement avec le sous-syst\u00e8me Linux pour Windows 10, mais si vous ne l'avez pas install\u00e9, vous devrez peut-\u00eatre t\u00e9l\u00e9charger et renommer manuellement les packages de mise \u00e0 jour. PHP 7.3 a \u00e9t\u00e9 choisi car c'est la seule version de PHP qui peut \u00eatre utilis\u00e9e pour toutes les versions de Grav. Vous pouvez \u00e9galement utiliser PHP 7.1 ou 7.2, mais cela vous permet uniquement de mettre \u00e0 jour Grav jusqu'\u00e0 la v1.6.31. \u00c0 ce stade, vous devrez passer \u00e0 PHP 7.3 ou 7.4 avant de poursuivre le processus de mise \u00e0 niveau. PHP 8 ne doit \u00eatre utilis\u00e9 qu'apr\u00e8s la mise \u00e0 niveau vers Grav 1.7 ou une version ult\u00e9rieure. Ce guide comprend des instructions pour mettre \u00e0 jour Grav et les packages les plus couramment utilis\u00e9s : Problems, Error, Form, Email, Login et Admin . Pour tous les autres plugins, assurez-vous qu'ils sont toujours maintenus et qu'ils prennent en charge \u00e0 la fois Grav 1.6 et la derni\u00e8re version de Grav. Au moment de la r\u00e9daction de ce guide, presque tous les plugins activement maintenus devraient entrer dans cette cat\u00e9gorie. Les plugins les plus s\u00fbrs sont ceux qui ont \u00e9t\u00e9 mis \u00e0 jour apr\u00e8s la sortie de Grav 1.7.0 (18/01/2021) ou dont le fonctionnement dans Grav 1.7 a \u00e9t\u00e9 confirm\u00e9. Votre th\u00e8me et tous les plugins personnalis\u00e9s ou non maintenus n\u00e9cessiteront plus de travail. Tout code personnalis\u00e9 doit \u00eatre v\u00e9rifi\u00e9 pour s'assurer qu'il fonctionne toujours avec les versions actuelles de Grav et PHP. Il en va de m\u00eame pour les fichiers Markdown , YAML et twig car les derni\u00e8res versions des biblioth\u00e8ques ont des correctifs qui d\u00e9tectent les erreurs, ce qui signifie g\u00e9n\u00e9ralement que l'analyse des fichiers endommag\u00e9s \u00e9chouera. Les nouvelles versions de Grav fournissent des outils pour v\u00e9rifier ces fichiers, mais les v\u00e9rifications ne d\u00e9tectent pas tous les probl\u00e8mes, donc certains tests sont \u00e9galement n\u00e9cessaires. Liste de contr\u00f4le (en utilisant une console et Grav CLI): Faire une sauvegarde D\u00e9terminer la version Grav par bin/gpm version grav V\u00e9rifiez la version de PHP CLI par php -v , il devrait s'agir de PHP 7.3 (>=7.3.6) V\u00e9rifiez la version du serveur PHP, elle devrait \u00eatre la m\u00eame que dans la CLI R\u00e9pertoriez tous les plugins install\u00e9s et classez-les (support\u00e9s, personnalis\u00e9s, non maintenus) Faites de m\u00eame avec votre th\u00e8me \u00c9tape vers Grav 1.6.31. Cette partie suppose que vous avez d\u00e9j\u00e0 fait une copie de votre site et que les commandes CLI fonctionnent. Les utilisateurs Windows qui n'ont pas install\u00e9 le sous-syst\u00e8me Linux doivent t\u00e9l\u00e9charger les fichiers manuellement et les renommer. Effectuez les commandes suivantes dans le dossier racine de votre site Grav (omettez le param\u00e8tre -y dans la commande GPM si vous utilisez Grav 1.2 ou une version inf\u00e9rieure) : $ | wget -q https://getgrav.org/download/core/grav-update/1.6.31 -O tmp/grav-update-v1.6.31.zip $ | $| bin/gpm direct-install -y tmp/grav-update-v1.6.31.zip Grav peut \u00e9galement \u00eatre mis \u00e0 jour manuellement. Supprimez les dossiers suivants : assets bin system vendor webserver-configs et copiez/remplacez tous les fichiers du fichier zip de mise \u00e0 jour Grav trouv\u00e9 \u00e0 partir d'ici . Notez que les fichiers du fichier zip se trouvent dans un dossier grav-update . Ensuite, nous devons mettre \u00e0 jour les plugins de base. $ | wget -q https://getgrav.org/download/plugins/problems/2.0.3 -O tmp/grav-plugin-problems-v2.0.3.zip $ | wget -q https://getgrav.org/download/plugins/error/1.7.1 -O tmp/grav-plugin-error-v1.7.1.zip $ | wget -q https://getgrav.org/download/plugins/form/4.3.0 -O tmp/grav-plugin-form-v4.3.0.zip $ | wget -q https://getgrav.org/download/plugins/email/3.1.0 -O tmp/grav-plugin-email-v3.1.0.zip $ | wget -q https://getgrav.org/download/plugins/login/3.3.8 -O tmp/grav-plugin-login-v3.3.8.zip $ | wget -q https://getgrav.org/download/plugins/admin/1.9.19 -O tmp/grav-plugin-admin-v1.9.19.zip $ | $ | bin/gpm direct-install -y tmp/grav-plugin-problems-v2.0.3.zip $ | bin/gpm direct-install -y tmp/grav-plugin-error-v1.7.1.zip $ | bin/gpm direct-install -y tmp/grav-plugin-form-v4.3.0.zip $ | bin/gpm direct-install -y tmp/grav-plugin-email-v3.1.0.zip $ | bin/gpm direct-install -y tmp/grav-plugin-login-v3.3.8.zip $ | bin/gpm direct-install -y tmp/grav-plugin-admin-v1.9.19.zip Alternativement, les plugins peuvent \u00eatre install\u00e9s manuellement en supprimant simplement tous les fichiers dans user/plugins/pluginnname et en copiant les fichiers \u00e0 partir du fichier zip. Notez que les fichiers du fichier zip se trouvent dans un dossier nomm\u00e9 de mani\u00e8re semi-al\u00e9atoire. Mise \u00e0 niveau vers Grav 1.7. Ex\u00e9cutez les commandes CLI suivantes une par une et suivez leurs instructions : $ | bin/gpm self-upgrade $ | bin/gpm update Vous pouvez \u00e9galement mettre \u00e0 jour d'autres plugins un par un vers la derni\u00e8re version, mais veuillez ne le faire que si la derni\u00e8re version du plugin prend en charge Grav 1.6. Le reste des plugins doit \u00eatre d\u00e9sactiv\u00e9 si vous n'\u00eates pas s\u00fbr qu'ils fonctionneront. Ils peuvent \u00eatre r\u00e9activ\u00e9s plus tard, lorsque vous testez le site. Si vous n'avez pas de plugins cass\u00e9s, le panneau d'administration et le site devraient \u00eatre pleinement op\u00e9rationnels \u00e0 ce stade. AVERTISSEMENT : \u00e9vitez de mettre \u00e0 jour le plugin Grav ou Admin avant d'avoir lu Mise \u00e0 niveau vers Grav 1.7. Vous risquez de casser \u00e0 la fois votre site et votre panneau d'administration.","title":"Mise \u00e0 niveau depuis Grav <1.6"},{"location":"avance-grav-up-to-1-6/","text":"Mise \u00e0 niveau vers Grav 1.6 Grav 1.6 est la plus grande mise \u00e0 jour depuis la version initiale de Grav. Il introduit quelques nouvelles fonctionnalit\u00e9s, am\u00e9liorations, corrections de bogues et fournit de nombreux changements architecturaux qui ouvrent la voie vers Grav 2.0. IMPORTANT : Pour la plupart des gens, Grav 1.6 devrait \u00eatre une simple mise \u00e0 niveau sans aucun probl\u00e8me, mais comme toute mise \u00e0 niveau, il est recommand\u00e9 de faire une sauvegarde de votre site et de tester la mise \u00e0 niveau dans un environnement de test avant de mettre \u00e0 niveau votre site en ligne. Que vous soyez d\u00e9veloppeur ou administrateur de votre site, votre site de test doit avoir la barre de d\u00e9bogage activ\u00e9e. En effet, la barre de d\u00e9bogage dispose d'outils utiles qui vous aident \u00e0 vous assurer que votre site sera mieux pr\u00e9par\u00e9 pour fonctionner sur les versions ult\u00e9rieures de Grav. ASTUCE : Pour plus d'informations sur l'activation de la fonctionnalit\u00e9, veuillez consulter la section D\u00e9bogage et journalisation dans la documentation. Onglet de barre de d\u00e9bogage obsol\u00e8te. Pour nos besoins, nous recherchons l'onglet Obsol\u00e8te dans la barre de d\u00e9bogage, qui vous permet d'identifier les probl\u00e8mes obsol\u00e8tes et de les corriger ou de les signaler avant de passer aux versions ult\u00e9rieures de Grav. La r\u00e9solution des probl\u00e8mes d\u00e9tect\u00e9s dans l'onglet Obsol\u00e8te vous aidera \u00e0 rendre votre site plus rapide et vous fera gagner du temps lors des futures mises \u00e0 jour. REMARQUE : cet onglet Obsol\u00e8te s'affiche uniquement si des appels obsol\u00e8tes sont d\u00e9tect\u00e9s dans la page. Pour vous assurer que vous d\u00e9tectez tous les probl\u00e8mes, vous devez soit vider le cache et ex\u00e9cuter Grav avec la mise en cache d\u00e9sactiv\u00e9e pour maximiser les chances de d\u00e9tecter toutes les erreurs. M\u00eame en suivant ces \u00e9tapes, vous remarquerez peut-\u00eatre que certaines des erreurs YAML/Twig n'apparaissent qu'apr\u00e8s avoir vid\u00e9 le cache. L'onglet Obsol\u00e8te contient une liste des fonctionnalit\u00e9s obsol\u00e8tes qui ont \u00e9t\u00e9 trouv\u00e9es. Chaque probl\u00e8me est cliquable et ouvre un message d'obsolescence, qui contient une br\u00e8ve explication du probl\u00e8me ainsi qu'une trace, ce qui vous permet de localiser et de corriger le code. Dans le c\u00f4t\u00e9 droit, vous pouvez voir le type d'erreur obsol\u00e8te et dans le coin inf\u00e9rieur droit, vous pouvez filtrer les types affich\u00e9s en cliquant sur les badges. Lorsque vous ouvrez le message d'obsolescence, le contenu peut d'abord sembler \u00e9crasant. Mais dans la plupart des cas, vous pouvez ignorer la majeure partie du contenu et lire simplement les premi\u00e8res lignes : message, fichier et ligne (si disponible). Il existe plusieurs types de probl\u00e8mes d'obsolescence : yaml : le fichier YAML ou Markdown utilise une syntaxe YAML obsol\u00e8te. twig : le fichier Twig contient une syntaxe Twig obsol\u00e8te ou il y a eu un autre probl\u00e8me li\u00e9 \u00e0 Twig. grav : quelque chose appelle la m\u00e9thode Grav obsol\u00e8te ou utilise une propri\u00e9t\u00e9 obsol\u00e8te. vrndor : quelque chose utilise un code de biblioth\u00e8que tiers obsol\u00e8te. unknowm : message obsol\u00e8te inconnu. Analyse YAML. REMARQUE : dans Grav 1.6, YAML a une analyse plus stricte avec une solution de secours pour une compatibilit\u00e9 descendante. Grav 1.6 utilise un analyseur Symfony 4.2 YAML , qui suit la sp\u00e9cification standard YAML beaucoup plus \u00e9troitement que l'ancien analyseur de Symfony 3.4 . Cela signifie que les fichiers YAML qui fonctionnaient correctement auparavant peuvent provoquer des erreurs r\u00e9sultant d'un YAML non valide. Cependant, si le fichier ne se charge pas avec la nouvelle version 4.2 de l'analyseur, Grav reviendra par d\u00e9faut \u00e0 l'ancienne version 3.4 de l'analyseur pour maintenir votre site op\u00e9rationnel. Cependant, cela r\u00e9duira les performances du site et vous devez d\u00e9tecter et r\u00e9soudre les probl\u00e8mes pour garantir des performances optimales. REMARQUE : Ce m\u00e9canisme de secours de r\u00e9trocompatibilit\u00e9 sera supprim\u00e9 dans Grav 2.0. Grav 1.6.7 et toutes les versions ult\u00e9rieures ont une nouvelle commande CLI pour d\u00e9tecter les probl\u00e8mes d'analyse YAML, veuillez ex\u00e9cuter bin/grav yamllinter pour trouver et corriger les erreurs d'analyse YAML sur votre site. Il est recommand\u00e9 d'ex\u00e9cuter cette commande juste apr\u00e8s la mise \u00e0 niveau vers Grav 1.6 ou une version ult\u00e9rieure. Admin 1.9.3 et toutes les versions ult\u00e9rieures ont YAML Linter int\u00e9gr\u00e9 \u00e0 Tools> Reports , si vous pr\u00e9f\u00e9rez l'utiliser \u00e0 la place de la commande CLI. Recherchez ces erreurs YAML :. N'utilisez pas @ , \\ , | , % et > au d\u00e9but d'une cha\u00eene sans guillemets : n'utilisez pas @data-options : [] , utilisez data-options@ : [] \u00e0 la place. Ajoutez toujours un espace blanc apr\u00e8s deux-points : pour les cl\u00e9s : n'utilisez pas key:value , utilisez key: value \u00e0 la place. Citez toujours null, true, false, 2.0 (flottants) dans les cl\u00e9s ; les cl\u00e9s ne peuvent \u00eatre que des entiers ou des cha\u00eenes. Citez \u00e9galement null, true, false, 2 et 2.0 dans les valeurs si elles sont cens\u00e9es \u00eatre des cha\u00eenes. Lorsque vous entourez des cha\u00eenes de guillemets doubles, vous devez maintenant \u00e9chapper les caract\u00e8res . La barre de d\u00e9bogage peut \u00e9galement \u00eatre utilis\u00e9e pour rep\u00e9rer tout YAML obsol\u00e8te. Ouvrez simplement la barre de d\u00e9bogage et regardez l'onglet Obsol\u00e8te. Si l'onglet est introuvable, aucun probl\u00e8me n'a \u00e9t\u00e9 d\u00e9tect\u00e9. ASTUCE : Vous pouvez filtrer tous les probl\u00e8mes YAML en consultant les badges dans le coin inf\u00e9rieur droit de la barre de d\u00e9bogage. Filtrez simplement pour n'afficher que les probl\u00e8mes YAML en cliquant sur les autres boutons pour les d\u00e9sactiver. REMARQUE : les erreurs YAML n\u00e9cessitent que vous vidiez le cache. Les erreurs ne seront d\u00e9tect\u00e9es que lorsque les fichiers YAML seront d\u00e9cod\u00e9s. Mode de compatibilit\u00e9 YAML. Par d\u00e9faut, le mode de compatibilit\u00e9 YAML a \u00e9t\u00e9 activ\u00e9 dans Grav 1.6. Cela permettra aux sites plus anciens de continuer \u00e0 fonctionner apr\u00e8s la mise \u00e0 niveau, mais ce n'est pas id\u00e9al pour \u00eatre utilis\u00e9 dans de nouveaux sites ou si vous avez d\u00e9j\u00e0 corrig\u00e9 et test\u00e9 votre site contre toutes les erreurs d'analyse YAML. Vous pouvez modifier ce param\u00e8tre dans user/config/system.yaml : strict_mode : yaml_compat : false Notre recommandation est de ne pas toucher \u00e0 ce param\u00e8tre sur les sites existants pour l'instant, mais plut\u00f4t de cr\u00e9er des sites de test avec le mode de compatibilit\u00e9 false . De plus, tout nouveau site cr\u00e9\u00e9 avec Grav 1.6 ou une version ult\u00e9rieure doit avoir le mode de compatibilit\u00e9 d\u00e9sactiv\u00e9 pendant le d\u00e9veloppement car il vous permet de gagner beaucoup de temps lorsqu'il est temps de passer \u00e0 Grav 2.0. Twig. Blocages diff\u00e9r\u00e9s. Vous devez mettre \u00e0 jour votre th\u00e8me vers une version qui ajoute la prise en charge des blocs d'actifs diff\u00e9r\u00e9s pour fournir une prise en charge compl\u00e8te de Grav 1.6. Alternativement, si vous avez un th\u00e8me modifi\u00e9 personnalis\u00e9 ou d\u00e9velopp\u00e9 le v\u00f4tre, vous devez le mettre \u00e0 jour vous-m\u00eame afin de vous assurer qu'il continue de fonctionner avec les nouvelles fonctionnalit\u00e9s et les versions ult\u00e9rieures de Grav et de ses plugins en suivant le guide dans le billet de blog sur les mises \u00e0 jour importantes du th\u00e8me . Twig obsol\u00e8te. Grav 2.0 utilisera Twig 2 au lieu de Twig 1 qui est actuellement utilis\u00e9 dans les versions Grav 1.x. Il y a quelques fonctionnalit\u00e9s obsol\u00e8tes qui ont \u00e9t\u00e9 supprim\u00e9es dans Twig 2, c'est pourquoi vous devez vous assurer que vous d\u00e9tectez et corrigez tous ces probl\u00e8mes avant de passer \u00e0 Grav 2.0 sur la route. La barre de d\u00e9bogage peut \u00eatre utilis\u00e9e pour rep\u00e9rer tout probl\u00e8me Twig obsol\u00e8te. Ouvrez simplement la barre de d\u00e9bogage et cliquez sur l'onglet Deprecated . Recherchez ces probl\u00e8mes Twig : Les macros import\u00e9es dans un fichier ne seront plus disponibles dans les mod\u00e8les enfants (via un appel include par exemple). Vous devez importer les macros explicitement dans chaque fichier o\u00f9 vous les utilisez. Le filtre |replace() ne fonctionnera qu'avec le tableau associ\u00e9 comme param\u00e8tre : { \"I like this and that.\"|replace({'this': 'foo', 'that': 'bar'}) }} . Le test sameas() doit maintenant \u00eatre \u00e9crit comme same as() . Vous trouverez plus d'informations sur ce qui a \u00e9t\u00e9 obsol\u00e8te ici. \u00c9chappement automatique. Grav a \u00e9t\u00e9 plut\u00f4t \u00e0 l'abri des vuln\u00e9rabilit\u00e9s, \u00e0 l'exception des attaques XSS, qui peuvent \u00eatre d\u00e9clench\u00e9es sans trop d'effort sur n'importe quel code qui n'\u00e9chappe pas correctement aux entr\u00e9es non fiables d'un utilisateur. Twig est un moyen facile d'\u00e9crire des fichiers mod\u00e8les, mais en m\u00eame temps, il est trop facile d'oublier que la plupart des variables utilis\u00e9es dans les fichiers mod\u00e8les ne sont pas filtr\u00e9es avant d'\u00eatre utilis\u00e9es. M\u00eame s'ils sont filtr\u00e9s et s\u00fbrs, ils peuvent contenir des caract\u00e8res sp\u00e9ciaux qui doivent \u00eatre \u00e9chapp\u00e9s pour rendre le code HTML valide. Par exemple, vous pouvez avoir un mod\u00e8le Twig comme celui-ci : 1 | {% set my_string = '<script>echo(\"bonjour!\");<script>' %} 2 | <p> 3 | {{ ma_cha\u00eene }} 4 | </p> Par d\u00e9faut, Grav a d\u00e9sactiv\u00e9 l'\u00e9chappement automatique Twig pour la simplicit\u00e9 et la clart\u00e9 des mod\u00e8les, mais malheureusement, ce fut une mauvaise d\u00e9cision car personne, y compris nous, ne se souvient de toujours \u00e9chapper les variables qui peuvent contenir des caract\u00e8res sp\u00e9ciaux ou provenir d'une source non fiable. Pour aggraver les choses, on ne sait g\u00e9n\u00e9ralement pas si la variable est compatible HTML ou non. Pour vous assurer qu'un site est prot\u00e9g\u00e9 contre la plupart des vuln\u00e9rabilit\u00e9s XSS, vous devez activer l'\u00e9chappement automatique dans votre configuration. Malheureusement, les th\u00e8mes et les plugins qui utilisent les mod\u00e8les Twig ont tendance \u00e0 ne pas fonctionner avec le param\u00e8tre activ\u00e9 - et les mod\u00e8les \u00e9crits sans \u00e9chappement explicite sont tr\u00e8s probablement vuln\u00e9rables au contenu malveillant. Avec l'exemple ci-dessus, comme l'\u00e9chappement automatique est d\u00e9sactiv\u00e9, la sortie sera rendue en HTML pur et une bo\u00eete d'alerte avec \"bonjour!\" appara\u00eetra. Cependant, cela doit \u00eatre \u00e9chapp\u00e9 \u00e0 l'aide du filtre d'\u00e9chappement |e Twig (ou |e('html') : 1 | {% set my_string = '<script>echo(\"bonjour!\");<script>' %} 2 | <p> 3 | {{ ma_cha\u00eene|e }} 4 | </p> Parce que la plupart des gens ont tendance \u00e0 oublier d'\u00e9chapper les variables dans Twig et parce que l'utilisation de |e partout peut rendre les fichiers de mod\u00e8le plus difficiles \u00e0 lire, il y a un nouveau param\u00e8tre dans user/config/system.yaml : 1 | strict_mode: 2 | twig_compat: false Ce param\u00e8tre force l'activation de auto-escaping dans tous les fichiers de mod\u00e8le Twig et d\u00e9sactive l'ancien param\u00e8tre pour l'activer et le d\u00e9sactiver. L'effet secondaire du param\u00e8tre est que votre site contiendra probablement quelques \u00e9l\u00e9ments de contenu \u00e9chapp\u00e9s, que vous devrez corriger en utilisant le filtre |raw pour tout le contenu qui doit contenir uniquement du HTML et du HTML. De nombreux mod\u00e8les et plugins n'ont pas encore \u00e9t\u00e9 mis \u00e0 jour pour fonctionner avec l'\u00e9chappement forc\u00e9, veuillez donc signaler tout bogue dans ceux-ci pour permettre leur correction en temps opportun. La transition vers l'\u00e9chappement automatique ne sera pas facile. Pendant la transition, tous les fichiers de mod\u00e8le doivent soit contenir \u00e0 la fois des filtres |e et |raw sur chaque variable pour s'assurer que le fichier de mod\u00e8le peut \u00eatre utilis\u00e9 en toute s\u00e9curit\u00e9 dans les deux modes, ou vous pouvez entourer tout le code du mod\u00e8le avec les tags Twig {% autoescape %} . Voir le manuel Twig pour plus d'informations.","title":"Mise \u00e0 niveau vers Grav 1.6"},{"location":"avance-grav-up-to-1-7/","text":"Mise \u00e0 niveau vers Grav 1.7 Grav 1.7 introduit quelques nouvelles fonctionnalit\u00e9s, am\u00e9liorations, corrections de bogues et fournit de nombreux changements architecturaux qui ouvrent la voie vers Grav 2.0. Voici quelques faits saillants : Objets flexibles : une nouvelle fa\u00e7on de cr\u00e9er vos propres types de donn\u00e9es. Symfony Server : Ex\u00e9cutez Grav sans avoir \u00e0 installer de serveur Web. Multilingue am\u00e9lior\u00e9 : meilleures solutions de remplacement de langue, meilleure prise en charge de l'administration. Multi-site am\u00e9lior\u00e9 : l'administrateur a am\u00e9lior\u00e9 la prise en charge multi-site. Am\u00e9lioration de l'ACL d'administration : prise en charge compl\u00e8te de CRUD pour les utilisateurs et les pages. Prise en charge multim\u00e9dia am\u00e9lior\u00e9e : prend en charge le format d'image webp , le chargement paresseux et plus encore. Mise en cache am\u00e9lior\u00e9e : nouvelle balise {% cache %} et performances am\u00e9lior\u00e9es, en particulier dans l'administration. D\u00e9tection XSS dans les formulaires : les formulaires ne seront pas soumis si un potentiel XSS y est d\u00e9tect\u00e9. Consultez la documentation pour savoir comment d\u00e9sactiver les v\u00e9rifications. Meilleurs outils de d\u00e9bogage : int\u00e9gration Clockwork , profilage Twig et prise en charge de l'extension PHP Tideways XHProf pour le profilage des performances. I MPORTANT : Pour la plupart des gens, Grav 1.7 devrait \u00eatre une simple mise \u00e0 niveau sans aucun probl\u00e8me, mais comme toute mise \u00e0 niveau, il est recommand\u00e9 de faire une sauvegarde de votre site et de tester la mise \u00e0 niveau dans un environnement de test avant de mettre \u00e0 niveau votre site en ligne. Probl\u00e8mes les plus courants. Le HTML est affich\u00e9 sous forme de code sur votre site plut\u00f4t que d'\u00eatre rendu sous forme de HTML comme pr\u00e9vu. Ce comportement est le r\u00e9sultat de la nouvelle valeur par d\u00e9faut de l' auto-escaping \u00e9tant vrai dans Grav 1.7. Il s'agit d'une am\u00e9lioration de la s\u00e9curit\u00e9, et si vous effectuez une mise \u00e0 niveau \u00e0 partir d'une version ant\u00e9rieure \u00e0 1.7, nous activons automatiquement le param\u00e8tre de compatibilit\u00e9 Twig dans la configuration du syst\u00e8me pour garantir que votre ancien code Twig continuera \u00e0 fonctionner. Si vous effectuez une mise \u00e0 jour manuelle vers la version 1.7 ou une mise \u00e0 niveau d'une mani\u00e8re qui ne passe pas par le processus de mise \u00e0 niveau automatique de GPM, vous devez d\u00e9finir ce param\u00e8tre vous-m\u00eame. Consultez la section Twig de ce guide pour plus de d\u00e9tails... Obtention d'erreurs \u00e0 propos de YAML non valide. Comme nous avons mis \u00e0 niveau vers une version plus r\u00e9cente du framework Symfony, l'analyseur YAML est plus strict qu'il ne l'\u00e9tait dans les versions ant\u00e9rieures \u00e0 1.7. Pour g\u00e9rer cela, nous avons inclus une ancienne version de l'analyseur qui est disponible lors de l'activation de la compatibilit\u00e9 Yaml. Ceci est automatiquement g\u00e9r\u00e9 pour vous si vous mettez \u00e0 niveau vers Grav 1.7 via GPM, mais si vous avez mis \u00e0 niveau manuellement, vous devrez d\u00e9finir cette valeur vous-m\u00eame. Consultez la section YAML de ce guide pour plus de d\u00e9tails... L'administrateur appara\u00eet avec des cha\u00eenes non traduites Si votre administrateur affiche des cha\u00eenes non traduites dans l'interface, c'est probablement parce que vous avez pr\u00e9c\u00e9demment d\u00e9sactiv\u00e9 les traductions linguistiques . C'\u00e9tait bogu\u00e9 dans les versions pr\u00e9c\u00e9dentes de Grav et sa d\u00e9sactivation ne d\u00e9sactivait pas r\u00e9ellement les traductions dans l'administration comme pr\u00e9vu. Ceci est corrig\u00e9 dans Grav 1.7 et ce param\u00e8tre fait ce qu'il est cens\u00e9 faire, afficher les codes de traduction en majuscules plut\u00f4t que les cha\u00eenes traduites elles-m\u00eames. Consultez la section D\u00e9pannage pour le correctif. Erreurs lors de l'enregistrement ou des plugins d'administration non fonctionnels Dans Grav 1.7, nous avons introduit Flex Pages comme nouvelle interface utilisateur de gestion de page par d\u00e9faut. De plus, pour optimiser les performances, nous avons arr\u00eat\u00e9 d'initialiser les pages \u00e0 chaque appel de l'administrateur. Revenir aux pages Grav normales peut temporairement r\u00e9soudre votre probl\u00e8me. Cela se fait en \u00e9ditant le plugin FlexObjects et en d\u00e9sactivant Pages (Admin) . Pour r\u00e9soudre correctement le probl\u00e8me, les plugins personnalis\u00e9s doivent \u00eatre mis \u00e0 jour pour prendre en charge \u00e0 la fois les pages Grav et les pages Flex en utilisant PageInterface et doivent \u00e9galement explicitement Pages si n\u00e9cessaire. Consultez la section Pages et la section Admin de ce guide pour plus de d\u00e9tails... Il y a \u00e9galement eu des probl\u00e8mes de plugins sp\u00e9cifiques qui ont d\u00e9j\u00e0 \u00e9t\u00e9 d\u00e9couverts. Consultez la section D\u00e9pannage de cette page pour des probl\u00e8mes sp\u00e9cifiques avec les plugins. Les plans de page cessent de fonctionner ou g\u00e9n\u00e8rent une erreur \u00e0 propos d'une boucle Grav 1.7.8 ajoute le support pour d\u00e9finir n'importe quel blueprint dans votre th\u00e8me. Cela signifie que si vous avez des plans de page dans le dossier blueprints/pages/ , les emplacements de plans standard sont utilis\u00e9s, tout comme dans les plugins. Malheureusement, certains th\u00e8mes plus anciens peuvent avoir un m\u00e9lange de fichiers dans blueprints/ et blueprint/pages , ce qui interrompt la d\u00e9tection et provoque soit des champs manquants dans l'administrateur lors de l'\u00e9dition des pages, soit une erreur fatale : boucle d\u00e9tect\u00e9e lors de l'extension du fichier blueprint . Si l'une de ces erreurs se produit, consultez la section D\u00e9pannage pour le correctif. Guide de mise \u00e0 jour rapide. Grav 1.7 n\u00e9cessite PHP 7.3.6 ou une version ult\u00e9rieure. La version recommand\u00e9e est la derni\u00e8re version de PHP 7.4 . YAML. IMPORTANT : l'analyseur YAML Grav 1.7 est plus strict et votre site peut tomber en panne si vous avez des erreurs de syntaxe dans vos fichiers de configuration ou vos en-t\u00eates de page. Cependant, si vous mettez \u00e0 jour votre site existant \u00e0 l'aide de `bin/gpm` ou du processus de mise \u00e0 niveau de `Admin Plugin`, la majeure partie de la syntaxe YAML endommag\u00e9e fonctionne. Pour revenir \u00e0 l'ancien comportement, vous devez vous assurer que vous disposez des param\u00e8tres suivants dans user/config/system.yaml : strict_mode: yaml_compat: true ou dans Admin sous Configuration \u2192 Advanced -> Yaml Compability ASTUCE : Le guide de mise \u00e0 jour Grav 1.6 a une section YAML Parsing int\u00e9gr\u00e9e. Il est tr\u00e8s important de le lire avant ! Par d\u00e9faut, Grav 1.7 utilise un analyseur Symfony 4.4 YAML , qui suit plus \u00e9troitement la sp\u00e9cification standard YAML que les anciennes versions de Grav. Cela signifie que les fichiers YAML qui fonctionnaient correctement auparavant peuvent provoquer des erreurs r\u00e9sultant d'un YAML non valide. Cependant, Grav reviendra par d\u00e9faut \u00e0 l'ancienne version 3.4 de l'analyseur pour que votre site reste op\u00e9rationnel. ASTUCE : vous devez ex\u00e9cuter la commande CLI bin/grav yamllinter ou visiter dans Admin > Tools > Reports avant et apr\u00e8s la mise \u00e0 niveau et corriger tous les avertissements et erreurs li\u00e9s \u00e0 YAML. Twig. IMPORTANT : Grav 1.7 active Twig Auto-Escaping par d\u00e9faut. Cependant, si vous mettez \u00e0 jour votre site existant \u00e0 l'aide de bin/gpm ou le processus de mise \u00e0 niveau de Admin Plugin conserve les param\u00e8tres d'\u00e9chappement automatique existants. Pour revenir \u00e0 l'ancien comportement, vous devez vous assurer que vous disposez des param\u00e8tres suivants dans user/config/system.yaml : twig: autoescape: false strict_mode: twig_compat: true ou dans Admin sous Configuration \u2192 Advanced -> Yaml Compability Et n'oubliez pas de vider le cache apr\u00e8s avoir fait cela ! ASTUCE : Le guide de mise \u00e0 niveau Grav 1.6 comporte une section Twig d\u00e9di\u00e9e. Il est tr\u00e8s important de la lire d'abord ! Le moteur de template Twig a \u00e9t\u00e9 mis \u00e0 jour vers la version 1.43, mais il prend \u00e9galement en charge Twig 2.13. Afin de prendre en charge cette nouvelle version de Twig, vous devez mettre \u00e0 jour toute ancienne syntaxe dans vos mod\u00e8les Twig. Grav 1.6 Upgrade Guide vous aide \u00e0 le faire. Les changements suppl\u00e9mentaires dans les mod\u00e8les sont : Ajout d'une nouvelle balise Twig {% cache %} \u00e9liminant le besoin d'extension twigcache. Ajout de la fonction twig array_diff() . Ajout de la fonction twig template_from_string() . Ajout d'une nouvelle fonction twig svg_image() pour faciliter l'inclusion de la source SVG dans Twig. Am\u00e9lioration de la fonction url() twig pour prendre le troisi\u00e8me param\u00e8tre (true) pour renvoyer l'URL sur un fichier inexistant au lieu de renvoyer false. Am\u00e9lioration du filtre |array twig pour travailler avec les it\u00e9rateurs et les objets avec la m\u00e9thode toArray() . Am\u00e9lioration de la fonction twig authorize() pour mieux fonctionner avec les param\u00e8tres de r\u00e8gle imbriqu\u00e9s. Am\u00e9lioration du filtre de twig |yaml_serialize : prise en charge ajout\u00e9e des objets JsonSerializable et d'autres objets de type tableau. Ajout de mod\u00e8les par d\u00e9faut pour external.html.twig , default.html.twig et modular.html.twig . RUPTURE DE COMPATIBILIT\u00c9 ARRI\u00c8RE : Utilisez {% script 'file.js' at 'bottom' %} au lieu de in 'bottom' qui est cass\u00e9. Formulaires. IMPORTANT : Grav 1.7 modifie le comportement de Strict Validation . Toutefois, si vous mettez \u00e0 jour votre site existant \u00e0 l'aide de bin/gpm ou du processus de mise \u00e0 niveau de Admin Plugin , le comportement en mode strict existant est conserv\u00e9. Am\u00e9liorations du mode strict : Dans les formulaires, d\u00e9claration de validation : strict n'\u00e9tait pas aussi strict que nous l'esp\u00e9rions \u00e0 cause d'un bogue. Le mode strict devrait emp\u00eacher les formulaires d'envoyer des champs suppl\u00e9mentaires et cela a \u00e9t\u00e9 corrig\u00e9 dans Grav 1.7. Malheureusement, bon nombre des anciens formulaires \u00e9taient d\u00e9clar\u00e9s stricts m\u00eame s'ils contenaient des donn\u00e9es suppl\u00e9mentaires. Pour revenir \u00e0 l'ancien comportement, vous devez vous assurer que vous disposez du param\u00e8tre suivant dans user/config/system.yaml : strict_mode: blueprint_compat: true La d\u00e9tection d'injection XSS est d\u00e9sormais activ\u00e9e par d\u00e9faut dans tous les formulaires frontaux. Consultez la documentation pour savoir comment d\u00e9sactiver ou personnaliser les v\u00e9rifications par formulaire et par champ. Pour cette raison, nous avons ajout\u00e9 une nouvelle option de configuration system.strict_mode.blueprint_compat: true pour conserver l'ancien comportement de validation : strict . Il est recommand\u00e9 de d\u00e9sactiver ce param\u00e8tre pour am\u00e9liorer la s\u00e9curit\u00e9 du site, mais avant cela, veuillez rechercher dans tous vos formulaires si vous utilisiez la fonctionnalit\u00e9 validation : strict . Si tel \u00e9tait le cas, supprimez la ligne ou testez si le formulaire fonctionne toujours. REMARQUE : Ce m\u00e9canisme de secours de r\u00e9trocompatibilit\u00e9 sera supprim\u00e9 dans Grav 2.0. Environnements et Multi-Sites. Important : Grav 1.7 d\u00e9place les environnements dans le dossier user://env . L'ancien emplacement fonctionne toujours, mais il est pr\u00e9f\u00e9rable de d\u00e9placer les environnements dans un seul emplacement, les futures fonctionnalit\u00e9s pourraient en d\u00e9pendre. Grav 1.7 ajoute \u00e9galement la prise en charge de la configuration de l'environnement bas\u00e9 sur le serveur et de la configuration multisite bas\u00e9e sur le serveur . Cette fonctionnalit\u00e9 est pratique si vous souhaitez utiliser par exemple des conteneurs Docker et que vous souhaitez les rendre ind\u00e9pendants du domaine que vous utilisez. Ou si vous ne souhaitez pas stocker de secrets dans la configuration, mais les stocker dans la configuration de votre serveur. De plus, le fichier setup.php peut d\u00e9sormais se trouver dans GRAV_ROOT/setup.php ou GRAV_ROOT/GRAV_USER_PATH/setup.php . Le deuxi\u00e8me emplacement facilite l'utilisation des environnements avec des r\u00e9f\u00e9rentiels git contenant uniquement le dossier utilisateur. Comptes utilisateur. L'administrateur dispose d\u00e9sormais d'une nouvelle administration de comptes \u00e0 l'aide d'utilisateurs flexibles : Gestionnaire de comptes utilisateurs Gestionnaire de groupes d'utilisateurs REMARQUE : la fonctionnalit\u00e9 Utilisateurs flexibles n'est pas encore utilis\u00e9e dans l'interface de votre site. Pages. L'administration des pages existantes a \u00e9t\u00e9 grandement am\u00e9lior\u00e9e avec les pages flexibles : Affichage de liste retravaill\u00e9 : bien meilleur support pour les grands sites Meilleur contr\u00f4le d'acc\u00e8s : prise en charge CRUD ACL avec les propri\u00e9taires de pages Meilleure prise en charge multilingue RUPTURE DE COMPATIBILIT\u00c9 ARRI\u00c8RE : Nous avons corrig\u00e9 la page d'erreur 404 lorsque vous acc\u00e9dez \u00e0 une page non routable avec des pages enfants routables et visibles en dessous. Maintenant, vous \u00eates redirig\u00e9 vers la premi\u00e8re page enfant routable et visible \u00e0 la place. C'est probablement ce que vous vouliez en premier lieu. REMARQUE : la fonctionnalit\u00e9 Flex Pages n'est pas encore utilis\u00e9e dans l'interface de votre site. Multilingue. Grav 1.7 a chang\u00e9 le comportement du fonctionnement des replis multilingues pour les pages. Auparavant, si la page n'existait pas avec la langue demand\u00e9e, l'ancienne impl\u00e9mentation recherchait la prochaine langue prise en charge. Cela signifiait que la page non traduite \u00e9tait toujours affich\u00e9e, mais la page pouvait utiliser une langue inconnue du lecteur. Le nouveau comportement consiste \u00e0 se rabattre uniquement sur la langue par d\u00e9faut du site. Ce comportement par d\u00e9faut peut \u00eatre remplac\u00e9 en d\u00e9finissant des langues de secours par langue \u00e0 l'aide de l'option de configuration system.languages.content_fallback . Si la page n'existe dans aucune des langues de secours, 404 Not Found s'affichera \u00e0 la place. RUPTURE DE COMPATIBILIT\u00c9 ARRI\u00c8RE : Veuillez ajouter les langues de secours correctes pour le contenu de la page dans system.yaml ou admin : Configuration > System > Languages > Content Language Fallback M\u00e9dias. La gestion des m\u00e9dias a \u00e9t\u00e9 grandement am\u00e9lior\u00e9e dans Grav 1.7. Certains faits saillants sont : Prise en charge du format d'image webp . Markdown : Ajout de la prise en charge des attributs natifs loading=lazy sur les images. Peut \u00eatre d\u00e9fini dans system.images.defaults ou par image md avec ?loading=lazy . Ajout de la possibilit\u00e9 de ne pas traiter des \u00e9l\u00e9ments sp\u00e9cifiques noprocess uniquement dans les extraits de lien/d'image, par ex. http://foo.com/page?id=foo&target=_blank&noprocess=id . CLI. Certains faits marquants sont : Toutes les commandes CLI acceptent maintenant les param\u00e8tres --env et --lang pour d\u00e9finir respectivement l'environnement et la langue utilis\u00e9e ( -e ne fonctionne plus). Ajout d'une nouvelle commande CLI bin/grav server pour ex\u00e9cuter facilement les serveurs Web int\u00e9gr\u00e9s Symfony ou PHP. V\u00e9rification am\u00e9lior\u00e9e de la commande cron du Scheduler et informations CLI plus utiles. Ajout de la nouvelle option -r <job-id> pour la commande CLI du planificateur pour forcer l'ex\u00e9cution d'un travail. Am\u00e9lioration de la commande CLI bin/grav yamllinter en ajoutant une option pour rechercher les probl\u00e8mes de YAML Linting \u00e0 partir de l'ensemble du site ou du dossier personnalis\u00e9. Les \u00e9checs de la commande CLI/GPM renvoient d\u00e9sormais un code non nul (permettant la d\u00e9tection d'erreur si la commande \u00e9choue). Configuration. Ajout d'une nouvelle option de configuration pour conserver la langue par d\u00e9faut dans les fichiers .md si elle est d\u00e9finie sur false . system.yaml : langues.include_default_lang_file_extension : true |false Admin : Configuration > Syst\u00e8mes > Langues > Inclure la langue par d\u00e9faut dans l'extension de fichier . Ajout d'une nouvelle option de configuration pour d\u00e9finir les langues de contenu de secours individuellement pour chaque langue. system.yaml : languages.content_fallback : voir Configuration de la langue Admin : Configuration > Syst\u00e8me > Langues > Langue de remplacement du contenu . Ajout d'une nouvelle option de configuration pour choisir entre la barre de d\u00e9bogage et le mouvement d'horloge. system.yaml : debugger.provider : clockwork |debugbar. Admin : Configuration > Syst\u00e8me > D\u00e9bogueur > Fournisseur de d\u00e9bogueur *. Ajout d'une nouvelle option de configuration pour masquer les informations potentiellement sensibles. system.yaml : debugger.censored : false |true. Admin : Configuration > Syst\u00e8me > D\u00e9bogueur > Donn\u00e9es sensibles au censeur . Ajout d'une nouvelle option de configuration pour conserver l'ancienn comportement validation: strict . system.yaml : strict_mode.blueprint_compat : true |false. Admin : Configuration > Syst\u00e8me > Avanc\u00e9 > Compatibilit\u00e9 Blueprint . Ajout de la prise en charge de la configuration syst\u00e8me pour les en-t\u00eates HTTP_X_FORWARDED (h\u00f4te d\u00e9sactiv\u00e9 par d\u00e9faut). system.yaml : http_x_forwarded.protocol : true |false. Admin : Configuration > Syst\u00e8me > Avanc\u00e9 > HTTP_X_FORWARDED_PROTO activ\u00e9 . system.yaml : http_x_forwarded.host : true| false . Admin : Configuration > Syst\u00e8me > Avanc\u00e9 > HTTP_X_FORWARDED_HOST activ\u00e9 . system.yaml : `http_x_forwarded.port : true |false. Admin : Configuration > Syst\u00e8me > Avanc\u00e9 > HTTP_X_FORWARDED_PORT activ\u00e9 . system.yaml : `http_x_forwarded.ip : true| false . Admin : Configuration > Syst\u00e8me > Avanc\u00e9 > IP HTTP_X_FORWARDED activ\u00e9 . Ajout d'une nouvelle option de configuration security.sanitize_svg pour supprimer le code potentiellement dangereux des fichiers SVG. security.yaml : sanitize_svg : true |false. Admin : Configuration > S\u00e9curit\u00e9 > Nettoyer SVG . D\u00c9VELOPPEURS. D\u00e9bogage. Ajout de la prise en charge des outils de d\u00e9veloppement Clockwork (maintenant d\u00e9bogueur par d\u00e9faut). Ajout de la prise en charge de l'extension PHP Tideways XHProf pour les appels de m\u00e9thode de profilage. Ajout du profilage Twig pour le d\u00e9bogueur Clockwork. Utiliser le chargeur automatique de compositeur. Mise \u00e0 jour de bin/composer.phar vers 2.0.2 qui est tout nouveau et beaucoup plus rapide. Veuillez ajouter le fichier composer.json \u00e0 votre plugin et ex\u00e9cuter composer update --no-dev (et n'oubliez pas de le maintenir \u00e0 jour) : compositeur.json { \"name\": \"getgrav/grav-plugin-example\", \"type\": \"grav-plugin\", \"description\": \"Example plugin for Grav CMS\", \"keywords\": [\"example\", \"plugin\"], \"homepage\": \"https://github.com/getgrav/grav-plugin-example\", \"license\": \"MIT\", \"authors\": [ { \"name\": \"...\", \"email\": \"...\", \"homepage\": \"...\", \"role\": \"Developer\" } ], \"support\": { \"issues\": \"https://github.com/getgrav/grav-plugin-example/issues\", \"docs\": \"https://github.com/getgrav/grav-plugin-example/blob/master/README.md\" }, \"require\": { \"php\": \">=7.1.3\" }, \"autoload\": { \"psr-4\": { \"Grav\\\\Plugin\\\\Example\\\\\": \"classes/\", \"Grav\\\\Plugin\\\\Console\\\\\": \"cli/\" }, \"classmap\": [ \"example.php\" ] }, \"config\": { \"platform\": { \"php\": \"7.1.3\" } } } Voir le sch\u00e9ma Composer Veuillez utiliser autoloader au lieu de require dans le code : exemple.php /** * @return array */ public static function getSubscribedEvents(): array { return [ 'onPluginsInitialized' => [ // This is only required in Grav 1.6. Grav 1.7 automatically calls $plugin->autolaod() method. ['autoload', 100000], ] ]; } /** * Composer autoload. * * @return \\Composer\\Autoload\\ClassLoader */ public function autoload(): \\Composer\\Autoload\\ClassLoader { return require __DIR__ . '/vendor/autoload.php'; } Plugins & Th\u00e8mes : Appelez $plugin->autoload() et $theme->autoload() automatiquement lorsque l'objet est initialis\u00e9. Assurez-vous que votre code n'utilise pas require ou include pour charger des classes. Blueprints de plugins/th\u00e8mes (blueprints.yaml ). S'il-vous-plait ajoutez: slug: folder-name type: plugin|theme Assurez-vous de mettre \u00e0 jour vos d\u00e9pendances. Je recommande de r\u00e9gler Grav sur 1.6 ou 1.7 et de mettre \u00e0 jour votre code/fournisseur vers PHP 7.1. dependencies: - { name: grav, version: '>=1.6.0' } themes ajout\u00e9s aux plans et \u00e0 la configuration mis en cache. Grav 1.7.8 ajoute le support pour d\u00e9finir n'importe quel blueprint dans votre th\u00e8me. D\u00e9placez tous les fichiers et dossiers de blueprints/ dans blueprints/pages/ pour que votre th\u00e8me reste compatible. N'oubliez pas \u00e9galement de mettre \u00e0 jour la d\u00e9pendance Grav minimale \u00e0 > = 1.7.8. . Sessions. L'ID de session change maintenant lors de la connexion pour \u00e9viter les probl\u00e8mes de fixation de session. Ajout de la m\u00e9thode Session :: regenerateId() pour \u00e9viter correctement les probl\u00e8mes de fixation de session. ACL. user.authorize() exige maintenant que l'utilisateur soit autoris\u00e9 (v\u00e9rification 2FA r\u00e9ussie), \u00e0 \u200b\u200bmoins que la r\u00e8gle ne contienne login dans son nom. Ajout de la prise en charge d'ACL plus avanc\u00e9es (CRUD) BC BREAK user.authorize() et Flex object.isAuthorized() ont maintenant deux \u00e9tats de refus : false et null .. Assurez-vous que vous n'avez pas de contr\u00f4les stricts contre false : $user->authorize($action) === false (PHP) ou user.authorize(action) is same as(false) (Twig). Pour les v\u00e9rifications n\u00e9gatives, vous devez utiliser !user->authorize($action) (PHP) ou not user.authorize(action) (Twig). Le changement a \u00e9t\u00e9 fait pour permettre des r\u00e8gles de refus fortes en encha\u00eenant les actions si les pr\u00e9c\u00e9dentes ne correspondent pas : user.authorize(action1) ?? user.authorize(action2) ?? user.authorize(action3) . Notez que la fonction Twig authorize () conservera toujours l'ancien comportement ! Pages. Ajout de mod\u00e8les par d\u00e9faut pour external.html.twig , default.html.twig et modular.html.twig . L'administrateur utilise Flex Pages par d\u00e9faut (peut \u00eatre d\u00e9sactiv\u00e9 \u00e0 partir du plugin Flex-Objects ). Ajout de la prise en charge des autorisations d'administrateur sp\u00e9cifiques \u00e0 la page pour les Flex Pages . Ajout de la prise en charge de la page racine pour les Flex Pages . Correction des mauvais appels Pages::dispatch() (avec redirection) alors que nous voulions vraiment appeler Pages::find() . Ajout de la m\u00e9thode : Pages::getCollection() . D\u00e9placement de la logique de collection() et evaluate() de la classe Page vers la classe Pages . OBSOLETE $page->modular() en faveur de $page->isModule() . OBSOLETE PageCollectionInterface::nonModular() en faveur de PageCollectionInterface::pages() . OBSOLETE PageCollectionInterface::modular() en faveur de PageCollectionInterface::modules() . BC BREAK Fixed Page::modular() et Page::modularTwig() retournant null pour les dossiers et autres pages non initialis\u00e9es. Ne devrait pas affecter votre code \u00e0 moins que vous ne v\u00e9rifiiez contre false ou null . BC BREAK Toujours utiliser \\Grav\\Common\\Page\\Interfaces\\PageInterface au lieu de \\Grav\\Common\\Page\\Page dans les signatures de m\u00e9thode. L'administrateur utilise d\u00e9sormais les Flex Pages par d\u00e9faut, la collecte se comportera de mani\u00e8re l\u00e9g\u00e8rement diff\u00e9rente. BC BREAK $page->topParent() peut renvoyer la page elle-m\u00eame au lieu de null . * BC BREAK $page->header() peut maintenant \\Grav\\Common\\Page\\Header renvoyer un objet au lieu de stdClass , vous devez g\u00e9rer les deux (Flex vs regular). M\u00e9dias. Ajout de la m\u00e9thode MediaTrait :: freeMedia () pour lib\u00e9rer les m\u00e9dias (et la m\u00e9moire). Ajout de la prise en charge du t\u00e9l\u00e9chargement et de la suppression d'images directement dans Media en utilisant PSR-7. Types d'actifs ajust\u00e9s pour permettre l'extension des actifs dans la classe. BC BREAK Media n'\u00e9tend plus les Getters , l'acc\u00e8s \u00e0 $media->$filename ne fonctionne plus, utilisez plut\u00f4t $media[$filename] ! Markdown. BC BREAK Mise \u00e0 niveau de Parsedown vers 1.7 pour Parsedown-Extra 0.8. Les plugins qui \u00e9tendent Parsedown peuvent avoir besoin d'un correctif pour s'afficher en HTML. Ajout de la nouvelle m\u00e9thode Excerpts :: processLinkHtml() . Utilisateurs. Ajout d'un support exp\u00e9rimental pour Flex Users dans le frontend (pas encore recommand\u00e9 d'utiliser). L'administrateur utilise Flex Users par d\u00e9faut (peut \u00eatre d\u00e9sactiv\u00e9 \u00e0 partir du plug-in Flex-Objects ). Flex Users am\u00e9lior\u00e9s : respectez les plans et autorisez l'utilisation de Flex uniquement en mode administrateur. Flex Users am\u00e9lior\u00e9s : l'ACL des utilisateurs et des groupes prend d\u00e9sormais en charge les autorisations de refus. UserInterface ::authorize() modifi\u00e9 pour renvoyer null ayant la m\u00eame signification que false si l'acc\u00e8s est refus\u00e9 en raison de l'absence de r\u00e8gle correspondante. OBSOLETE \\Grav\\Common\\User\\Group en faveur de $grav['user_groups'] , qui contient la collection Flex UserGroup. BC BREAK Toujours utiliser `Grav\\Common\\User\\Interfaces\\UserInterface au lieu de \\Grav\\Common\\User\\User` dans les signatures de m\u00e9thode. Flex. N'utilisez pas directement les classes Flex Framework , il est pr\u00e9f\u00e9rable d'utiliser ou d'\u00e9tendre les classes sous l'espace de noms Grav\\Common\\Flex\\Types\\Generic . Ajout de $grav['flex'] pour acc\u00e9der \u00e0 tous les r\u00e9pertoires Flex enregistr\u00e9s Ajout de FlexRegisterEvent qui se d\u00e9clenche lorsque $grav['flex'] est acc\u00e9d\u00e9 pour la premi\u00e8re fois. Ajout de la m\u00e9thode hasFlexFeature() pour tester si FlexObject ou FlexCollection impl\u00e9mente une fonctionnalit\u00e9 donn\u00e9e. Ajout de la m\u00e9thode getFlexFeatures() pour renvoyer toutes les fonctionnalit\u00e9s impl\u00e9ment\u00e9es par FlexObject ou FlexCollection . Ajout de la m\u00e9thode FlexObject :: refresh () pour s'assurer que l'objet est \u00e0 jour. Ajout de FlexStorage :: getMetaData() pour obtenir des m\u00e9ta-informations d'objet mises \u00e0 jour pour les cl\u00e9s r\u00e9pertori\u00e9es. Ajout de l'interface FlexDirectoryInterface . Ajout de l'option de recherche same_as aux Flex Objects. La m\u00e9thode Flex Pages $page->header() renvoie l'objet \\Grav\\Common\\Page\\Header , l'ancienne classe Page renvoie toujours stdClass . Renomm\u00e9 PageCollectionInterface::nonModular() en PageCollectionInterface::pages() et obsol\u00e8te l'ancienne m\u00e9thode Renomm\u00e9 PageCollectionInterface::modular() en PageCollectionInterface::modules() et l'ancienne m\u00e9thode est obsol\u00e8te. FlexDirectory::getObject() peut maintenant \u00eatre appel\u00e9 sans aucun param\u00e8tre pour cr\u00e9er un nouvel objet. Impl\u00e9mentation d'une configuration personnalisable par type de r\u00e9pertoire flexible. OBSOLETE FlexDirectory::update() et FlexDirectory::remove() . BC BREAK D\u00e9placement de toutes les classes de type Flex sous Grav\\Common\\Flex . BC BREAK FlexStorageInterface::getStoragePath() et getMediaPath() peuvent maintenant renvoyer null . BC BREAK Les objets Flex ne renvoient plus de cl\u00e9 temporaire s'ils n'en ont pas ; la cl\u00e9 vide est renvoy\u00e9e \u00e0 la place. BC BREAK Argument de rechargement ajout\u00e9 \u00e0 FlexStorageInterface::getMetaData() . Vous pouvez ajouter le fichier edit_list.html.twig \u00e0 un champ de formulaire afin de personnaliser l'apparence dans la vue de la liste. Multilingue. Prise en charge am\u00e9lior\u00e9e de la langue pour la classe Route . Traductions : renommer MODULAIRE en MODULE partout. Ajout de Language::getPageExtensions() pour obtenir la liste compl\u00e8te des extensions de langue de page prises en charge. BC BREAK Fixed Language::getFallbackPageExtensions() pour revenir uniquement \u00e0 la langue par d\u00e9faut au lieu de parcourir toutes les langues. Multi-sites. Ajout du support pour avoir tous les sites/environnements sous le dossier user/env . S\u00e9rialisation. Toutes les classes utilisent maintenant la s\u00e9rialisation PHP 7.4. Les anciennes m\u00e9thodes Serializable sont d\u00e9sormais d\u00e9finitives et ne peuvent pas \u00eatre remplac\u00e9es. Blueprints. Ajout du filtre flatten_array pour la validation des champs de formulaire. Ajout de la prise en charge de security@: ou : [admin.super, admin.pages] dans les plans (prise en charge du mode ET/OU imbriqu\u00e9). Validation du Blueprint : Ajout de validate : value_type : bool|int|float|string|trim to array pour filtrer toutes les valeurs \u00e0 l'int\u00e9rieur du tableau. Si vos plugins ont un dossier blueprints, l'initialiser dans l'\u00e9v\u00e9nement sera trop tard. Faites ceci \u00e0 la place : class MyPlugin extends Plugin { /** @var array */ public $features = [ 'blueprints' => 0, // Use priority 0 ]; } \u00c9v\u00e9nements. Utilisez Symfony EventDispatcher directement au lieu de rockettheme/toolbox wrapper . Ajout de la m\u00e9thode $grav->dispatchEvent() pour les \u00e9v\u00e9nements PSR-14. Ajout de PluginsLoadedEvent qui se d\u00e9clenche apr\u00e8s que les plugins ont \u00e9t\u00e9 charg\u00e9s mais pas encore initialis\u00e9s. Ajout de SessionStartEvent qui se d\u00e9clenche au d\u00e9marrage de la session. Ajout de FlexRegisterEvent qui se d\u00e9clenche lorsque $grav['flex'] est acc\u00e9d\u00e9 pour la premi\u00e8re fois. Ajout de PermissionsRegisterEvent qui se d\u00e9clenche lors du premier acc\u00e8s \u00e0 $grav['permissions'] . Ajout de l'\u00e9v\u00e9nement onAfterCacheClear . V\u00e9rifiez l'\u00e9v\u00e9nement onAdminTwigTemplatePaths , il ne doit PAS \u00eatre : public function onAdminTwigTemplatePaths($event) { // This code breaks all the other plugins in admin, including Flex Objects $event['paths'] = [__DIR__ . '/admin/themes/grav/templates']; } mais: public function onAdminTwigTemplatePaths($event) { // Add plugin template path for admin. $paths = $event['paths']; $paths[] = __DIR__ . '/admin/themes/grav/templates'; $event['paths'] = $paths; } Javascript. Mise \u00e0 jour de JQuery group\u00e9 vers la derni\u00e8re version 3.5.1 . Divers. Ajout de Utils ::functionExists() : compatible avec PHP 8 function_exists() . Ajout des m\u00e9thodes d'assistance Utils::isAssoc() et Utils::isNegative() . Ajout de la m\u00e9thode Utils :: simpleTemplate() pour une mod\u00e9lisation tr\u00e8s simple des variables. Ajout de Utils ::fullPath() pour obtenir le chemin complet d'un fichier, qu'il s'agisse d'un flux, d'un relatif, etc. Prend en charge le remplacement personnalisable des caract\u00e8res nuls dans CSVFormatter :: decode () . Ajout de la nouvelle fonction Security :: sanitizeSVG() . Ajout de la m\u00e9thode $grav->close() pour terminer correctement la requ\u00eate avec une r\u00e9ponse. Ajout de la m\u00e9thode Folder::countChildren() pour d\u00e9terminer si un dossier a des dossiers enfants. Prise en charge des liens symboliques lors de l'enregistrement du fichier. Ajout de la m\u00e9thode Route :: getBase() . BC BREAK Rend les objets Route immuables. Cela signifie que vous devez faire : {% set route = route.withExtension('.html') %} (pour toutes les m\u00e9thodes withX ) pour conserver la version mise \u00e0 jour. Meilleure gestion de Content-Encoding dans Apache lorsque la compression de contenu est d\u00e9sactiv\u00e9e. Ajout d'une fonction de compatibilit\u00e9 Uri::getAllHeaders() . Autoriser le passage des options JsonFormatter sous forme de cha\u00eene. CLI. BC BREAK De nombreux plugins initialisent Grav d'une mauvaise mani\u00e8re, il n'est pas s\u00fbr d'initialiser les plugins et le th\u00e8me par vous-m\u00eame Les appels suivants n\u00e9cessitent Grav 1.6.21 ou une version ult\u00e9rieure, il est donc recommand\u00e9 de d\u00e9finir la d\u00e9pendance Grav sur cette version Dans la m\u00e9thode serve() : Appelez $this->setLanguage($langCode) ; avant de faire quoi que ce soit d'autre si vous voulez d\u00e9finir la langue (ou utiliser par d\u00e9faut). Appelez l'un des suivants : $this->initializeGrav() ; D\u00e9j\u00e0 appel\u00e9 si vous \u00eates dans bin/plugin, sinon vous devrez peut-\u00eatre appeler celui-ci : $this->initializePlugins() ; Cela initialise grav, plugins (jusqu'\u00e0 onPluginsInitialized). $this->initializeThemes() ; Cela initialise grav, plugins et th\u00e8me. $this->initializePages() ; Cela initialise grav, plugins, th\u00e8me et tout ce dont les pages ont besoin. C'est une bonne id\u00e9e de pr\u00e9fixer vos classes de commandes CLI avec le nom de votre plugin, sinon il peut y avoir des conflits de noms (nous en avons d\u00e9j\u00e0 !). Biblioth\u00e8ques utilis\u00e9es. Mise \u00e0 jour des composants Symfony vers la version 4.4, veuillez mettre \u00e0 jour toutes les fonctionnalit\u00e9s obsol\u00e8tes dans votre code. BC BREAK Veuillez ex\u00e9cuter bin/grav yamllinter pour trouver toute erreur d'analyse YAML sur votre site (y compris vos plugins et th\u00e8mes). PLUGINS. Administrateur. Ajout de l'option Content Editor au plan de compte d'utilisateur. BC BREAK Admin n'initialisera plus les pages frontend, cela a \u00e9t\u00e9 fait pour acc\u00e9l\u00e9rer consid\u00e9rablement le plugin Admin. Veuillez appeler $grav['admin']->enablePages() ou {% do admin.enablePages() %} si vous avez besoin d'acc\u00e9der aux pages frontales. Cet appel peut \u00eatre effectu\u00e9 plusieurs fois en toute s\u00e9curit\u00e9. Si vous utilisez Flex Pages , veuillez utiliser Flex Directory \u00e0 la place, cela rendra votre code beaucoup plus rapide. L'administrateur utilise d\u00e9sormais Flex pour modifier Accounts et Pages . Si votre plugin s'accroche \u00e0 l'un de ceux-ci, assurez-vous qu'il fonctionne toujours. Le cache administrateur est activ\u00e9 par d\u00e9faut, assurez-vous que votre plugin efface le cache si n\u00e9cessaire. Veuillez \u00e9viter de vider tout le cache ! Noyau de code court. OBSOLETE Chaque shortcode doit avoir la m\u00e9thode init() , les classes sans elle cesseront de fonctionner \u00e0 l'avenir. D\u00e9pannage des probl\u00e8mes. ERREUR : mod\u00e8le flex-objects.html.twig introuvable pour la page . Si vous obtenez cette erreur apr\u00e8s la mise \u00e0 niveau vers Grav 1.7, cela peut \u00eatre li\u00e9 \u00e0 un plugin appel\u00e9 content-edit . Si vous d\u00e9sactivez ce plugin, l'erreur devrait se r\u00e9soudre d'elle-m\u00eame. Grav Num\u00e9ro #3169 Administrateur non traduit. Si votre plugin d'administration ressemble \u00e0 ceci : La correction est tr\u00e8s simple et peut \u00eatre effectu\u00e9e m\u00eame lorsqu'elle n'est pas enti\u00e8rement traduite. Acc\u00e9dez simplement \u00e0 PLUGIN_ADMIN.CONFIGURATION , puis dans PLUGIN_ADMIN.LANGUAGES , d\u00e9finissez PLUGIN_ADMIN.LANGUAGE_TRANLATIONS sur PLUGIN_ADMIN.YES : Les plans de page cessent de fonctionner dans l'administration. Si vous ne pouvez pas voir vos champs personnalis\u00e9s lors de la modification de la page, votre th\u00e8me utilise deux emplacements en conflit pour les plans de page. Si le th\u00e8me n'a pas \u00e9t\u00e9 cr\u00e9\u00e9 par vous, veuillez signaler un bogue \u00e0 l'auteur du th\u00e8me. Pour corriger le bogue, vous devez d\u00e9placer tous les fichiers et dossiers de votre th\u00e8me de blueprints/ vers blueprints/pages/ (n\u00e9cessite Grav 1.7.8+ ). Sinon, si le th\u00e8me doit prendre en charge les anciennes versions de Grav, faites l'inverse. Erreur : boucle d\u00e9tect\u00e9e lors de l'extension du fichier Blueprint. La solution la plus simple pour une erreur de boucle consiste \u00e0 d\u00e9placer les fichiers \u00e0 leur emplacement appropri\u00e9, veuillez consulter le probl\u00e8me ci-dessus. Vous pouvez \u00e9galement r\u00e9soudre le probl\u00e8me en modifiant le plan de la page cass\u00e9e \u00e0 partir de : extends@: type: [NAME] context: 'blueprints://pages' o\u00f9 [NAME ] est le nom de fichier (sans l'extension de fichier) du plan lui-m\u00eame, pour : extends@: self@ Style CSS manquant dans l'administration. Il a \u00e9t\u00e9 signal\u00e9 qu'apr\u00e8s la mise \u00e0 niveau vers les derniers Grav 1.7 et Admin 1.10, certaines pages d'administration semblent cass\u00e9es et pas enti\u00e8rement styl\u00e9es. Cela pourrait \u00eatre li\u00e9 au plugin imagecreate . D\u00e9sactiver ce plugin ne suffit pas, vous devez supprimer compl\u00e8tement le plugin, puis l'erreur devrait se r\u00e9soudre d'elle-m\u00eame. Probl\u00e8me d'administration #2035 Revenir \u00e0 Grav 1.6. Bien que nous vous recommandons de r\u00e9soudre tous les probl\u00e8mes que vous pourriez avoir pour vous assurer que Grav 1.7 et les futures mises \u00e0 jour seront une mise \u00e0 niveau facile, il y aura des sc\u00e9narios o\u00f9 vous avez une fonctionnalit\u00e9 de plug-in personnalis\u00e9e, ou n'avez pas les ressources de d\u00e9veloppement \u00e0 port\u00e9e de main, et avez juste besoin de revenir rapidement \u00e0 Grav 1.6. Si vous avez un acc\u00e8s CLI au site, cela peut \u00eatre fait en ex\u00e9cutant ces commandes \u00e0 partir de la racine de votre site Grav 1.7 : wget -q https://getgrav.org/download/core/grav-update/1.6.31 -O tmp/grav-update-v1.6.31.zip wget -q https://getgrav.org/download/plugins/admin/1.9.19 -O tmp/grav-plugin-admin-v1.9.19.zip unzip tmp/grav-update-v1.6.31.zip -d tmp unzip tmp/grav-plugin-admin-v1.9.19.zip -d tmp cp -rf tmp/getgrav-grav-plugin-admin-5d86394/* user/plugins/admin/ cp -rf tmp/grav-update/* ./ Fondamentalement, il effectue une installation directe de la derni\u00e8re version de Grav 1.6 et Admin 1.9 en plus de votre installation actuelle. Il ne touche pas le dossier user/ afin que votre contenu et vos plugins ne soient pas impact\u00e9s. Pour ceux qui n'ont pas acc\u00e8s \u00e0 la CLI, t\u00e9l\u00e9chargez les fichiers grav-update-v1.6.31.zip et grav-plugin-admin-1.9.19.zip en utilisant les liens donn\u00e9s ici. D\u00e9compressez les fichiers dans votre syst\u00e8me de fichiers. Utilisez ensuite votre client FTP/SFTP pr\u00e9f\u00e9r\u00e9 pour copier tous les fichiers Grav dans vos fichiers WEBROOT et Admin dans WEBROOT/user/plugins/admin .","title":"Mise \u00e0 niveau vers Grav 1.7"},{"location":"avance-grav-up-to-1-7/#le-html-est-affiche-sous-forme-de-code-sur-votre-site-plutot-que-detre-rendu-sous-forme-de-html-comme-prevu","text":"Ce comportement est le r\u00e9sultat de la nouvelle valeur par d\u00e9faut de l' auto-escaping \u00e9tant vrai dans Grav 1.7. Il s'agit d'une am\u00e9lioration de la s\u00e9curit\u00e9, et si vous effectuez une mise \u00e0 niveau \u00e0 partir d'une version ant\u00e9rieure \u00e0 1.7, nous activons automatiquement le param\u00e8tre de compatibilit\u00e9 Twig dans la configuration du syst\u00e8me pour garantir que votre ancien code Twig continuera \u00e0 fonctionner. Si vous effectuez une mise \u00e0 jour manuelle vers la version 1.7 ou une mise \u00e0 niveau d'une mani\u00e8re qui ne passe pas par le processus de mise \u00e0 niveau automatique de GPM, vous devez d\u00e9finir ce param\u00e8tre vous-m\u00eame. Consultez la section Twig de ce guide pour plus de d\u00e9tails...","title":"Le HTML est affich\u00e9 sous forme de code sur votre site plut\u00f4t que d'\u00eatre rendu sous forme de HTML comme pr\u00e9vu."},{"location":"avance-grav-up-to-1-7/#obtention-derreurs-a-propos-de-yaml-non-valide","text":"Comme nous avons mis \u00e0 niveau vers une version plus r\u00e9cente du framework Symfony, l'analyseur YAML est plus strict qu'il ne l'\u00e9tait dans les versions ant\u00e9rieures \u00e0 1.7. Pour g\u00e9rer cela, nous avons inclus une ancienne version de l'analyseur qui est disponible lors de l'activation de la compatibilit\u00e9 Yaml. Ceci est automatiquement g\u00e9r\u00e9 pour vous si vous mettez \u00e0 niveau vers Grav 1.7 via GPM, mais si vous avez mis \u00e0 niveau manuellement, vous devrez d\u00e9finir cette valeur vous-m\u00eame. Consultez la section YAML de ce guide pour plus de d\u00e9tails...","title":"Obtention d'erreurs \u00e0 propos de YAML non valide."},{"location":"avance-grav-up-to-1-7/#ladministrateur-apparait-avec-des-chaines-non-traduites","text":"Si votre administrateur affiche des cha\u00eenes non traduites dans l'interface, c'est probablement parce que vous avez pr\u00e9c\u00e9demment d\u00e9sactiv\u00e9 les traductions linguistiques . C'\u00e9tait bogu\u00e9 dans les versions pr\u00e9c\u00e9dentes de Grav et sa d\u00e9sactivation ne d\u00e9sactivait pas r\u00e9ellement les traductions dans l'administration comme pr\u00e9vu. Ceci est corrig\u00e9 dans Grav 1.7 et ce param\u00e8tre fait ce qu'il est cens\u00e9 faire, afficher les codes de traduction en majuscules plut\u00f4t que les cha\u00eenes traduites elles-m\u00eames. Consultez la section D\u00e9pannage pour le correctif.","title":"L'administrateur appara\u00eet avec des cha\u00eenes non traduites"},{"location":"avance-grav-up-to-1-7/#erreurs-lors-de-lenregistrement-ou-des-plugins-dadministration-non-fonctionnels","text":"Dans Grav 1.7, nous avons introduit Flex Pages comme nouvelle interface utilisateur de gestion de page par d\u00e9faut. De plus, pour optimiser les performances, nous avons arr\u00eat\u00e9 d'initialiser les pages \u00e0 chaque appel de l'administrateur. Revenir aux pages Grav normales peut temporairement r\u00e9soudre votre probl\u00e8me. Cela se fait en \u00e9ditant le plugin FlexObjects et en d\u00e9sactivant Pages (Admin) . Pour r\u00e9soudre correctement le probl\u00e8me, les plugins personnalis\u00e9s doivent \u00eatre mis \u00e0 jour pour prendre en charge \u00e0 la fois les pages Grav et les pages Flex en utilisant PageInterface et doivent \u00e9galement explicitement Pages si n\u00e9cessaire. Consultez la section Pages et la section Admin de ce guide pour plus de d\u00e9tails... Il y a \u00e9galement eu des probl\u00e8mes de plugins sp\u00e9cifiques qui ont d\u00e9j\u00e0 \u00e9t\u00e9 d\u00e9couverts. Consultez la section D\u00e9pannage de cette page pour des probl\u00e8mes sp\u00e9cifiques avec les plugins.","title":"Erreurs lors de l'enregistrement ou des plugins d'administration non fonctionnels"},{"location":"avance-grav-up-to-1-7/#les-plans-de-page-cessent-de-fonctionner-ou-generent-une-erreur-a-propos-dune-boucle","text":"Grav 1.7.8 ajoute le support pour d\u00e9finir n'importe quel blueprint dans votre th\u00e8me. Cela signifie que si vous avez des plans de page dans le dossier blueprints/pages/ , les emplacements de plans standard sont utilis\u00e9s, tout comme dans les plugins. Malheureusement, certains th\u00e8mes plus anciens peuvent avoir un m\u00e9lange de fichiers dans blueprints/ et blueprint/pages , ce qui interrompt la d\u00e9tection et provoque soit des champs manquants dans l'administrateur lors de l'\u00e9dition des pages, soit une erreur fatale : boucle d\u00e9tect\u00e9e lors de l'extension du fichier blueprint . Si l'une de ces erreurs se produit, consultez la section D\u00e9pannage pour le correctif.","title":"Les plans de page cessent de fonctionner ou g\u00e9n\u00e8rent une erreur \u00e0 propos d'une boucle"},{"location":"avance-groupes-autorisations/","text":"Groupes et autorisations Voir la FAQ Grav Admin , pour savoir comment g\u00e9rer les utilisateurs. D\u00e9finir des groupes. Par d\u00e9faut, Grav ne fournit aucun groupe. Vous devez les d\u00e9finir. Les groupes sont d\u00e9finis dans le fichier user/config/groups.yaml. Si ce fichier n'existe pas encore, cr\u00e9ez-le. Voici un exemple de d\u00e9finition de groupes d'utilisateurs : 1 | registered: 2 | icon: users 3 | readableName: 'Registered Users' 4 | description: 'The group of registered users' 5 | access: 6 | site: 7 | login: true 8 | paid: 9 | readableName: 'Paid Members' 10 | description: 'The group of paid members' 11 | icon: money 12 | access: 13 | site: 14 | login: true 15 | paid: true 16 | administrators: 17 | groupname: administrators 18 | readableName: Administrators 19 | description: 'The group of administrators' 20 | icon: child 21 | access: 22 | admin: 23 | login: true 24 | site: 25 | login: true Nous d\u00e9finissons ici 3 groupes. Affectation d'un utilisateur \u00e0 un groupe. Chaque utilisateur peut \u00eatre affect\u00e9 \u00e0 un groupe. Ajoutez simplement 1 | groups: 2 | - paid au fichier yaml d'un utilisateur sous user/accounts . Vous pouvez ajouter plusieurs groupes : 1 | groups: 2 | - administrators 3 | - another-group Vous pouvez \u00e9galement modifier les informations de groupe d'un utilisateur via le plug-in d'administration. Autorisations. Les utilisateurs affect\u00e9s \u00e0 un groupe h\u00e9ritent des autorisations du groupe. Vous pouvez par exemple d\u00e9finir un groupe qui a la permission site.paid en ajoutant : 1 | access: 2 | site: 3 | paid: false \u00e0 la d\u00e9finition de groupe dans user/config/groups.yaml. Lorsqu'un utilisateur est affect\u00e9 \u00e0 ce groupe, il h\u00e9rite de l'autorisation site.paid: true. Lorsqu'un utilisateur appartient \u00e0 plusieurs groupes, il suffit qu'un groupe fournisse une autorisation, et celle-ci sera ajout\u00e9e aux autorisations de l'utilisateur. Ajustement des autorisations au niveau de l'utilisateur Vous pouvez \u00e9galement affiner les autorisations au niveau de l'utilisateur, comme d'habitude. Avec les groupes, vous pouvez d\u00e9finir une autorisation globale et la refuser au niveau de l'utilisateur, en ajoutant 1 | access: 2 | site: 3 | paid: false au fichier yaml d'un utilisateur. Voir la FAQ Grav Admin , pour en savoir plus sur les autorisations disponibles.","title":"Groupes et autorisations"},{"location":"avance-perf-cache/","text":"Performances & mise en cache L'une des principales caract\u00e9ristiques qui rendent Grav si convaincant est sa rapidit\u00e9. Cela a toujours \u00e9t\u00e9 une consid\u00e9ration cl\u00e9 dans la conception inh\u00e9rente de Grav et est principalement d\u00fb \u00e0 la mise en cache, mais inclut plusieurs autres composants. Performance. La mise en cache PHP est essentielle . Vous devez ex\u00e9cuter un opcache PHP et un userchache (comme APCu) afin d'obtenir les meilleures performances de Grav. Les disques SSD peuvent faire une grande diff\u00e9rence. La plupart des choses peuvent \u00eatre mises en cache dans le cache utilisateur PHP, mais certaines sont stock\u00e9es sous forme de fichiers, de sorte que les disques SSD peuvent avoir un impact important sur les performances. \u00c9vitez d'utiliser des syst\u00e8mes de fichiers r\u00e9seau tels que NFS avec Grav. L'h\u00e9bergement natif sera toujours plus rapide qu'une machine virtuelle. Les VM sont un excellent moyen pour les h\u00e9bergeurs de proposer des environnements flexibles de type \u00ab cloud \u00bb. Ceux-ci ajoutent une couche de traitement qui affectera toujours les performances. Grav peut toujours \u00eatre rapide sur une machine virtuelle (beaucoup plus rapide que wordpress, joomla, etc.), mais n\u00e9anmoins, pour des performances optimales, vous ne pouvez pas battre une option d'h\u00e9bergement native. Une m\u00e9moire plus rapide est meilleure. \u00c9tant donn\u00e9 que Grav est si rapide et que bon nombre de ses solutions de mise en cache utilisent fortement la m\u00e9moire, la vitesse de la m\u00e9moire sur votre serveur peut avoir un impact important sur les performances. Grav n'utilise pas de grandes quantit\u00e9s de m\u00e9moire par rapport \u00e0 certaines plates-formes, de sorte que la quantit\u00e9 de m\u00e9moire n'est pas aussi importante et n'a pas autant d'impact sur les performances, que le type de m\u00e9moire et la vitesse. Les processeurs multic\u0153urs rapides sont meilleurs. Des processeurs plus rapides et plus avanc\u00e9s aideront toujours, mais pas autant que les autres points. L'h\u00e9bergement partag\u00e9 est bon march\u00e9 et facilement disponible, mais le partage des ressources ralentira toujours un peu les choses. Encore une fois, Grav peut tr\u00e8s bien fonctionner sur un serveur partag\u00e9 (mieux que les autres CMS), mais pour une vitesse ultime, un serveur d\u00e9di\u00e9 est la solution. Analyseur PECL Yaml . L'installation de l'analyseur PHP PECL Yaml natif peut augmenter la vitesse d'analyse YAML jusqu'\u00e0 400 % ! Cela vaut la peine d'\u00eatre examin\u00e9 si vous recherchez une vitesse suppl\u00e9mentaire. Le getgrav.org fonctionne sur un seul serveur d\u00e9di\u00e9 avec des processeurs quad core, 16 Go de m\u00e9moire et des disques SSD 6G. Nous ex\u00e9cutons \u00e9galement PHP 7.4 avec Zend opcache et le cache utilisateur APCu. Les serveurs Web ex\u00e9cutent quelques autres sites Web, mais pas autant que vous en trouveriez dans un environnement d'h\u00e9bergement partag\u00e9. Options de mise en cache. La mise en cache est une fonctionnalit\u00e9 int\u00e9grale de Grav qui a \u00e9t\u00e9 int\u00e9gr\u00e9e d\u00e8s le d\u00e9part. Le m\u00e9canisme de mise en cache utilis\u00e9 par Grav est la principale raison pour laquelle Grav est aussi rapide qu'il l'est. Cela dit, il y a certains facteurs \u00e0 prendre en compte. Grav utilise la biblioth\u00e8que Doctrine Cache \u00e9tablie et respect\u00e9e. Cela signifie que Grav prend en charge tous les m\u00e9canismes de mise en cache pris en charge par Doctrine Cache. Cela signifie que Grav prend en charge : Auto (par d\u00e9faut) - Trouve automatiquement la meilleure option. File - Stocke dans les fichiers de cache dans le dossier cache/ . APCu - https://php.net/manual/en/book.apcu.php . Memcache - https://php.net/manual/en/book.memcache.php . Redis - https://redis.io . WinCache - https://www.iis.net/downloads/microsoft/wincache-extension . Par d\u00e9faut, Grav est pr\u00e9configur\u00e9 pour utiliser le r\u00e9glage auto . Cela va essayer APC , puis WinCache et enfin File . Vous pouvez, bien s\u00fbr, configurer explicitement le cache dans votre fichier /config/system.yaml , ce qui pourrait rendre les choses un peu plus rapides. Types de mise en cache. Il existe en fait 5 types de mise en cache dans Grav. Elles sont: Mise en cache de la configuration YAML dans PHP. Mise en cache Core Grav pour les objets de page. Mise en cache Twig des fichiers de mod\u00e8le en tant que classes PHP. Mise en cache des images pour les ressources multim\u00e9dias. Mise en cache des ressources CSS et JQuery avec pipeline. La mise en cache de la configuration YAML n'est pas configurable et compilera et mettra toujours en cache la configuration dans le dossier /cache . La mise en cache des images est \u00e9galement toujours activ\u00e9e et stocke ses images trait\u00e9es dans le dossier /images . Mise en cache Grav Core. La mise en cache Core Grav a les options de configuration suivantes, telles qu'elles sont configur\u00e9es dans votre fichier user/config/system.yaml : 1 | cache: 2 | enabled: true # Set to true to enable caching 3 | check: 4 | method: file # Method to check for updates in pages: file|folder|hash|none 5 | driver: auto # One of: auto|file|apc|xcache|memcache|wincache 6 | prefix: 'g' # Cache prefix string (prevents cache conflicts) Comme vous pouvez le voir, les options sont document\u00e9es dans le fichier de configuration lui-m\u00eame. Pendant le d\u00e9veloppement, il est parfois utile de d\u00e9sactiver la mise en cache pour vous assurer que vous disposez toujours des derni\u00e8res modifications de page. Par d\u00e9faut, Grav utilise la m\u00e9thode de v\u00e9rification de file pour sa mise en cache. Cela signifie que chaque fois que vous demandez une URL Grav, Grav utilise un routage hautement optimis\u00e9 pour parcourir tous les fichiers du dossier user/pages afin de d\u00e9terminer si quelque chose a chang\u00e9. La v\u00e9rification du cache folder sera l\u00e9g\u00e8rement plus rapide que celle de file , mais ne fonctionnera pas de mani\u00e8re fiable dans tous les environnements. Vous devrez v\u00e9rifier si Grav r\u00e9cup\u00e8re les modifications apport\u00e9es aux pages de votre serveur lors de l'utilisation de l'option folder . La v\u00e9rification du hachage hash utilise un algorithme de hachage rapide sur tous les fichiers de chaque dossier de page. Cela peut \u00eatre plus rapide que la v\u00e9rification des fichiers dans certaines situations et prend en compte chaque fichier du dossier. Si la remise en cache automatique des pages modifi\u00e9es n'est pas critique pour vous (ou si votre site est plut\u00f4t volumineux), la d\u00e9finition de cette valeur sur none acc\u00e9l\u00e9rera encore plus un environnement de production. Il vous suffira d'effacer manuellement le cache une fois les modifications apport\u00e9es. Il s'agit d'un param\u00e8tre de Production uniquement . La suppression d'une page n'efface pas le cache car les effacements de cache sont bas\u00e9s sur des horodatages modifi\u00e9s par dossier. Vous pouvez facilement forcer le cache \u00e0 se vider en touchant/enregistrant simplement un fichier de configuration. Options sp\u00e9cifiques au cache m\u00e9moire. Certaines options de configuration suppl\u00e9mentaires sont requises si vous vous connectez \u00e0 un serveur memcache via l'option de pilote memcache . Ces options doivent aller sous le groupe cache : dans votre user/config/system.yaml : 1 | cache: 2 | ... 3 | memcache: 4 | server: localhost 5 | port: 11211 Options sp\u00e9cifiques de Memcached. Semblable \u00e0 memcache, memcached a quelques options de configuration suppl\u00e9mentaires qui sont requises si vous vous connectez \u00e0 un serveur memcached via l'option de pilote memcached . Ces options doivent aller sous le groupe cache : dans votre user/config/system.yaml : cache: ... memcached: server: localhost port: 11211 Options sp\u00e9cifiques \u00e0 Redis. Certaines options de configuration suppl\u00e9mentaires sont requises si vous vous connectez \u00e0 un serveur redis via l'option de pilote redis . Ces options doivent aller sous le groupe cache : dans votre user/config/system.yaml : 1 | cache: 2 | ... 3 | redis: 4 | server: localhost 5 | port: 6379 Alternativement, vous pouvez utiliser une connexion socket : 1 | cache: 2 | ... 3 | redis: 4 | socket: '/tmp/redis.sock' Si votre serveur Redis a un mot de passe ou un ensemble secret, vous pouvez \u00e9galement le d\u00e9finir dans cette configuration : 1 | cache: 2 | ... 3 | redis: 4 | password: your-secret vous aurez \u00e9galement besoin du php-redis install\u00e9 sur votre syst\u00e8me . Options sp\u00e9cifiques \u00e0 Twig. Le moteur de cr\u00e9ation de mod\u00e8les Twig utilise son propre syst\u00e8me de cache bas\u00e9 sur des fichiers, et quelques options lui sont associ\u00e9es. 1 |twig: 2 | cache: false # Set to true to enable twig caching 3 | debug: true # Enable Twig debug 4 | auto_reload: true # Refresh cache on changes 5 | autoescape: false # Autoescape Twig vars Pour de l\u00e9gers gains de performances, vous pouvez d\u00e9sactiver l'extension debug , ainsi que d\u00e9sactiver auto_reload qui ex\u00e9cute une fonction similaire \u00e0 cache: check: method: none car il ne recherchera pas les modifications dans les fichiers .html.twig pour d\u00e9clencher des actualisations du cache. Mise en cache et \u00e9v\u00e9nements. Pour la plupart, les \u00e9v\u00e9nements sont toujours d\u00e9clench\u00e9s m\u00eame lorsque la mise en cache est activ\u00e9e. Cela est vrai pour tous les \u00e9v\u00e9nements sauf pour onPageContentRaw , onPageProcessed , onPageContentProcessed , onTwigPageVariables et onFolderProcessed . Ces \u00e9v\u00e9nements sont ex\u00e9cut\u00e9s lorsque toutes les pages et tous les dossiers sont r\u00e9cursifs et ils se d\u00e9clenchent sur chaque page ou dossier trouv\u00e9. Comme leur nom l'indique, ils ne sont ex\u00e9cut\u00e9s que pendant le traitement , et non apr\u00e8s la mise en cache de la page.","title":"Performances et mise en cache"},{"location":"avance-planificateur/","text":"Planificateur Le planificateur Grav est une nouvelle fonctionnalit\u00e9 ajout\u00e9e dans Grav 1.6 qui permet d'ex\u00e9cuter des t\u00e2ches de mani\u00e8re p\u00e9riodique. Le traitement sous-jacent repose sur le planificateur cron du serveur, mais une fois qu'une seule entr\u00e9e a \u00e9t\u00e9 ajout\u00e9e au service cron, tous les travaux et les horaires sp\u00e9cifiques peuvent \u00eatre configur\u00e9s via Grav. L'un des principaux avantages de l'utilisation du planificateur pour g\u00e9rer les t\u00e2ches est qu'elles peuvent \u00eatre effectu\u00e9es sans aucune interaction de l'utilisateur et ind\u00e9pendamment du frontal. Des t\u00e2ches telles que l'effacement p\u00e9riodique du cache, les sauvegardes, la synchronisation, l'indexation de recherche, etc., sont toutes des candidats de choix pour les t\u00e2ches planifi\u00e9es. Installation. La premi\u00e8re \u00e9tape pour configurer le planificateur et le pr\u00e9parer pour les t\u00e2ches consiste \u00e0 ajouter la commande bin/grav scheduler au service cron. L'approche la plus simple consiste \u00e0 utiliser la commande CLI elle-m\u00eame pour g\u00e9n\u00e9rer la commande appropri\u00e9e \u00e0 ex\u00e9cuter pour l'installation : $ | bin/grav scheduler -i | | Install Scheduler | ================= | | [ERROR] You still need to set up Grav's Scheduler in your crontab | | ! [NOTE] To install, run the following command from your terminal: | | (crontab -l; echo \"* * * * * cd /Users/andym/grav;/usr/local/bin/php bin/grav scheduler 1>> /dev/null 2>&1\") | crontab - Sur mon syst\u00e8me Mac, la commande compl\u00e8te requise est affich\u00e9e, il vous suffit donc de copier et coller l'int\u00e9gralit\u00e9 dans votre terminal et d'appuyer sur Entr\u00e9e. Vous devez \u00eatre connect\u00e9 au shell avec le m\u00eame utilisateur que votre serveur Web. Cela permet de s'assurer que l'utilisateur qui ex\u00e9cute les commandes schdeduler correspond \u00e0 l'utilisateur du serveur Web qui doit interagir avec ces fichiers. Si vous installez l'entr\u00e9e crontab avec un autre utilisateur (par exemple root ), tous les fichiers cr\u00e9\u00e9s seront cr\u00e9\u00e9s en tant qu'utilisateur root et non en tant qu'utilisateur du webserver serveur Web, ce qui peut entra\u00eener des probl\u00e8mes. $ | (crontab -l; echo \"* * * * * cd /Users/andym/grav;/usr/local/bin/php bin/grav scheduler 1>> /dev/null 2>&1\") | crontab - Vous n'obtiendrez pas de r\u00e9ponse, mais vous ne devriez pas non plus recevoir d'erreurs. Apr\u00e8s cela, vous pouvez confirmer que tout semble bon en r\u00e9ex\u00e9cutant la commande bin/grav scheduler -i : $ | bin/grav scheduler -i | | Install Scheduler | ================= | | [OK] All Ready! You have already set up Grav's Scheduler in your crontab Vous pouvez \u00e9galement obtenir la commande n\u00e9cessaire \u00e0 partir du plugin d'administration en naviguant simplement vers Tools \u2192 Scheduler . Principes de base de la planification. Afin de planifier une t\u00e2che, la fr\u00e9quence est contr\u00f4l\u00e9e par un format flexible. * * * * * * | | | | | | | | | | | +-- Year (range: 1900-3000) | | | | +---- Day of the Week (range: 1-7, 1 standing for Monday) | | | +------ Month of the Year (range: 1-12) | | +-------- Day of the Month (range: 1-31) | +---------- Hour (range: 0-23) +------------ Minute (range: 0-59) Quelques exemples: 0 * * * * ex\u00e9cut\u00e9 une fois par heure (toutes les heures \u00e0 la minute z\u00e9ro) 0 0 * * * ex\u00e9cut\u00e9 une fois par jour (tous les jours \u00e0 minuit et \u00e0 la minute z\u00e9ro) 0 0 1 * * ex\u00e9cut\u00e9 une fois par mois (le premier jour de chaque mois \u00e0 minuit et minute z\u00e9ro) 0 0 1 1 * ex\u00e9cut\u00e9 une fois par an (le premier jour du premier mois chaque ann\u00e9e \u00e0 minuit et minute z\u00e9ro) Options avanc\u00e9es: */5 * * * * ex\u00e9cut\u00e9 toutes les 5 minutes. Fichier de configuration. Vous pouvez voir quelles t\u00e2ches sont actuellement disponibles pour le planificateur en ex\u00e9cutant la commande bin/grav scheduler -j : $ | bin/grav scheduler -j | | Scheduler Jobs Listing | ====================== | | \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 | \u2502 Job ID \u2502 Command \u2502 Run At \u2502 Status \u2502 Last Run \u2502 State \u2502 | \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 | \u2502 cache-purge \u2502 Grav\\Common\\Cache::purgeJob \u2502 * * * * * \u2502 Success \u2502 2019-02-21 11:23 \u2502 Enabled \u2502 | \u2502 cache-clear \u2502 Grav\\Common\\Cache::clearJob \u2502 * * * * * \u2502 Success \u2502 2019-02-21 11:23 \u2502 Enabled \u2502 | \u2502 default-site-backup \u2502 Grav\\Common\\Backup\\Backups::backup \u2502 0 3 * * * \u2502 Ready \u2502 Never \u2502 Enabled \u2502 | \u2502 pages-backup \u2502 Grav\\Common\\Backup\\Backups::backup \u2502 * 3 * * * \u2502 Success \u2502 2018-09-20 09:55 \u2502 Enabled \u2502 | \u2502 ls-job \u2502 ls \u2502 * * * * * \u2502 Success \u2502 2019-02-21 11:23 \u2502 Enabled \u2502 | \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 | | ![NOTE] For error details run \"bin/grav scheduler -d\" Le planificateur Grav est contr\u00f4l\u00e9 par un fichier de configuration primaire. Ceci est situ\u00e9 dans user/config/scheduler.yaml et est n\u00e9cessaire pour que n'importe quel travail soit enabled afin de s'ex\u00e9cuter. Ci-dessous, la configuration montre les travaux qui sont disponibles et s'ils sont activ\u00e9s pour s'ex\u00e9cuter ou non. D\u00e9finissez simplement une entr\u00e9e sur disabled pour l'emp\u00eacher de s'ex\u00e9cuter. status: ls-job: enabled cache-purge: enabled cache-clear: enabled default-site-backup: enabled pages-backup: enabled Pour voir plus de d\u00e9tails sur les erreurs potentielles ou pour voir la prochaine fois que le travail sera ex\u00e9cut\u00e9, vous pouvez utiliser la commande /bin/grav scheduler -d : $ | bin/grav scheduler -d | | Job Details | =========== | | \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 | \u2502 Job ID \u2502 Last Run \u2502 Next Run \u2502 Errors \u2502 | \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 | \u2502 cache-purge \u2502 2019-02-21 11:29 \u2502 2019-02-21 11:31 \u2502 None \u2502 | \u2502 cache-clear \u2502 2019-02-21 11:29 \u2502 2019-02-21 11:31 \u2502 None \u2502 | \u2502 default-site-backup \u2502 Never \u2502 2019-02-22 03:00 \u2502 None \u2502 | \u2502 pages-backup \u2502 2018-09-20 09:55 \u2502 2019-02-22 03:00 \u2502 None \u2502 | \u2502 ls-job \u2502 2019-02-21 11:29 \u2502 2019-02-21 11:31 \u2502 None \u2502 | \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 Ex\u00e9cution manuelle des t\u00e2ches. La commande CLI fournit un moyen simple d'ex\u00e9cuter manuellement n'importe quel travail. En fait, c'est ce que fait le planificateur lorsqu'il s'ex\u00e9cute p\u00e9riodiquement. $ | bin/grav scheduler Cela ex\u00e9cutera les t\u00e2ches en mode silencieux, mais vous pouvez \u00e9galement voir les d\u00e9tails de ce qui s'ex\u00e9cute en utilisant : planificateur bin/grav -v $ | bin/grav scheduler -v Grav System Jobs. Le noyau Grav fournit quelques t\u00e2ches pr\u00eates \u00e0 l'emploi. Celles-ci incluent certaines t\u00e2ches de type maintenance utiles : cache-purge - Cette t\u00e2che est utile si vous utilisez la mise en cache file de Grav car elle efface les anciens fichiers qui ont expir\u00e9. Il s'agit d'une excellente t\u00e2che \u00e0 planifier car sinon, il faudrait qu'un utilisateur efface manuellement les anciens caches. Si vous ne suivez pas cela et que votre espace de fichier est limit\u00e9, vous risquez de manquer d'espace et de planter le serveur. cache-clear - L'effacement du cache est le travail qui fonctionne de la m\u00eame mani\u00e8re que la commande bin/grav clear que vous ex\u00e9cuteriez manuellement. Vous pouvez configurer si vous souhaitez utiliser un effacement de cache standard ou la variante all qui supprime tous les fichiers et dossiers du dossier cache/ pour un effacement de cache plus approfondi. default-site-backup - La t\u00e2che de sauvegarde par d\u00e9faut disponible via la nouvelle configuration Grav Backup. Vous pouvez cr\u00e9er des configurations de sauvegarde personnalis\u00e9es, et celles-ci seront \u00e9galement disponibles pour s'ex\u00e9cuter en tant que t\u00e2che planifi\u00e9e. T\u00e2ches personnalis\u00e9es. Le Grav Scheduler peut \u00eatre configur\u00e9 manuellement avec n'importe quel nombre de t\u00e2ches personnalis\u00e9es. Ceux-ci peuvent \u00eatre configur\u00e9s dans le m\u00eame fichier de configuration scheduler.yaml r\u00e9f\u00e9renc\u00e9 ci-dessus. Par exemple, le ls-job r\u00e9f\u00e9renc\u00e9 ci-dessus serait configur\u00e9 : 1 | custom_jobs: 2 | ls-job: 3 | command: ls 4 | args: '-lah' 5 | at: '* * * * *' 6 | output: logs/cron-ls.out 7 | output_mode: overwrite 8 | email: user@email.com La commande doit \u00eatre n'importe quel script local pouvant \u00eatre ex\u00e9cut\u00e9 \u00e0 partir de la ligne de commande du terminal. Seuls les attributs command et at sont requis. T\u00e2ches fournies par le plugin. L'une des fonctionnalit\u00e9s les plus puissantes du Grav Scheduler est la possibilit\u00e9 pour les plugins tiers de fournir leurs propres t\u00e2ches. Un excellent exemple de ceci est fourni par le plugin TNTSearch . TNTSearch est un moteur de recherche de texte complet qui n\u00e9cessite que le contenu soit index\u00e9 avant de pouvoir \u00eatre recherch\u00e9. Ce travail d'indexation peut \u00eatre effectu\u00e9 de diff\u00e9rentes mani\u00e8res, mais le Grav Scheduler vous permet de r\u00e9indexer votre contenu p\u00e9riodiquement plut\u00f4t que d'avoir \u00e0 le faire manuellement. La premi\u00e8re \u00e9tape consiste pour votre plugin \u00e0 s'abonner \u00e0 l'\u00e9v\u00e9nement onSchedulerInitialized() . Et puis cr\u00e9ez une m\u00e9thode dans votre fichier de plugin qui peut ajouter une t\u00e2che personnalis\u00e9e lorsqu'elle est appel\u00e9e : 1 | public function onSchedulerInitialized(Event $e): void 2 | { 3 | $config = $this->config(); 4 | 5 | if (!empty($config['scheduled_index']['enabled'])) { 6 | $scheduler = $e['scheduler']; 7 | $at = $config['scheduled_index']['at'] ?? '* * * * *'; 8 | $logs = $config['scheduled_index']['logs'] ?? ''; 9 | $job = $scheduler->addFunction('Grav\\Plugin\\TNTSearchPlugin::indexJob', [], 'tntsearch-index'); 10 | $job->at($at); 11 | $job->output($logs); 12 | $job->backlink('/plugins/tntsearch'); 13 | } 14 | } Ici, vous pouvez voir comment une configuration de planificateur pertinente est obtenue \u00e0 partir des param\u00e8tres de configuration du plugin TNTSearch, puis un nouveau Job est cr\u00e9\u00e9 avec une fonction statique appel\u00e9e indexJob() .","title":"Planificateur"},{"location":"avance-priorisation-plugin/","text":"Priorisation des plugins Lorsque plusieurs plugins \u00e9coutent les m\u00eames crochets d'\u00e9v\u00e9nement (voir la page Plugins > Crochets d'\u00e9v\u00e9nement pour plus de d\u00e9tails) , les diff\u00e9rents gestionnaires sont ex\u00e9cut\u00e9s par ordre de \"priorit\u00e9\". La priorit\u00e9 est simplement un nombre. Plus le nombre est \u00e9lev\u00e9, plus le gestionnaire s'ex\u00e9cutera t\u00f4t. Dans de rares cas, les utilisateurs peuvent avoir besoin de modifier les priorit\u00e9s de certains gestionnaires. Cela peut \u00eatre fait sans toucher au code original du plugin. D\u00e9terminez d'abord pr\u00e9cis\u00e9ment quels gestionnaires doivent \u00eatre modifi\u00e9s et comment. Il s'agit d'une t\u00e2che avanc\u00e9e qui n\u00e9cessite que vous soyez capable de lire le fichier .php du plugin. Normalement, les crochets d'\u00e9v\u00e9nement, les fonctions de gestionnaire et les priorit\u00e9s par d\u00e9faut se trouvent dans la fonction onPluginsInitialized() d'un plugin. Cr\u00e9ez ensuite le fichier user/config/priorities.yaml . Les donn\u00e9es doivent \u00eatre structur\u00e9es comme suit : pluginName: eventName: handlerName: [integer] Ainsi, par exemple, disons que vous avez un plugin appel\u00e9 essential qui \u00e9coute l'\u00e9v\u00e9nement onPageInitialized , d\u00e9clenchant la fonction handlePage avec une priorit\u00e9 de 0. Disons alors que vous d\u00e9couvrez que vous avez besoin que cette priorit\u00e9 soit de 100 pour vous assurer qu'il s'ex\u00e9cute avant un autre brancher. Vous ajouteriez ce qui suit \u00e0 votre fichier user/config/priorities.yaml : essential: onPageInitialized: handlePage: 100","title":"Priorisarion  des plugins"},{"location":"avance-sauvegardes/","text":"Sauvegardes Le syst\u00e8me de sauvegarde de Grav a \u00e9t\u00e9 compl\u00e8tement r\u00e9\u00e9crit pour Grav 1.6 afin de fournir plus de fonctionnalit\u00e9s. Les am\u00e9liorations incluent : Int\u00e9gration dans le nouveau Grav Scheduler pour permettre aux sauvegardes hors ligne de s'ex\u00e9cuter quand vous le souhaitez Possibilit\u00e9 de cr\u00e9er plusieurs profils de sauvegarde, chacun avec son propre ensemble de fichiers, d'exclure les r\u00e8gles de chemin et de fichier et de programmer la configuration Nouvelles options de purge automatique bas\u00e9es sur number , space ou time . Nouvelle page d\u00e9di\u00e9e aux sauvegardes dans la section Outils du plugin d'administration. Configuration. Pour la r\u00e9trocompatibilit\u00e9, la configuration par d\u00e9faut imite le syst\u00e8me avant Grav 1.6, cependant, elle a maintenant une limite de 5 Go par d\u00e9faut pour l'espace de sauvegarde. Vous devez copier le fichier de configuration par d\u00e9faut ( system/config/backups.yaml ) dans votre user/config/ . Si vous utilisez le plugin admin et enregistrez la configuration, le fichier user/config/backups.yaml sera cr\u00e9\u00e9 automatiquement. La configuration par d\u00e9faut est la suivante : 1 | purge: 2 | trigger: space 3 | max_backups_count: 25 4 | max_backups_space: 5 5 | max_backups_time: 365 6 | 7 | profiles: 8 | - 9 | name: 'Default Site Backup' 10 | root: '/' 11 | schedule: false 12 | schedule_at: '0 3 * * *' 13 | exclude_paths: \"/backup\\r\\n/cache\\r\\n/images\\r\\n/logs\\r\\n/tmp\" 14 | exclude_files: \".DS_Store\\r\\n.git\\r\\n.svn\\r\\n.hg\\r\\n.idea\\r\\n.vscode\\r\\nnode_modules\" Purge. space - purgera les anciennes sauvegardes lorsque vous atteignez la limite d'espace. Contr\u00f4l\u00e9 par max_backups_space mesur\u00e9 en GB time - purgera les anciennes sauvegardes au-del\u00e0 d'un certain nombre de jours. Contr\u00f4l\u00e9 par max_backups_time mesur\u00e9 en days number - purgera les anciennes sauvegardes au-del\u00e0 d'un certain nombre de sauvegardes. Contr\u00f4l\u00e9 par max_backups_count . Profils. Un tableau de profils peut \u00eatre configur\u00e9. Le profil Default Site Backup est configur\u00e9 de la m\u00eame mani\u00e8re que la sauvegarde Grav par d\u00e9faut dans les versions pr\u00e9c\u00e9dentes. Par d\u00e9faut, la sauvegarde n'est pas automatiquement trait\u00e9e par le planificateur, mais vous pouvez d\u00e9finir schedule: true et configurer l'option schedule_at : avec une expression cron pr\u00e9f\u00e9r\u00e9e . Un exemple d'ensemble de profils plus complexe pourrait \u00eatre : 1 | profiles: 2 | - 3 | name: 'Default Site Backup' 4 | root: / 5 | exclude_paths: \"/backup\\r\\n/cache\\r\\n/images\\r\\n/logs\\r\\n/tmp\" 6 | exclude_files: \".DS_Store\\r\\n.git\\r\\n.svn\\r\\n.hg\\r\\n.idea\\r\\n.vscode\\r\\nnode_modules\" 7 | schedule: true 8 | schedule_at: '0 4 * * *' 9 | - 10 | name: 'Pages Backup' 11 | root: 'page://' 12 | exclude_files: .git 13 | schedule: true 14 | schedule_at: '* 3 * * *' Commande CLI. Ceci est couvert plus en d\u00e9tail dans la section Cli Console -> Grav Command , mais voici un exemple d'ex\u00e9cution manuelle de la sauvegarde : $ | cd ~/workspace/portfolio $ | bin/grav backup | | Grav Backup | =========== | | Choose a backup? | [0] Default Site Backup | [1] Pages Backup | | Archiving 36 files [===================================================] 100% < 1 sec Done... | | [OK] Backup Successfully Created: /users/joe/workspace/portfolio/backup/pages_backup--20190227120510.zip","title":"Sauvegardes"},{"location":"avance-syntaxe-yaml/","text":"Syntaxe YAML Introduction. YAML signifie \"YAML Ain't Markup Language\" et il est largement utilis\u00e9 dans Grav pour ses fichiers de configuration, ses plans et \u00e9galement dans les param\u00e8tres de page. YAML est \u00e0 la configuration ce que le d\u00e9marquage est au balisage. Il s'agit essentiellement d'un format de donn\u00e9es structur\u00e9 lisible par l'homme. Il est moins complexe et disgracieux que XML ou JSON, mais offre des fonctionnalit\u00e9s similaires. Il vous permet essentiellement de fournir des param\u00e8tres de configuration puissants, sans avoir \u00e0 apprendre un type de code plus complexe comme CSS, JavaScript et PHP. YAML est con\u00e7u d\u00e8s le d\u00e9part pour \u00eatre simple \u00e0 utiliser. \u00c0 la base, un fichier YAML est utilis\u00e9 pour d\u00e9crire les donn\u00e9es. L'un des avantages de l'utilisation de YAML est que les informations contenues dans un seul fichier YAML peuvent \u00eatre facilement traduites dans plusieurs types de langues. Fondamentalement, les donn\u00e9es que vous entrez dans un fichier YAML sont utilis\u00e9es conjointement avec une biblioth\u00e8que pour cr\u00e9er les pages que vous voyez dans Grav. R\u00e8gles de base de YAML. YAML a mis en place certaines r\u00e8gles pour \u00e9viter les probl\u00e8mes li\u00e9s \u00e0 l'ambigu\u00eft\u00e9 par rapport \u00e0 divers langages et programmes d'\u00e9dition. Ces r\u00e8gles permettent \u00e0 un seul fichier YAML d'\u00eatre interpr\u00e9t\u00e9 de mani\u00e8re coh\u00e9rente, quelle que soit l'application et/ou la biblioth\u00e8que utilis\u00e9e pour l'interpr\u00e9ter. Les fichiers YAML doivent se terminer par .yaml dans la mesure du possible dans Grav. YAML est sensible \u00e0 la casse. YAML n'autorise pas l'utilisation d'onglets. Types de donn\u00e9es de base. YAML excelle dans le travail avec les mappages (hachages/dictionnaires), les s\u00e9quences (tableaux/listes) et les scalaires (cha\u00eenes/nombres). Bien qu'il puisse \u00eatre utilis\u00e9 avec la plupart des langages de programmation, il fonctionne mieux avec les langages construits autour de ces types de structure de donn\u00e9es. Cela inclut : PHP, Python, Perl, JavaScript et Ruby. Scalaires. Les scalaires sont un concept assez basique. Ce sont les cha\u00eenes et les nombres qui composent les donn\u00e9es de la page. Un scalaire peut \u00eatre une propri\u00e9t\u00e9 bool\u00e9enne, telle que true , un entier (nombre) tel que 5 , ou une cha\u00eene de texte, telle qu'une phrase ou le titre de votre site Web. Les scalaires sont souvent appel\u00e9s variables en programmation. Si vous faisiez une liste de types d'animaux, ce seraient les noms donn\u00e9s \u00e0 ces animaux. La plupart des scalaires ne sont pas entre guillemets, mais si vous tapez une cha\u00eene qui utilise la ponctuation et d'autres \u00e9l\u00e9ments qui peuvent \u00eatre confondus avec la syntaxe YAML (tirets, deux-points, etc.), vous pouvez citer ces donn\u00e9es en utilisant des guillemets simples \" ou doubles \". Double les guillemets vous permettent d'utiliser des \u00e9chappements pour repr\u00e9senter les caract\u00e8res ASCII et Unicode. 1 | integer: 25 2 | string: \"25\" 3 | float: 25.0 4 | boolean: true ASTUCE : les mots true , false , null , ~ et les dates ont une signification particuli\u00e8re dans YAML. Veuillez les citer si vous ne souhaitez pas les utiliser comme type bool\u00e9en, nul ou date/heure. Il en va de m\u00eame pour les num\u00e9ros de version, ils doivent \u00eatre entre guillemets pour les s\u00e9parer des valeurs flottantes. S\u00e9quences. Voici une s\u00e9quence simple que vous pourriez trouver dans Grav. Il s'agit d'une liste de base dans laquelle chaque \u00e9l\u00e9ment de la liste est plac\u00e9 sur sa propre ligne avec un tiret d'ouverture. 1 | - Cat 2 | - Dog 3 | - Goldfish Cette s\u00e9quence place chaque \u00e9l\u00e9ment de la liste au m\u00eame niveau. Si vous souhaitez cr\u00e9er une s\u00e9quence imbriqu\u00e9e avec des \u00e9l\u00e9ments et des sous-\u00e9l\u00e9ments, vous pouvez le faire en pla\u00e7ant un seul espace avant chaque tiret dans les sous-\u00e9l\u00e9ments. YAML utilise des espaces, PAS des tabulations, pour l'indentation. Vous pouvez en voir un exemple ci-dessous. 1 | - 2 | - Cat 3 | - Dog 4 | - Goldfish 5 | - 6 | - Python 7 | - Lion 8 | - Tiger Si vous souhaitez imbriquer vos s\u00e9quences encore plus profond\u00e9ment, il vous suffit d'ajouter plus de niveaux. 1 | - 2 | - 3 | - Cat 4 | - Dog 5 | - Goldfish Des s\u00e9quences peuvent \u00eatre ajout\u00e9es \u00e0 d'autres types de structure de donn\u00e9es, tels que des mappages ou des scalaires. Mappages. Le mappage vous donne la possibilit\u00e9 de r\u00e9pertorier les cl\u00e9s avec des valeurs. Ceci est utile dans les cas o\u00f9 vous attribuez un nom ou une propri\u00e9t\u00e9 \u00e0 un \u00e9l\u00e9ment sp\u00e9cifique. 1 | animal: pets Cet exemple mappe la valeur de pets \u00e0 la cl\u00e9 animal . Lorsqu'il est utilis\u00e9 en conjonction avec une s\u00e9quence, vous pouvez voir que vous commencez \u00e0 construire une liste de pets . Dans l'exemple suivant, le tiret utilis\u00e9 pour \u00e9tiqueter chaque \u00e9l\u00e9ment compte comme une indentation, ce qui fait des \u00e9l\u00e9ments de ligne l'enfant et de la ligne de mappage pets le parent. 1 | pets: 2 | - Cat 3 | - Dog 4 | - Goldfish Ressources et documentation suppl\u00e9mentaire. Pour plus d'informations sur YAML, y compris une documentation d\u00e9taill\u00e9e sur son fonctionnement, consultez les ressources li\u00e9es ci-dessous. Introduction \u00e0 YAML de Dave Documentation officielle YAML 1.2 Carte de r\u00e9f\u00e9rence YAML Tutoriel YAML de Xavier Shay YAMLLint","title":"Syntaxe YAML"},{"location":"avance-url/","text":"Modifier l'URL du site En d\u00e9finissant custom_base_url dans system.yaml (ou URL de base personnalis\u00e9e dans les param\u00e8tres syst\u00e8me, dans Admin), nous pouvons avoir Grav dans un dossier mais l'ex\u00e9cuter \u00e0 la racine du domaine. Sc\u00e9nario 1, ex\u00e9cut\u00e9 dans le dossier racine du domaine. Sc\u00e9nario 1, ex\u00e9cut\u00e9 dans le dossier racine du domaine. Grav est install\u00e9 dans http://localhost:8080/grav-develop mais vous voulez qu'il r\u00e9ponde sur http://localhost:8080 . Dans system.yaml, d\u00e9finissez custom_base_url: 'http://localhost:8080' et d\u00e9finissez le chemin de la session sur le nouveau chemin du site Grav, 1 | session: 2 | path: / Et dans la racine du domaine, d\u00e9finissez la redirection, par ex. avec .htaccess : 1 | RewriteEngine On 2 | RewriteCond %{REQUEST_URI} !^/grav-develop/ 3 | RewriteRule ^(.*)$ /grav-develop/$1 o\u00f9 grav-develop est le sous-dossier o\u00f9 se trouve Grav. Sc\u00e9nario 2, ex\u00e9cuter dans un sous-dossier diff\u00e9rent. Grav est install\u00e9 dans http://localhost:8080/grav-develop mais vous voulez qu'il r\u00e9ponde sur http://localhost:8080/xxxxx . Dans system.yaml, d\u00e9finissez custom_base_url : 'http://localhost:8080/xxxxx' et d\u00e9finissez le chemin de la session sur le nouveau chemin du site Grav, 1 | session: 2 | path: /xxxxx Et dans le nouveau dossier racine, /xxxxx, d\u00e9finissez la redirection, par ex. avec .htaccess : 1 | RewriteEngine On 2 | RewriteCond %{REQUEST_URI} !^/grav-develop/ 3 | RewriteRule ^(.*)$ /grav-develop/$1 o\u00f9 grav-develop est le sous-dossier fr\u00e8re o\u00f9 se trouve Grav.","title":"Modifier l'URL du site"},{"location":"balises-twig/","text":"Balises Grav fournit \u00e9galement une vari\u00e9t\u00e9 de balises Twig personnalis\u00e9es qui \u00e9tendent les capacit\u00e9s de cr\u00e9ation de mod\u00e8les Twig d\u00e9j\u00e0 tr\u00e8s performantes avec de nouvelles balises que nous avons trouv\u00e9es utiles. markdown La balise Markdown fournit un nouveau moyen puissant d'int\u00e9grer le d\u00e9marquage dans le mod\u00e8le Twig. Vous pouvez utiliser une variable et restituer cette variable avec le filtre |markdown , mais la syntaxe {% markdown %} rend la cr\u00e9ation de blocs de texte markdown encore plus simple. 1 | {% markdown %} 2 | This is **bold** and this _underlined_ 3 | 4 | 1. This is a bullet list 5 | 2. This is another item in that same list 6 | {% endmarkdown %} script La balise Script est vraiment une balise pratique qui rend votre Twig plus lisible par rapport \u00e0 l'approche habituelle {% do assets...%} . C'est purement une mani\u00e8re alternative d'\u00e9crire les choses. Fichier de script 1 | {% script 'theme://js/something.js' at 'bottom' priority: 20 with { defer: true, async: true } %} Grav 1.7.28 ajoute \u00e9galement le support des modules : 1 | {% script module 'theme://js/module.mjs' %} Script en ligne 1 | {% script at 'bottom' priority: 20 %} 2 | alert('Warning!'); 3 | {% endscript %} style Fichier CSS 1 | {% style 'theme://css/foo.css' priority: 20 %} CSS en ligne 1 | {% style priority: 20 with { media: 'screen' } %} 2 | a { color: red; } 3 | {% endstyle %} lien 1 | {% link icon 'theme://images/favicon.png' priority: 20 with { type: 'image/png' } %} 2 | {% link modulepreload 'plugin://grav-plugin/build/js/vendor.js' %} switch Dans la plupart des langages de programmation, l'utilisation d'une instruction switch est un moyen courant de rendre un tas d'instructions if else plus propres et plus lisibles. Ils peuvent \u00e9galement s'av\u00e9rer l\u00e9g\u00e8rement plus rapides. Nous fournissons simplement un moyen simple de les cr\u00e9er car ils manquaient dans la fonctionnalit\u00e9 de base de Twig. 1 | {% switch type %} 2 | {% case 'foo' %} 3 | {{ my_data.foo }} 4 | {% case 'bar' %} 5 | {{ my_data.bar }} 6 | {% default %} 7 | {{ my_data.default }} 8 | {% endswitch %} deferred Avec les blocs traditionnels, une fois le bloc rendu, il ne peut plus \u00eatre manipul\u00e9. Prenons l'exemple d'un {% block scripts %} qui pourrait contenir des entr\u00e9es pour les inclusions JavaScript. Si vous avez un mod\u00e8le Twig enfant et que vous \u00e9tendez un mod\u00e8le de base o\u00f9 ce bloc est d\u00e9fini, vous pouvez \u00e9tendre le bloc et ajouter vos propres entr\u00e9es JavaScript personnalis\u00e9es. Cependant, les mod\u00e8les de brindilles partiels inclus \u00e0 partir de cette page ne peuvent pas atteindre ou interagir avec le bloc. L'attribut diff\u00e9r\u00e9 sur le bloc qui est aliment\u00e9 par l'extension diff\u00e9r\u00e9e signifie que vous pouvez d\u00e9finir ce bloc dans n'importe quel mod\u00e8le Twig, mais son rendu est diff\u00e9r\u00e9, de sorte qu'il s'affiche apr\u00e8s tout le reste. Cela signifie que vous pouvez ajouter des r\u00e9f\u00e9rences JavaScript via l'appel {% do assets.addJs() %} depuis n'importe o\u00f9 dans votre page, et comme le rendu est diff\u00e9r\u00e9, la sortie contiendra tous les actifs que Grav conna\u00eet, peu importe quand vous les a ajout\u00e9s. 1 | {% block myblock deferred %} 2 | This will be rendered after everything else. 3 | {% endblock %} Il est \u00e9galement possible de fusionner le contenu du bloc parent avec le bloc diff\u00e9r\u00e9 en utilisant {{ parent() }} . Cela peut \u00eatre particuli\u00e8rement utile pour les th\u00e8mes si des fichiers css ou javascript suppl\u00e9mentaires sont ajout\u00e9s. 1 | {% block stylesheets %} 2 | <!-- Additional css library --> 3 | {% do assets.addCss('theme://libraries/leaflet/dist/leaflet.css')%} 4 | {{ parent() }} 5 | {% endblock %} throw Il existe certaines situations o\u00f9 vous devez lever manuellement une exception, nous avons donc \u00e9galement une balise pour cela. 1 | {% throw 404 'Not Found' %} try & catch Il est \u00e9galement utile d'avoir une gestion des erreurs de style PHP plus puissante dans vos mod\u00e8les Twig, nous avons donc une nouvelle balise try/catch . 1 | {% try %} 2 | <li>{{ user.get('name') }}</li> 3 | {% catch %} 4 | User Error: {{ e.message }} 5 | {% endcatch %} render Les objets flexibles font lentement leur chemin dans de plus en plus d'\u00e9l\u00e9ments de Grav. Ce sont des objets auto-conscients qui ont une structure de mod\u00e8le Twig associ\u00e9e, ils savent donc comment s'afficher eux-m\u00eames. Afin de les utiliser, nous avons impl\u00e9ment\u00e9 une nouvelle balise de rendu render qui prend une mise en page facultative qui \u00e0 son tour contr\u00f4le avec quelle mise en page de mod\u00e8le l'objet doit \u00eatre rendu. 1 | {% render collection layout: 'list' %} 2 | {% render object layout: 'default' with { variable: 'value' } %} cache Parfois, vous devrez peut-\u00eatre mettre en cache des parties de la page, dont le rendu prend beaucoup de temps. Vous pouvez le faire avec la balise cache . 1 | {% cache 600 %} 2 | {{ some_complex_work() }} 3 | {% endcache %} Dans l'exemple, 600 est une dur\u00e9e de vie facultative en secondes. Si le param\u00e8tre n'est pas pass\u00e9, la dur\u00e9e de vie du cache par d\u00e9faut sera utilis\u00e9e.","title":"Balises Twig"},{"location":"bases-twig/","text":"Approche de Twig Twig est un moteur de template rapide et optimis\u00e9 pour PHP. Il est con\u00e7u d\u00e8s le d\u00e9part pour faciliter la cr\u00e9ation de mod\u00e8les \u00e0 la fois pour le d\u00e9veloppeur et le concepteur. Sa syntaxe facile \u00e0 suivre et ses processus simples en font un choix naturel pour toute personne familiaris\u00e9e avec Smarty, Django, Jinja, Liquid ou Stencil. Nous l'utilisons pour nos mod\u00e8les Grav en partie \u00e0 cause de sa flexibilit\u00e9 et de sa s\u00e9curit\u00e9 inh\u00e9rente. Le fait qu'il s'agisse \u00e9galement de l'un des moteurs de templates les plus rapides pour PHP a fait de son choix pour une utilisation dans Grav une \u00e9vidence. Twig compile les mod\u00e8les en PHP simple. Cela r\u00e9duit au minimum la surcharge PHP, ce qui se traduit par une exp\u00e9rience utilisateur plus rapide et plus simple. C'est aussi un moteur tr\u00e8s flexible gr\u00e2ce \u00e0 son lexer et \u00e0 son analyseur. Cela permet au d\u00e9veloppeur de cr\u00e9er ses propres balises et filtres personnalis\u00e9s. Il lui permet \u00e9galement de cr\u00e9er son propre langage sp\u00e9cifique au domaine (DSL). En mati\u00e8re de s\u00e9curit\u00e9, Twig ne fait aucun compromis. Il donne au d\u00e9veloppeur un mode bac \u00e0 sable qui lui permet d'examiner tout code non approuv\u00e9. Cela vous donne la possibilit\u00e9 d'utiliser Twig comme langage de mod\u00e8le pour les applications tout en donnant aux utilisateurs la possibilit\u00e9 de modifier la conception du mod\u00e8le. Fondamentalement, il s'agit d'un moteur puissant qui vous permet de contr\u00f4ler l'interface utilisateur. Lorsqu'il est combin\u00e9 avec YAML pour la configuration, il constitue un syst\u00e8me puissant et simple avec lequel tout d\u00e9veloppeur ou gestionnaire de site peut travailler. Comment fonctionne Twig ? Twig fonctionne en \u00e9liminant tous les tour de passe-passe de la conception de mod\u00e8les. Les mod\u00e8les sont essentiellement des fichiers texte contenant des variables ou des expressions qui sont remplac\u00e9es par des valeurs lors de l'\u00e9valuation du mod\u00e8le. Les balises sont \u00e9galement une partie importante d'un fichier de mod\u00e8le, car elles contr\u00f4lent la logique du mod\u00e8le lui-m\u00eame. Twig a deux contraintes linguistiques principales. {{ }} affiche le r\u00e9sultat d'une \u00e9valuation d'expression ; {% %} ex\u00e9cute les instructions. Voici un mod\u00e8le de base cr\u00e9\u00e9 \u00e0 l'aide de Twig : <!DOCTYPE html> <html> <head> <title>All About Cookies</title> </head> <body> My name is {{ name|e }} and I love cookies. My favorite flavors of cookies are: <ul> {% for cookie in cookies %} <li>{{ cookie.flavor|e }}</li> {% endfor %} </ul> <h1>Cookies are the best!</h1> </body> </html> Dans cet exemple, nous d\u00e9finissons le titre du site comme vous le feriez avec n'importe quelle page Web standard. La diff\u00e9rence est que nous avons pu utiliser la syntaxe Twig simple pour pr\u00e9senter le nom de l'auteur et cr\u00e9er une liste dynamique de types d'\u00e9l\u00e9ments. Un mod\u00e8le est d'abord charg\u00e9, puis pass\u00e9 par le lexer o\u00f9 son code source est tokenis\u00e9 et divis\u00e9 en petits morceaux. \u00c0 ce stade, l'analyseu r prend les jetons et les transforme en arbre de syntaxe abstraite. Une fois cela fait, le compilateur le transforme en code PHP qui peut ensuite \u00eatre \u00e9valu\u00e9 et affich\u00e9 \u00e0 l'utilisateur. Twig peut \u00e9galement \u00eatre \u00e9tendu pour ajouter des balises, des filtres, des tests, des op\u00e9rateurs, des variables globales et des fonctions suppl\u00e9mentaires. Vous trouverez plus d'informations sur l'extension de Twig dans sa documentation officielle . Syntaxe de Twig Un mod\u00e8le Twig comporte plusieurs \u00e9l\u00e9ments cl\u00e9s qui l'aident \u00e0 comprendre ce que vous aimeriez faire. Ceux-ci incluent des balises, des filtres, des fonctions et des variables. Examinons de plus pr\u00e8s ces outils importants et comment ils peuvent vous aider \u00e0 cr\u00e9er un mod\u00e8le incroyable. Balises Les balises indiquent \u00e0 Twig ce qu'il doit faire. Il vous permet de d\u00e9finir quel code Twig doit g\u00e9rer et quel code il doit ignorer lors de l'\u00e9valuation. Il existe plusieurs types de balises, et chacune a sa propre syntaxe sp\u00e9cifique qui les distingue. Balises de commentaires Les balises de commentaire ( {# Ins\u00e9rer un commentaire ici #} ) sont utilis\u00e9es pour d\u00e9finir des commentaires qui existent dans le fichier de mod\u00e8le Twig, mais qui ne sont pas r\u00e9ellement vus par l'utilisateur final. Ils sont supprim\u00e9s lors de l'\u00e9valuation et ne sont ni analys\u00e9s ni g\u00e9n\u00e9r\u00e9s. Une bonne utilisation de ces balises consiste \u00e0 expliquer ce que fait une ligne de code ou une commande sp\u00e9cifique afin qu'un autre d\u00e9veloppeur ou concepteur de votre \u00e9quipe puisse lire et comprendre rapidement. Voici un exemple de balise de commentaire telle que vous la trouveriez dans un fichier de mod\u00e8le Twig : {# Commentaire lu quelque part : Merci stallaf pour cette traduction #} Balises de sortie Les balises de sortie ( {{ Ins\u00e9rer la sortie ici }} ) seront \u00e9valu\u00e9es et ajout\u00e9es \u00e0 la sortie g\u00e9n\u00e9r\u00e9e. C'est l\u00e0 que vous placeriez tout ce que vous voulez voir appara\u00eetre sur le front-end ou dans un autre contenu g\u00e9n\u00e9r\u00e9. Voici un exemple de balises de sortie utilis\u00e9es dans un mod\u00e8le Twig : Je m'appelle {{ name|e }} et j'adore les cookies. La variable name a \u00e9t\u00e9 ins\u00e9r\u00e9e dans cette ligne et appara\u00eetra \u00e0 l'utilisateur final sous la forme Mon nom est Jake et j'adore les cookies . car Jake \u00e9tait la valeur de la variable name. Il est tr\u00e8s important d'activer le param\u00e8tre d'\u00e9chappement automatique autoescape \u00e0 partir de votre configuration syst\u00e8me ou de ne pas oublier d'\u00e9chapper chaque variable dans les fichiers de mod\u00e8le en utilisant le filtre |e pour prot\u00e9ger votre site contre les attaques XSS. Pour un contenu HTML s\u00fbr, utilisez le filtre |raw . Balises d'action Les balises d'action sont les fonceuses du monde Twig. Ces balises font r\u00e9ellement quelque chose, contrairement aux autres qui transmettent quelque chose ou restent les bras crois\u00e9s dans le code source en attendant qu'un concepteur le lise. Les balises d'action d\u00e9finissent des variables, parcourent des tableaux et testent des conditions. Vos d\u00e9clarations for et if sont faites \u00e0 l'aide de ces balises. Voici \u00e0 quoi pourrait ressembler une balise d'action dans un mod\u00e8le Twig : 1 | {% set hour = now | date(\"G\") %} 2 | {% if hour >= 9 and hour < 17 %} 3 | <p>Time for cookies!</p> 4 | {% else %} 5 | <p>Time to make more cookies!</p> 6 | {% endif %} La balise d'action initiale d\u00e9finit l'heure comme l'heure actuelle dans une horloge de 24 heures. Cette valeur est ensuite utilis\u00e9e pour \u00e9valuer s'il est entre 9 h et 17 h. Si c'est le cas, c'est Time for cookies ! est affich\u00e9. Si ce n'est pas le cas, Time to make more cookies ! s'affiche \u00e0 la place. Il est tr\u00e8s important que les balises ne se chevauchent pas. Vous ne pouvez pas mettre une balise de sortie \u00e0 l'int\u00e9rieur d'une balise d'action, ou vice versa. Filtres Les filtres sont utiles, en particulier lorsque vous utilisez les balises de sortie pour afficher des donn\u00e9es qui peuvent ne pas \u00eatre format\u00e9es comme vous le souhaitez. Supposons que la valeur de la variable name puisse inclure des balises SGML/XML ind\u00e9sirables. Vous pouvez les filtrer en utilisant le code ci-dessous : {{ nom|striptags|e }} Les fonctions Les fonctions peuvent g\u00e9n\u00e9rer du contenu. Ils sont g\u00e9n\u00e9ralement suivis d'arguments, qui apparaissent entre parenth\u00e8ses plac\u00e9es directement apr\u00e8s l'appel de la fonction. M\u00eame si aucun argument n'est pr\u00e9sent, la fonction aura toujours une parenth\u00e8se () plac\u00e9e directement apr\u00e8s elle. {% if date(cookie.created_at) < date('-2days') %} {# Eat it! #} {% endif %} Ressources Documentation officielZe Twig Twig pour les concepteurs de mod\u00e8les Twig pour les d\u00e9veloppeurs Introduction vid\u00e9o de 6 minutes sur Twig Introduction \u00e0 Twig Twig: Les bases (introduction gratuite au cours payant)","title":"Approche de Twig"},{"location":"cli-commandes-gpm/","text":"Commande GPM Depuis la sortie de la version 0.9.3 , Grav inclut un GPM (Grav Package Manager) qui vous permet d'installer, de mettre \u00e0 jour, de d\u00e9sinstaller et de lister tous les th\u00e8mes et plugins disponibles sur le r\u00e9f\u00e9rentiel Grav, ainsi que de mettre \u00e0 jour Grav lui-m\u00eame vers la derni\u00e8re version . Comme le Grav CLI , le GPM est un outil de ligne de commande qui oblige l'utilisateur \u00e0 ex\u00e9cuter des commandes via une interface de ligne de commande, telle que Terminal sous MacOS. Les commandes de style UNIX ne sont pas disponibles en mode natif dans Windows cmd. L'installation du package msysgit sur une machine Windows ajoute Git et Git BASH, qui est une invite de commande alternative qui rend les commandes UNIX disponibles. Pour d\u00e9marrer avec GPM , vous pouvez ex\u00e9cuter la commande suivante pour recevoir une liste de toutes les commandes actuellement disponibles : $ | bin/gpm list Pour recevoir de l'aide pour une commande sp\u00e9cifique, vous pouvez ajouter de l'aide \u00e0 la ligne avant la commande : $ | bin/gpm help install Pour pouvoir effectuer l'installation , la mise \u00e0 niveau et l'auto-mise \u00e0 niveau , PHP doit avoir l'extension php_openssl activ\u00e9e. Si vous obtenez une erreur fatale lors du t\u00e9l\u00e9chargement, c'est probablement la cause. Informations PHP CGI-FCGI. Pour d\u00e9terminer si votre serveur ex\u00e9cute cgi-fcgi sur la ligne de commande, tapez ce qui suit : $ | php -v | PHP 5.5.17 (cgi-fcgi) (built: Sep 19 2014 09:49:55) | Copyright (c) 1997-2014 The PHP Group | Zend Engine v2.5.0, Copyright (c) 1998-2014 Zend Technologies | with the ionCube PHP Loader v4.6.1, Copyright (c) 2002-2014, by ionCube Ltd. Si vous voyez une r\u00e9f\u00e9rence \u00e0 (cgi-fcgi) , vous devrez pr\u00e9fixer toutes les commandes bin/gpm avec php-cli . Alternativement, vous pouvez configurer un alias dans votre shell avec quelque chose comme : alias php=\"php-cli\" qui garantira que la version CLI de PHP s'ex\u00e9cute \u00e0 partir de la ligne de commande. Comment \u00e7a marche ? GPM t\u00e9l\u00e9charge les m\u00e9tadonn\u00e9es du r\u00e9f\u00e9rentiel \u00e0 partir de GetGrav.org . Le r\u00e9f\u00e9rentiel contient tous les d\u00e9tails sur les packages disponibles et GPM est \u00e9galement capable de d\u00e9terminer si l'un de ces packages est d\u00e9j\u00e0 install\u00e9 et s'il doit \u00eatre mis \u00e0 jour. Le r\u00e9f\u00e9rentiel lui-m\u00eame est mis en cache localement, sur la machine d'instance Grav ex\u00e9cutant la commande, pendant 24 heures. Toute autre demande apr\u00e8s la g\u00e9n\u00e9ration du cache ne contactera pas le serveur GetGrav.org , mais servira plut\u00f4t \u00e0 partir du r\u00e9f\u00e9rentiel stock\u00e9 localement. Cette approche garantit une r\u00e9ponse beaucoup plus rapide. La plupart des commandes (list\u00e9es ci-dessous) sont livr\u00e9es avec l'option --force (-f) qui permet de forcer une nouvelle r\u00e9cup\u00e9ration du r\u00e9f\u00e9rentiel. Cela pourrait \u00eatre extr\u00eamement utile dans le cas o\u00f9 une mise \u00e0 jour est connue et que l'utilisateur ne veut pas attendre un cycle complet de 24 heures avant que le cache ne soit effac\u00e9. Commandes. Ci-dessous, nous avons d\u00e9compos\u00e9 toutes les commandes disponibles pour GPM . Pour ex\u00e9cuter une commande, lancez votre application de terminal pr\u00e9f\u00e9r\u00e9e et depuis la racine de votre instance Grav, vous pouvez taper bin/gpm <command> . Index. La commande index affiche une liste de toutes les ressources disponibles dans le r\u00e9f\u00e9rentiel Grav, organis\u00e9es par th\u00e8mes et plugins. Chaque ligne affiche le nom , le slug , la version et s'il est d\u00e9j\u00e0 install\u00e9 ou non. Dans cette vue, vous pouvez \u00e9galement d\u00e9terminer rapidement s'il existe une nouvelle version de l'une des ressources que vous avez d\u00e9j\u00e0 install\u00e9es. Par exemple, si nous avions une tr\u00e8s ancienne version d'Antimati\u00e8re (v1.1.1), mais que la derni\u00e8re version \u00e9tait la v1.1.3, elle appara\u00eetra dans l'index comme indiqu\u00e9 ci-dessous. Vous pouvez utiliser l'option --installed-only` pour afficher uniquement l'\u00e9tat de vos plugins et th\u00e8mes install\u00e9s . Info. La commande info affiche les d\u00e9tails du package souhait\u00e9, tels que la description, l'auteur, la page d'accueil, etc. Vous serez \u00e9galement invit\u00e9 \u00e0 consulter le journal des modification s du plugin/th\u00e8me via cette option. Installer. La commande install fait exactement ce qu'elle indique. Elle installe une ressource du r\u00e9f\u00e9rentiel sur votre instance Grav actuelle avec une simple commande. La commande d\u00e9tectera \u00e9galement si une ressource est d\u00e9j\u00e0 install\u00e9e, ou si elle est symboliquement li\u00e9e, et vous demandera quoi faire. Vous pouvez \u00e9galement installer plusieurs ressources \u00e0 la fois en s\u00e9parant les slugs par un espace. Vous pouvez utiliser l'option --all-yes (-y) pour ignorer les invites. Les ressources existantes seront remplac\u00e9es et s'il s'agit de liens symboliques, elles seront automatiquement ignor\u00e9es. Mise \u00e0 jour. La commande update affiche une liste de ressources pouvant \u00eatre mises \u00e0 jour et fonctionne de la m\u00eame mani\u00e8re que pour install . Vous pouvez \u00e9galement limiter les mises \u00e0 jour \u00e0 des ressources sp\u00e9cifiques uniquement. D\u00e9sinstaller. La commande uninstall supprime un th\u00e8me ou un plug-in install\u00e9 et efface le cache. Parce que Grav est purement un syst\u00e8me de fichiers, la d\u00e9sinstallation d'un th\u00e8me ou d'un plugin signifie la suppression physique du dossier. La commande d\u00e9tectera \u00e9galement si une ressource est symboliquement li\u00e9e et vous demandera quoi faire. Vous pouvez \u00e9galement d\u00e9sinstaller plusieurs ressources \u00e0 la fois en s\u00e9parant les slugs par un espace. Vous pouvez utiliser l'option --all-yes (-y) pour ignorer les invites. Si une ressource est d\u00e9tect\u00e9e comme lien symbolique, elle sera automatiquement ignor\u00e9e. Auto-mise \u00e0 niveau. Le self-upgrade (ou selfupgrade) vous permet de mettre \u00e0 jour Grav vers la derni\u00e8re version disponible. Si aucune mise \u00e0 niveau n'est n\u00e9cessaire, un message vous le dira, notant \u00e9galement la version que vous utilisez actuellement et la date de publication de la version. Il est fortement conseill\u00e9 de toujours faire une sauvegarde avant d'effectuer une auto-mise \u00e0 jour (voir Cr\u00e9ation d'une sauvegarde dans la section CLI . L'auto-mise \u00e0 niveau ne met \u00e0 niveau que des parties de votre instance Grav, comme le dossier system/ , vendor , index.php , et autres. Vos dossiers user et images ne seront jamais touch\u00e9s. Informations importantes pour les d\u00e9veloppeurs. Plans. Avec l'introduction de GPM , nous avons maintenant des r\u00e8gles strictes concernant les blueprints valides. Qu'il s'agisse d'un th\u00e8me ou d'un plugin que vous d\u00e9veloppez, vous devez toujours vous assurer que les blueprints sont correctement format\u00e9s. Un blueprint peut servir plusieurs objectifs diff\u00e9rents, y compris la d\u00e9finition de l'identit\u00e9 de votre ressource. Veuillez vous r\u00e9f\u00e9rer aux Blueprints pour une documentation plus d\u00e9taill\u00e9e sur ce que sont les Blueprints et comment ils doivent \u00eatre compil\u00e9s. Releases. Le r\u00e9f\u00e9rentiel Grav est actualis\u00e9 toutes les heures et d\u00e9tecte automatiquement les nouvelles versions, cela implique qu'en tant que d\u00e9veloppeur, vous avez suivi nos exigences de contribution . De votre c\u00f4t\u00e9, tout ce que vous avez \u00e0 faire est de vous assurer que vous avez mis \u00e0 jour les plans avec la nouvelle version, et que vous avez marqu\u00e9 et publi\u00e9 la nouvelle version. Le r\u00e9f\u00e9rentiel Grav fera le reste pour vous et d\u00e8s que votre version sera r\u00e9cup\u00e9r\u00e9e, elle sera disponible pour tout le monde via le site Web de Grav ou via GPM . Ajouter votre ressource au d\u00e9p\u00f4t. (1) Suivez les instructions de la section Th\u00e8me/Plugin Release Process . Pour ajouter votre nouveau plugin/th\u00e8me au r\u00e9f\u00e9rentiel Grav, veuillez ouvrir un probl\u00e8me Grav sur GitHub. Vous pouvez \u00e9galement utiliser ce lien pr\u00e9compil\u00e9 . Assurez-vous de mettre \u00e0 jour le corps vers user/repository appropri\u00e9. Plus de d\u00e9tails sur ce que fait le plugin/th\u00e8me sont les bienvenus et peuvent \u00eatre plac\u00e9s dans le num\u00e9ro. Sachez \u00e9galement qu'avant d'ajouter un r\u00e9f\u00e9rentiel, l'\u00e9quipe Grav inspectera votre plugin/th\u00e8me en s'assurant qu'il correspond aux normes Grav. L'\u00e9quipe peut \u00e9galement r\u00e9pondre avec des demandes d'informations suppl\u00e9mentaires, sugg\u00e9rer des am\u00e9liorations mineures, etc. avant de fermer le probl\u00e8me et d'ajouter le plugin/th\u00e8me. NDT : J'ai supprim\u00e9 \u00e0 cet endroit ce qui semble \u00eatre une erreur d'affichage de la documentation d'origine advanced/grav-development#themeplugin-release-process .","title":"Commandes GPM"},{"location":"cli-commandes-grav/","text":"Commandes Grav Grav est livr\u00e9 avec une interface de ligne de commande (CLI) int\u00e9gr\u00e9e qui peut \u00eatre trouv\u00e9e sur bin/grav . La CLI est extr\u00eamement utile pour ex\u00e9cuter des t\u00e2ches r\u00e9currentes telles que vider le cache , effectuer des sauvegardes , etc. L'acc\u00e8s \u00e0 la CLI est un processus simple mais vous devez utiliser un terminal . Sur un Mac, cela s'appelle Terminal , sur Windows, cela s'appelle cmd et sur Linux, c'est juste un shell. Les commandes de style UNIX ne sont pas disponibles en mode natif dans Windows cmd. L'installation du package msysgit sur une machine Windows ajoute Git et Git BASH, qui est une invite de commande alternative qui rend les commandes UNIX disponibles. Si vous acc\u00e9dez \u00e0 votre serveur \u00e0 distance, vous utiliserez tr\u00e8s probablement SSH pour vous connecter \u00e0 distance \u00e0 votre serveur. Consultez cet excellent tutoriel pour plus d'informations sur SSH . Bien que certaines op\u00e9rations puissent \u00eatre effectu\u00e9es manuellement, en s'appuyant sur la CLI, ces t\u00e2ches pourraient \u00eatre automatis\u00e9es via des cronjobs qui s'ex\u00e9cutent quotidiennement. Pour obtenir une liste de toutes les commandes disponibles dans Grav, vous pouvez lancer la commande : $ | bin/grav list Cela devrait afficher quelque chose comme : Available commands: backup Creates a backup of the Grav instance cache [clearcache|cache-clear] Clears Grav cache clean Handles cleaning chores for Grav distribution composer Updates the composer vendor dependencies needed by Grav. help Displays help for a command install Installs the dependencies needed by Grav. Optionally can create symbolic links list Lists commands logviewer Display the last few entries of Grav log new-project [newproject] Creates a new Grav project with all the dependencies installed sandbox Setup of a base Grav system in your webroot, good for development, playing around or starting fresh scheduler Run the Grav Scheduler. Best when integrated with system cron security Capable of running various Security checks Pour obtenir de l'aide sur une commande sp\u00e9cifique, vous pouvez ajouter help avant la commande : $ | bin/grav help install Sauvegarde. Le syst\u00e8me de sauvegarde Grav a \u00e9t\u00e9 compl\u00e8tement remani\u00e9 dans Grav 1.6 pour prendre en charge plusieurs profils de sauvegarde. Ces profils sont configur\u00e9s dans le fichier user/config/backups.yaml . Si vous n'avez pas de fichier de configuration personnalis\u00e9, Grav utilisera celui par d\u00e9faut fourni dans system/config/backups.yaml . Si Grav d\u00e9tecte plusieurs profils de sauvegarde, la commande CLI vous demandera de choisir celui que vous souhaitez sauvegarder avec la commande CLI. $ | cd ~/workspace/portfolio | bin/grav backup | | Grav Backup | =========== | | Choose a backup? | [0] Default Site Backup | [1] Pages Backup Alternativement, vous pouvez passer directement un index du profil : $ | cd ~/workspace/portfolio | bin/grav backup 1 | | Archiving 36 files [=======================================] 100% < 1 sec Done... | | [OK] Backup Successfully Created: /users/joe/workspace/portfolio/backup/ | pages_backup--20190227120510.zip Vous trouverez plus d'informations sur la fonctionnalit\u00e9 de sauvegarde dans la section Avanc\u00e9 -> Sauvegardes . Nettoyer. Cette commande CLI est principalement utilis\u00e9e pendant le processus de construction du package, car elle supprime les fichiers et dossiers superflus de Grav. Il est fortement recommand\u00e9 de ne pas l'utilise r vous-m\u00eame, sauf si vous l'utilisez pour cr\u00e9er vos propres packages Grav. $ | bin/grav clean Vider le cache. Vous pouvez vider le cache en supprimant tous les fichiers et dossiers sous cache/ . La commande CLI \u00e9quivalente est : $ | cd ~/webroot/my-grav-project $ | bin/grav cache Il existe plusieurs alias pour la compatibilit\u00e9 ( cache , cache-clear , clearcache , clear ). L'option par d\u00e9faut est le processus standard d'effacement du cache, mais vous pouvez le contr\u00f4ler davantage avec ces options : --purge If set purge old caches --all If set will remove all including compiled, twig, doctrine caches --assets-only If set will remove only assets/* --images-only If set will remove only images/* --cache-only If set will remove only cache/* --tmp-only If set will remove only tmp/* Composer. Si vous avez install\u00e9 Grav via GitHub et que vous avez install\u00e9 manuellement des packages de fournisseurs bas\u00e9s sur composer, vous pouvez facilement mettre \u00e0 jour avec : $ | bin/grav composer Vous pouvez \u00e9galement passer des options de composition telles que install : $ | bin/grav composer --install ou alors $ | bin/grav composer --update Ceux-ci utilisent tous l'option --no-dev composer, donc pour pouvoir effectuer des tests, vous devez utiliser composer directement : bin/composer.phar . Installer. Pour installer les d\u00e9pendances sur lesquelles Grav s'appuie (plugin error , plugin problems , th\u00e8me antimatter ), lancez un terminal ou une console et acc\u00e9dez au dossier grav o\u00f9 vous souhaitez installer les d\u00e9pendances et ex\u00e9cutez la commande CLI. $ | cd ~/webroot/my-grav-project $ | bin/grav install Vous devriez maintenant avoir les d\u00e9pendances install\u00e9es sous : ~/webroot/my-grav-project/user/plugins/error ~/webroot/my-grav-project/user/plugins/problems ~/webroot/my-grav-project/user/themes/antimatter Visionneuse de journal. Dans le cadre de Grav 1.6, une nouvelle commande CLI logviewer a \u00e9t\u00e9 cr\u00e9\u00e9e pour permettre une visualisation rapide des journaux Grav. La fa\u00e7on la plus simple d'utiliser cette commande est de taper simplement : $ | cd ~/webroot/my-grav-project $ | bin/grav logviewer Cela affichera les 20 derni\u00e8res entr\u00e9es de journal du fichier logs/grav.log . Il y a quelques options : 1 | -f, --file[=FILE] custom log file location (default = grav.log) 2 | -l, --lines[=LINES] number of lines (default = 10) 3 | -v, --verbose verbose output including a stack trace if available par exemple. $ | bin/grav logviewer --lines=4 | | Log Viewer | ========== | | viewing last 4 entries in grav.log | | 2019-02-27 12:00:30 [WARNING] Plugin 'foo-plugin' enabled but not found! Try clearing cache with `bin/grav cache` | 2019-02-27 12:04:57 [NOTICE] Backup Created: /Users/joe/my-grav-project/backup/default_site_backup--20190227120450.zip | 2019-02-27 12:05:10 [NOTICE] Backup Created: /Users/joe/my-grav-project/backup/pages_backup--20190227120510.zip | 2019-02-27 12:26:00 [NOTICE] Backup Created: /Users/joe/my-grav-project/backup/pages_backup--20190227122600.zip Et une sortie d\u00e9taill\u00e9e avec des traces de pile : $ | bin/grav logviewer -v | | Log Viewer | ========== | | viewing last 20 entries in grav.log | | 2019-03-14 05:52:44 [WARNING] Plugin 'simplesearch.bak' enabled but not found! Try clearing cache with `bin/grav clear-cache` | 2019-03-14 05:52:44 [CRITICAL] A function must be an instance of \\Twig_FunctionInterface or \\Twig_SimpleFunction. | 0 /Users/joe/my-grav-project/plugins/acme-twig-filters/acme-twig-filters.php(52): Twig\\Environment->addFunction(Object(Twig\\TwigFilter)) | 1 /Users/joe/my-grav-project/vendor/symfony/event-dispatcher/EventDispatcher.php(212): Grav\\Plugin\\ACMETwigFiltersPlugin->onTwigInitialized(Object(RocketTheme\\Toolbox\\Event\\Event), 'onTwigInitializ...', Object(RocketTheme\\Toolbox\\Event\\EventDispatcher)) | 2 /Users/joe/my-grav-project/vendor/symfony/event-dispatcher/EventDispatcher.php(44): Symfony\\Component\\EventDispatcher\\EventDispatcher->doDispatch(Array, 'onTwigInitializ...', Object(RocketTheme\\Toolbox\\Event\\Event)) | 3 /Users/joe/my-grav-project/vendor/rockettheme/toolbox/Event/src/EventDispatcher.php(23): Symfony\\Component\\EventDispatcher\\EventDispatcher->dispatch('onTwigInitializ...', Object(RocketTheme\\Toolbox\\Event\\Event)) | 4 /Users/joe/my-grav-project/system/src/Grav/Common/Grav.php(365): RocketTheme\\Toolbox\\Event\\EventDispatcher->dispatch('onTwigInitializ...', Object(RocketTheme\\Toolbox\\Event\\Event)) | 5 /Users/joe/my-grav-project/system/src/Grav/Common/Twig/Twig.php(175): Grav\\Common\\Grav->fireEvent('onTwigInitializ...') | 6 /Users/joe/my-grav-project/system/src/Grav/Common/Processors/TwigProcessor.php(24): Grav\\Common\\Twig\\Twig->init() | 7 /Users/joe/my-grav-project/system/src/Grav/Framework/RequestHandler/Traits/RequestHandlerTrait.php(45): Grav\\Common\\Processors\\TwigProcessor->process(Object(Nyholm\\Psr7\\ServerRequest), Object(Grav\\Framework\\RequestHandler\\RequestHandler)) | 8 /Users/joe/my-grav-project/system/src/Grav/Framework/RequestHandler/Traits/RequestHandlerTrait.php(57): Grav\\Framework\\RequestHandler\\RequestHandler->handle(Object(Nyholm\\Psr7\\ServerRequest)) | 9 /Users/joe/my-grav-project/system/src/Grav/Common/Processors/AssetsProcessor.php(28): Grav\\Framework\\RequestHandler\\RequestHandler->handle(Object(Nyholm\\Psr7\\ServerRequest)) | | 2019-03-14 05:52:46 [WARNING] Plugin 'simplesearch.bak' enabled but not found! Try clearing cache with `bin/grav clear-cache` | ... Nouveau projet. Chaque fois que vous souhaitez d\u00e9marrer un nouveau projet avec Grav, vous devez commencer avec une instance Grav propre. Gr\u00e2ce \u00e0 la CLI, ce processus est tr\u00e8s simple et ne prend que quelques secondes. 1.Lancez un terminal ou une console et acc\u00e9dez au dossier grav (pour les besoins de ce document, nous supposerons qu'il r\u00e9side sous ~/Projects/grav ). $ | cd ~/Projects/grav 2.Ex\u00e9cutez Grav CLI pour cr\u00e9er un nouveau projet, la destination \u00e9tant l'emplacement o\u00f9 votre projet r\u00e9sidera (g\u00e9n\u00e9ralement la racine Web de votre serveur Web). Supposons que nous cr\u00e9ons un portfolio et que nous le voulons \u00e0 ~/Webroot/portfolio . $ | bin/grav new-project ~/webroot/portfolio Cela cr\u00e9era une nouvelle instance Grav et t\u00e9l\u00e9chargera toutes les d\u00e9pendances requises. Bac \u00e0 sable. Grav a un utilitaire astucieux appel\u00e9 sandbox , qui peut rapidement cr\u00e9er une copie symbolique de l'installation de Grav. En termes simples, l'ex\u00e9cution de bin/grav sandbox -s DESTINATION - o\u00f9 \"DESTINATION\" est le chemin d'acc\u00e8s au dossier dans lequel vous souhaitez copier l'installation - recr\u00e9e l'installation Grav dans un autre dossier. Par exemple, en ex\u00e9cutant : $ | bin/grav sandbox -s ../copy \u00c0 partir de votre dossier Grav actuel, cr\u00e9ez un dossier fr\u00e8re nomm\u00e9 copy , o\u00f9 les dossiers suivants sont des copies virtuelles : /bin , /system , /vendor , /webserver-configs , ainsi que des fichiers standard qui r\u00e9sident g\u00e9n\u00e9ralement dans le dossier racine de Grav. Tout le contenu de /user sera des copies carbone, et non virtuelles, vous pouvez donc facilement commencer \u00e0 personnaliser la nouvelle installation sans avoir cr\u00e9\u00e9 de surcharge \u00e0 partir des fichiers principaux. Planificateur. Comme indiqu\u00e9 dans la section Avanc\u00e9 -> Planificateur , le planificateur peut \u00eatre surveill\u00e9 via la commande CLI. La commande de base ex\u00e9cutera manuellement les t\u00e2ches du planificateur qui sont dues : $ | bin/grav scheduler Pour obtenir plus de d\u00e9tails, vous pouvez utiliser l'option facultative -v : $ | bin/grav scheduler -v | | Running Scheduled Jobs | ====================== | | [2019-02-27T12:34:07-07:00] Success: Grav\\Common\\Cache::purgeJob | [2019-02-27T12:34:07-07:00] Success: Grav\\Common\\Cache::clearJob | [2019-02-27T12:34:07-07:00] Success: ls -lah Les autres options incluent : -i, --install Show Install Command -j, --jobs Show Jobs Summary -d, --details Show Job Details Veuillez vous r\u00e9f\u00e9rer \u00e0 la section Avanc\u00e9 -> Planificateur , pour des informations plus d\u00e9taill\u00e9es sur ces options. S\u00e9curit\u00e9. Ajout\u00e9 dans Grav 1.5 est une nouvelle commande CLI du scanner de s\u00e9curit\u00e9. Vous pouvez l'ex\u00e9cuter pour analyser rapidement votre contenu par rapport aux param\u00e8tres de s\u00e9curit\u00e9 configur\u00e9s . $ | bin/grav security | | Grav Security Check | =================== | | Scanning 11 pages [===================================================] 100% < 1 sec | | [OK] Security Scan complete: No issues found... Informations PHP CGI-FCGI. Pour d\u00e9terminer si votre serveur ex\u00e9cute cgi-fcgi sur la ligne de commande, tapez ce qui suit : $ | $ php -v | PHP 5.5.17 (cgi-fcgi) (built: Sep 19 2014 09:49:55) | Copyright (c) 1997-2014 The PHP Group | Zend Engine v2.5.0, Copyright (c) 1998-2014 Zend Technologies | with the ionCube PHP Loader v4.6.1, Copyright (c) 2002-2014, by ionCube Ltd. Si vous voyez une r\u00e9f\u00e9rence \u00e0 (cgi-fcgi) , vous devrez pr\u00e9fixer toutes les commandes bin/grav avec php-cli . Alternativement, vous pouvez configurer un alias dans votre shell avec quelque chose comme : alias php=\"php-cli\" qui garantira que la version CLI de PHP s'ex\u00e9cute \u00e0 partir de la ligne de commande.","title":"Commandes Grav"},{"location":"cli-commandes-plugin/","text":"Commande de plugin Les plugins peuvent s'int\u00e9grer au bin/plugin CLI de Grav et am\u00e9liorer les fonctionnalit\u00e9s du plugin via Terminal en ex\u00e9cutant des t\u00e2ches sp\u00e9cifiques. Comme expliqu\u00e9 dans la section Grav CLI , vous devez utiliser un terminal pour pouvoir ex\u00e9cuter des commandes. Lors de l'ex\u00e9cution de la commande bin/plugin , tous les plugins qui fournissent l'int\u00e9gration CLI seront r\u00e9pertori\u00e9s. La premi\u00e8re option transmise \u00e0 bin/plugin est toujours le slug du plugin (c'est-\u00e0-dire erreur , connexion , etc.). La deuxi\u00e8me option est la commande r\u00e9elle fournie par le plugin. En fonction de l'impl\u00e9mentation du plugin, il pourrait y avoir d'autres options suivantes et vous pouvez en savoir plus sur chacune d'elles en ex\u00e9cutant la commande bin/plugin [slug] list . Commandes et options r\u00e9serv\u00e9es. Certaines commandes et options r\u00e9serv\u00e9es sont toujours disponibles \u00e0 partir de n'importe quel plugin. Ceux-ci sont \u00e9galement particuli\u00e8rement importants \u00e0 garder \u00e0 l'esprit si vous \u00eates un d\u00e9veloppeur et que vous souhaitez impl\u00e9menter vos propres t\u00e2ches, car vous ne pourrez utiliser aucune des commandes et options r\u00e9serv\u00e9es. Commandes help Affiche l'aide d'une commande. list R\u00e9pertorie les commandes . Options -h, --help Afficher un message d'aide. -q, --quiet N'affiche aucun message. -v, --version Afficher la version de l'application. --ansi Forcer la sortie ANSI. --no-ansi D\u00e9sactiver la sortie ANSI. -n, --no-interaction Ne pas poser de question interactive. -v|vv|vvv, --verbose Augmente la verbosit\u00e9 des messages : 1 pour une sortie normale, 2 pour une sortie plus d\u00e9taill\u00e9e et 3 pour le d\u00e9bogage. Comment utiliser la CLI pour les plugins. Les commandes list et help sont tr\u00e8s utiles lorsque vous ne savez pas encore comment utiliser un certain plugin CLI. Avec list , vous pouvez acc\u00e9der \u00e0 toutes les commandes disponibles et afficher une description rapide de ce que chacune d'elles fait. Voici un exemple avec le plugin login lorsque nous ex\u00e9cutons la commande bin/plugin login list . Ne pas sp\u00e9cifier de commande apr\u00e8s le slug du plugin qui est automatiquement list par d\u00e9faut. Cela signifie que bin/plugin [slug] list et bin/plugin [slug] sont \u00e9quivalents. Comme vous pouvez le constater, la plupart des options et commandes correspondent \u00e0 la liste r\u00e9serv\u00e9e . Les commandes r\u00e9elles offertes par le plugin de connexion sont add-user , new-user et newuser . Comme vous pouvez le constater, la description de l'aide des 3 commandes est identique. En effet, par choix, les 3 commandes sont exactement les m\u00eames. add-user et newuser sont en fait des alias pour new-user , ce qui permet de deviner facilement la commande sans la conna\u00eetre ni s'en souvenir. Maintenant que nous savons que le plugin de connexion est livr\u00e9 avec une commande new-user , nous devons seulement apprendre \u00e0 l'utiliser. C'est l\u00e0 que la commande d'aide r\u00e9serv\u00e9e entre en place. Lan\u00e7ons bin/plugin login help new-user . Nous avons maintenant une compr\u00e9hension compl\u00e8te de la commande new-user et nous savons comment l'utiliser. Essayons de cr\u00e9er un nouvel utilisateur. \u00c9tant donn\u00e9 que toutes les options sont facultatives par d\u00e9finition, nous omettrons volontairement le mot de passe (on nous le demandera ult\u00e9rieurement dans une invite). $ | bin/plugin login newuser -u joeuser -e joeuser@grav.org -P b -N \"Joe User\" -t \"Site Administrator\" | Creating new user | | Enter a password: ********* | Repeat the password: ********* | | Success! User joeuser created. D\u00e9veloppeurs : int\u00e9grez la CLI dans le plugin. En tant que d\u00e9veloppeur, vous souhaiterez peut-\u00eatre cr\u00e9er des commandes CLI que les administrateurs ou les utilisateurs pourront ex\u00e9cuter. Il est extr\u00eamement facile d'ajouter une telle fonctionnalit\u00e9 dans un plugin. La premi\u00e8re chose que vous voulez faire est de cr\u00e9er un sous-dossier cli/ \u00e0 la racine de votre plugin. Ce dossier sera trait\u00e9 par bin/plugin et analys\u00e9 pour les classes de commandes. La CLI de Grav est bas\u00e9e sur l'excellent composant de la console Symfony et vous pouvez \u00e0 peu pr\u00e8s suivre leur documentation pour une r\u00e9f\u00e9rence compl\u00e8te, il n'y a que quelques \u00e9l\u00e9ments importants \u00e0 prendre en compte. Le nom du fichier de classe est standard. Il doit commencer par une majuscule et se terminer par Command.php. Hello.php : WRONG helloworldCommand.php : WRONG HelloworldCommand.php : CORRECT HelloWorldCommand.php : CORRECT Vous devez toujours \u00e9tendre ConsoleCommand , cela vous offrira des extras Grav tels que des couleurs format\u00e9es, un acc\u00e8s direct \u00e0 l'instance Grav et \u00e0 d'autres utilitaires ( plus de d\u00e9tails ). La console Symfony n\u00e9cessite une m\u00e9thode execute . Lors de l'extension de ConsoleCommand , cela devient serve . Vous trouverez ci-dessous un exemple simple pour vous aider \u00e0 d\u00e9marrer. Vous pouvez le tester, tel quel, en l'enregistrant sous HelloCommand.php et en le pla\u00e7ant sous le dossier racine cli/ de votre plugin ( user/plugins/my_plugin/cli/HelloCommand.php) . 1 | <?php 2 | namespace Grav\\Plugin\\Console; 3 | 4 | use Grav\\Console\\ConsoleCommand; 5 | use Symfony\\Component\\Console\\Input\\InputArgument; 6 | use Symfony\\Component\\Console\\Input\\InputOption; 7 | 8 | /** 9 | * Class HelloCommand 10 | * 11 | * @package Grav\\Plugin\\Console 12 | */ 13 | class HelloCommand extends ConsoleCommand 14 | { 15 | /** 16 | * @var array 17 | */ 18 | protected $options = []; 19 | 20 | /** 21 | * Greets a person with or without yelling 22 | */ 23 | protected function configure() 24 | { 25 | $this 26 | ->setName(\"hello\") 27 | ->setDescription(\"Greets a person.\") 28 | ->addArgument( 29 | 'name', 30 | InputArgument::REQUIRED, 31 | 'The name of the person that should be greeted' 32 | ) 33 | ->addOption( 34 | 'yell', 35 | 'y', 36 | InputOption::VALUE_NONE, 37 | 'Wheter the greetings should be yelled or quieter' 38 | ) 39 | ->setHelp('The <info>hello</info> greets someone.') 40 | ; 41 | } 42 | 43 | /** 44 | * @return int|null|void 45 | */ 46 | protected function serve() 47 | { 48 | // Collects the arguments and options as defined 49 | $this->options = [ 50 | 'name' => $this->input->getArgument('name'), 51 | 'yell' => $this->input->getOption('yell') 52 | ]; 53 | 54 | // Prepare the strings we want to output and wraps the name into a cyan color 55 | // More colors available at: 56 | // https://github.com/getgrav/grav/blob/develop/system/src/Grav/Console/ ConsoleTrait.php 57 | $greetings = 'Greetings, dear <cyan>' . $this->options['name'] . '</cyan>!'; 58 | 59 | // If the optional `--yell` or `-y` parameter are passed in, let's convert 60 | everything to uppercase 60 | if ($this->options['yell']) { 61 | $greetings = strtoupper($greetings); 62 | } 63 | 64 | // finally we write to the output the greetings 65 | $this->output->writeln($greetings); 66 | } 67 | } Un autre bon exemple simple peut \u00eatre trouv\u00e9 dans le plugin d'erreur (LogCommand.php) , Si vous cherchez un exemple plus complexe, vous devriez jeter un \u0153il au plugin de connexion (NewUserCommand.php) .","title":"Commandes de plugin"},{"location":"cli-intro/","text":"Introduction ligne de commandes Ce n'est pas un secret que Grav a \u00e9t\u00e9 construit avec la ligne de commande \u00e0 l'esprit. Bien que le plugin Admin facilite certainement la t\u00e2che sans ouvrir un terminal (MacOS et Linux) ou une invite de commande (Windows), il y a beaucoup \u00e0 dire sur la vitesse et le niveau de contr\u00f4le qui accompagnent le travail \u00e0 partir de la ligne de commande. Cela est particuli\u00e8rement vrai pour les personnes qui ex\u00e9cutent leurs propres serveurs de d\u00e9veloppement ou un serveur distant avec lequel ils ont la possibilit\u00e9 d'acc\u00e9der \u00e0 la ligne de commande. La quantit\u00e9 d'outils \u00e0 votre disposition depuis la ligne de commande est incroyable. Vous pouvez contr\u00f4ler pratiquement tous les aspects de l'h\u00e9bergement de votre site, Grav, et ses plugins et th\u00e8mes avec une poign\u00e9e de touches. En fin de compte, tout se r\u00e9sume \u00e0 des pr\u00e9f\u00e9rences personnelles. Sur cette page, nous \u00e9num\u00e9rerons quelques excellentes ressources pour vous aider \u00e0 vous familiariser avec la ligne de commande. Tous les syst\u00e8mes d'exploitation ne sont pas compatibles les uns avec les autres en ce qui concerne les commandes. Il existe des diff\u00e9rences mineures entre MacOS et de nombreuses distributions Linux, l'invite de commande de Windows ayant un ensemble de commandes tr\u00e8s diff\u00e9rent des deux autres. Mac OS. MacOS est bas\u00e9 sur Unix et est conforme aux normes POSIX. Cela signifie que la plupart des commandes que vous connaissez peut-\u00eatre sur d'autres syst\u00e8mes d'exploitation bas\u00e9s sur Unix ou Linux fonctionneront exactement comme pr\u00e9vu sous MacOS. Il existe quelques exceptions \u00e0 la r\u00e8gle, et c'est pour cette raison que nous vous recommandons de rechercher les commandes Terminal pour le syst\u00e8me d'exploitation sp\u00e9cifique avec lequel vous travaillez. Voici quelques ressources int\u00e9ressantes pour vous aider \u00e0 vous habituer \u00e0 utiliser le Terminal sous MacOS : Guide des commandes de terminal MacOS de Michael Hogg - Une ressource pratique pour les commandes de terminal compatibles MacOS, ce qu'elles font et comment les utiliser. MacRumors Guide to Terminal - Une ressource utile pour naviguer et utiliser le Terminal, y compris des conseils pour l'utiliser avec l'interface graphique. Envato Tuts + Terminal Trucs et astuces - 40 trucs et astuces astucieux pour ma\u00eetriser le terminal. Comprend des commandes que vous ne trouverez pas dans de nombreuses introductions de base. Envato Tuts + Apprivoiser le terminal - Un cours d\u00e9taill\u00e9 en plusieurs parties sur l'utilisation du terminal. Comprend des vid\u00e9os, des captures d'\u00e9cran et plus encore. Linux. La grande majorit\u00e9 des distributions Linux (et Unix) ont un gros point commun : l'interface de ligne de commande Bash (Terminal). Que vous ex\u00e9cutiez ou non une interface graphique telle que Gnome, Unity ou KDE, il y a de fortes chances que si vous ex\u00e9cutez une distribution Linux sur votre ordinateur de bureau ou votre ordinateur portable, vous avez visit\u00e9 la ligne de commande. Apr\u00e8s tout, c'est puissant. Vous pouvez faire \u00e0 peu pr\u00e8s tout ce que vous pouvez avec l'interface graphique directement dans la ligne de commande, souvent avec plus de contr\u00f4le sur la fa\u00e7on dont les commandes sont ex\u00e9cut\u00e9es. Voici quelques excellentes ressources pour vous aider \u00e0 vous familiariser avec le Terminal sous Linux : Guide du d\u00e9butant de TechSpot sur la ligne de commande Linux - Un excellent guide du d\u00e9butant sur la ligne de commande. Guide rapide de MakeUseOf pour d\u00e9marrer avec la ligne de commande Linux - Une autre excellente ressource pour en savoir plus sur le terminal. O'Reilly Linux DevCenter R\u00e9pertoire des commandes Linux - Un index des commandes disponibles dans le terminal. Ryan's Tutorials Linux Tutorial - Un excellent guide tout-en-un sur Linux et l'interface de ligne de commande Bash (Terminal). Windows. Windows se d\u00e9marque du lot pour un certain nombre de raisons. De nombreuses commandes de la ligne de commande de Windows rappellent ses racines DOS. Les commandes courantes telles que ls pour une liste de r\u00e9pertoires ne fonctionnent pas ici. Au lieu de cela, vous taperiez dir . Voici quelques ressources pour vous aider \u00e0 ma\u00eetriser l'invite de commande Windows : Guide du d\u00e9butant de MakeUseOf sur la ligne de commande Window s - Une introduction bien \u00e9crite \u00e0 la ligne de commande pour Windows. DOSPrompt.info - Un site entier consacr\u00e9 \u00e0 la familiarisation des utilisateurs avec l'invite de commande. Toutes les commandes CLI de Grav reposent sur PHP, mais ce n'est pas imm\u00e9diatement disponible dans Windows. Vous pouvez savoir s'il est install\u00e9 en ouvrant une console et en tapant `php -v` pour v\u00e9rifier. Si `'php' n'est pas reconnu comme une commande interne ou externe ...` renvoie, ce n'est pas le cas. Si vous souhaitez ajouter PHP \u00e0 votre syst\u00e8me Windows, vous devez trouver vos \"Variables d'environnement\", soit en les recherchant dans le menu D\u00e9marrer, soit en allant dans Panneau de configuration -> Param\u00e8tres syst\u00e8me avanc\u00e9s -> Cliquez sur \"Variables d'environnement\" - bouton. Sous \"Variables syst\u00e8me\", recherchez \"Chemin\" et cliquez sur Modifier. Copiez la \"valeur variable\" dans le bloc-notes et ajoutez un point-virgule \u00e0 la fin - pour s\u00e9parer les variables. Trouvez ensuite le chemin d'acc\u00e8s \u00e0 votre installation de PHP (\u00e0 partir de z\u00e9ro from scratch ou en utilisant une installation actuelle fournie avec votre environnement de d\u00e9veloppement), et ajoutez-le \u00e0 la fin de cette longue liste de variables. Vous voulez le chemin du dossier, sans compter php.exe . Lorsque cela est fait, ouvrez une nouvelle console (ou red\u00e9marrez votre console actuelle) afin que le nouveau chemin soit appliqu\u00e9. Ensuite, essayez \u00e0 nouveau php -v , vous devriez obtenir une sortie comme : PHP 7.0.7 (cli) .... Lorsque vous ex\u00e9cutez les commandes de Grav, vous devrez leur ajouter php , par exemple php grav/gpm index . Commandes sp\u00e9cifiques \u00e0 Grav. L'une des choses les plus int\u00e9ressantes \u00e0 propos de Grav est que vous disposez d'une multitude de commandes puissantes pour tout faire, de l'installation de plugins et de th\u00e8mes suppl\u00e9mentaires \u00e0 l'ajout d'utilisateurs \u00e0 l'administrateur. Dans cette section, nous \u00e9num\u00e9rerons la plupart des commandes les plus couramment utilis\u00e9es. Toutes les commandes r\u00e9pertori\u00e9es ci-dessous sont compatibles avec n'importe quel syst\u00e8me d'exploitation . COMMANDE DESCRIPTION bin/grav list Liste toutes les commandes disponibles dans Grav (hors GPM). bin/grav help <command> Vous donne de l'aide sur une commande sp\u00e9cifique. bin/grav new-project <location> Utilis\u00e9 pour cr\u00e9er une nouvelle instance Grav propre dans un dossier diff\u00e9rent. Peut \u00eatre ex\u00e9cut\u00e9 \u00e0 partir d'une installation Grav existante. bin/grav install Cette commande installe toutes les d\u00e9pendances n\u00e9cessaires pour ex\u00e9cuter votre installation actuelle de Grav. bin/grav cache Cette commande efface le cache de votre installation Grav. Les options incluent : --all , --assets-only , --images-only et --cache-only . bin/grav backup Cr\u00e9e une sauvegarde zip de votre site Grav actuel. bin/grav composer Met \u00e0 jour les packages de fournisseurs bas\u00e9s sur composer install\u00e9s manuellement. bin/grav security Ex\u00e9cute les v\u00e9rifications de s\u00e9curit\u00e9 XSS configur\u00e9es sur toutes les pages Grav. bin/gpm list Liste toutes les commandes disponibles via le GPM (Grav Package Manager) de Grav. bin/gpm help <command> Vous donne de l'aide sur une commande sp\u00e9cifique. bin/gpm index Affiche une liste de toutes les ressources disponibles dans le r\u00e9f\u00e9rentiel Grav, organis\u00e9es par th\u00e8mes et plugins. bin/gpm info Affiche les d\u00e9tails du package souhait\u00e9, tels que la description, l'auteur, la page d'accueil, etc. bin/gpm install Installe une ressource du r\u00e9f\u00e9rentiel sur votre instance Grav actuelle avec une simple commande. bin/gpm update V\u00e9rifie les plugins et les th\u00e8mes install\u00e9s pour les mises \u00e0 jour disponibles et les r\u00e9pertorie. bin/gpm uninstall Supprime un th\u00e8me ou un plugin install\u00e9 et vide le cache. bin/gpm self-upgrade Vous permet de mettre \u00e0 jour Grav vers la derni\u00e8re version. bin/gpm logviewer Affichez facilement les journaux Grav avec des options de configuration pour choisir le fichier journal, le nombre de lignes et la verbosit\u00e9. bin/gpm scheduler G\u00e9rez les t\u00e2ches planifi\u00e9es et ex\u00e9cutez manuellement le processus du planificateur si n\u00e9cessaire. Ces commandes sont expliqu\u00e9es plus en d\u00e9tail dans la documentation Grav CLI et Grav GPM . Les commandes list\u00e9es ci-dessous sont compatibles avec les syst\u00e8mes mac ou unix . COMMANDE DESCRIPTION index bin/gpm \\| grep '\\| Install\u00e9' R\u00e9pertorie tous les plugins et th\u00e8mes que vous avez actuellement install\u00e9s. Liens symboliques. Les liens symboliques (\u00e9galement appel\u00e9s symlinks) sont incroyablement utiles et faciles \u00e0 ex\u00e9cuter dans la ligne de commande. Ce qu'il fait, il cr\u00e9e une copie virtuelle (clone) d'un dossier donn\u00e9 ou de son contenu et le place o\u00f9 vous voulez qu'il aille. Contrairement \u00e0 une copie conforme, il s'agit simplement d'un tunnel vers l'original, de sorte que tout ce que vous voyez et modifiez se refl\u00e8te \u00e0 plusieurs endroits \u00e0 la fois. Un autre grand avantage de cette op\u00e9ration est qu'elle ne prend pratiquement aucun espace disque suppl\u00e9mentaire puisque vous n'avez pas plusieurs copies des m\u00eames fichiers. En ce qui concerne Grav, les liens symboliques sont un excellent moyen d'ajouter des plugins, des th\u00e8mes et du contenu \u00e0 plusieurs instances et de le faire d'une mani\u00e8re qui facilite infiniment la mise \u00e0 jour et la modification. Vous apportez une modification une fois et elle appara\u00eet partout o\u00f9 le ou les fichiers sont li\u00e9s symboliquement. Le processus d'ex\u00e9cution d'un lien symbolique est assez simple, avec des diff\u00e9rences mineures entre les syst\u00e8mes d'exploitation. Liens symboliques sous MacOS et Linux. La commande suit un mod\u00e8le commun de ln -s <original file, directory, or its contents> <put virtual copies here> . Les commandes qui lancent un lien symbolique diff\u00e8rent selon les syst\u00e8mes d'exploitation. Pour MacOS et la majorit\u00e9 des distributions Unix et Linux, ln -s est la commande. La partie ln indique au syst\u00e8me que vous souhaitez cr\u00e9er un lien. Le commutateur -s d\u00e9finit le lien comme symbolique. Liens symboliques sous Windows. La structure de base de la commande dans Windows est mklink <type> <put virtual copies here> <original file, directory, or its contents> . Contrairement \u00e0 MacOS ou Linux, vous devrez d\u00e9finir l'argument pour le type de fichier que vous liez symboliquement. La source et la destination sont \u00e9galement invers\u00e9es dans ce cas, o\u00f9 le nouveau lien symbolique vient avant le fichier vers lequel vous cr\u00e9ez un lien. Il y a trois arguments que vous pouvez utiliser ici : /j - C'est l'argument le plus couramment utilis\u00e9. Il cr\u00e9e un lien symbolique d'un r\u00e9pertoire. /h - Cela cr\u00e9e un lien symbolique pour un fichier sp\u00e9cifique. /d - Cela cr\u00e9e un lien symbolique ou un raccourci. Il est peu probable qu'il soit utilis\u00e9 aux fins d\u00e9crites ici. Exemples de commandes. Fondamentalement, vous indiquez la commande qui lance le lien symbolique, ce que vous liez symboliquement et o\u00f9 vous placez les copies virtuelles. Ci-dessous, nous avons des exemples d\u00e9taill\u00e9s de ces commandes : Lier le contenu d'un dossier \u00e0 un autre. MacOS ET LINUX WINDOWS ln -s ~/folder1 ~/folder2 mklink /J C:\\folder2 C:\\folder1 Cette commande cr\u00e9e un lien symbolique qui prend le contenu initialement plac\u00e9 dans folder1 et en place une copie li\u00e9e symboliquement dans folder2 . Si folder2 n'existe pas d\u00e9j\u00e0, il est cr\u00e9\u00e9 avec cette commande. Lier des dossiers entiers d'un endroit \u00e0 un autre. MacOS ET LINUX WINDOWS ln -s ~/folder1 ~/folder2/ mklink /J C:\\folder2\\ C:\\folder1 Cette commande copie l'int\u00e9gralit\u00e9 du r\u00e9pertoire folder1 et le place \u00e0 l'emplacement cible (dans ce cas folder2 ). Dans ce cas, folder2 devrait d\u00e9j\u00e0 exister car il ne sera pas cr\u00e9\u00e9 avec cette commande. Observez la barre oblique ou la barre oblique inverse \u00e0 la fin lorsque vous sp\u00e9cifiez folder2 . Lier des fichiers individuels d'un endroit \u00e0 un autre. MacOS ET LINUX WINDOWS ln -s ~/folder1/file.jpg ~/folder2 mklink /H C:\\folder2\\ C:\\folder1\\file.jpg C'est une commande utile pour lier symboliquement des fichiers individuels. Ceci est particuli\u00e8rement utile si vous avez des fichiers partag\u00e9s entre plusieurs r\u00e9pertoires et que vous souhaitez les mettre \u00e0 jour partout en m\u00eame temps. Gardez \u00e0 l'esprit que le fichier d'origine est la seule copie r\u00e9elle, il doit donc rester l\u00e0 o\u00f9 il se trouve pour que tous les liens symboliques fonctionnent.","title":"Introduction ligne de commandes"},{"location":"cli-mise-a-niveau/","text":"Mises \u00e0 niveau script\u00e9es Ou : mettre \u00e0 niveau plusieurs installations Grav \u00e0 la fois. Ceci est un guide pour faciliter la mise \u00e0 niveau de plusieurs installations Grav, en utilisant Deployer . Par multiples, j'entends des installations s\u00e9par\u00e9es, pas une installation multisite . Nous utiliserons le chemin d'acc\u00e8s \u00e0 chaque installation pour ex\u00e9cuter les commandes CLI de Grav , mais sans avoir \u00e0 les saisir manuellement. L'un des avantages d'un gestionnaire de t\u00e2ches tel que Deployer est qu'au fur et \u00e0 mesure qu'il parcourt ses t\u00e2ches, il vous permet de savoir exactement ce qu'il fait en cours de route. Il vous montrera \u00e9galement toute sortie du serveur \u00e0 partir des commandes en cours d'ex\u00e9cution. Par exemple, voici une sortie de Deployer : Executing task packages GPM Releases Configuration: Stable Found 8 packages installed of which 1 need updating 01. Email [v2.5.2 -> v2.5.3] GPM Releases Configuration: Stable Preparing to install Email [v2.5.3] |- Downloading package... 100% |- Checking destination... ok |- Installing package... ok '- Success! Clearing cache Cleared: /home/username/public_html/deployer/grav/cache/twig/* Cleared: /home/username/public_html/deployer/grav/cache/doctrine/* Cleared: /home/username/public_html/deployer/grav/cache/compiled/* Touched: /home/username/public_html/deployer/grav/user/config/system.yaml Et aussi simple que cela, Deployer a dit \u00e0 Grav de mettre \u00e0 niveau tous les packages, ce qui a mis \u00e0 niveau le plugin Email vers sa derni\u00e8re version. Conditions pr\u00e9alables. Comme avec Grav, vous avez besoin de PHP v7.3.6 ou sup\u00e9rieur. Cela s'applique \u00e9galement \u00e0 la ligne de commande (CLI), donc si vous avez plusieurs versions install\u00e9es, utilisez celle qui fait r\u00e9f\u00e9rence \u00e0 la bonne version. Utilisez la commande php -v pour v\u00e9rifier votre version par d\u00e9faut, la mienne est PHP 7.2.34 . Dans les environnements partag\u00e9s, v\u00e9rifiez aupr\u00e8s de votre h\u00f4te quelle commande utiliser pour la CLI. Dans mon cas, c'est php74 qui avec -v renvoie PHP 7.4.12 . Cela signifie \u00e9galement pr\u00e9fixer chaque chemin comme ceci : php74 vendor/bin/dep list . Certains h\u00e9bergeurs vous permettent \u00e9galement de s\u00e9lectionner votre version PHP par d\u00e9faut \u00e0 utiliser pour la CLI, v\u00e9rifiez aupr\u00e8s de votre h\u00e9bergeur comment proc\u00e9der. R\u00e9glages. Dans la racine publique de vos serveurs (comme public_html ou www ), cr\u00e9ez un dossier nomm\u00e9 deployer et entrez dedans. Nous allons l'utiliser comme base pour le projet. Vous voudrez prot\u00e9ger ce r\u00e9pertoire par mot de passe (voir le guide DigitalOcean pour une approche manuelle, ou utiliser CPanel si disponible). Vous devez avoir une installation fonctionnelle de Grav, ainsi que de Composer . Composer est d\u00e9j\u00e0 install\u00e9 sur certains h\u00f4tes, ce que vous pouvez v\u00e9rifier en ex\u00e9cutant composer -v . S'il n'est pas install\u00e9, vous pouvez l'installer via SSH -- \u00e0 partir du r\u00e9pertoire racine -- avec ce qui suit : $ | export COMPOSERDIR=~/bin;mkdir bin | curl -sS https://getcomposer.org/installer | php -- --install-dir=$COMPOSERDIR --filename=composer Ou, si vous pr\u00e9f\u00e9rez une installation locale , ex\u00e9cutez ce qui suit dans le dossier public_html/deployer/- : $ | php -r \"copy('https://getcomposer.org/installer', 'composer-setup.php');\" | php composer-setup.php | php -r \"unlink('composer-setup.php');\" Avec une installation locale, composer est ex\u00e9cut\u00e9 via composer.phar plut\u00f4t que simplement composer . Maintenant, tout en restant dans le dossier public_html/deployer/ , ex\u00e9cutez ce qui suit pour installer Deployer : $ | composer require deployer/deployer Maintenant, toujours dans le m\u00eame dossier, cr\u00e9ez un fichier nomm\u00e9 deploy.php . Nous l'utiliserons pour ex\u00e9cuter chaque t\u00e2che avec Deployer. Copiez et collez ce qui suit dans le fichier : 1 | <?php 2 | namespace Deployer; 3 | require 'vendor/autoload.php'; 4 | 5 | // Configuration 6 | set('default_stage', 'production'); 7 | set(php, 'php56'); 8 | 9 | // Servers 10 | localServer('site1') 11 | ->stage('production') 12 | ->set('deploy_path', '/home/username/public_html/deployer/grav'); 13 | 14 | desc('Backup Grav installations'); 15 | task('backup', function () { 16 | $backup = run('{{php}} bin/grav backup'); 17 | writeln($backup); 18 | }); 19 | desc('Upgrade Grav Core'); 20 | task('core', function () { 21 | $self_upgrade = run('{{php}} bin/gpm self-upgrade -y'); 22 | writeln($self_upgrade); 23 | }); 24 | desc('Upgrade Grav Packages'); 25 | [ task('packages', function () { 26 | $upgrade = run('{{php}} bin/gpm update -y'); 27 | writeln($upgrade); 28 | }); 29 | ?> Configuration. \u00c9tant donn\u00e9 que Deployer a besoin d'un environnement de transfert explicite, nous le d\u00e9finissons dans production . De plus, pour permettre une version php sp\u00e9cifique, nous d\u00e9finissons un ex\u00e9cutable par d\u00e9faut \u00e0 utiliser. Il peut s'agir d'un ex\u00e9cutable nomm\u00e9 ou du chemin vers une version sp\u00e9cifique de PHP. Notre configuration ressemble maintenant \u00e0 ceci : 1 | // Configuration 2 | set('default_stage', 'production'); 3 | set(php, 'php56'); Si votre version par d\u00e9faut de PHP CLI est 5.6 * ou sup\u00e9rieure, vous changez ceci en set(php, 'php'); . Les serveurs. Nous pouvons configurer autant de serveurs/sites que n\u00e9cessaire, le script sera ex\u00e9cut\u00e9 pour chacun d'eux dans l'ordre. Il peut s'agir d'installations locales ou sur des serveurs externes, mais comme il s'agit d'une configuration locale, nous utilisons localServer (voir Deployer/servers pour plus de configurations). Voici un exemple avec plusieurs sites : 1 | // Servers 2 | localServer('site1') 3 | ->stage('production') 4 | ->set('deploy_path', '/home/username/public_html/deployer/grav1'); 5 | localServer('site2') 6 | ->stage('production') 7 | ->set('deploy_path', '/home/username/public_html/deployer/grav2'); 8 | localServer('site3') 9 | ->stage('production') 10 | ->set('deploy_path', 'C:\\caddy\\grav1'); 11 | localServer('site4') 12 | ->stage('production') 13 | ->set('deploy_path', 'C:\\caddy\\grav2'); Notez que nous utilisons des chemins absolus vers les installations, mais ils sont relatifs \u00e0 la fa\u00e7on dont le chemin est interpr\u00e9t\u00e9 par SSH. Cela signifie que sur le serveur, nous voulons le chemin complet car Deployer l'interpr\u00e8te correctement, mais nous pourrions \u00e9galement utiliser la cl\u00e9 tilde si un HOMEDIR est d\u00e9fini, comme ceci : ~/public_html/deployer/grav1 . T\u00e2ches. Trois t\u00e2ches sont actuellement configur\u00e9es : backup , core et packages . L'ex\u00e9cution de php vendor/bin/dep backup cr\u00e9e une sauvegarde de chaque installation, disponible dans deploy_path/backup/BACKUP.zip , o\u00f9 deploy_path correspond aux chemins que vous avez configur\u00e9s pour les serveurs. L'ex\u00e9cution de php vendor/bin/dep core met \u00e0 niveau Grav lui-m\u00eame, et le fait avec l'option --all-yes pour ignorer toutes les questions Oui/Non pos\u00e9es. Il en va de m\u00eame lors de l'ex\u00e9cution de php vendor/bin/dep packages , qui mettent \u00e0 niveau tous les plugins et th\u00e8mes. Conclusion. Nous pouvons d\u00e9sormais facilement mettre \u00e0 niveau tous vos sites d\u00e9finis en ex\u00e9cutant les t\u00e2ches dans l'ordre. Nous entrons d'abord dans le dossier public_html/deployer/ , puis nous ex\u00e9cutons chaque commande selon les besoins : $ | php vendor/bin/dep backup | php vendor/bin/dep core | php vendor/bin/dep packages Nous aurons maintenant fait une sauvegarde de chaque site, mis \u00e0 jour Grav lui-m\u00eame, ainsi que mis \u00e0 jour tous les plugins et th\u00e8mes.","title":"Mises \u00e0 niveau script\u00e9"},{"location":"compte-utilisateur/","text":"Comptes utilisateur Liste des utilisateurs Profil de l'utilisateur Profil de l'utilisateur La page de profil dans l'administrateur vous permet d'afficher et de mettre \u00e0 jour les param\u00e8tres de votre profil individuel. C'est l\u00e0 que votre avatar, votre adresse e-mail, votre nom, votre langue, etc. sont d\u00e9finis. Pour les administrateurs, c'est \u00e9galement l\u00e0 que vous pouvez ajuster les groupes et les niveaux d'autorisation pour les utilisateurs individuels. L'acc\u00e8s \u00e0 la page de profil est simple. Une fois connect\u00e9 \u00e0 l'administrateur, vous pouvez acc\u00e9der \u00e0 votre profil en s\u00e9lectionnant la zone de la barre lat\u00e9rale avec votre image d'avatar et votre nom. Cela vous m\u00e8nera directement \u00e0 votre propre profil. De plus, les administrateurs appr\u00e9cieront la facilit\u00e9 d'acc\u00e9der \u00e0 la page de profil d'un autre utilisateur en ajoutant admin/user/example \u00e0 l'URL de leur site. Remplacement de example par le nom d'utilisateur de l'utilisateur pour lequel il souhaite modifier les informations de profil et/ou les autorisations. Onglet G\u00e9n\u00e9ral Photo de profil Photo de l'utilisateur La zone Profil de l'administrateur vous donne un aper\u00e7u rapide et styl\u00e9 de votre avatar, de votre nom et de votre titre. Votre avatar est automatiquement g\u00e9n\u00e9r\u00e9 via Gravatar , un service d'avatar mondial qui vous permet de t\u00e9l\u00e9charger une seule image de profil et de l'utiliser sur plusieurs sites et services. Photo de l'utilisateur Si vous n'avez pas d'image t\u00e9l\u00e9charg\u00e9e sur Gravatar, ou si vous pr\u00e9f\u00e9rez utiliser une image de votre choix, vous pouvez t\u00e9l\u00e9charger une image ici en faisant glisser et en d\u00e9posant le fichier image dans la section D\u00e9posez vos fichiers ici ou cliquez sur cette zone de la page. Vous pouvez \u00e9galement cliquer sur la zone pour afficher un s\u00e9lecteur de fichier qui vous permettra de rechercher, s\u00e9lectionner et t\u00e9l\u00e9charger un fichier image \u00e0 partir de votre syst\u00e8me. Une fois que vous avez t\u00e9l\u00e9charg\u00e9 une nouvelle image, s\u00e9lectionnez simplement le bouton Save dans le coin sup\u00e9rieur droit de la page. Compte Rubrique Compte La section Compte de la page de profil est l'endroit o\u00f9 vous pouvez mettre \u00e0 jour vos coordonn\u00e9es, votre nom, votre langue, etc. Vous ne pouvez pas modifier votre nom d'utilisateur ici, car il est directement li\u00e9 \u00e0 l'endroit o\u00f9 vos informations d'utilisateur sont stock\u00e9es, mais vous pouvez modifier tout ce dont vous avez besoin. Authentification \u00e0 2 facteurs Authentification \u00e0 2 facteurs L'authentification \u00e0 2 facteurs fournit une couche de s\u00e9curit\u00e9 suppl\u00e9mentaire pour votre site Web. En savoir plus sur cette fonctionnalit\u00e9 dans la section S\u00e9curit\u00e9 de ce guide. Onglet Acc\u00e8s Onglet Acc\u00e8s Cet onglet est visible uniquement pour les utilisateurs disposant des autorisations de gestion des utilisateurs. OPTION DESCRIPTION Groups Liste des groupes dont l'utilisateur fait partie. Permissions Liste de toutes les autorisations de votre site. Voir Autorisations de groupe.","title":"Compte utilisateur"},{"location":"comptes/","text":"Comptes et groupes d'utilisateurs Accounts Manager est une nouvelle fonctionnalit\u00e9 pour Grav 1.7 Admin, qui permet aux utilisateurs de g\u00e9rer \u00e0 la fois les comptes d'utilisateurs et les groupes d'utilisateurs. Utilisateur Groupes Configuration Permissions","title":"Comptes"},{"location":"configuration-comptes/","text":"Configuration Onglet Compatibilit\u00e9 OPTION DESCRIPTION Admin event compatibility Active les \u00e9v\u00e9nements onAdminSave et onAdminSaveAfter pour les plugins. Activ\u00e9 par d\u00e9faut. Onglet Mise en cache Pour plus d'informations, voir Objets Flex. OPTION DESCRIPTION Enable Index Caching La mise en cache de l'index acc\u00e9l\u00e8re les recherches en cr\u00e9ant des index de recherche temporaires pour les requ\u00eates. Index Cache Lifetime (seconds) Dur\u00e9e de vie de la mise en cache d'index en secondes. Enable Object Caching La mise en cache des objets acc\u00e9l\u00e8re le chargement des donn\u00e9es et des images des objets. Object Cache Lifetime (seconds) Dur\u00e9e de vie de la mise en cache d'objets en secondes. Enable Render Caching La mise en cache du rendu acc\u00e9l\u00e8re le rendu du contenu en mettant en cache le code HTML r\u00e9sultant. Render Cache Lifetime (seconds) Dur\u00e9e de vie du cache de rendu en secondes. Si le rendu HTML a un contenu dynamique, le cache de rendu peut \u00eatre d\u00e9sactiv\u00e9 \u00e0 partir du mod\u00e8le Twig par {% do block.disableCache() %} .","title":"Configuration"},{"location":"configuration-site/","text":"Param\u00e9trage (site) La page Configuration vous donne acc\u00e8s aux param\u00e8tres de configuration du System et du Site de votre site. De plus, vous pouvez afficher une ventilation des propri\u00e9t\u00e9s de votre serveur dans un certain nombre de domaines, notamment PHP, SQL, l'environnement du serveur et divers autres composants qui d\u00e9terminent le fonctionnement de votre site. La configuration n\u00e9cessite un niveau d'acc\u00e8s access.admin.super ou access.admin.configuration && access.admin.configuration_site . L'onglet Site vous permet de personnaliser les param\u00e8tres trouv\u00e9s dans le fichier /user/config/site.yaml . Cet onglet vous donne acc\u00e8s aux options et aux champs qui d\u00e9terminent les variables li\u00e9es au site, telles que le nom, l'auteur par d\u00e9faut et les m\u00e9tadonn\u00e9es utilis\u00e9es dans votre site. Vous trouverez ci-dessous une ventilation des diff\u00e9rentes sections de configuration qui apparaissent dans l'onglet Site . Valeurs par d\u00e9faut Cette section vous permet de d\u00e9finir les propri\u00e9t\u00e9s de base de la gestion du contenu de votre site. La page d'accueil, le th\u00e8me par d\u00e9faut et diverses autres options d'affichage de contenu sont d\u00e9finis ici. OPTION DESCRIPTION Site Title Titre par d\u00e9faut de votre site, souvent utilis\u00e9 par les th\u00e8mes. Default Author Un nom d'auteur par d\u00e9faut, souvent utilis\u00e9 dans les th\u00e8mes ou le contenu de la page. Default Email Un e-mail par d\u00e9faut \u00e0 r\u00e9f\u00e9rencer dans les th\u00e8mes ou les pages. Taxonomy Types Les types de taxonomie doivent \u00eatre d\u00e9finis ici si vous souhaitez les utiliser dans des pages. Sommaire des pages Les r\u00e9sum\u00e9s de page sont un excellent moyen de donner un petit aper\u00e7u du contenu d'une page. Vous pouvez utiliser un d\u00e9limiteur dans la page pour d\u00e9finir un point de \"coupure\" entre le contenu du r\u00e9sum\u00e9 et le contenu complet de la page. Ces param\u00e8tres vous permettent de : OPTION DESCRIPTION Enabled Activer le r\u00e9sum\u00e9 de la page (le r\u00e9sum\u00e9 renvoie le m\u00eame que le contenu de la page). Summary Size Le nombre de caract\u00e8res d'une page \u00e0 utiliser comme r\u00e9sum\u00e9 du contenu. Format short = utiliser la premi\u00e8re occurrence du d\u00e9limiteur ou de la taille ; long = le d\u00e9limiteur r\u00e9capitulatif sera ignor\u00e9 Delimiter Le d\u00e9limiteur r\u00e9capitulatif (par d\u00e9faut '==='). Vous placeriez g\u00e9n\u00e9ralement ceci apr\u00e8s un paragraphe d'ouverture, avec tout ce qui pr\u00e9c\u00e8de apparaissant dans le r\u00e9sum\u00e9 de la page. M\u00e9tadonn\u00e9es Les m\u00e9tadonn\u00e9es sont une partie importante de la composition des coulisses d'une page. Cela peut am\u00e9liorer le r\u00e9f\u00e9rencement, la fa\u00e7on dont vos liens apparaissent dans divers moteurs de recherche et flux sociaux, et plus encore. Vous pouvez d\u00e9finir ici diverses propri\u00e9t\u00e9s de m\u00e9tadonn\u00e9es. OPTION DESCRIPTION Metadata Valeurs de m\u00e9tadonn\u00e9es par d\u00e9faut qui seront affich\u00e9es sur chaque page \u00e0 moins qu'elles ne soient remplac\u00e9es par la page. Redirections et routes Les redirections et le routage n'ont jamais \u00e9t\u00e9 aussi simples. Il vous suffit de tout configurer dans cette section, et vous \u00eates pr\u00eat \u00e0 partir. OPTION DESCRIPTION Custom Redirects Routes pour rediriger vers d'autres pages. Le remplacement standard de Regex est valide. Custom Routes Routes vers des alias vers d'autres pages. Le remplacement standard de Regex est valide.","title":"Configuration (site)"},{"location":"configuration-systeme/","text":"Param\u00e9trage (Syst\u00e8me) La page Configuration vous donne acc\u00e8s aux param\u00e8tres de configuration du syst\u00e8me et du site . De plus, vous pouvez afficher une ventilation des propri\u00e9t\u00e9s de votre serveur dans un certain nombre de domaines, notamment PHP, l'environnement du serveur et d'autres composants divers qui d\u00e9terminent le fonctionnement de votre site. La configuration n\u00e9cessite un niveau d'acc\u00e8s access.admin.super ou access.admin.configuration . L'onglet Syst\u00e8me vous permet de personnaliser les param\u00e8tres trouv\u00e9s dans le fichier /user/config/system.yaml . Ces param\u00e8tres affectent le nombre de fonctionnalit\u00e9s principales li\u00e9es au syst\u00e8me de Grav qui fonctionnent. La page d'accueil du site, les param\u00e8tres de mise en cache, etc. peuvent \u00eatre configur\u00e9s ici. Ces param\u00e8tres sont s\u00e9par\u00e9s en plusieurs sections, chacune se concentrant sur un aspect sp\u00e9cifique du fonctionnement de Grav. Vous trouverez ci-dessous une ventilation des diff\u00e9rentes sections de configuration qui apparaissent dans l'onglet Syst\u00e8me . Contenu Cette section vous permet de d\u00e9finir les propri\u00e9t\u00e9s de base de la gestion du contenu de votre site. La page d'accueil, le th\u00e8me par d\u00e9faut et diverses autres options d'affichage de contenu sont d\u00e9finis ici. OPTIONS DESCRIPTION Home Page S\u00e9lectionnez la page que vous souhaitez voir appara\u00eetre comme page d'accueil de votre site. Default Theme D\u00e9finit le th\u00e8me principal par d\u00e9faut utilis\u00e9 dans votre site. Process Contr\u00f4lez la fa\u00e7on dont les pages sont trait\u00e9es. Peut \u00eatre d\u00e9fini par page plut\u00f4t que globalement. Timezone Remplace le fuseau horaire par d\u00e9faut du serveur. Short Date Format D\u00e9finissez le format de date courte qui peut \u00eatre utilis\u00e9 par les th\u00e8mes. Long Date Format D\u00e9finissez le format de date long pouvant \u00eatre utilis\u00e9 par les th\u00e8mes. Default Ordering Les pages dans une liste seront rendues en utilisant cet ordre \u00e0 moins qu'il ne soit remplac\u00e9. Default Order Direction Sens des pages dans une liste. Default Page Count Nombre maximal de pages par d\u00e9faut dans une liste. Date-based Publishing (d\u00e9)publiez automatiquement les articles en fonction de leur date. Events Activer ou d\u00e9sactiver des \u00e9v\u00e9nements sp\u00e9cifiques. Les d\u00e9sactiver peut casser les plugins. Redirect Default Route Rediriger automatiquement vers la route par d\u00e9faut d'une page. Langues Les fonctionnalit\u00e9s multilingues sont d\u00e9finies dans cette section. OPTIONS DESCRIPTION Supported Prise en charge Liste s\u00e9par\u00e9e par des virgules de codes de langue \u00e0 2 lettres (par exemple 'en, fr, de'). Translations Enabled Prise en charge des traductions dans Grav, plugins et extensions. Translations Fallback Replis sur les traductions prises en charge si la langue active n'existe pas. Active Language in Section Langue active dans la section Enregistrez la langue active dans la session. Home Redirect Include Language Inclut la langue dans la redirection d'accueil (/en). Home Redirect Include Route La redirection \u00e0 la maison inclut la route. En-t\u00eates HTTP Les options d'en-t\u00eate HTTP peuvent \u00eatre d\u00e9finies dans cette section. Ceci est utile pour la mise en cache et l'optimisation bas\u00e9es sur le navigateur. OPTIONS DESCRIPTION Expires D\u00e9finit l'en-t\u00eate d'expiration. La valeur est en secondes. Last Modified D\u00e9finit le dernier en-t\u00eate modifi\u00e9 qui peut aider \u00e0 optimiser la mise en cache du proxy et du navigateur. ETag D\u00e9finit l'en-t\u00eate etag pour aider \u00e0 identifier quand une page a \u00e9t\u00e9 modifi\u00e9e. Vary Accept Encoding D\u00e9finit l'en-t\u00eate Vary: Accept Encoding pour faciliter la mise en cache du proxy et du CDN. Markdown Markdown constitue l'essentiel du contenu de la page de Grav. Cette section vous donne des options pour activer Markdown Extra, ainsi que pour d\u00e9finir comment Grav g\u00e8re Markdown. OPTIONS DESCRIPTION Markdown Extra Activez la prise en charge par d\u00e9faut de Markdown Extra . Auto Line Break Activez la prise en charge des sauts de ligne automatiques dans Markdown. Auto URL Links Activez la conversion automatique des URL en hyperliens HTML. Escape Markup \u00c9chappez les balises de balisage dans les entit\u00e9s HTML. Mise en cache La fonction de mise en cache int\u00e9gr\u00e9e de Grav en fait l'une des options de CMS \u00e0 fichier plat les plus rapides du march\u00e9. Vous pouvez configurer les principales fonctions de mise en cache de votre site dans cette section. OPTIONS DESCRIPTION Caching Commutateur ON/OFF global pour activer/d\u00e9sactiver la mise en cache Grav. Cache Check Method D\u00e9finit la m\u00e9thode de v\u00e9rification du cache. Les options sont File , Folder et None . Cache Driver Choisissez le pilote de cache que Grav doit utiliser. 'Auto Detect' tente de trouver le meilleur pour vous. Cache Prefix Un identifiant pour une partie de la cl\u00e9 Grav. Ne changez pas \u00e0 moins que vous ne sachiez ce que vous faites. Lifetime D\u00e9finit la dur\u00e9e de vie du cache en secondes. 0 = infini. Gzip Compression Activez la compression GZip de la page Grav pour des performances accrues. Twig Templating Cette section se concentre sur la fonctionnalit\u00e9 de cr\u00e9ation de mod\u00e8les de Grav's Twig. Vous pouvez d\u00e9finir la mise en cache Twig, le d\u00e9bogage et modifier les param\u00e8tres de d\u00e9tection ici. OPTIONS DESCRIPTION Twig Caching Contr\u00f4lez le m\u00e9canisme de mise en cache Twig. Laissez cette option activ\u00e9e pour de meilleures performances. Twig Debug Permet de ne pas charger l'extension Twig Debugger. Detect Changes Twig recompilera automatiquement le cache Twig s'il d\u00e9tecte des changements dans les mod\u00e8les Twig. Autoescape Variables \u00c9chappe automatiquement toutes les variables. Cela cassera probablement votre site. Assets Cette section traite de la gestion des actifs, y compris les actifs CSS et JavaScript. OPTIONS DESCRIPTION CSS Pipeline Le pipeline CSS est l'unification de plusieurs ressources CSS dans un seul fichier. CSS Minify Minify le CSS pendant le pipelining. CSS Minify Windows Override Minify Override pour les plates-formes Windows. False par d\u00e9faut en raison de ThreadStackSize. CSS Rewrite R\u00e9\u00e9crivez toutes les URL relatives CSS pendant le pipelining. JavaScript Pipeline Le pipeline JS est l'unification de plusieurs ressources JS en un seul fichier. JavaScript Minify Minify le JS pendant le pipelining. Enable Timestamps on Assets Activer les horodatages des actifs. Collections Ajoutez des collections de ressources individuelles. Gestionnaire d'erreurs Vous pouvez d\u00e9finir comment Grav g\u00e8re le rapport d'erreurs et l'affichage ici. Il s'agit d'un outil utile \u00e0 avoir lors du d\u00e9veloppement du site. OPTIONS DESCRIPTION Display Error Journaliser les erreurs Log Errors Journaliser les erreurs dans le dossier /logs. D\u00e9bogueur Comme la gestion des erreurs, les outils de d\u00e9bogage int\u00e9gr\u00e9s de Grav vous permettent de localiser et de r\u00e9soudre les probl\u00e8mes. Ceci est particuli\u00e8rement utile lors du d\u00e9veloppement. OPTIONS DESCRIPTION Debugger Activez le d\u00e9bogueur Grav et les param\u00e8tres suivants. Debug Twig Activer le d\u00e9bogage des mod\u00e8les Twig. Shutdown Close Connection Fermez la connexion avant d'appeler onShutdown(). false pour le d\u00e9bogage. M\u00e9dias Cette section d\u00e9termine comment Grav g\u00e8re le contenu multim\u00e9dia. La qualit\u00e9 d'image et les autres options de gestion des supports sont configur\u00e9es ici. OPTIONS DESCRIPTION Default Image Quality Qualit\u00e9 d'image par d\u00e9faut \u00e0 utiliser lors du r\u00e9\u00e9chantillonnage ou de la mise en cache des images (85 %). Cache All Images Ex\u00e9cute toutes les images via le syst\u00e8me de cache de Grav m\u00eame si elles n'ont pas de manipulations de m\u00e9dia. Image Debug Watermark Afficher une superposition sur les images indiquant la profondeur en pixels de l'image lorsque vous travaillez avec Retina par exemple. Enable Timestamps on Media Ajoute un horodatage bas\u00e9 sur la date de la derni\u00e8re modification \u00e0 chaque \u00e9l\u00e9ment multim\u00e9dia. La mise en cache d'images qui ont d\u00e9j\u00e0 \u00e9t\u00e9 optimis\u00e9es (en dehors de Grav) peut donner au fichier de sortie une taille de fichier beaucoup plus grande que l'original. Cela est d\u00fb \u00e0 un bogue dans la biblioth\u00e8que d'images Gregwar et n'est pas directement li\u00e9 \u00e0 Grav. Voir ce probl\u00e8me ouvert pour plus d'informations. L'alternative consiste \u00e0 d\u00e9finir \"Cache All Images\" sur Non. Session Cette section vous donne la possibilit\u00e9 d'activer la prise en charge de session, de d\u00e9finir des d\u00e9lais d'expiration et le nom du cookie de session utilis\u00e9 pour g\u00e9rer ces informations. OPTIONS DESCRIPTION Enabled Activer le support de session dans Grav. Timeout D\u00e9finit le d\u00e9lai d'expiration de la session en secondes. Name Un identifiant utilis\u00e9 pour former le nom du cookie de session. Utilisez uniquement des caract\u00e8res alphanum\u00e9riques, des tirets ou des traits de soulignement. Ne pas utiliser de points dans le nom de la session. Avanc\u00e9 Cette section contient les options syst\u00e8me avanc\u00e9es. OPTIONS DESCRIPTION Absolute URLs URL absolues ou relatives pour base_url. Parameter Separator S\u00e9parateur pour les param\u00e8tres pass\u00e9s qui peuvent \u00eatre modifi\u00e9s pour Apache sous Windows.","title":"Configuration (systeme)"},{"location":"configuration-theme/","text":"Configuration du th\u00e8me Dans Grav, vous pouvez facilement acc\u00e9der \u00e0 la configuration du th\u00e8me et aux informations de plan \u00e0 partir de vos fichiers Twig et PHP. Acc\u00e9der aux informations sur le Blueprint du th\u00e8me Les informations du fichier blueprints.yaml du th\u00e8me actuellement actif peuvent \u00eatre obtenues \u00e0 partir de l'objet theme . Utilisons le fichier blueprints.yaml suivant comme exemple : name: Antimatter slug: antimatter type: theme version: 1.7.0 description: \"Antimatter is the default theme included with **Grav**\" icon: empire author: name: Team Grav email: devs@getgrav.org url: https://getgrav.org homepage: https://github.com/getgrav/grav-theme-antimatter demo: http://demo.getgrav.org/blog-skeleton keywords: antimatter, theme, core, modern, fast, responsive, html5, css3 bugs: https://github.com/getgrav/grav-theme-antimatter/issues license: MIT Vous pouvez acc\u00e9der \u00e0 n'importe lequel de ces \u00e9l\u00e9ments via theme en utilisant le standard dot-syntax . 1 | Author Email: {{ theme.author.email }} 2 | Theme License: {{ theme.license }} Vous pouvez \u00e9galement atteindre ces m\u00eames valeurs depuis un plugin Grav avec la syntaxe PHP : 1 | Author Email: {{ theme.author.email }} 2 | Theme License: {{ theme.license }} Acc\u00e9der \u00e0 la configuration du th\u00e8me Les th\u00e8mes ont aussi des fichiers de configuration. Le fichier de configuration d'un th\u00e8me est nomm\u00e9 <themename>.yaml . Le fichier par d\u00e9faut r\u00e9side dans le dossier racine du th\u00e8me ( user/themes/<themename> ). Il est fortement recommand\u00e9 de ne pas modifier le fichier YAML par d\u00e9faut du th\u00e8me, mais de remplacer les param\u00e8tres du dossier user/config/themes . Cela garantira que les param\u00e8tres d'origine du th\u00e8me restent intacts, vous permettant d'acc\u00e9der rapidement aux modifications et/ou de revenir en arri\u00e8re si n\u00e9cessaire. Par exemple, consid\u00e9rons le th\u00e8me Antimati\u00e8re. Par d\u00e9faut, il existe un fichier appel\u00e9 antimatter.yaml dans le dossier racine du th\u00e8me. Le contenu de ce fichier de configuration ressemble \u00e0 ceci : 1 | enabled: true 2 | color: blue Il s'agit d'un fichier simple, mais il vous donne une id\u00e9e de ce que vous pouvez faire avec les param\u00e8tres de configuration du th\u00e8me. Rempla\u00e7ons ces param\u00e8tres et ajoutons-en un nouveau. Cr\u00e9ez donc un fichier \u00e0 l'emplacement suivant : user/config/themes/antimatter.yaml . Dans ce fichier mettez le contenu suivant : Je note que enabled n'est pas r\u00e9p\u00e9t\u00e9 ici. Si les fichiers de configuration sont fusionn\u00e9s et non simplement remplac\u00e9s, cela doit \u00eatre explicitement indiqu\u00e9 . 1 | color: red 2 | info: Grav is awesome! Ensuite, dans vos mod\u00e8les de th\u00e8me, vous pouvez acc\u00e9der \u00e0 ces variables \u00e0 l'aide de l'objet : grav.theme.config . <h1 style=\"color :{{ grav.theme.config.color|e }}\">{{ grav.theme.config.info|e }}</h1> Cela devrait se traduire par : Grav is awesome! En PHP vous pouvez acc\u00e9der \u00e0 la configuration du th\u00e8me en cours avec : 1 | $color = $this->grav['theme']->config()['color']; 2 | $info = $this->grav['theme']->config()['info']; Simple! Le ciel est la limite concernant la configuration de vos th\u00e8mes. Vous pouvez les utiliser pour tout ce que vous voulez ! :) Notation alternative Les alias suivants fonctionnent \u00e9galement : 1 | Theme Color Option: {{ config.theme.color_option|e }} 2 | or 3 | Theme Color Option: {{ theme_var(color_option)|e }} 4 | or 5 | Theme Color Option: {{ grav.themes.antimatter.color_option|e }} [AVOID!] M\u00eame si grav.themes.<themename> est pris en charge, il doit \u00eatre \u00e9vit\u00e9 car il rend impossible l'h\u00e9ritage correct du th\u00e8me.","title":"Configuration"},{"location":"configuration/","text":"Configuration Tous les fichiers de configuration Grav sont \u00e9crits en syntaxe YAML avec une extension de fichier .yaml . YAML est tr\u00e8s intuitif, ce qui le rend tr\u00e8s facile \u00e0 lire et \u00e0 \u00e9crire, cependant, vous pouvez consulter la page YAML dans le chapitre Avanc\u00e9 pour avoir une compr\u00e9hension compl\u00e8te de la syntaxe disponible. ASTUCE : Voir S\u00e9curit\u00e9 > Configuration pour un guide rapide sur la mani\u00e8re de s\u00e9curiser et d'optimiser votre site de production. Configuration du syst\u00e8me Grav s'attache \u00e0 rendre les choses aussi simples que possible pour l'utilisateur, et il en va de m\u00eame pour la configuration. Grav est livr\u00e9 avec quelques options par d\u00e9faut, et celles-ci sont contenues dans un fichier qui r\u00e9side dans le fichier system/config/system.yaml . Cependant, vous ne devez jamais modifier ce fichier , \u00e0 la place, toutes les modifications de configuration que vous devez apporter doivent \u00eatre stock\u00e9es dans un fichier appel\u00e9 user/config/system.yaml . Tout param\u00e8tre de ce fichier ayant la m\u00eame structure et le m\u00eame nom remplacera le param\u00e8tre fourni dans le fichier de configuration syst\u00e8me par d\u00e9faut. De mani\u00e8re g\u00e9n\u00e9rale, vous ne devez JAMAIS modifier quoi que ce soit dans le dossier system/ . Toutes les actions de l'utilisateur (cr\u00e9ation de contenu, installation de plugins, modification de la configuration, etc.) doivent \u00eatre effectu\u00e9es dans le dossier user/ . De cette fa\u00e7on, cela permet une mise \u00e0 niveau plus simple et conserve \u00e9galement vos modifications au m\u00eame endroit pour la sauvegarde, la synchronisation, etc. Voici les variables pr\u00e9sentes dans le fichier par d\u00e9faut system/config/system.yaml : Options de base 1 | absolute_urls: false 2 | timezone: '' 3 | default_locale: 4 | param_sep: ':' 5 | wrapped_site: false 6 | reverse_proxy_setup: false 7 | force_ssl: false 8 | force_lowercase_urls: true 9 | custom_base_url: '' 10 | username_regex: '^[a-z0-9_-]{3,16}$' 11 | pwd_regex: '(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,}' 12 | intl_enabled: true 13 | http_x_forwarded: 14 | protocol: true 15 | host: false 16 | port: true 17 | ip: true Ces options de configuration n'apparaissent pas dans leurs propres sections enfant. Ce sont des options g\u00e9n\u00e9rales qui affectent le fonctionnement du site, son fuseau horaire et son URL de base. PROPRI\u00c9T\u00c9S DESCRIPTION absolue_urls : URL absolues ou relatives pour base_url . timezone : Les valeurs valides peuvent \u00eatre trouv\u00e9es ici default_locale : Param\u00e8tres r\u00e9gionaux par d\u00e9faut (syst\u00e8me par d\u00e9faut). param_sep : Ceci est utilis\u00e9 pour les param\u00e8tres Grav dans l'URL. Ne changez pas cela \u00e0 moins que vous ne sachiez ce que vous faites. Grav le d\u00e9finit automatiquement sur ; pour les utilisateurs ex\u00e9cutant le serveur Web Apache sous Windows. wrapped_site : Pour les th\u00e8mes/plugins pour savoir si Grav est envelopp\u00e9 par une autre plateforme. Peut \u00eatre true ou false . reverse_proxy_setup : Ex\u00e9cut\u00e9 dans un sc\u00e9nario de proxy inverse avec des ports de serveur Web diff\u00e9rents de ceux du proxy. Peut \u00eatre true ou false . force_ssl : Si activ\u00e9, Grav force l'acc\u00e8s via HTTPS (REMARQUE : pas une solution id\u00e9ale). Peut \u00eatre true ou false . force_lowercase_urls : Si vous souhaitez prendre en charge les URL \u00e0 casse mixte, d\u00e9finissez-le sur false . custom_base_url : D\u00e9finissez manuellement la base_url ici. username_regex : Uniquement les caract\u00e8res minuscules, les chiffres, les tirets, les traits de soulignement. 3 - 16 caract\u00e8res. pwd_regex : Au moins un chiffre, une lettre majuscule et minuscule, et au moins 8 caract\u00e8res. intl_enabled : Logique sp\u00e9ciale pour l'extension internationale PHP (mod_intl). http_x_forwarded : Options de configuration pour les diff\u00e9rents en-t\u00eates HTTP_X_FORWARD ( Grav 1.7.0+ ). Langues 1 | languages: 2 | supported: [] 3 | default_lang: 4 | include_default_lang: true 5 | include_default_lang_file_extension: true 6 | pages_fallback_only: false 7 | translations: true 8 | translations_fallback: true 9 | session_store_active: false 10 | http_accept_language: false 11 | override_locale: false 12 | content_fallback: {} La zone Langues du fichier \u00e9tablit les param\u00e8tres de langue du site. Cela inclut les langues prises en charge, la d\u00e9signation de la langue par d\u00e9faut dans les URL et les traductions. Voici la r\u00e9partition de la zone Langues du fichier de configuration syst\u00e8me : PROPRI\u00c9T\u00c9S DESCRIPTION supported : Liste des langues prises en charge. ex: [en, fr, de] . default_lang : La valeur par d\u00e9faut est la premi\u00e8re langue prise en charge. Doit \u00eatre l'une des langues prises en charge. include_default_lang : Inclut le pr\u00e9fixe de langue par d\u00e9faut dans toutes les URL. Peut \u00eatre true ou false . include_default_lang_file_extension : Si cette option est activ\u00e9e, l'enregistrement d'une page ajoutera la langue par d\u00e9faut \u00e0 l'extension de fichier (par exemple, .en.md ). D\u00e9sactivez-le pour conserver la langue par d\u00e9faut en utilisant l'extension de fichier .md . Peut \u00eatre true ou false ( Grav 1.7.0+ ). pages_fallback_only : Seul recours pour rechercher le contenu de la page dans les langues prises en charge. Peut \u00eatre true ou false . traductions : Activez les traductions par d\u00e9faut. Peut \u00eatre true ou false . translations_fallback : retour aux traductions prises en charge si la langue active n'existe pas. Peut \u00eatre true ou false . session_store_active : Stocke la langue active dans la session. Peut \u00eatre true ou false . http_accept_language : Essayez de d\u00e9finir la langue en fonction de l'en-t\u00eate http_accept_language dans le navigateur. Peut \u00eatre true ou false . override_locale : Remplacez les param\u00e8tres r\u00e9gionaux par d\u00e9faut ou syst\u00e8me par des param\u00e8tres sp\u00e9cifiques \u00e0 la langue. Peut \u00eatre true ou false . content_fallback : Par d\u00e9faut, si le contenu n'est pas traduit, Grav affichera le contenu dans la langue par d\u00e9faut. Utilisez ce param\u00e8tre pour remplacer ce comportement par langue. ( Grav 1.7.0+ ). Home 1 | home: 2 | alias : '/home' 3 | hide_in_urls : false La section Home est l'endroit o\u00f9 vous d\u00e9finissez le chemin par d\u00e9faut pour la page d'accueil du site. Vous pouvez \u00e9galement choisir de masquer la route d'accueil dans les URL. PROPRI\u00c9T\u00c9S DESCRIPTION alias : Chemin par d\u00e9faut pour home, c'est-\u00e0-dire : /home ou / . hide_in_urls : Masque la route d'accueil dans les URL. Peut \u00eatre true ou false . Pages 1 | pages: 2 | type: regular 3 | theme: quark 4 | order: 5 | by: default 6 | dir: asc 7 | list: 8 | count: 20 9 | dateformat: 10 | default: 11 | short: 'jS M Y' 12 | long: 'F jS \\a\\t g:ia' 13 | publish_dates: true 14 | process: 15 | markdown: true 16 | twig: false 17 | twig_first: false 18 | never_cache_twig: false 19 | events: 20 | page: true 21 | twig: true 22 | markdown: 23 | extra: false 24 | auto_line_breaks: false 25 | auto_url_links: false 26 | escape_markup: false 27 | special_chars: 28 | '>': 'gt' 29 | '<': 'lt' 30 | valid_link_attributes: 31 | - rel 32 | - target 33 | - id 34 | - class 35 | - classes 36 | types: [html,htm,xml,txt,json,rss,atom] 37 | append_url_extension: '' 38 | expires: 604800 39 | cache_control: 40 | last_modified: false 41 | etag: false 42 | vary_accept_encoding: false 43 | redirect_default_route: false 44 | redirect_default_code: 302 45 | redirect_trailing_slash: true 46 | ignore_files: [.DS_Store] 47 | ignore_folders: [.git, .idea] 48 | ignore_hidden: true 49 | hide_empty_folders: false 50 | url_taxonomy_filters: true 51 | frontmatter: 52 | process_twig: false 53 | ignore_fields: ['form','forms'] La section Pages du fichier system/config/system.yaml est l'endroit o\u00f9 vous d\u00e9finissez un grand nombre des principaux param\u00e8tres li\u00e9s au th\u00e8me. Par exemple, c'est ici que vous d\u00e9finissez le th\u00e8me utilis\u00e9 pour afficher le site, l'ordre des pages, le traitement par d\u00e9faut de twig et markdown, etc. C'est l\u00e0 que la plupart des d\u00e9cisions qui affectent la fa\u00e7on dont vos pages sont rendues sont prises. PROPRI\u00c9T\u00c9S DESCRIPTION type : Param\u00e8tre exp\u00e9rimental pour activer les Pages Flex dans le frontend. Utilisez flex pour activer, regular sinon. Par d\u00e9faut regular ( Grav 1.7+ ). theme : C'est ici que vous d\u00e9finissez le th\u00e8me par d\u00e9faut. Par d\u00e9faut, c'est quark . order : ... by : Ordonner les pages par default , alpha ou date . ... dir : Sens d'ordre par d\u00e9faut, asc ou desc . list : ... count : Nombre d'\u00e9l\u00e9ments par d\u00e9faut par page. dateformat : ... default : Le format de date par d\u00e9faut que Grav attend dans le champ date . ... short : Format de date court. Exemple : 'jS M Y' . ... long : Format de date long. Exemple : 'F jS \\a\\t g:ia' . publish_dates : Publie/d\u00e9publie automatiquement en fonction des dates. Peut \u00eatre d\u00e9fini sur true ou false . process : ... markdown : Activez ou d\u00e9sactivez le traitement de markdown sur le front-end. Peut \u00eatre d\u00e9fini sur true ou false . ... twig : Activez ou d\u00e9sactivez le traitement de twig sur le front-end. Peut \u00eatre d\u00e9fini sur true ou false . twig_first : Traite Twig avant markdown lors du traitement des deux sur une page. Peut \u00eatre d\u00e9fini sur true ou false . never_cache_twig : L'activation de cette option vous permettra d'ajouter une logique de traitement qui peut changer dynamiquement \u00e0 chaque chargement de page, plut\u00f4t que de mettre en cache les r\u00e9sultats et de les stocker pour chaque chargement de page. Cela peut \u00eatre activ\u00e9/d\u00e9sactiv\u00e9 \u00e0 l'\u00e9chelle du site dans le fichier system.yaml , ou sur une page sp\u00e9cifique. Peut \u00eatre d\u00e9fini sur true ou false . events : ... page : Active les \u00e9v\u00e9nements au niveau de la page. Peut \u00eatre d\u00e9fini sur true ou false . ... twig : Active les \u00e9v\u00e9nements de niveau Twig. Peut \u00eatre d\u00e9fini sur true ou false . markdown : ... extra : Activez le support de la prise en charge de Markdown Extra (GitHub-flavored Markdown (GFM) par d\u00e9faut). Peut \u00eatre d\u00e9fini sur true ou false . ... auto_line_breaks : Active les sauts de ligne automatiques. Peut \u00eatre d\u00e9fini sur true ou false . ... auto_url_links : Active les liens HTML automatiques. Peut \u00eatre d\u00e9fini sur true ou false . ... escape_markup : \u00c9chappez les balises de balisage dans les entit\u00e9s. Peut \u00eatre d\u00e9fini sur true ou false . ... special_chars : Liste des caract\u00e8res sp\u00e9ciaux \u00e0 convertir automatiquement en entit\u00e9s. Chaque caract\u00e8re occupe une ligne sous cette variable. Exemple : '>' : 'gt' . ... valid_link_attributes : Aattributs valides \u00e0 transmettre via des liens markdown (Grav 1.7+) . types : Liste des types de page valides. Par exemple : [txt,xml,html,htm,json,rss,atom] . append_url_extension : Ajoute l'extension de la page dans les URL de page (par exemple, .html donne /chemin/page.html ). expires : La page expire le temps en secondes (604800 secondes = 7 jours) ( no cache est \u00e9galement possible). cache_control : Peut \u00eatre vide pour aucun param\u00e8tre, ou une valeur de texte de contr\u00f4le de cache valide. last_modified : D\u00e9finit l'en-t\u00eate de date de la derni\u00e8re modification en fonction de l'horodatage de modification du fichier. Peut \u00eatre d\u00e9fini sur true ou false . etag : D\u00e9finit la balise d'en-t\u00eate etag. Peut \u00eatre d\u00e9fini sur true ou false . varie_accept_encoding : Ajouter l'en-t\u00eate Vary : Accept-Encoding . Peut \u00eatre d\u00e9fini sur true ou false . redirect_default_route : Redirige automatiquement vers la route par d\u00e9faut d'une page. Peut \u00eatre d\u00e9fini sur true ou false . redirect_default_code : Code par d\u00e9faut \u00e0 utiliser pour les redirections. Par exemple : 302 . redirect_trailing_slash : G\u00e9rer automatiquement ou rediriger 302 une URL de fin. ignore_files : Fichiers \u00e0 ignorer dans Pages. Exemple : [.DS_Store] . ignore_folders : Dossiers \u00e0 ignorer dans Pages. Exemple : [.git, .idea] . ignore_hidden : Ignore tous les fichiers et dossiers cach\u00e9s. Peut \u00eatre d\u00e9fini sur true ou false . hide_empty_folders : Si le dossier n'a pas de fichier .md, doit-il \u00eatre masqu\u00e9. Peut \u00eatre d\u00e9fini sur true ou false . url_taxonomy_filters : Activez les filtres de taxonomie automatiques bas\u00e9s sur les URL pour les collections de pages. Peut \u00eatre d\u00e9fini sur true ou false . frontmatter : ... process_twig : Le frontmatter doit-il \u00eatre trait\u00e9 pour remplacer les variables Twig ? Peut \u00eatre d\u00e9fini sur true ou false . ... ignore_fields : Champs pouvant contenir des variables Twig et ne devant pas \u00eatre trait\u00e9s. Exemple : ['form','forms'] . Cache 1 | cache: 2 | enabled: true 3 | check: 4 | method: file 5 | driver: auto 6 | prefix: 'g' 7 | purge_at: '0 4 * * *' 8 | clear_at: '0 3 * * *' 9 | clear_job_type: 'standard' 10 | clear_images_by_default: false 11 | cli_compatibility: false 12 | lifetime: 604800 13 | gzip: false 14 | allow_webserver_gzip: false 15 | redis: 16 | socket: false 17 | password: 18 | database: La section Cache est l'endroit o\u00f9 vous pouvez configurer les param\u00e8tres de mise en cache du site. Vous pouvez activer, d\u00e9sactiver, choisir la m\u00e9thode, etc. PROPRI\u00c9T\u00c9S DESCRIPTION enabled : D\u00e9fini sur true pour activer la mise en cache. Peut \u00eatre d\u00e9fini sur true ou false . check : ... m\u00e9thod : M\u00e9thode pour v\u00e9rifier les mises \u00e0 jour dans les pages. Options : file , folder , hash et none . plus de details. driver : S\u00e9lectionnez un pilote de cache. Les options sont : auto , file, apcu , redis , memcache et wincache . prefix : Cha\u00eene de pr\u00e9fixe de cache (\u00e9vite les conflits de cache). Exemple : g . purge_at : Planificateur : fr\u00e9quence de purge de l'ancien cache \u00e0 l'aide de la syntaxe cron at . clear_at : Scheduler : fr\u00e9quence d'effacement du cache \u00e0 l'aide de la syntaxe cron at . clear_job_type : Tyype \u00e0 effacer lors du traitement de la t\u00e2che d'effacement planifi\u00e9e. Option : standard clear_images_by_default : Par d\u00e9faut, grav n'inclut pas les images trait\u00e9es lorsque le cache est effac\u00e9, cela peut \u00eatre activ\u00e9 en le d\u00e9finissant sur true . cli_compatibility : Garantit que seuls des pilotes non volatiles sont utilis\u00e9s (file, redis, memcache, etc...). lifetime : Dur\u00e9e de vie des donn\u00e9es mises en cache en secondes ( 0 = infini). 604800 \u00e9gal 7 jours. gzip : GZip compresse la sortie de la page. Peut \u00eatre d\u00e9fini sur true ou false . allow_webserver_gzip : Cette option changera l'en-t\u00eate en Content-Encoding : identiy permettant \u00e0 gzip d'\u00eatre d\u00e9fini de mani\u00e8re plus fiable par le serveur Web, bien que cela rompe g\u00e9n\u00e9ralement la capacit\u00e9 onShutDown() hors processus.L'\u00e9v\u00e9nement s'ex\u00e9cutera toujours, mais il ne sera pas hors processus et peut bloquer la page jusqu'\u00e0 ce que l'\u00e9v\u00e9nement soit termin\u00e9. redis : ... socket : Le chemin d'acc\u00e8s au fichier de socket. Redis. ... mot de passe : Mot de passe facultatif. ... base de donn\u00e9es : ID de base de donn\u00e9es facultatif. Twig 1 | twig: 2 | cache: true 3 | debug: true 4 | auto_reload: true 5 | autoescape: false 6 | 0ndefined_functions: true 7 | undefined_filters: true 8 | umask_fix: false La section Twig vous donne un ensemble rapide d'outils avec lesquels configurer Twig sur votre site pour le d\u00e9bogage, la mise en cache et l'optimisation. PROPRI\u00c9T\u00c9S DESCRIPTION cache : D\u00e9fini sur true pour activer la mise en cache de Twig. Peut \u00eatre d\u00e9fini sur true ou false . debug : Activez le d\u00e9bogage de Twig. Peut \u00eatre d\u00e9fini sur true ou false . auto_reload : Actualise le cache lors des modifications. Peut \u00eatre d\u00e9fini sur true ou false . autoescape : Variables Autoescape Twig. Peut \u00eatre d\u00e9fini sur true ou false . undefined_functions * : Autorise les fonctions non d\u00e9finies. Peut \u00eatre d\u00e9fini sur true ou false . undefined_filters : Autorise les filtres non d\u00e9finis. Peut \u00eatre d\u00e9fini sur true ou false . umask_fix : Par d\u00e9faut, Twig cr\u00e9e des fichiers en cache en tant que 755, le correctif passe \u00e0 775. Peut \u00eatre d\u00e9fini sur true ou false . Assets 1 | assets: 2 | css_pipeline: false 3 | css_pipeline_include_externals: true 4 | css_pipeline_before_excludes: true 5 | css_minify: true 6 | css_minify_windows: false 7 | css_rewrite: true 8 | js_pipeline: false 9 | js_pipeline_include_externals: true 10 | js_pipeline_before_excludes: true 11 | js_module_pipeline: false 12 | s_module_pipeline_include_externals: true 13 | js_module_pipeline_before_excludes: true 14 | js_minify: true 15 | enable_asset_timestamp: false 16 | enable_asset_sri: false 17 | collections: 18 | jquery: system://assets/jquery/jquery-2.x.min.js La section Assets permet de param\u00e9trer les options li\u00e9es aux Assets Manager (JS, CSS). PROPRI\u00c9T\u00c9S DESCRIPTION css_pipeline : Le pipeline CSS est l'unification de plusieurs ressources CSS dans un seul fichier. Peut \u00eatre d\u00e9fini sur true ou false . css_pipeline_include_externals : Inclut les URL externes dans le pipeline par d\u00e9faut. Peut \u00eatre d\u00e9fini sur true ou false . css_pipeline_before_excludes : Rend le pipeline avant tout fichier exclu. Peut \u00eatre d\u00e9fini sur true ou false . css_minify : Minifie le CSS pendant le pipelining. Peut \u00eatre d\u00e9fini sur true ou false . css_minify_windows : Minify Override pour les platesformes Windows. false par d\u00e9faut en raison de ThreadStackSize. Peut \u00eatre d\u00e9fini sur true ou false. css_rewrite : R\u00e9\u00e9crivez toutes les URL relatives CSS pendant le pipelining. Peut \u00eatre d\u00e9fini sur true ou false . js_pipeline : Le pipeline JS est l'unification de plusieurs ressources JS dans un seul fichier. Peut \u00eatre d\u00e9fini sur true ou false . js_pipeline_include_externals : Inclut les URL externes dans le pipeline par d\u00e9faut. Peut \u00eatre d\u00e9fini sur true ou false . js_pipeline_before_excludes : Rend le pipeline avant tout fichier exclu. Peut \u00eatre d\u00e9fini sur true ou false . js_module_pipeline : Le pipeline du module JS est l'unification de plusieurs ressources du module JS dans un seul fichier. Peut \u00eatre d\u00e9fini sur true ou false . js_module_pipeline_include_externals : Inclure les URL externes dans le pipeline par d\u00e9faut. Peut \u00eatre d\u00e9fini sur true ou false . js_module_pipeline_before_excludes : Rendre le pipeline avant tout fichier exclu. Peut \u00eatre d\u00e9fini sur true ou false . js_minify : Minifie le JS pendant le pipelining. Peut \u00eatre d\u00e9fini sur true ou false . enable_asset_timestamp : Active les assets horodatages. Peut \u00eatre d\u00e9fini sur true ou false . enable_asset_sri : Active les assets ISR. Peut \u00eatre d\u00e9fini sur true ou false . collections : Elles contiennent des collections, d\u00e9sign\u00e9es comme des sous-\u00e9l\u00e9ments. Par exemple : query : system://assets/jquery/jquery-3.x.min.js . En savoir plus \u00e0 ce sujet. Errors 1 | errors: 2 | display: 0 3 | log: true La section Errors d\u00e9termine comment Grav g\u00e8re l'affichage et la journalisation des erreurs. PROPRI\u00c9T\u00c9S DESCRIPTION display : D\u00e9termine comment les erreurs sont affich\u00e9es. Entrez soit 1 pour la trace compl\u00e8te, 0 pour une erreur simple ou -1 pour une erreur syst\u00e8me. log : Consigne les erreurs dans le dossier /logs . Peut \u00eatre d\u00e9fini sur true ou false . Log 1 | log: 2 | handler: file 3 | syslog: 4 | facility: local6 La section Log vous permet de configurer d'autres capacit\u00e9s de journalisation pour Grav. PROPRI\u00c9T\u00c9S DESCRIPTION handler : Gestionnaire de journaux. Actuellement pris en charge : f ile | syslog . syslog : ...facility : Sortie des installations Syslog. Debugger 1 | debugger: 2 | enabled: false 3 | provider: clockwork 4 | censored: false 5 | shutdown: 6 | close_connection: true La section Debugger vous donne la possibilit\u00e9 d'activer le d\u00e9bogueur de Grav. Un outil utile lors du d\u00e9veloppement. PROPRI\u00c9T\u00c9S DESCRIPTION enabled : Activez le d\u00e9bogueur Grav et les param\u00e8tres suivants. Peut \u00eatre d\u00e9fini sur true ou false . provider : Fournisseur de d\u00e9bogage : peut \u00eatre d\u00e9fini sur debugbar ou sur clockwork ( Grav 1.7+ ). censored : Censure les informations potentiellement sensibles (param\u00e8tres POST, cookies, fichiers, configuration et la plupart des donn\u00e9es de tableau/objet dans les messages de journal). Peut \u00eatre d\u00e9fini sur true ou false ( Grav 1.7+ ). shutdown : ... close_connection : Ferme la connexion avant d'appeler onShutdown( ). false pour le d\u00e9bogage. Images 1 | images: 2 | default_image_quality: 85 3 | cache_all: false 4 | cache_perms: '0755' 5 | debug: false 6 | auto_fix_orientation: false 7 | seofriendly: false 8 | cls: 9 | auto_sizes: false 10 | aspect_ratio: false 11 | retina_scale: 1 12 | defaults: 13 | loading: auto La section Images vous permet de d\u00e9finir la qualit\u00e9 d'image par d\u00e9faut pour laquelle les images sont r\u00e9\u00e9chantillonn\u00e9es, ainsi que de contr\u00f4ler les fonctionnalit\u00e9s de mise en cache et de d\u00e9bogage des images. PROPRI\u00c9T\u00c9S DESCRIPTION default_image_quality : Qualit\u00e9 d'image par d\u00e9faut \u00e0 utiliser lors du r\u00e9\u00e9chantillonnage des images. Par exemple : 85 = 85 % cache_all : Cache toutes les images par d\u00e9faut. Peut \u00eatre d\u00e9fini sur true ou false cache_perms : Doit \u00eatre entre guillemets ! Permissionss par d\u00e9faut du dossier de cache. G\u00e9n\u00e9ralement '0755' ou '0775' debug : Affiche une superposition sur les images indiquant la profondeur en pixels de l'image lorsque vous travaillez avec retina, par exemple. Peut \u00eatre d\u00e9fini sur true ou false auto_fix_orientation : Essayez de corriger automatiquement les images t\u00e9l\u00e9charg\u00e9es avec une rotation non standard seofriendly : noms d'images trait\u00e9s optimis\u00e9s pour le r\u00e9f\u00e9rencement cls : Changement de mise en page cumul\u00e9. Plus de d\u00e9tails ... auto_sizes : Ajoute automatiquement hauteur/largeur \u00e0 l'image ... aspect_ratio : R\u00e9server de l'espace avec aspect ratio style ... retina_scale : Mise \u00e0 l'\u00e9chelle pour ajuster les tailles automatiques pour une meilleure gestion des r\u00e9solutions HiDPI defaults : ( Grav 1.7+ ) ... loading : Laissez le navigateur choisir : auto , lazy ou eager ( Grav 1.7+ ). M\u00e9dia 1 | media: 2 | enable_media_timestamp: false 3 | unsupported_inline_types: [] 4 | allowed_fallback_types: [] 5 | auto_metadata_exif: false La section M\u00e9dia g\u00e8re les options de configuration pour les param\u00e8tres li\u00e9s \u00e0 la gestion des fichiers multim\u00e9dias. Cela inclut l'affichage de l'horodatage, la taille du t\u00e9l\u00e9chargement, etc. PROPRI\u00c9T\u00c9S DESCRIPTION enable_media_timestamp : Activer les horodatages des m\u00e9dias. unsupported_inline_types : Tableau des types de m\u00e9dias pris en charge pour essayer d'afficher en ligne. Ces types de fichiers sont plac\u00e9s entre crochets [] . allow_fallback_types : Tableau des types de m\u00e9dias autoris\u00e9s pour les fichiers trouv\u00e9s en cas d'acc\u00e8s via l a route de la page. Ces types de fichiers sont plac\u00e9s entre crochets [] . auto_metadata_exif : Cr\u00e9ez automatiquement des fichiers de m\u00e9tadonn\u00e9es \u00e0 partir de donn\u00e9es Exif lorsque cela est possible. Session 1 | session: 2 | enabled: true 3 | initialize: true 4 | timeout: 1800 5 | name: grav-site 6 | uniqueness: path 7 | secure: false 8 | httponly: true 9 | samesite: Lax 10 | split: true 11 | domain: 12 | path: Ces options d\u00e9terminent les propri\u00e9t\u00e9s de session pour votre site. PROPRI\u00c9T\u00c9S DESCRIPTION enabled : Activez la prise en charge de la session. Peut \u00eatre d\u00e9fini sur true ou false . initialize : Initialise la session \u00e0 partir de Grav (si false , le plugin doit d\u00e9marrer la session). timeout : D\u00e9lai d'attente en secondes. Par exemple : 1800 . name : Pr\u00e9fixe du nom du cookie de session. Utilisez uniquement des caract\u00e8res alphanum\u00e9riques, des tirets ou des traits de soulignement. N'utilisez pas de points dans le nom de la session. Par exemple : grav-site . iniqueness : Les sessions doivent-elles \u00eatre bas\u00e9es sur le path ou sur security.salt . secure : D\u00e9finissez la session comme s\u00e9curis\u00e9e. Si true , indique que la communication pour ce cookie doit se faire via une transmission crypt\u00e9e. Activez cette option uniquement sur les sites qui s'ex\u00e9cutent exclusivement sur HTTPS. Peut \u00eatre d\u00e9fini sur true ou false . httponly : D\u00e9finit la session HTTP uniquement. Si true , indique que les cookies ne doivent \u00eatre utilis\u00e9s que sur HTTP et que la modification de JavaScript n'est pas autoris\u00e9e. Peut \u00eatre d\u00e9fini sur true ou false . samesite : D\u00e9finissez la session SameSite. Les valeurs possibles sont Lax, Strict et None. Vois ici. domain : Le domaine de session \u00e0 utiliser dans les r\u00e9ponses. \u00c0 utiliser uniquement si vous r\u00e9\u00e9crivez le domaine du site, par exemple dans un conteneur Docker. path : Chemin de la session \u00e0 utiliser dans les r\u00e9ponses. \u00c0 utiliser uniquement si vous r\u00e9\u00e9crivez le sous-dossier du site par exemple dans un conteneur Docker. GPM 1 | gpm: 2 | releases: stable 3 | proxy_url: 4 | method: 'auto' 5 | verify_peer: true 6 | official_gpm_only: true Les options de la section GPM contr\u00f4lent le GPM de Grav (Grav Package Manager). Par exemple, vous pouvez limiter GPM \u00e0 l'utilisation de sources officielles et s\u00e9lectionner la m\u00e9thode utilis\u00e9e par GPM pour r\u00e9cup\u00e9rer les packages. Vous pouvez \u00e9galement choisir entre des versions stables et de test, ainsi que configurer une URL proxy. PROPRI\u00c9T\u00c9S DESCRIPTION releases : D\u00e9finir sur stable ou testing pour d\u00e9terminer si vous souhaitez effectuer la mise \u00e0 jour vers la derni\u00e8re version stable ou testing. proxy_url : Configurez une URL de proxy manuelle pour GPM. Par exemple : 127.0.0.1:3128 . method : Soit 'curl' , 'fopen' ou 'auto' . 'auto' essaiera d'abord fopen et s'il n'est pas disponible cURL. verify_peer : Sur certains syst\u00e8mes (principalement Windows), GPM ne peut pas se connecter car le certificat SSL ne peut pas \u00eatre v\u00e9rifi\u00e9. La d\u00e9sactivation de ce param\u00e8tre peut aider. official_gpm_only : Par d\u00e9faut, l'installation directe de GPM n'autorisera que les URL via le proxy officiel de GPM pour assurer la s\u00e9curit\u00e9, d\u00e9sactivez-le pour autoriser d'autres sources. Accounts 1 | accounts: 2 | type: regular 3 | storage: file Les param\u00e8tres de compte vous permettent d'essayer les nouveaux utilisateurs Flex exp\u00e9rimentaux. Cela signifie essentiellement que les utilisateurs sont stock\u00e9s sous forme d'objets Flex permettant plus de puissance et de performances. PROPRI\u00c9T\u00c9S DESCRIPTION type : Type de compte : regular ou flex . storage : Type de stockage felx : file ou folder . Flex 1 | flex: 2 | cache: 3 | index: 4 | enabled: true 5 | lifetime: 60 6 | object: 7 | enabled: true 8 | lifetime: 600 9 | render: 10 | enabled: true 11 | lifetime: 600 Les param\u00e8tres de configuration du cache Flex Objects sont nouveaux dans Grav 1.7 . Il s'agit de param\u00e8tres par d\u00e9faut pour tous les types Flex, mais ils peuvent \u00eatre remplac\u00e9s pour chaque Flex Directory . PROPRI\u00c9T\u00c9S DESCRIPTION cache : (Grav 1.7+) ... indice : (Grav 1.7+) ... ... enabled : D\u00e9fini sur true pour activer la mise en cache de l'index Flex. Est utilis\u00e9 pour mettre en cache les horodatages dans les fichiers (Grav 1.7+) . .. ... lifetime : Dur\u00e9e de vie de l'index en cache en secondes (0 = infini) (Grav 1.7+) ... object : (Grav 1.7+) ... ... enabled : D\u00e9finir sur true pour actver la mise en cache des objets Flex. Est utilis\u00e9 pour mettre en cache les donn\u00e9es d'objet (Grav 1.7+) ... ... lifetime : Dur\u00e9e de vie des objets mis en cache en secondes (0 = infini) (Grav 1.7+) ... render : (Grav 1.7+) ... ... enabled : D\u00e9fini sur true pour activer la mise en cache du rendu Flex. Est utilis\u00e9 pour mettre en cache la sortie rendue ( Grav 1.7+) ... ... lifetime : Dur\u00e9e de vie du cache HTML en secondes (0 = infini) ( Grav 1.7+ ). Strict Mode 1 | strict_mode: 2 | yaml_compat: true 3 | twig_compat: true 4 | blueprint_compat: false Le mode strict permet une migration plus propre vers les futures versions de Grav en passant aux nouvelles versions des processeurs YAML et Twig. Celles-ci peuvent ne pas \u00eatre compatibles avec toutes les extensions tierces. PROPRI\u00c9T\u00c9S DESCRIPTION yaml_compat : Active la r\u00e9trocompatibilit\u00e9 YAML. twig_compat : Active le param\u00e8tre d'\u00e9chappement automatique Twig. obsol\u00e8te blueprint_compat : Permet une prise en charge stricte r\u00e9trocompatible pour blueprints. Vous n'avez pas besoin de copier l'int\u00e9gralit\u00e9 du fichier de configuration pour le remplacer, vous pouvez remplacer aussi peu ou autant que vous le souhaitez. Assurez-vous simplement d'avoir exactement la m\u00eame structure de nommage pour le param\u00e8tre particulier que vous souhaitez remplacer. Configuration du site En plus du fichier system.yaml , Grav fournit \u00e9galement un fichier de configuration site.yaml par d\u00e9faut qui est utilis\u00e9 pour d\u00e9finir certaines configurations sp\u00e9cifiques au front-end telles que le nom de l'auteur, l'adresse e-mail de l'auteur, ainsi que certains param\u00e8tres de taxonomie cl\u00e9s. Vous pouvez les remplacer de la m\u00eame mani\u00e8re que vous le feriez pour system.yaml en fournissant votre propre fichier de configuration dans user/config/site.yaml . Vous pouvez \u00e9galement utiliser ce fichier pour d\u00e9finir des options de configuration arbitraires que vous souhaiterez peut-\u00eatre r\u00e9f\u00e9rencer \u00e0 partir de votre contenu ou de vos mod\u00e8les. Le fichier system/config/site.yaml par d\u00e9faut fourni avec Grav ressemble \u00e0 ceci : 1 | title : Grav # Nom du site. 2 | default_lang : en # Langue par d\u00e9faut pour le site (potentiellement | # utilis\u00e9e par le th\u00e8me). 3 | 4 | author: 5 | name: John Appleseed # Nom d'auteur par d\u00e9faut. 6 | email: 'john@example.com' # E-mail de l'auteur par d\u00e9faut. 7 | 8 | taxonomies : [category,tag] # Liste arbitraire de types de taxonomie. 9 | 10 | metadata : 11 | description: 'Mon site Grav' # Description du site 12 | 13 | summary: 14 | enabled : true # activer ou d\u00e9sactiver le r\u00e9sum\u00e9 de la page 15 | format : short # long = le d\u00e9limiteur de r\u00e9sum\u00e9 sera ignor\u00e9 ; short = | # utiliser la premi\u00e8re occurrence du d\u00e9limiteur ou de la taille 16 | size : 300 # Longueur maximale du r\u00e9sum\u00e9 (caract\u00e8res) 17 | d\u00e9limiter : === # Le d\u00e9limiteur r\u00e9capitulatif 18 | 19 | redirects : 20 | # '/redirect-test': '/' # Le test de redirection va \u00e0 la page d'accueil 21 | # '/old/(.*)': '/new/$1' # Redirigerait /old/ma-page vers /new/ma-page 22 | 23 | routes : 24 | # '/quelque chose/autre' : '/blog/sample-3' # Alias \u200b\u200bpour /blog/sample-3 25 | # '/new/(.*)': '/blog/$1' # Regex any /new/my-page URL 26 | to /blog/my-page Route 27 | 18 | blog: 29 | route : '/blog' # Valeur ajout\u00e9e personnalis\u00e9e (accessible | via site.blog.route) 30 | 31 | #menu : # Exemple de menu 32 | # - text : Source 33 | # icon : github 34 | # url : https://github.com/getgrav/grav 34 | # - icon : twitter 35 | # url : http://twitter.com/getgrav D\u00e9composons les \u00e9l\u00e9ments de cet exemple de fichier : PROPRI\u00c9T\u00c9S DESCRIPTION title : Le titre est une simple variable de cha\u00eene qui peut \u00eatre r\u00e9f\u00e9renc\u00e9e chaque fois que vous souhaitez afficher le nom de ce site. author : ... name : Le nom de l'auteur du site, qui peut \u00eatre r\u00e9f\u00e9renc\u00e9 quand vous en avez besoin. ... email : Un e-mail par d\u00e9faut \u00e0 utiliser sur votre site. taxonomies : Une liste arbitraire de types de haut niveau que vous pouvez utiliser pour organiser votre contenu. Vous pouvez attribuer du contenu \u00e0 des types de taxonomie sp\u00e9cifiques, par exemple, des cat\u00e9gories ou des balises. N'h\u00e9sitez pas \u00e0 modifier ou \u00e0 ajouter le v\u00f4tre. metadata : D\u00e9finissez les m\u00e9tadonn\u00e9es par d\u00e9faut pour toutes vos pages, consultez la section des en-t\u00eates de page de contenu pour plus de d\u00e9tails. summary : ... size : Une variable pour remplacer le nombre de caract\u00e8res par d\u00e9faut qui peut \u00eatre utilis\u00e9 pour d\u00e9finir la taille du r\u00e9sum\u00e9 lors de l'affichage d'une partie du contenu. routes : Il s'agit d'une carte de base qui peut fournir des fonctionnalit\u00e9s d'alias d'URL simples dans Grav. Si vous naviguez vers /something/else , vous serez en fait redirig\u00e9 vers /blog/sample-3 . N'h\u00e9sitez pas \u00e0 modifier ou \u00e0 ajouter les v\u00f4tres au besoin. Les remplacements Regex ((.*) - $1) sont d\u00e9sormais pris en charge \u00e0 la fin des alias de route. Vous devez les mettre en bas de la liste pour des performances optimales. (custom options) Vous pouvez cr\u00e9er n'importe quelle option que vous aimez dans ce fichier et un bon exemple est l'option blog: route: '/blog' qui est accessible dans vos mod\u00e8les Twig avec site.blog.route . Pour la plupart des gens, l'\u00e9l\u00e9ment le plus important de ce fichier est la liste de Taxonomy . Les taxonomies de cette liste doivent \u00eatre d\u00e9finies ici si vous souhaitez les utiliser dans votre contenu. Securit\u00e9 Pour une s\u00e9curit\u00e9 accrue, il existe un fichier system/config/security.yaml qui d\u00e9finit des valeurs par d\u00e9faut sensibles et est utilis\u00e9 par le plugin Admin lors de l'enregistrement du contenu, ainsi que dans la nouvelle section Rapports des Outils. La configuration par d\u00e9faut ressemble \u00e0 ceci : 1 | xss_whitelist: [admin.super] 2 | xss_enabled: 3 | on_events: true 4 | invalid_protocols: true 5 | moz_binding: true 6 | html_inline_styles: true 7 | dangerous_tags: true 8 | xss_invalid_protocols: 9 | - javascript 10 | - livescript 11 | - vbscript 12 | - mocha 13 | - feed 14 | - data 15 | xss_dangerous_tags: 16 | - applet 17 | - meta 18 | - xml 19 | - blink 20 | - link 21 | - style 22 | - script 23 | - embed 24 | - object 25 | - iframe 26 | - frame 27 | - frameset 28 | - ilayer 39 | - layer 30 | - bgsound 31 | - title 32 | - base 33 | uploads_dangerous_extensions: 34 | - php 35 | - html 36 | - htm 37 | - js 38 | - exe 39 | sanitize_svg: true Si vous souhaitez apporter des modifications \u00e0 ces param\u00e8tres, vous devez copier ce fichier dans user/config/security.yaml et y apporter des modifications. Autres param\u00e8tres et fichiers de configuration La configuration de l'utilisateur est enti\u00e8rement facultative. Vous pouvez remplacer autant ou peu de param\u00e8tres par d\u00e9faut que vous le souhaitez. Cela s'applique \u00e0 la fois au syst\u00e8me, au site et \u00e0 toutes les configurations de plug-in de votre site. Vous n'\u00eates pas non plus limit\u00e9 aux fichiers user/config/system.yaml ou user/config/site.yaml comme d\u00e9crit ci-dessus. Vous pouvez cr\u00e9er n'importe quel fichier de configuration .yaml arbitraire dans le dossier user/config que vous souhaitez et il sera automatiquement r\u00e9cup\u00e9r\u00e9 par Grav. Par exemple, si le nouveau fichier de configuration est nomm\u00e9 user/config/data.yaml et qu'une variable yaml dans ce fichier est appel\u00e9e count : compte: 39 La variable serait accessible dans votre mod\u00e8le Twig en utilisant la syntaxe suivante : {{ config.data.count }} Il serait \u00e9galement accessible via PHP depuis n'importe quel plugin avec le code : $ count_var = Grav::instance()['config']->get('data.count'); Vous pouvez \u00e9galement fournir un plan personnalis\u00e9 pour permettre \u00e0 votre fichier personnalis\u00e9 d'\u00eatre modifiable dans le plug-in d'administration. Consultez la recette correspondante dans la section Admin Cookbook . Espaces de nom des variables de configuration Les chemins d'acc\u00e8s aux fichiers de configuration seront utilis\u00e9s comme espace de noms pour vos options de configuration. Vous pouvez \u00e9galement placer toutes les options dans un seul fichier et utiliser des structures YAML pour sp\u00e9cifier la hi\u00e9rarchie de vos options de configuration. Cet espacement de noms est construit \u00e0 partir d'une combinaison du path + filename + option name . Par exemple : Une option telle que author: Frank Smith dans le fichier plugins/myplugin.yaml pourrait \u00eatre accessible via : plugins.myplugin.author . Cependant, vous pourriez \u00e9galement avoir un fichier plugins.yaml et dans ce fichier avoir un nom d'option appel\u00e9 myplugin: author: Frank Smith et il serait toujours accessible par le m\u00eame espace de noms plugins.myplugin.author . Certains exemples de fichiers de configuration pourraient \u00eatre structur\u00e9s : FICHIER DESCRIPTION user/config/system.yaml Fichier de configuration syst\u00e8me global user/config/site.yaml Un fichier de configuration sp\u00e9cifique au site user/config/plugins/myplugin.yaml Fichier de configuration individuel pour le plugin myplugin user/config/themes/mytheme.yaml Fichier de configuration individuel pour le th\u00e8me myth\u00e8me Avoir un fichier de configuration avec espace de noms remplacera ou masquera toutes les options ayant le m\u00eame chemin dans les fichiers de configuration par d\u00e9faut. Configuration de plugins La plupart des plugins sont livr\u00e9s avec leur propre fichier de configuration YAML. Nous vous recommandons de copier ce fichier dans le r\u00e9pertoire user/config/plugins/ plut\u00f4t que de modifier les options de configuration directement dans le fichier situ\u00e9 dans le r\u00e9pertoire du plugin. Cela garantira qu'une mise \u00e0 jour du plug-in n'\u00e9crasera pas vos param\u00e8tres et conservera toutes vos options configurables en un seul endroit pratique. Si vous avez un plugin appel\u00e9 user/plugins/myplugin qui a un fichier de configuration appel\u00e9 user/plugins/myplugin/myplugin.yaml alors vous devez copier ce fichier dans user/config/plugins/myplugin.yaml et y modifier le fichier. Le fichier YAML qui existe dans le r\u00e9pertoire principal du plugin agira comme une solution de secours. Tous les param\u00e8tres r\u00e9pertori\u00e9s ici et non dans la copie du dossier utilisateur seront r\u00e9cup\u00e9r\u00e9s et utilis\u00e9s par Grav. Configuration des th\u00e8mes Les m\u00eames r\u00e8gles pour les th\u00e8mes s'appliquent que pour les plugins. Donc, si vous avez un th\u00e8me appel\u00e9 user/themes/mytheme qui a un fichier de configuration appel\u00e9 user/themes/mytheme/mytheme.yaml , vous devez alors copier ce fichier dans user/config/themes/mytheme.yaml et y modifier le fichier.","title":"Configuration"},{"location":"cookbook-recettes-admin/","text":"Recettes d'administration Cette page contient un assortiment de probl\u00e8mes et leurs solutions respectives li\u00e9es aux modifications de Grav Admin. Ajouter un fichier YAML personnalis\u00e9. Probl\u00e8me : Vous souhaitez fournir un groupe de champs d'entreprise modifiables par l'utilisateur \u00e0 l'\u00e9chelle du site, comme system.yaml ou site.yaml , mais dans son propre fichier d\u00e9di\u00e9. La solution : Comme indiqu\u00e9 dans la section Bases / Configuration , la premi\u00e8re \u00e9tape consiste \u00e0 fournir votre nouveau fichier de donn\u00e9es YAML, par exemple : user/config/details.yaml : 1 | name: 'ABC Company Limited' 2 | address: '8732 North Cumbria Street, Golden, CO, 80401' 3 | email: 4 | general: 'hello@abc-company.com' 5 | support: 'support@abc-company.com' 6 | sales: 'sales@abc-company.com' 7 | phone: 8 | default: '555-123-1111' Vous devez maintenant fournir le fichier de plan appropri\u00e9 pour d\u00e9finir le formulaire. Le blueprint peut \u00eatre fourni par un plugin, mais l'approche la plus simple consiste simplement \u00e0 mettre le blueprint dans un fichier : user/blueprints/config/details.yaml Si vous vouliez fournir le plan via un plugin, vous devez d'abord ajouter ce code \u00e0 votre plugin juste apr\u00e8s la d\u00e9finition de la classe : 1 | class MyPlugin extends Plugin 2 | { 3 | public $features = [ 4 | 'blueprints' => 1000, 5 | ]; 6 | protected $version; 7 | ... Ajoutez ensuite ce code \u00e0 votre m\u00e9thode onPluginsInitialized() : 1 | if ($this->isAdmin()) { 2 | // Store this version and prefer newer method 3 | if (method_exists($this, 'getBlueprint')) { 4 | $this->version = $this->getBlueprint()->version; 5 | } else { 6 | $this->version = $this->grav['plugins']->get('admin')->blueprints()->version; 7 | } 8 | } Cr\u00e9ez ensuite un fichier appel\u00e9 user/plugins/myplugin/blueprints/config/details.yaml Le fichier de plan r\u00e9el doit contenir une d\u00e9finition de formulaire qui correspond aux donn\u00e9es de configuration : 1 | title: Company Details 2 | form: 3 | validation: loose 4 | fields: 5 | 6 | content: 7 | type: section 8 | title: 'Details' 9 | underline: true 10 | name: 11 | type: text 12 | label: 'Company Name' 13 | size: medium 14 | placeholder: 'ACME Corp' 15 | 16 | address: 17 | type: textarea 18 | label: 'Address' 19 | placeholder: '555 Somestreet,\\r\\nNewville, TX, 77777' 20 | size: medium 21 | 22 | email: 23 | type: array 24 | label: 'Email Addresses' 25 | placeholder_key: Key 26 | placeholder_value: Email Address 27 | 28 | phone: 29 | type: array 30 | label: 'Phone Numbers' 31 | placeholder_key: Key 32 | placeholder_value: Phone Number L'utilisation du type de champ array vous permettra d'ajouter des champs d'e-mail et de t\u00e9l\u00e9phone arbitraires selon vos besoins. Ajouter une cr\u00e9ation de page personnalis\u00e9e modale. Probl\u00e8me : Vous souhaitez fournir un moyen simple de cr\u00e9er un nouvel article de blog ou une page d'image de galerie. Nous utiliserons le billet de blog pour cet exemple. Supposons que vous souhaitiez cr\u00e9er un blog et cr\u00e9er facilement un article de blog dans le bon dossier en cliquant sur un bouton. La solution : Tout d'abord, cr\u00e9ez le formulaire pour notre page modale. Cr\u00e9ez un nouveau fichier : user/blueprints/admin/pages/new_post.yaml . 1 | form: 2 | validation: loose 3 | fields: 4 | section: 5 | type: section 6 | title: Add Post 7 | 8 | title: 9 | type: text 10 | label: Post Title 11 | validate: 12 | required: true 13 | 14 | folder: 15 | type: hidden 16 | default: '@slugify-title' 17 | 18 | route: 19 | type: hidden 20 | default: /posts 21 | 22 | name: 23 | type: hidden 24 | default: 'post' 25 | 26 | visible: 27 | type: hidden 28 | default: '' 29 | 30 | blueprint: 31 | type: blueprint Ce formulaire imite le formulaire par d\u00e9faut modal Add Page . Pour le dossier , comme vous pouvez le voir, nous avons une valeur sp\u00e9ciale : @slugify-title . Cela signifie que le dossier utilisera par d\u00e9faut la version simplifi\u00e9e de l'entr\u00e9e du formulaire de titre . route est /posts donc il le placera dans le dossier /posts . le nom est post donc il utilisera le plan de la page post . La deuxi\u00e8me \u00e9tape consiste \u00e0 modifier la configuration du plugin Admin. Pour ajouter du code personnalis\u00e9 au fichier de configuration admin.yaml du plugin d'administration, cr\u00e9ez le fichier user/config/plugins/admin.yam et ajoutez cet extrait : 1 | add_modals: 2 | - 3 | label: Add Post 4 | blueprint: admin/pages/new_post 5 | show_in: bar Cl\u00e9s/valeurs de configuration disponibles pour add_modals : label - texte \u00e0 afficher dans le bouton show_in (default: bar) (values: bar|dropdown) - s'il faut afficher le bouton dans la barre ou la liste d\u00e9roulante blueprint - blueprint utilis\u00e9 par le mod\u00e8le template - mod\u00e8le utilis\u00e9 par le modal (par d\u00e9faut : partials/blueprints-new.html.twig) with - donn\u00e9es transmises au mod\u00e8le link_classes - classes \u00e0 ajouter \u00e0 l'\u00e9l\u00e9ment de lien modal_classes - classes \u00e0 ajouter \u00e0 l'\u00e9l\u00e9ment modal Ajouter un champ de s\u00e9lection personnalis\u00e9. Probl\u00e8me : Vous souhaitez ajouter un champ de s\u00e9lection avec une grande liste de valeurs. Dans cet exemple, nous supposerons que vous souhaitez afficher une liste de pays. La solution : Vous pouvez cr\u00e9er une fonction statique et appeler le tableau depuis votre blueprint. Vous pouvez coder cette fonction soit dans le fichier php de votre th\u00e8me, soit dans un plugin personnalis\u00e9. Dans cet exemple, nous allons ajouter la fonction au th\u00e8me Antimati\u00e8re, nous allons donc \u00e9diter le fichier antimatter.php qui se trouve dans le dossier user/themes/antimati\u00e8re . 1 | <?php 2 | namespace Grav\\Theme; 3 | 4 | use Grav\\Common\\Theme; 5 | 6 | class Antimatter extends Theme 7 | { 8 | public static function countryCodes() 9 | { 10 | return array ( 11 | 'AF' => 'Afghanistan', 12 | 'AX' => '\u00c5land Islands', 13 | 'AL' => 'Albania', 14 | 'DZ' => 'Algeria', 15 | 'AS' => 'American Samoa', 16 | 'AD' => 'Andorra', 17 | 'AO' => 'Angola', 18 | 'AI' => 'Anguilla', 19 | 'AQ' => 'Antarctica', 20 | 'AG' => 'Antigua & Barbuda', 21 | 'AR' => 'Argentina', 22 | 'AM' => 'Armenia', 23 | 'AW' => 'Aruba', 24 | 'AC' => 'Ascension Island', 25 | 'AU' => 'Australia', 26 | 'AT' => 'Austria', 27 | 'AZ' => 'Azerbaijan', 28 | 'BS' => 'Bahamas', 29 | 'BH' => 'Bahrain', 30 | 'BD' => 'Bangladesh', 31 | 'BB' => 'Barbados', 32 | 'BY' => 'Belarus', 33 | 'BE' => 'Belgium', 34 | 'BZ' => 'Belize', 35 | 'BJ' => 'Benin', 36 | 'BM' => 'Bermuda', 37 | 'BT' => 'Bhutan', 38 | ); 39 | } 40 | } Il s'agit d'une liste r\u00e9duite pour une visualisation facile, mais vous pouvez copier/coller la liste compl\u00e8te des pays depuis umpirsky/count-list Ensuite, nous appelons la fonction \u00e0 partir d'un blueprint ou d'une d\u00e9finition de formulaire frontal comme ceci : 1 | country: 2 | type: select 3 | label: Country 4 | data-options@: '\\Grav\\Theme\\Antimatter::countryCodes' Voici \u00e0 quoi cela ressemblera dans l'admin :","title":"Recettes Administration"},{"location":"cookbook-recettes-plugin/","text":"Recettes de plugins Cette page contient un assortiment de probl\u00e8mes et leurs solutions respectives li\u00e9es aux plugins Grav. G\u00e9n\u00e9rer du code PHP dans un mod\u00e8le Twig. Objectif : Vous souhaitez traiter du code PHP personnalis\u00e9 et rendre le r\u00e9sultat disponible dans une page. La solution : Vous cr\u00e9ez un nouveau plugin qui cr\u00e9e une extension Twig et met \u00e0 disposition du contenu PHP dans vos templates Twig. Cr\u00e9ez un nouveau dossier de plugins dans user/plugins/example et ajoutez ces fichiers : user/plugins/example/example.php user/plugins/example/example.yaml user/plugins/example/twig/ExampleTwigExtension.php Dans twig/ExampleTwigExtension.php , vous effectuerez votre traitement personnalis\u00e9 et le renverrez sous forme de cha\u00eene dans exampleFunction() . Ensuite, dans votre fichier de mod\u00e8le Twig (ou dans un fichier Markdown de page si vous avez activ\u00e9 le traitement Twig dans Pages), affichez la sortie en utilisant : {{ example() }} . La vue d'ensemble est termin\u00e9e, voyons le code r\u00e9el : exemple.php : 1 | <?php 2 | namespace Grav\\Plugin; 3 | use \\Grav\\Common\\Plugin; 4 | class ExamplePlugin extends Plugin 5 | { 6 | public static function getSubscribedEvents() 7 | { 8 | return [ 9 | 'onTwigExtensions' => ['onTwigExtensions', 0] 10 | ]; 11 | } 12 | public function onTwigExtensions() 13 | { 14 | require_once(__DIR__ . '/twig/ExampleTwigExtension.php'); 15 | $this->grav['twig']->twig->addExtension(new ExampleTwigExtension()); 16 | } 17 | } ExempleTwigExtension.php : 1 | <?php 2 | namespace Grav\\Plugin; 3 | use Grav\\Common\\Twig\\Extension\\GravExtension; 4 | 5 | class ExampleTwigExtension extends GravExtension 6 | { 7 | public function getName() 8 | { 9 | return 'ExampleTwigExtension'; 10 | } 11 | public function getFunctions(): array 12 | { 13 | return [ 14 | new \\Twig_SimpleFunction('example', [$this, 'exampleFunction']) 15 | ]; 16 | } 17 | public function exampleFunction() 18 | { 19 | return 'something'; 20 | } 21 | } exemple.yaml : enabled: true Le plugin est maintenant install\u00e9 et activ\u00e9, et tout devrait fonctionner. Filtrer les taxonomies \u00e0 l'aide du plugin taxonomylist. Objectif : Vous souhaitez utiliser le plugin Grav de liste de taxonomie pour r\u00e9pertorier les balises utilis\u00e9es dans vos articles de blog, mais au lieu de les lister toutes, vous souhaitez uniquement r\u00e9pertorier les \u00e9l\u00e9ments les plus utilis\u00e9s dans une taxonomie donn\u00e9e (comme les cinq premi\u00e8res balises, par exemple). La solution : C'est un exemple o\u00f9 la flexibilit\u00e9 des plugins Grav est vraiment pratique. La premi\u00e8re \u00e9tape consiste \u00e0 vous assurer que le plugin Grav de la liste de taxonomie est install\u00e9 dans votre package Grav. Apr\u00e8s l'installation, assurez-vous de copier /yoursite/user/plugins/taxonomylist/templates/partials/taxonomylist.html.twig vers /yoursite/user/themes/yourtheme/templates/partials/taxonomylist.html.twig car nous apportera des modifications \u00e0 ce fichier. Pour que cela fonctionne, nous allons introduire trois nouvelles variables : filter , filterstart et filterend o\u00f9 filter est un bool\u00e9en, qui sera d\u00e9fini sur true si nous voulons pouvoir r\u00e9pertorier uniquement les principales balises (ou toute autre taxonomie que vous souhaitez utiliser). filterstart est un entier arbitraire, mais doit g\u00e9n\u00e9ralement \u00eatre d\u00e9fini sur z\u00e9ro. Il s'agit de l'index du tableau de taxonomie par lequel vous souhaitez commencer. filterend est un entier arbitraire et est l'index dans le tableau de taxonomie auquel vous voulez vous terminer. Notez que si vous souhaitez r\u00e9pertorier les cinq premiers \u00e9l\u00e9ments de votre taxonomie, vous devez le d\u00e9finir sur 5 car notre boucle it\u00e9rera jusqu'\u00e0 filterend -1 . La prochaine \u00e9tape consistera \u00e0 appeler taxonomylist.html.twig dans le mod\u00e8le dans lequel nous souhaitons r\u00e9pertorier les principaux \u00e9l\u00e9ments de notre taxonomie. Comme d'habitude, nous le ferons en utilisant {% include %} comme le montre l'exemple d'extrait de code suivant : 1 | {% if config.plugins.taxonomylist.enabled %} 2 | <div class=\"sidebar-content\"> 3 | <h4>Popular Tags</h4> 4 | {% include 'partials/taxonomylist.html.twig' with {'taxonomy':'tag', filter: true, filterstart: 0, filterend: 5} %} 5 | </div> 6 | {% endif %} Dans cet exemple, nous allons lister les cinq premi\u00e8res balises. Maintenant, tournons notre attention vers taxonomylist.html.twig . Pour r\u00e9f\u00e9rence, voici le code par d\u00e9faut de ce fichier lors de son installation initiale : 1 | {% set taxlist = taxonomylist.get() %} 2 | 3 | {% if taxlist %} 4 | <span class=\"tags\"> 5 | {% for tax,value in taxlist[taxonomy] %} 6 | <a href=\"{{ base_url }}/{{ taxonomy }}{{ config.system.param_sep }}{{ tax|e('url') }}\">{{ tax }}</a> 7 | {% endfor %} 8 | </span> 9 | {% endif %} Pour que cela fonctionne avec nos nouvelles variables (c'est-\u00e0-dire filter , filterstart et filterend ), nous devrons les inclure dans ce fichier comme suit : 1 | {% set taxlist = taxonomylist.get %} 2 | 3 | {% if taxlist %} 4 | {% set taxlist_taxonomy = taxlist[taxonomy] %} 5 | 6 | {% if filter %} 7 | {% set taxlist_taxonomy = taxlist_taxonomy|slice(filterstart,filterend) %} 8 | {% endif %} 9 | 10 | <span class=\"tags\"> 11 | {% for tax,value in taxlist_taxonomy %} 12 | <a href=\"{{ base_url }}/{{ taxonomy }}{{ config.system.param_sep }}{{ tax|e('url') }}\">{{ tax }}</a> 13 | {% endfor %} 14 | </span> 15 | {% endif %} Ici, le fichier rassemble tous les \u00e9l\u00e9ments de la taxonomie par d\u00e9faut, dans une variable appel\u00e9e taxlist_taxonomy . Si filter a \u00e9t\u00e9 d\u00e9fini, la taxonomie utilise le filtre slice de Twig. Ce filtre va, dans notre cas, extraire un sous-ensemble d'un tableau depuis l'index de d\u00e9but (dans notre cas, filterstart ) jusqu'\u00e0 l'index de fin (dans notre cas, filterend ). La boucle for est ex\u00e9cut\u00e9e comme dans la taxonomylist.html.twig d'origine avec le contenu de taxlist_taxonomy, filtr\u00e9 ou non. Ajout d'un bouton de recherche au plugin SimpleSearch. Objectif : Vous aimez vraiment le plugin Grav SimpleSearch , mais vous souhaitez ajouter un bouton de recherche en plus du champ de texte. L'une des raisons d'ajouter ce bouton est qu'il peut ne pas \u00eatre \u00e9vident pour l'utilisateur qu'il doit appuyer sur la touche Enter pour lancer sa demande de recherche. La solution : Tout d'abord, assurez-vous que vous avez install\u00e9 le plugin Grav SimpleSearch . Ensuite, assurez-vous de copier /yoursite/user/plugins/simplesearch/templates/partials/simplesearch-searchbox.html.twig vers /yoursite/user/themes/yourtheme/templates/partials/simplesearch-searchbox.html.twig car nous devra apporter des modifications \u00e0 ce fichier. Avant d'aller plus loin, examinons ce que fait ce fichier : 1 | <input type=\"text\" placeholder=\"Search...\" value=\"{{ query }}\" data-search-input=\"{{ base_url }}{{ config.plugins.simplesearch.route}}/query\" /> 2 | <script> 3 | jQuery(document).ready(function($){ 4 | var input = $('[data-search-input]'); 5 | input.on('keypress', function(event) { 6 | if (event.which == 13 && input.val().length > 3) { 7 | event.preventDefault(); 8 | window.location.href = input.data('search-input') + '{{ config.system.param_sep }}' + input.val(); 9 | } 10 | }); 11 | }); 12 | </script> La premi\u00e8re ligne int\u00e8gre simplement un champ de saisie de texte dans votre mod\u00e8le Twig. L'attribut data-search-input stocke l'URL de base de la page de requ\u00eate r\u00e9sultante. La valeur par d\u00e9faut est http://votresite/recherche/requ\u00eate . Passons maintenant au jQuery en dessous. Ici, la balise contenant l'attribut data-search-input est affect\u00e9e \u00e0 une entr\u00e9e variable. Ensuite, la m\u00e9thode jQuery .on() est appliqu\u00e9e \u00e0 l'entr\u00e9e. La m\u00e9thode .on() applique des gestionnaires d'\u00e9v\u00e9nements aux \u00e9l\u00e9ments s\u00e9lectionn\u00e9s (dans ce cas, le champ de texte <input> ). Ainsi, lorsque l'utilisateur appuie ( keypress ) sur une touche pour lancer la recherche, l'instruction if v\u00e9rifie que les \u00e9l\u00e9ments suivants sont true : La touche Enter a \u00e9t\u00e9 enfonc\u00e9e : event.which == 13 o\u00f9 13 est la valeur num\u00e9rique de la touche Enter du clavier. Le nombre de caract\u00e8res saisis dans la zone de recherche est sup\u00e9rieur \u00e0 trois. Vous voudrez peut-\u00eatre ajuster cela \u00e0 votre go\u00fbt, car votre organisation peut avoir de nombreux acronymes de trois caract\u00e8res ou moins. S'ils sont vrais, alors event.preventDefault() ; s'assure que l'action par d\u00e9faut du navigateur pour la touche Enter est ignor\u00e9e car cela emp\u00eacherait notre recherche de se produire. Enfin, l'URL compl\u00e8te de la requ\u00eate de recherche est construite. La valeur par d\u00e9faut est http://votresite/recherche/requ\u00eate:votrerequ\u00eate . \u00c0 partir de l\u00e0, /yoursite/user/plugins/simplesearch/simplesearch.php effectue la recherche proprement dite et les autres fichiers Twig du plugin r\u00e9pertorient les r\u00e9sultats. Pas de retour \u00e0 notre solution ! Si nous souhaitons ajouter un bouton de recherche, nous devons : Ajouter le bouton Assurez-vous d'appliquer la m\u00e9thode .on() au bouton, mais cette fois, en utilisant click au lieu de keypress Ceci est r\u00e9alis\u00e9 avec le code suivant utilisant le Turret CSS Framework . Des extraits de code pour d'autres frameworks seront list\u00e9s \u00e0 la fin. 1 | <div class=\"input-group input-group-search\"> 2 | <input type=\"search\" placeholder=\"Search\" value=\"{{ query }}\" data-search-input=\"{{ base_url }}{{ config.plugins.simplesearch.route}}/query\" > 3 | <span class=\"input-group-button\"> 4 | <button class=\"button\" type=\"submit\">Search</button> 5 | </span> 6 |</div> 7 | 8 | <script> 9 | jQuery(document).ready(function($){ 10 | var input = $('[data-search-input]'); 11 | var searchButton = $('.button.search'); 12 | 13 | input.on('keypress', function(event) { 14 | if (event.which == 13 && input.val().length > 3) { 15 | event.preventDefault(); 16 | window.location.href = input.data('search-input') + '{{ config.system.param_sep }}' + input.val(); 17 | } 18 | }); 19 | 20 | searchButton.on('click', function(event) { 21 | if (input.val().length > 3) { 22 | event.preventDefault(); 23 | window.location.href = input.data('search-input') + '{{ config.system.param_sep }}' + input.val(); 24 | } 25 | }); 26 | }); 27 | </script> Les attributs HTML et class sont sp\u00e9cifiques \u00e0 Turret, mais le r\u00e9sultat final ressemblera \u00e0 ceci . Nous pouvons \u00e9galement voir que la m\u00e9thode .on() a \u00e9galement \u00e9t\u00e9 affect\u00e9e au bouton de recherche, mais elle v\u00e9rifie uniquement que le nombre de caract\u00e8res saisis dans la zone de recherche est sup\u00e9rieur \u00e0 trois avant d'ex\u00e9cuter le code dans l'instruction if . Voici le code HTML par d\u00e9faut pour le champ de texte plus un bouton de recherche pour quelques autres frameworks : Bootstrap 1 | <div class=\"input-group\"> 2 | <input type=\"text\" class=\"form-control\" placeholder=\"Search for...\"> 3 | <span class=\"input-group-btn\"> 4 | <button class=\"btn btn-default\" type=\"button\">Go!</button> 5 | </span> 6 |</div> Materialize 1 | <div class=\"champ d'entr\u00e9e\"> 2 | <input id=\"search\" type=\"search\" requis> 3 | <label for=\"search\"><i class=\"material-icons\">rechercher</i></label> 4 | </div> Pure CSS 1 | <form class=\"pure-form\"> 2 | <input type=\"text\" class=\"pure-input-rounded\"> 3 | <button type=\"submit\" class=\"pure-button\">Rechercher</button> 4 | </form> Semantic UI 1 | <div class=\"entr\u00e9e d'action ui\"> 2 | <input type=\"text\" placeholder=\"Rechercher...\"> 3 | <button class=\"ui button\">Rechercher</button> 4 | </div> It\u00e9rer \u00e0 travers les pages et les m\u00e9dias. Objectif : Vous souhaitez acc\u00e9der \u00e0 toutes les pages et aux m\u00e9dias associ\u00e9s \u00e0 chaque page via PHP et/ou Twig, afin qu'ils puissent \u00eatre boucl\u00e9s ou autrement manipul\u00e9s par le plugin. La solution : Utilisez les capacit\u00e9s de collection de Grav pour construire un index r\u00e9cursif de toutes les pages, et lors de l'indexation, rassemblez \u00e9galement les fichiers multim\u00e9dias pour chaque page. Le plugin DirectoryListing fait exactement cela et construit une liste HTML en utilisant l'arborescence produite. Pour ce faire, nous allons cr\u00e9er une fonction r\u00e9cursive - ou une m\u00e9thode, comme cela peut \u00eatre le cas dans la classe d'un plugin - qui parcourt chaque page et la stocke dans un tableau. La m\u00e9thode est r\u00e9cursive, car elle s'appelle \u00e0 nouveau pour chaque page qu'elle trouve qui a des enfants. Tout d'abord, cependant, la m\u00e9thode prend trois param\u00e8tres : le premier est le $route vers la page, qui indique \u00e0 Grav o\u00f9 le trouver ; le second est le $mode , qui indique \u00e0 la m\u00e9thode s'il faut parcourir la page elle-m\u00eame ou ses enfants ; le troisi\u00e8me est le $depth , qui garde une trace du niveau de la page. La m\u00e9thode instancie initialement l'objet Page, puis traite de la profondeur et du mode, et construit la collection. Par d\u00e9faut, nous classons les pages par Date, D\u00e9croissant, mais vous pouvez rendre cela configurable. Ensuite, nous construisons un tableau, $paths , pour contenir chaque page. Comme les routes sont uniques dans Grav, elles sont utilis\u00e9es comme cl\u00e9s dans ce tableau pour identifier chaque page. Maintenant, nous parcourons les pages, en ajoutant la profondeur, le titre et l'itin\u00e9raire (\u00e9galement conserv\u00e9 comme valeur pour la facilit\u00e9 d'acc\u00e8s). Dans la boucle foreach, nous essayons \u00e9galement de r\u00e9cup\u00e9rer les pages enfants et de les ajouter si elles sont trouv\u00e9es. Aussi, nous trouvons tous les m\u00e9dias associ\u00e9s \u00e0 la page, et les ajoutons. \u00c9tant donn\u00e9 que la m\u00e9thode est r\u00e9cursive, elle continuera \u00e0 rechercher des pages et des pages enfants jusqu'\u00e0 ce qu'il n'en trouve plus. Les donn\u00e9es renvoy\u00e9es sont une structure arborescente, ou un tableau multidimensionnel dans le langage PHP, contenant toutes les pages et leurs m\u00e9dias. Cela peut \u00eatre transmis \u00e0 Twig ou utilis\u00e9 dans le plugin lui-m\u00eame. Notez qu'avec de tr\u00e8s grandes structures de dossiers, PHP peut expirer ou \u00e9chouer en raison des limites de r\u00e9cursivit\u00e9, par exemple. dossiers de 100 niveaux ou plus. 1 | /** 2 | * Creates page-structure recursively 3 | * @param string $route Route to page 4 | * @param integer $depth Reserved placeholder for recursion depth 5 | * @return array Page-structure with children and media 6 | */ 7 | public function buildTree($route, $mode = false, $depth = 0) 8 | { 9 | $page = Grav::instance()['page']; 10 | $depth++; 11 | $mode = '@page.self'; 12 | if ($depth > 1) { 13 | $mode = '@page.children'; 14 | } 15 | $pages = $page->evaluate([$mode => $route]); 16 | $pages = $pages->published()->order('date', 'desc'); 17 | $paths = array(); 18 | foreach ($pages as $page) { 19 | $route = $page->rawRoute(); 20 | $path = $page->path(); 21 | $title = $page->title(); 22 | $paths[$route]['depth'] = $depth; 23 | $paths[$route]['title'] = $title; 24 | $paths[$route]['route'] = $route; 25 | if (!empty($paths[$route])) { 26 | $children = $this->buildTree($route, $mode, $depth); 27 | if (!empty($children)) { 28 | $paths[$route]['children'] = $children; 29 | } 30 | } 31 | $media = new Media($path); 32 | foreach ($media->all() as $filename => $file) { 33 | $paths[$route]['media'][$filename] = $file->items()['type']; 34 | } 35 | } 36 | if (!empty($paths)) { 37 | return $paths; 38 | } else { 39 | return null; 40 | } 41 | } Plugin de mod\u00e8les Twig personnalis\u00e9s. Objectif : Plut\u00f4t que d'utiliser l'h\u00e9ritage de th\u00e8me, il est possible de cr\u00e9er un plugin tr\u00e8s simple qui vous permet d'utiliser un emplacement personnalis\u00e9 pour fournir des mod\u00e8les Twig personnalis\u00e9s. La solution : La seule chose dont vous avez besoin dans ce plugin est un \u00e9v\u00e9nement pour fournir un emplacement pour vos mod\u00e8les. La fa\u00e7on la plus simple de cr\u00e9er le plugin est d'utiliser le plugin devtools . Alors installez \u00e7a avec : $ | $ bin/gpm install devtools Une fois install\u00e9, cr\u00e9ez un nouveau plugin avec la commande : $ | $ bin/plugin devtools newplugin Remplissez les d\u00e9tails pour le nom, l'auteur, etc. Disons que nous l'appelons Custom Templates , et le plugin sera cr\u00e9\u00e9 dans /user/plugins/custom-templates . Il ne vous reste plus qu'\u00e0 \u00e9diter le fichier custom-templates.php et y mettre ce code : 1 | <?php 2 | namespace Grav\\Plugin; 3 | 4 | use \\Grav\\Common\\Plugin; 5 | 6 | class CustomTemplatesPlugin extends Plugin 7 | { 8 | /** 9 | * Subscribe to required events 10 | * 11 | * @return array 12 | */ 13 | public static function getSubscribedEvents() 14 | { 15 | return [ 16 | 'onTwigTemplatePaths' => ['onTwigTemplatePaths', 0] 17 | ]; 18 | } 19 | 20 | /** 21 | * Add current directory to twig lookup paths. 22 | */ 23 | public function onTwigTemplatePaths() 24 | { 25 | $this->grav['twig']->twig_paths[] = __DIR__ . '/templates'; 26 | } 27 | } Ce plugin s'abonne simplement \u00e0 l'\u00e9v\u00e9nement onTwigTemplatePaths() , puis dans cette m\u00e9thode d'\u00e9v\u00e9nement, il ajoute le dossier user/plugins/custom-templates/templates \u00e0 celui des chemins que Twig v\u00e9rifiera. Cela vous permet de d\u00e9poser un mod\u00e8le Twig appel\u00e9 foo.html.twig , puis toute page appel\u00e9e foo.md pourra utiliser ce mod\u00e8le. REMARQUE : Cela ajoutera le chemin du mod\u00e8le personnalis\u00e9 du plug-in \u00e0 la fin du tableau de chemin du mod\u00e8le Twig. Cela signifie que le th\u00e8me (qui est toujours le premier) aura priorit\u00e9 sur les mod\u00e8les du plugin du m\u00eame nom. Pour r\u00e9soudre ce probl\u00e8me, placez simplement le chemin du mod\u00e8le du plug-in devant le tableau en modifiant la m\u00e9thode de l'\u00e9v\u00e9nement : 1 | /** 2 | * Add current directory to twig lookup paths. 3 | */ 4 | public function onTwigTemplatePaths() 5 | { 6 | array_unshift($this->grav['twig']->twig_paths, __DIR__ . '/templates'); 7 | } Utiliser Cache dans vos propres plugins. Objectif : Lors du d\u00e9veloppement de vos propres plugins, il est souvent utile d'utiliser le cache de Grav pour mettre en cache les donn\u00e9es afin d'am\u00e9liorer les performances. Heureusement, c'est un processus tr\u00e8s simple pour utiliser le cache dans votre propre code. La solution : Voici un code de base qui vous montre comment fonctionne la mise en cache : 1 | $cache = Grav::instance()['cache']; 2 | $id = 'myplugin-data' 3 | $list = []; 4 | 5 | if ($data = $cache->fetch($id)) { 6 | return $data; 7 | } else { 8 | $data = $this->gatherData(); 9 | $cache->save($hash, $data); 10 | return $data; 11 | } Tout d'abord, nous obtenons l'objet cache de Grav, puis nous essayons de voir si nos donn\u00e9es existent d\u00e9j\u00e0 dans le cache ($data = $cache->fetch($id)) . Si $data existe, renvoyez-le simplement sans travail suppl\u00e9mentaire n\u00e9cessaire. Cependant, si la r\u00e9cup\u00e9ration du cache renvoie null, ce qui signifie qu'il n'est pas mis en cache, faites un peu de travail et r\u00e9cup\u00e9rez les donn\u00e9es ( $data = $this->gatherData() ), puis enregistrez simplement les donn\u00e9es pour la prochaine fois ( $cache->save( $hachage, $data) ). Apprendre par l'exemple. Avec l'abondance de plugins actuellement disponibles, il y a de fortes chances que vous trouviez vos r\u00e9ponses quelque part dans leur code source. Le probl\u00e8me est de savoir lesquels regarder. Cette page tente de r\u00e9pertorier les probl\u00e8mes de plugin courants, puis r\u00e9pertorie les plugins sp\u00e9cifiques qui montrent comment les r\u00e9soudre. Avant de continuer, assurez-vous de vous \u00eatre familiaris\u00e9 avec la documentation de base , en particulier le Grav Lifecycle ! Comment lire et \u00e9crire des donn\u00e9es dans le syst\u00e8me de fichiers ? Grav peut \u00eatre un fichier plat, mais un fichier plat \u2260 statique ! Il existe de nombreuses fa\u00e7ons de lire et d'\u00e9crire des donn\u00e9es dans le syst\u00e8me de fichiers. Si vous avez juste besoin d'un acc\u00e8s en lecture aux donn\u00e9es YAML, consultez le plugin d'importation . interface pr\u00e9f\u00e9r\u00e9e est via l'interface int\u00e9gr\u00e9e RocketTheme\\Toolbox\\File . Rien ne vous emp\u00eache non plus d'utiliser SQLite . L'exemple le plus simple est probablement le plugin Comments . D'autres incluent Table Imporer Thumb Ratings Webmention Comment rendre les donn\u00e9es d'un plugin disponibles pour Twig ? Une fa\u00e7on est via l'espace de noms config.plugins.X . Faites simplement un $this->config->set() comme on le voit dans les exemples suivants : ipLocate Count Views Vous pouvez ensuite y acc\u00e9der dans un mod\u00e8le Twig via {{ config.plugins.X.whatever.variable }} . Alternativement, vous pouvez passer des variables via grav['twig'] : Blogroll , auquel vous pouvez ensuite acc\u00e9der directement dans votre mod\u00e8le . Enfin, vous pouvez injecter des donn\u00e9es directement dans l'en-t\u00eate de la page, comme on le voit dans le plugin Import . Comment injecter Markdown dans une page ? Selon Grav Lifecycle , le dernier hook d'\u00e9v\u00e9nement o\u00f9 vous pouvez injecter du Markdown brut est onPageContentRaw . Le plus ancien est probablement onPageInitialized . Vous pouvez simplement saisir $this->grav['page']->rawMarkdown() , seulement \u00e7\u00e0, puis le r\u00e9\u00e9crire avec $this->grav['page']->setRawContent() . Les plugins suivants le d\u00e9montrent : Page Inject Table Importer Comment puis-je injecter du HTML dans la sortie finale ? La derni\u00e8re fois que vous pouvez injecter du HTML tout en gardant votre sortie en cache, c'est lors de l'\u00e9v\u00e9nement onOutputGenerated . Vous pouvez simplement saisir et modifier $this->grav->output . De nombreuses t\u00e2ches courantes peuvent \u00eatre accomplies \u00e0 l'aide de l'infrastructure Shortcode Core . Les plugins Pubmed et Tablesorter adoptent une approche plus brutale. Comment puis-je injecter des ressources telles que des fichiers JavaScript et CSS ? Cela se fait via l'interface Grav\\Common\\Assets . Google Analytics Bootstrapper Gravstrap Tablesorter Comment affecter les en-t\u00eates de r\u00e9ponse et les codes de r\u00e9ponse ? Vous pouvez utiliser la commande header() de PHP pour d\u00e9finir les en-t\u00eates de r\u00e9ponse. La derni\u00e8re chose que vous pouvez faire est pendant l'\u00e9v\u00e9nement onOutputGenerated , apr\u00e8s quoi la sortie est r\u00e9ellement envoy\u00e9e au client. Le code de r\u00e9ponse lui-m\u00eame ne peut \u00eatre d\u00e9fini que dans l'en-t\u00eate YAML de la page en question ( http_response_code ). Le plugin Graveyard remplace les r\u00e9ponses 404 NOT FOUND par 410 GONE via l'en-t\u00eate YAML. La Webmention d\u00e9finit l'en-t\u00eate Location sur une r\u00e9ponse 201 CREATED . Comment int\u00e9grer des biblioth\u00e8ques tierces dans mon plugin ? Habituellement, vous incorporeriez d'autres biblioth\u00e8ques compl\u00e8tes dans un sous-dossier vendor et exigeriez son autoload.php le cas \u00e9ch\u00e9ant dans votre plugin. (Si vous utilisez Git, envisagez d'utiliser des subtrees .) Shortcode Core Table Importer Comment interagir avec les API externes ? Grav fournit l'objet Grav\\Common\\GPM\\Response , mais rien ne vous emp\u00eache de le faire directement si vous le souhaitez. ipLocate Pubmed","title":"Recettes Plugin"},{"location":"cookbook-recettes-twig/","text":"Recettes Twig Cette page contient un assortiment de probl\u00e8mes et leurs solutions respectives li\u00e9es \u00e0 la cr\u00e9ation de mod\u00e8les Twig. Lister les 5 derniers articles de blog r\u00e9cents. Probl\u00e8me : Vous souhaitez afficher les 5 derniers articles de blog dans une barre lat\u00e9rale de votre site afin qu'un lecteur puisse voir l'activit\u00e9 r\u00e9cente du blog. La solution : Trouvez simplement la page /blog , obtenez ses enfants, classez-les par date dans un ordre d\u00e9croissant, puis obtenez les 5 premiers \u00e0 afficher dans une liste : 1 | <ul> 2 | {% for post in page.find('/blog').children.published.order('date', 'desc').slice(0, 5) %} 3 | li class=\"recent-posts\"> 4 | <strong><a href=\"{{ post.url }}\">{{ post.title }}</a></strong> 5 | </li> 6 | {% endfor %} 7 | </ul> lors de l'utilisation dans les pages, assurez-vous d'ajouter la configuration suivante \u00e0 l'en-t\u00eate de la page : 1 | twig_first: true 2 | process: 3 | twig: true Ajouter des liens de navigation non modulaires. Probl\u00e8me : Vous souhaitez afficher des liens de navigation \u00e0 partir de pages non modulaires. La solution : 1 | <div class=\"desktop-nav__navigation\"> 2 | {% for page in pages.children %} 3 | {% if page.visible %} 4 | {% set current_page = (page.active or page.activeChild) ? 'active' : '' %} 5 | <a class=\"desktop-nav__nav-link {{ current_page }}\" href=\"{{ page.url }}\"> 6 | {{ page.menu }} 7 | </a> 8 | {% endif %} 9 | {% endfor %} 10 | </div> Lister les articles de blog de l'ann\u00e9e. Probl\u00e8me : Vous souhaitez afficher tous les articles de blog publi\u00e9s au cours de cette ann\u00e9e civile. La solution : Trouvez simplement la page /blog , obtenez ses enfants, filtrez par dateRange() appropri\u00e9e et classez-les par date dans un ordre d\u00e9croissant : 1 | <ul> 2 | {% set this_year = \"now\"|date('Y') %} 3 | {% for post in page.find('/blog').children.dateRange('01/01/' ~ this_year, '12/31/' ~ 4 | this_year).order('date', 'desc') %} 5 | <li class=\"recent-posts\"> 6 | <strong><a href=\"{{ post.url }}\">{{ post.title }}</a></strong> 7 | </li> 8 | {% endfor %} 9 | </ul> Afficher un mois traduit. Probl\u00e8me : Dans certains templates de page, le filtre de date Twig est utilis\u00e9, et il ne g\u00e8re pas les locales/multilingue. Ainsi, m\u00eame si votre page est dans une langue diff\u00e9rente de l'anglais, elle pourrait afficher le mois en anglais, si le mod\u00e8le choisit d'afficher le nom du mois. La solution : Il y a deux solutions pour ce probl\u00e8me. Premi\u00e8re approche La premi\u00e8re implique l'utilisation de l'extension Twig intl. Installez https://github.com/Perlkonig/grav-plugin-twig-extensions. Assurez-vous que l'extension PHP intl est install\u00e9e. Dans votre mod\u00e8le twig, au lieu de par exemple (comme dans le th\u00e8me Antimati\u00e8re) {{ page.date|date(\"M\") }} \u00e0 {{ page.date|localizeddate('long', 'none', 'it' , 'Europe/Rome', 'MMM') }} (ajoutez votre langue et votre fuseau horaire ici) Deuxi\u00e8me approche Supposons que vous ayez une configuration de traductions de langues dans votre dossier user/languages/ appel\u00e9 en.yaml qui contient l'entr\u00e9e : MONTHS_OF_THE_YEAR: [January, February, March, April, May, June, July, August, September, October, November, December] Et en fr.yaml : MONTHS_OF_THE_YEAR : [Janvier, F\u00e9vrier, Mars, Avril, Mai, Juin, Juillet, Ao\u00fbt, Septembre, Octobre, Novembre, D\u00e9cembre] Ensuite, vous avez votre twig : 1 | <li> 2 | <a href='{{ post.url }}'><aside class=\"dates\">{{ 'GRAV.MONTHS_OF_THE_YEAR'|ta(post.date|3 date('n') - 1) }} {{ post.date|date('d') }}</aside></a> 3 | <a href='{{ post.url }}'>{{ post.title }}</a> 4 |</li> Cela utilise le filtre Twig personnalis\u00e9 Grav |ta qui signifie Translate Array . Dans la version anglaise, la sortie pourrait ressembler \u00e0 : An Example Post July 2015 Et en Fran\u00e7ais: Un exemple d'article Juillet 2015 Afficher le contenu de la page sans r\u00e9sum\u00e9. Probl\u00e8me : Vous souhaitez afficher le contenu d'une page sans le r\u00e9sum\u00e9 en haut. La solution : Utilisez le filtre slice pour supprimer le r\u00e9sum\u00e9 du contenu de la page : 1 | {% set content = page.content|slice(page.summary|length) %} 2 | {{ contenu|brut }} Masquer l'e-mail aux robots de spam. Probl\u00e8me : Vous souhaitez masquer l'e-mail des robots de spam La solution : Activez le traitement Twig dans l'en-t\u00eate de la page : 1 | process: 2 | twig: true Utilisez ensuite le filtre Twig safe_email : 1 | <a href=\"mailto :{{'votre.email@server.com'|safe_email}}\"> 2 | Envoyez moi un email 3 | </a> Choisir un \u00e9l\u00e9ment au hasard dans un tableau traduit. Probl\u00e8me : Vous voulez choisir un \u00e9l\u00e9ment au hasard dans un tableau traduit dans une langue particuli\u00e8re. Pour que cela fonctionne, il est suppos\u00e9 que votre site multilingue est r\u00e9gl\u00e9 et configur\u00e9 comme indiqu\u00e9 dans la documentation. La solution : Supposons \u00e9galement que vous ayez une configuration de traduction de langue dans votre dossier user/languages/ appel\u00e9 en.yaml qui contient l'entr\u00e9e : FRUITS: [Banana, Cherry, Lemon, Lime, Strawberry, Raspberry] Et en fr.yaml : FRUITS : [Banane, Cerise, Citron, Citron Vert, Fraise, Framboise] Ensuite, vous avez votre Twig : 1 | {% set langobj = grav['langue'] %} 2 | {% set curlang = langobj.getLanguage() %} 3 | {% set fruits = langobj.getTranslation(curlang,'FRUITS',true) %} 4 | <span data-ticker=\"{{ fruits|join(',') }}\">{{ random(fruits) }}</span> Afficher une image t\u00e9l\u00e9charg\u00e9e dans un champ de fichier. Probl\u00e8me : Vous avez ajout\u00e9 un champ file dans votre plan personnalis\u00e9 et vous souhaitez afficher une image ajout\u00e9e dans ce champ. La solution : Comme le champ file permet de t\u00e9l\u00e9charger plusieurs images, il g\u00e9n\u00e8re deux objets imbriqu\u00e9s dans votre frontmatter, le premier objet est la liste des images t\u00e9l\u00e9charg\u00e9es, l'objet imbriqu\u00e9 \u00e0 l'int\u00e9rieur est un groupe de propri\u00e9t\u00e9/valeur pour l'image donn\u00e9e. Notez que dans le cas o\u00f9 vous voudriez que votre utilisateur ne s\u00e9lectionne qu'une seule image, il pourrait \u00eatre plus facile d'utiliser le champ filepicker , qui stocke un seul objet avec les propri\u00e9t\u00e9s des images s\u00e9lectionn\u00e9es. Si vous avez une seule image, vous pouvez l'afficher dans votre mod\u00e8le en utilisant : {{ page.media[header.yourfilefield|first.name] }} Si vous avez autoris\u00e9 votre utilisateur \u00e0 t\u00e9l\u00e9charger plusieurs images, votre brindille pourrait ressembler \u00e0 ceci : {% for imagesuploaded in page.header.yourfilefield %} {{ page.media[imagesuploaded.name] }} {% endfor %} Afficher une image s\u00e9lectionn\u00e9e dans un champ mediapicker. Probl\u00e8me : Vous avez ajout\u00e9 un champ mediapicker dans votre blueprint personnalis\u00e9, et vous souhaitez afficher l'image s\u00e9lectionn\u00e9e. La solution : Un champ mediapicker peut \u00eatre ajout\u00e9 \u00e0 votre blueprint comme ci-dessous : 1 | header.myimage: 2 | type: mediapicker 3 | folder: 'self@' 4 | label: Select a file 5 | preview_images: true Le champ mediapicker stocke le chemin d'acc\u00e8s \u00e0 l'image sous forme de cha\u00eene telle que /home/background.jpg Afin d'acc\u00e9der \u00e0 cette image avec la fonctionnalit\u00e9 m\u00e9dia de la page, vous devez diviser cette cha\u00eene et obtenir : le chemin vers la page o\u00f9 cette image est stock\u00e9e le nom de l'image. Vous pouvez le faire via brindille en utilisant l'extrait ci-dessous : 1 | {% set image_parts = pathinfo(header.myimage) %} 2 | {% set image_basename = image_parts.basename %} 3 | {% set image_page = image_parts.dirname == '.' ? page : page.find(image_parts.dirname) %} 4 | 5 | {{ image_page.media[image_basename].html()|raw }} Filtre/fonction Twig personnalis\u00e9. Probl\u00e8me : Parfois, vous avez besoin d'une logique dans Twig qui ne peut \u00eatre faite qu'en PHP, donc la meilleure solution est de cr\u00e9er un filtre ou une fonction Twig personnalis\u00e9. Un filtre est g\u00e9n\u00e9ralement ajout\u00e9 \u00e0 une cha\u00eene au format : \"some string\"|custom_filte r et une fonction peut prendre une cha\u00eene, ou tout autre type de variable : custom_function(\"some string\") , mais ils sont essentiellement tr\u00e8s similaires. Vous pouvez \u00e9galement passer des param\u00e8tres suppl\u00e9mentaires comme : \"some string\"|custom_filter('foo', 'bar') , o\u00f9 les param\u00e8tres suppl\u00e9mentaires peuvent \u00eatre utilis\u00e9s \u00e0 l'int\u00e9rieur du filtre. Et la variation de la fonction serait : custom_function(\"some string\", 'foo', 'bar') . Pour cet exemple, nous allons cr\u00e9er un simple filtre Twig pour compter les prises d'une cha\u00eene et la diviser en morceaux s\u00e9par\u00e9s par un d\u00e9limiteur. Ceci est particuli\u00e8rement utile pour des \u00e9l\u00e9ments tels que les num\u00e9ros de carte de cr\u00e9dit, les cl\u00e9s de licence, etc. La solution : La meilleure fa\u00e7on d'ajouter cette fonctionnalit\u00e9 suppl\u00e9mentaire est d'ajouter la logique dans votre plugin personnalis\u00e9, bien que l'ajouter dans le fichier php de votre th\u00e8me soit \u00e9galement une option. Nous utiliserons un plugin dans cet exemple pour plus de simplicit\u00e9. Vous devez d'abord installer le plugin devtools pour faire de la cr\u00e9ation d'un plugin un simple processus bas\u00e9 sur un assistant : $ | bin/gpm install devtools Ensuite, vous devez cr\u00e9er votre nouveau plugin personnalis\u00e9, puis remplir vos coordonn\u00e9es lorsque vous y \u00eates invit\u00e9. $ | bin/plugin devtools new-plugin | | Enter Plugin Name: ACME Twig Filters | Enter Plugin Description: Plugin for custom Twig filters | Enter Developer Name: ACME, Inc. | Enter GitHub ID (can be blank): | Enter Developer Email: hello@acme.com | | SUCCESS plugin ACME Twig Filters -> Created Successfully | | Path: /Users/joe/grav/user/plugins/acme-twig-filters Par d\u00e9faut, ce cadre squelette pour un nouveau plugin ajoutera un test factice \u00e0 votre page via l'\u00e9v\u00e9nement onPageContentRaw() . Vous devrez d'abord remplacer cette fonctionnalit\u00e9 par du code qui \u00e9coute l'\u00e9v\u00e9nement onTwigInitialized() : 1 | public function onPluginsInitialized() 2 | { 3 | // Don't proceed if we are in the admin plugin 4 | if ($this->isAdmin()) { 5 | return; 6 | } 7 | 8 | // Enable the main event we are interested in 9 | $this->enable([ 10 | 'onTwigInitialized' => ['onTwigInitialized', 0] 11 | ]); 12 | } 13 | 14 | /** 15 | * @param Event $e 16 | */ 17 | public function onTwigInitialized(Event $e) 18 | { 19 | 20 | } Nous devons d'abord enregistrer le filtre dans la m\u00e9thode onTwigInitialized() : 1 | /** 2 | * Break a string up into chunks 3 | */ 4 | public function chunkString($string, $chunksize = 4, $delimiter = '-') 5 | { 6 | return (trim(chunk_split($string, $chunksize, $delimiter), $delimiter)); 7 | } Le premier param\u00e8tre de la m\u00e9thode enregistre le chunker comme nom de filtre et le chunkString comme m\u00e9thode PHP o\u00f9 la logique se produit. Nous devons donc cr\u00e9er ceci ensuite : 1 | /** 2 | * Break a string up into chunks 3 | */ 4 | public function chunkString($string, $chunksize = 4, $delimiter = '-') 5 | { 6 | return (trim(chunk_split($string, $chunksize, $delimiter), $delimiter)); 7 | } Vous pouvez maintenant l'essayer dans vos mod\u00e8les Twig comme ceci : {{ \"ER27XV3OCCDPRJK5IVSDME6D6OT6QHK5\"|chunker }} Ce qui produirait : ER27-XV3O-CCDP-RJK5-IVSD-ME6D-6OT6-QHK5 ou vous pouvez passer des param\u00e8tres suppl\u00e9mentaires : {{ \"ER27XV3OCCDPRJK5IVSDME6D6OT6QHK5\"|chunker(8, '|') }} qui produirait : {{ \"ER27XV3OCCDPRJK5IVSDME6D6OT6QHK5\"|chunker(8, '|') }} Enfin, si vous voulez que cela soit disponible via une fonction et pas seulement un filtre, vous pouvez simplement enregistrer une fonction Twig avec le m\u00eame nom dans la m\u00e9thode onTwigInitialized() : 1 | /** 2 | * @param \u00c9v\u00e9nement $e 3 | */ 4 | fonction publique onTwigInitialized(Event $e) 5 | { 6 | $this->grav['brindille']->brindille()->addFilter( 7 | nouveau \\Twig_SimpleFilter('chunker', [$this, 'chunkString']) 8 | ); 9 | $this->grav['brindille']->brindille()->addFunction( 10 | nouveau \\Twig_SimpleFunction('chunker', [$this, 'chunkString']) 11 | ); 12 | } Et puis vous pouvez utiliser la syntaxe de la fonction : {{ chunker(\"ER27XV3OCCDPRJK5IVSDME6D6OT6QHK5\", 8, '|') }} \u00c9tendre le mod\u00e8le de base du th\u00e8me h\u00e9rit\u00e9. Probl\u00e8me : Parfois, vous devez \u00e9tendre le mod\u00e8le de base lui-m\u00eame. Cela peut se produire lorsqu'il n'existe aucun moyen simple et \u00e9vident d'\u00e9tendre des blocs d\u00e9j\u00e0 pr\u00e9sents dans un mod\u00e8le. Utilisons Quark comme exemple pour le th\u00e8me parent et vous souhaitez \u00e9tendre themes /quark/templates/partials/base.html.twig \u00e0 votre th\u00e8me myTheme . La solution : Vous pouvez ajouter Quark en tant qu'espace de noms Twig en utilisant my-theme.php du th\u00e8me pour \u00e9couter l'\u00e9v\u00e9nement onTwigLoader et en ajoutant le r\u00e9pertoire de mod\u00e8les de th\u00e8me Quark. Le contenu de la classe devrait ressembler \u00e0 ceci : 1 | <?php 2 | namespace Grav\\Theme; 3 | 4 | use Grav\\Common\\Grav; 5 | use Grav\\Common\\Theme; 6 | 7 | class MyTheme extends Quark { 8 | public static function getSubscribedEvents() { 9 | return [ 10 | 'onTwigLoader' => ['onTwigLoader', 10] 11 | ]; 12 | } 13 | 14 | public function onTwigLoader() { 15 | parent::onTwigLoader(); 16 | 17 | // add quark theme as namespace to twig 18 | $quark_path = Grav::instance()['locator']->findResource('themes://quark'); 19 | $this->grav['twig']->addPath($quark_path . DIRECTORY_SEPARATOR . 'templates', 'quark'); 20 | } 21 | } Maintenant, dans themes/my-theme/templates/partials/base.html.twig , vous pouvez \u00e9tendre le mod\u00e8le de base Quarks comme ceci : 1 | {% \u00e9tend '@quark/partials/base.html.twig' %} 2 | 3 | {% block header %} 4 | This is a new extended header. 5 | {% endblock %}","title":"Recettes Twig"},{"location":"cookbook-recettes/","text":"Recettes g\u00e9n\u00e9rales Cette page contient un assortiment de probl\u00e8mes et leurs solutions respectives li\u00e9es \u00e0 Grav en g\u00e9n\u00e9ral. Modifier la version de l'interface de ligne de commande PHP. Parfois, sur le terminal, la version de PHP est diff\u00e9rente de la version de PHP utilis\u00e9e par le serveur Web. Vous pouvez v\u00e9rifier la version PHP en cours d'ex\u00e9cution dans la CLI en ex\u00e9cutant la commande php -v . Si la version de PHP est inf\u00e9rieure \u00e0 5.5.9, Grav ne fonctionnera pas car il n\u00e9cessite au moins PHP 5.5.9. Comment r\u00e9parer? Vous devez entrer une configuration dans .bashrc ou dans .bash_profile dans votre dossier d'accueil utilisateur. Cr\u00e9ez ces fichiers si vous ne les avez pas d\u00e9j\u00e0 dans le dossier utilisateur. Ce sont des fichiers cach\u00e9s, vous devrez donc peut-\u00eatre faire ls -al pour les afficher. Une fois la configuration ajout\u00e9e, vous devrez d\u00e9marrer une nouvelle session de terminal pour que ces param\u00e8tres s'appliquent. Un exemple de configuration pourrait \u00eatre : $ | alias php=\"/usr/local/bin/php53\" $ | export PHP_PATH = /usr/local/bin/php53 Une autre fa\u00e7on consiste \u00e0 ajouter : 1 | # .bash_profile 2 | 3 | # Get the aliases and functions 4 | if [ -f ~/.bashrc ]; then 5 | . ~/.bashrc 6 | fi 7 | 8 | # User specific environment and startup programs 9 | 10 |PATH=/usr/local/lib/php-5.5/bin:$PATH:$HOME/bin 11 | 12 |export PATH Le chemin exact d\u00e9pend bien s\u00fbr de la configuration de votre syst\u00e8me, o\u00f9 il stocke les binaires de la version PHP la plus r\u00e9cente. Cela peut \u00eatre quelque chose que vous trouverez dans la documentation de l'h\u00e9bergement, ou vous pouvez demander \u00e0 votre configuration d'h\u00e9bergement si vous ne le trouvez nulle part. Vous pouvez \u00e9galement essayer de regarder dans les fichiers ou dossiers php-something sous les dossiers /usr/local/bin ou /usr/local/lib , avec ls -la /usr/local/lib/ |grep -i php . Cr\u00e9er une galerie simple. Probl\u00e8me : Une exigence courante en mati\u00e8re de conception de sites Web est d'avoir une galerie quelconque rendue sur une page. Il peut s'agir d'afficher des photos de votre nouvel animal de compagnie, un portefeuille de travaux de conception ant\u00e9rieurs ou m\u00eame un catalogue de base de certains produits que vous souhaitez afficher et vendre \u00e0 vos utilisateurs. Dans cet exemple, nous supposerons que vous souhaitez simplement afficher un groupe de photos avec une l\u00e9gende ci-dessous. Cela peut bien s\u00fbr \u00eatre adapt\u00e9 \u00e0 d'autres utilisations \u00e9galement. La solution : Le moyen le plus simple de fournir une solution \u00e0 ce probl\u00e8me est d'utiliser la fonctionnalit\u00e9 m\u00e9dia de Grav qui permet \u00e0 une page de conna\u00eetre les images disponibles dans son dossier. Supposons que vous ayez une page que vous avez appel\u00e9e gallery.md et que vous ayez \u00e9galement une vari\u00e9t\u00e9 d'images dans le m\u00eame r\u00e9pertoire. Les noms de fichiers eux-m\u00eames ne sont pas importants car nous allons simplement parcourir chacune des images. Parce que nous voulons avoir des donn\u00e9es suppl\u00e9mentaires associ\u00e9es \u00e0 chaque image, nous inclurons un fichier meta.yaml pour chaque image. Par exemple, nous avons quelques images : 1 | - fido-playing.jpg 2 | - fido-playing.jpg.meta.yaml 3 | - fido-dormir.jpg 4 | - fido-dormir.jpg.meta.yaml 5 | - fido-eating.jpg 6 | - fido-eating.jpg.meta.yaml 7 | - fido-grognement.jpg 8 | - fido-growling.jpg.meta.yaml Chacun des fichiers .jpg a une taille relativement bonne qui convient \u00e0 une version pleine grandeur, 1280px x 720px. Chacun des fichiers meta.yaml contient quelques entr\u00e9es cl\u00e9s, regardons fido-playing.jpg.meta.yaml : 1 | title : Fido jouant avec son os 2 | description : L'autre jour, Fido a eu un nouvel os, et il en est devenu vraiment captiv\u00e9. Vous avez un contr\u00f4le total sur ce que vous mettez dans ces m\u00e9ta-fichiers, ils peuvent \u00eatre absolument tout ce dont vous avez besoin. Nous devons maintenant afficher ces images dans l'ordre chronologique inverse afin que les images les plus r\u00e9centes soient affich\u00e9es en premier et les affichent. Parce que notre page s'appelle gallery.md , nous devons cr\u00e9er un templates/gallery.html.twig appropri\u00e9 pour contenir la logique de rendu dont nous avons besoin : 1 | {% extends 'partials/base.html.twig' %} 2 | 3 | {% block content %} 4 | {{ page.content|raw }} 5 | 6 | <ul> 7 | {% for image in page.media.images %} 8 | <li> 9 | <div class=\"image-surround\"> 10 | {{ image.cropResize(300,200).html|raw }} 11 | </div> 12 | <div class=\"image-info\"> 13 | <h2>{{ image.meta.title }}</h2> 14 | <p>{{ image.meta.description }}</p> 15 | </div> 16 | </li> 17 | {% endfor %} 18 | </ul> 19 | 20 | {% endblock %} Pour qu'une galerie modulaire s'affiche dans une autre page, supprimez le code suivant du fichier Twig afin de le faire fonctionner : 1 | {% extends 'partials/base.html.twig' %} 2 | 3 | {% block content %} 4 | {{ page.content|raw }} et {% endblock %} Fondamentalement, cela \u00e9tend le standard partials/base.html.twig (en supposant que votre th\u00e8me a ce fichier), il d\u00e9finit ensuite le bloc de contenu content et fournit le contenu pour celui-ci. La premi\u00e8re chose que nous faisons est de faire \u00e9cho \u00e0 n'importe quelle page.content . Ce serait le contenu du fichier gallery.md , il pourrait donc contenir un titre et une description de cette page. La section suivante boucle simplement sur tous les m\u00e9dias de la page qui sont des images . Nous les publions dans une liste non ordonn\u00e9e pour rendre la sortie s\u00e9mantique et facile \u00e0 styliser avec CSS. nous attribuons \u00e0 chaque image le nom de la variable image , puis nous pouvons ex\u00e9cuter une simple m\u00e9thode cropResize() pour redimensionner l'image \u00e0 quelque chose de convenable, puis en dessous, nous fournissons une section d'informations avec le title et la description . Vous pouvez faire une impl\u00e9mentation de galerie plus avanc\u00e9e en utilisant la cr\u00e9ation de filtres pour les donn\u00e9es de l'appareil photo, avec la fonction EXIF . Rendre le contenu en colonnes. Probl\u00e8me : Une question qui a \u00e9t\u00e9 soulev\u00e9e \u00e0 plusieurs reprises est de savoir comment afficher rapidement une seule page dans plusieurs colonnes. La solution : Il existe de nombreuses solutions potentielles, mais une solution simple consiste \u00e0 diviser votre contenu en sections logiques \u00e0 l'aide d'un d\u00e9limiteur tel que la balise HTML <hr /> ou la balise de rupture th\u00e9matique . Dans le d\u00e9marquage, cela est repr\u00e9sent\u00e9 par 3 tirets ou plus ou --- . Nous cr\u00e9ons simplement notre contenu et s\u00e9parons nos sections de contenu avec ces tirets : colonnes.md. 1 | --- 2 | title: 'Columns Page Test' 3 | --- 4 | 5 | Lorem ipsum dolor sit amet, consectetur adipiscing elit. Maecenas arcu leo, hendrerit ut rhoncus eu, dictum vitae ligula. Suspendisse interdum at purus eget congue. Aliquam erat volutpat. Proin ultrices ligula vitae nisi congue sagittis. Nulla mollis, libero id maximus elementum, ante dolor auctor sem, sed volutpat mauris nisl non quam. 6 | 7 | --- 8 | Phasellus id eleifend risus. In dui tellus, dignissim id viverra non, convallis sed ante. Suspendisse dignissim, felis vitae faucibus dictum, dui mi tempor lectus, non porta elit libero quis orci. Morbi porta neque quis magna imperdiet hendrerit. 9 | 10 | --- 11 | Praesent eleifend commodo purus, sit amet viverra nunc dictum nec. Mauris vehicula, purus sed convallis blandit, massa sem egestas ex, a congue odio lacus non quam. Donec vitae metus vitae enim imperdiet tempus vitae sit amet quam. Nam sed aliquam justo, in semper eros. Suspendisse magna turpis, mollis quis dictum sit amet, luctus id tellus. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia Curae; Aenean eu rutrum mi. Remarque : la ligne suppl\u00e9mentaire apr\u00e8s la colonne et avant le --- . En effet, si vous mettez un triple tiret juste en dessous du texte, il est en fait interpr\u00e9t\u00e9 comme un en-t\u00eate. Ensuite, nous devons simplement restituer ce contenu avec un mod\u00e8le columns.html.twig (car le fichier de page s'appelait columns.md ) : 1 | {% \u00e9tend 'partials/base.html.twig' %} 2 | 3 | {% block content %} 4 | <table> 5 | <tr> 6 | {% for column in page.content|split('<hr />') %} 7 | <td>{{ column|raw }}</td> 8 | {% endfor %} 9 | </tr> 10 | </table> 11 | {% endblock %} Vous pouvez voir comment le contenu est divis\u00e9 par la balise <hr /> et converti en un tableau de 3 colonnes que nous parcourons et restituons. Dans cet exemple, nous utilisons une simple balise de table HTML, mais vous pouvez utiliser tout ce que vous souhaitez. Curseur d'image CSS vraiment simple. Probl\u00e8me : Vous avez besoin d'un curseur d'image sans frais g\u00e9n\u00e9raux. La solution : Cette recette est pour 4 images et une page appel\u00e9e slider.md ! Placez simplement les images l\u00e0 o\u00f9 se trouve le fichier .md. Ensuite, cr\u00e9ez un nouveau mod\u00e8le Twig et \u00e9tendez base.html.twig . 1 | {% extends 'partials/base.html.twig' %} 2 | 3 | {% block content %} 4 | 5 | <div id=\"slider\"> 6 | <figure> 7 | {% for image in page.media.images %} 8 | {{ image.html|raw }} 9 | {% endfor %} 10 | </figure> 11 | </div> 12 | 13 | {{ page.content|raw }} 14 | {% endblock %} Pour le curseur modulaire, veuillez retirer le 1 | {% extends 'partials/base.html.twig' %} 2 | 3 | {% block content %} et {% endblock %} du fichier Twig pr\u00e9c\u00e9dent. C'est l'heure des trucs CSS. Ajoutez ceci \u00e0 votre _custom.scss 1 | @keyframes slidy { 2 | 0% { left: 0%; } 3 | 20% { left: 0%; } 4 | 25% { left: -100%; } 5 | 45% { left: -100%; } 6 | 50% { left: -200%; } 7 | 70% { left: -200%; } 8 | 75% { left: -300%; } 9 | 95% { left: -300%; } 10 | 100% { left: -400%; } 11 | } 12 | body { margin: 0; } 13 | div#slider { 14 | overflow: hidden; 15 | margin-top: -3rem; 16 | max-height: 30rem; 17 | } 18 | div#slider figure img { width: 20%; float: left; } 19 | div#slider figure { 20 | position: relative; 21 | width: 500%; 22 | margin: 0; 23 | left: 0; 24 | animation: 30s slidy infinite; 25 | } C'est tout. Envelopper markdown en html. Sur certaines pages, vous souhaiterez peut-\u00eatre encapsuler des parties du contenu de d\u00e9marquage dans un code html personnalis\u00e9 au lieu de cr\u00e9er un nouveau mod\u00e8le Twig. Pour y parvenir, suivez ces \u00e9tapes : dans votre fichier de configuration syst\u00e8me user/config/system.yaml assurez-vous d'activer l'option suppl\u00e9mentaire markdown : 1 | pages: 2 | markdown: 3 | extra: true dans votre balise wrapper assurez-vous d'ajouter le param\u00e8tre markdown=\"1\" pour activer le traitement du contenu markdown : 1 | <div class=\"monWrapper\" markdown=\"1\"> 2 | # mon contenu markdown 3 | 4 | ce contenu est envelopp\u00e9 dans un div avec la classe \"myWrapper\" 5 | </div> Fini. Ajouter un widget de publication r\u00e9cente \u00e0 votre barre lat\u00e9rale. Probl\u00e8me : Vous souhaitez cr\u00e9er un widget de publication r\u00e9cente sur la barre lat\u00e9rale La solution : Il est toujours possible de cr\u00e9er un mod\u00e8le partiel \u00e9tendant partials/base.html.twig (voir d'autres solutions sur cette page), mais ici vous allez plut\u00f4t cr\u00e9er un mod\u00e8le complet. Le code final de votre mod\u00e8le Twig est pr\u00e9sent\u00e9 ci-dessous : 1 | <div class=\"sidebar-content recent-posts\"> 2 | <h3>Recent Posts</h3> 3 | {% for p in page.find('/blog').children.order('date', 'desc').slice(0, 5) %} 4 | {% set bannerimage = p.media['banner.jpg'] %} 5 | <div class=\"recent-post\"> 6 | {% if bannerimage %} 7 | <div class=\"recent-post-image\">{{ bannerimage.cropZoom(60,60).quality(60) }}</div> 8 | {% else %} 9 | <div class=\"recent-post-image\"><img src=\"{{ url('theme://images/logo.png') }}\" width=\"60\" height=\"60\"></div> 10 | {% endif %} 11 | <div class=\"recent-post-text\"> 12 | <h4><a href=\"{{p.url}}\">{{ p.title }}</a></h4> 13 | <p>{{ p.date|date(\"M j, Y\")}}</p> 14 | </div> 15 | </div> 16 | {% endfor %} 17 | </div> Tout ce que fait ce code est de trier les enfants (articles de blog) de la page /blog par ordre d\u00e9croissant de date. Il prend ensuite les cinq premiers articles de blog en utilisant le filtre slice Twig. Au fait, slice(n,m) prend des \u00e9l\u00e9ments de n \u00e0 m-1 . Dans cet exemple, tous les articles de blog comportant une image de banni\u00e8re ont \u00e9t\u00e9 nomm\u00e9s banner.jpg . Ceci est d\u00e9fini dans une variable bannerimage . Si bannerimage existe, elle est r\u00e9duite \u00e0 une bo\u00eete de 60px x 60px et appara\u00eetra \u00e0 gauche du texte et de la date du titre du message. S'il n'existe pas, le logo du site Web est redimensionn\u00e9 \u00e0 60 px x 60 px et plac\u00e9 \u00e0 gauche du texte du titre et de la date \u00e0 la place. Le CSS de ce widget est r\u00e9pertori\u00e9 ci-dessous : 1 | .sidebar-content .recent-post { 2 | margin-bottom: 25px; 3 | padding-bottom: 25px; 4 | border-bottom: 1px solid #F0F0F0; 5 | float: left; 6 | clear: both; 7 | width: 100%; 8 | } 9 | 10 | .sidebar-content [class~='recent-post']:last-of-type { 11 | border-bottom: none; 12 | } 13 | 14 | .sidebar-content .recent-post .recent-post-image, 15 | .sidebar-content .recent-post .recent-post-text { 16 | float: left; 17 | } 18 | 19 | .sidebar-content .recent-post .recent-post-image { 20 | margin-right: 10px; 21 | } 22 | 23 | .sidebar-content .recent-post .recent-post-text h4 { 24 | font-family: serif; 25 | margin-bottom: 10px; 26 | } 27 | 28 | .sidebar-content .recent-post .recent-post-text h4 a { 29 | color: #193441; 30 | } 31 | 32 | .sidebar-content .recent-post .recent-post-text p { 33 | font-family: Arial, sans-serif; 34 | font-size: 1.5rem; 35 | color: #737373; 36 | margin: 0; 37 | } Ajustez l'espacement entre les \u00e9l\u00e9ments de publication r\u00e9cents, la famille de polices, la taille de police et l'\u00e9paisseur de police \u00e0 votre go\u00fbt. Cr\u00e9er un espace priv\u00e9. Grav permet de cr\u00e9er tr\u00e8s facilement un espace priv\u00e9 sur un site web. Tout fonctionne gr\u00e2ce au plugin de connexion. Exiger que les utilisateurs se connectent avant d'acc\u00e9der \u00e0 une partie du site. Si vous ne l'avez pas d\u00e9j\u00e0, installez-le via le panneau d'administration ou \u00e0 l'aide de l'utilitaire de ligne de commande GPM. Ensuite, ouvrez une page dans Admin, passez en mode expert et dans la section FrontMatter ajoutez 1 | access: 2 | site.login: true Les utilisateurs acc\u00e9dant \u00e0 la page devront se connecter avant de voir le contenu de la page. Notez que l'autorisation ne s'\u00e9tend pas par d\u00e9faut aux sous-pages. Pour cela, depuis la configuration du plugin Login, activez \"Utiliser les r\u00e8gles d'acc\u00e8s parent\". Cette option vous permet de cr\u00e9er des zones priv\u00e9es \u00e9tendues sans vous soucier davantage du niveau d'acc\u00e8s. Il suffit de tout mettre sous une page dont l'acc\u00e8s est restreint. Exiger des autorisations sp\u00e9ciales pour afficher une ou plusieurs pages. De la m\u00eame mani\u00e8re que pour le processus ci-dessus, vous pouvez attribuer n'importe quelle autorisation \u00e0 une page. Vous pouvez m\u00eame cr\u00e9er vos propres noms d'autorisation. Par exemple: 1 | access: 2 | site.onlybob: true Ensuite, ajoutez la permission site.onlybob \u00e0 Bob, dans son fichier utilisateur bob.yaml sous le dossier user/accounts : 1 | access: 2 | site.onlybob: true Utiliser les autorisations bas\u00e9es sur le groupe. Vous pouvez \u00e9galement affecter des utilisateurs \u00e0 un groupe et affecter des autorisations au groupe plut\u00f4t qu'\u00e0 des utilisateurs individuels. Les utilisateurs h\u00e9riteront des autorisations de groupe. Ajoutez un fichier user/config/groups.yaml , par exemple avec ce contenu : 1 | registered: 2 | readableName: 'Registered Users' 3 | description: 'The group of registered users' 4 | access: 5 | site: 6 | login: true 7 | premium: 8 | readableName: 'Premium Members' 9 | description: 'The group of premium members' 10 | access: 11 | site: 12 | login: true 13 | paid: true Attribuez maintenant des utilisateurs \u00e0 un groupe en ajoutant 1 | groups: 2 | - premium \u00e0 leur fichier utilisateur yaml, sous user/accounts D\u00e9sormais, les utilisateurs appartenant au groupe premium seront autoris\u00e9s \u00e0 acc\u00e9der aux pages avec une autorisation site.paid . Ajouter JavaScript au pied de page. Dans de nombreux cas, vous voudriez que \"certains\" javascripts soient ajout\u00e9s au pied de page au lieu de l'en-t\u00eate de la page, \u00e0 charger apr\u00e8s le rendu du contenu. Un bon exemple de cela est de v\u00e9rifier le th\u00e8me Antimati\u00e8re. Les templates/partials/base.html.twig d'Antimatter d\u00e9finissent un bloc inf\u00e9rieur pour js en appelant {{ assets.js('bottom') }} 1 | {% block bottom %} 2 | {{ assets.js('bottom') }} 3 | {% endblock %} Vous pouvez ajouter des actifs dans ce bloc dans Twig par exemple en appelant {% do assets.addJs('theme://js/slidebars.min.js', {group: 'bottom'}) %} ou en PHP en appelant $this->grav['assets']->addJs($this->grav['base_url'] . '/user/plugins/yourplugin/js/somefile.js', ['group' => 'bottom'] ); Remplacer l'emplacement du dossier des journaux par d\u00e9faut. L'emplacement par d\u00e9faut pour la sortie des journaux de Grav est simplement appel\u00e9 logs/ . Malheureusement, il existe des cas o\u00f9 ce dossier logs/ est d\u00e9j\u00e0 utilis\u00e9 ou est interdit. Le syst\u00e8me de flux flexible de Grav permet de personnaliser les emplacements de ces dossiers. Tout d'abord, vous devez cr\u00e9er votre nouveau dossier. Dans cet exemple, nous allons cr\u00e9er un nouveau dossier \u00e0 la racine de votre installation Grav appel\u00e9 grav-logs/ . Cr\u00e9ez ensuite un nouveau fichier de niveau racine appel\u00e9 setup.php et collez le code suivant : 1 | <?php 2 | use Grav\\Common\\Utils; 3 | 4 | return [ 5 | 'streams' => [ 6 | 'schemes' => [ 7 | 'log' => [ 8 | 'type' => 'ReadOnlyStream', 9 | 'prefixes' => [ 10 | '' => [\"grav-logs\"], 11 | ] 12 | ] 13 | ] 14 | ] 15 | ]; Cela remplace essentiellement le flux de journaux avec le dossier grav-logs/ plut\u00f4t que le dossier logs/ par d\u00e9faut tel que d\u00e9fini dans system/src/Grav/Common/Config/Setup.php . Syst\u00e8me de menu vertical divis\u00e9. Pour cr\u00e9er un menu de pages vertical, pliable et hi\u00e9rarchique, vous avez besoin d'une boucle Twig, d'un peu de CSS et d'un peu de JavaScript. Le r\u00e9sultat final, lors de l'utilisation du th\u00e8me Antimati\u00e8re, ressemblera \u00e0 ceci : Commen\u00e7ons par Twig : 1 | <ol class=\"tree\"> 2 | {% for page in pages.children.visible %} 3 | {% if page.children.visible is empty %} 4 | <li class=\"item\"> 5 | <a href=\"{{ page.url }}\">{{ page.title }}</a> 6 | {% else %} 7 | <li class=\"parent\"> 8 | <a href=\"javascript:void(0);\">{{ page.title }}</a> 9 | <ol> 10 | {% for child in page.children.visible %} 11 | {% if child.children.visible is empty %} 12 | <li class=\"item\"> 13 | <a href=\"{{ child.url }}\">{{ child.title }}</a> 14 | {% else %} 15 | <li class=\"parent\"> 16 | <a href=\"javascript:void(0);\">{{ child.title }}</a> 17 | <ol> 18 | {% for subchild in child.children.visible %} 19 | <li><a href=\"{{ subchild.url }}\">{{ subchild.title }}</a></li> 20 | {% endfor %} 21 | </ol> 22 | {% endif %} 23 | </li> 24 | {% endfor %} 25 | </ol> 26 | {% endif %} 27 | </li> 28 | {% endfor %} 29 | </ol> Cela cr\u00e9e une liste ordonn\u00e9e qui it\u00e8re sur toutes les pages visibles dans Grav, en allant sur trois niveaux pour cr\u00e9er une structure pour chaque niveau. La liste enroul\u00e9e autour de la structure enti\u00e8re a l'arborescence des classes, et chaque \u00e9l\u00e9ment de la liste a le parent de la classe s'il contient des enfants ou un \u00e9l\u00e9ment s'il n'en a pas. Cliquer sur un parent ouvre la liste, tandis que les \u00e9l\u00e9ments r\u00e9guliers renvoient \u00e0 la page elle-m\u00eame. Vous pouvez l'ajouter \u00e0 pratiquement n'importe quel mod\u00e8le Twig dans un th\u00e8me Grav, \u00e0 condition que Grav puisse acc\u00e9der aux pages visibles. Pour ajouter du style, nous ajoutons du CSS : 1 | <style> 2 | ol.tree li { 3 | position : relative ; 4 | } 5 | ol.tree li ol { 6 | affichage : aucun ; 7 | } 8 | ol.tree li.open > ol { 9 | bloc de visualisation; 10 | } 11 | ol.tree li.parent:apr\u00e8s { 12 | contenu : '[+]' ; 13 | } 14 | ol.tree li.parent.open:apr\u00e8s { 15 | contenu: ''; 16 | } 17 | </style> Cela devrait g\u00e9n\u00e9ralement \u00eatre plac\u00e9 avant la structure Twig, ou id\u00e9alement \u00eatre diffus\u00e9 dans le gestionnaire d'actifs de votre th\u00e8me. L'effet est d'ajouter [+] apr\u00e8s chaque \u00e9l\u00e9ment parent, indiquant qu'il peut \u00eatre ouvert, qui dispara\u00eet lorsqu'il est ouvert. Enfin, ajoutons un peu de JavaScript pour g\u00e9rer le basculement de la classe ouverte : 1 | <script type=\"text/javascript\"> 2 | var tree = document.querySelectorAll('ol.tree a:not(:last-child)'); 3 | for(var i = 0; i < tree.length; i++){ 4 | tree[i].addEventListener('click', function(e) { 5 | var parent = e.target.parentElement; 6 | var classList = parent.classList; 7 | if(classList.contains(\"open\")) { 8 | classList.remove('open'); 9 | var opensubs = parent.querySelectorAll(':scope .open'); 10 | for(var i = 0; i < opensubs.length; i++){ 11 | opensubs[i].classList.remove('open'); 12 | } 13 | } else { 14 | classList.add('open'); 15 | } 16 | }); 17 | } 18 | </script> Celui-ci doit toujours \u00eatre plac\u00e9 apr\u00e8s la structure Twig, id\u00e9alement \u00e9galement dans l'Asset Manager . Styliser dynamiquement une ou plusieurs pages. Vous pouvez styliser dynamiquement diff\u00e9rentes pages/publications de votre site Grav (ind\u00e9pendamment de l'affectation du fichier de mod\u00e8le) en personnalisant le fichier Twig d'un th\u00e8me pour appliquer une classe CSS transmise en tant que variable dans le FrontMatter d'une page. Vous pouvez styliser diff\u00e9rents articles/pages de votre site Grav de deux mani\u00e8res : Si vous utilisez le th\u00e8me Antimati\u00e8re, vous pouvez utiliser la propri\u00e9t\u00e9 d'en-t\u00eate body_classes existante pour d\u00e9finir votre classe CSS personnalis\u00e9e pour cette page. Si vous utilisez un th\u00e8me non bas\u00e9 sur Antimati\u00e8re (ou n'impl\u00e9mentant pas body_classes comme il le fait), vous pouvez personnaliser un fichier Twig du th\u00e8me pour appliquer une classe CSS pass\u00e9e en tant que variable dans la propri\u00e9t\u00e9 d'en-t\u00eate d'une page. Par exemple, dans le fichier base.html.twig de votre th\u00e8me ou un mod\u00e8le plus sp\u00e9cifique tel que le fichier page.html.twig , vous pouvez ajouter une classe \u00e0 l'affichage du contenu de la page, comme : 1 | <div class=\"{{ page.header.body_classes }}\"> 2 | ... 3 | </div> Ensuite, pour chaque page que vous souhaitez avoir un style unique, vous ajouterez la propri\u00e9t\u00e9 d'en-t\u00eate suivante (en supposant que vous avez d\u00e9fini une classe CSS pour featurepost ) : 1 | body_classes : featurepost Remarque : c'est ainsi que le th\u00e8me Antimati\u00e8re applique des classes sp\u00e9cifiques \u00e0 la page, et c'est donc une bonne norme \u00e0 suivre. Migrer un th\u00e8me HTML vers Grav. Migrer un th\u00e8me HTML vers Grav est une t\u00e2che courante. Voici un processus pratique \u00e9tape par \u00e9tape qui peut \u00eatre utilis\u00e9 pour atteindre cet objectif. Vous avez probablement t\u00e9l\u00e9charg\u00e9 le th\u00e8me, et il est compos\u00e9 de plusieurs fichiers HTML. Commen\u00e7ons simplement par faire en sorte que Grav charge la page d'accueil. Pas de contenu personnalis\u00e9, r\u00e9pliquez simplement le th\u00e8me HTML, mais dans une structure Grav. Tout d'abord, utilisez le plugin Grav Devtools pour cr\u00e9er un th\u00e8me vierge et configurez Grav pour l'utiliser dans les param\u00e8tres syst\u00e8me. Cr\u00e9ez un template templates/home.html.twig Twig dans le dossier templates du th\u00e8me. Cela repr\u00e9sentera un mod\u00e8le sp\u00e9cifique pour la page d'accueil. Habituellement, la page d'accueil est une page unique sur le site, elle m\u00e9rite donc probablement un fichier Twig d\u00e9di\u00e9. Copiez le code HTML de la page d'accueil du mod\u00e8le, commen\u00e7ant \u00e0 <html> et se terminant \u00e0 </html> dans votre nouveau fichier home.html.twig . Maintenant, d\u00e9placez tous les \u00e9l\u00e9ments du th\u00e8me HTML (images, CSS, JS) dans votre dossier de th\u00e8me. Vous pouvez conserver la structure de dossiers de th\u00e8mes existante ou la modifier. Cr\u00e9ez un fichier pages/01.home/home.md vide. Pointez maintenant votre navigateur vers yoursite.com/home : il devrait afficher le contenu, mais le CSS, le JS et les images ne seront pas charg\u00e9s, probablement parce que le th\u00e8me les a cod\u00e9s en dur sous forme de liens /img/* ou / css/* . Ajouter les bons liens d'actifs. Dans Grav, les liens sont rompus car ils pointent vers la route d'accueil, donc au lieu de pointer vers /user/themes/mytheme/img , ils pointent vers /img dans la racine Grav. Puisqu'il est pr\u00e9f\u00e9rable de conserver tous les \u00e9l\u00e9ments li\u00e9s au th\u00e8me \u00e0 l'int\u00e9rieur du th\u00e8me, nous devons pointer Grav vers l'emplacement correct. Recherchez des ressources dans la page et modifiez les r\u00e9f\u00e9rences des images de img/*.* \u00e0 <img src=\"{{ url('theme://img/*.*', true) }}\" /> . Les feuilles de style n\u00e9cessitent un peu plus de r\u00e9flexion car il y a un pipeline d'actifs que nous voudrons activer \u00e0 un moment donn\u00e9, nous les d\u00e9pla\u00e7ons donc vers un bloc de feuilles de style dans la balise <head> . Exemple: 1 | {% block stylesheets %} 2 | {% do assets.addCss('theme://css/styles.min.css', 100) %} 3 | {% endblock %} 4 | {{ assets.css()|raw }} Il en va de m\u00eame pour les fichiers JavaScript, avec l'exigence suppl\u00e9mentaire que du JS soit charg\u00e9 dans le pied de page. Exemple: 1 | {% block javascripts %} 2 | {% do assets.addJs('theme://js/custom.js') %} 3 | {% do assets.addJs('jquery', 101) %} 4 | {% endblock %} 5 | {{ assets.js()|raw }} Les changements de page devraient maintenant \u00eatre affich\u00e9s dans votre navigateur. Si ce n'est pas le cas, assurez-vous que le cache des pages et le cache des brindilles sont d\u00e9sactiv\u00e9s dans les param\u00e8tres de configuration du syst\u00e8me Grav. Ce n'est que le d\u00e9but. Maintenant, vous devrez peut-\u00eatre ajouter plus de pages et trouver de meilleures fa\u00e7ons de pr\u00e9senter le contenu de vos pages \u00e0 l'aide de l'en-t\u00eate FrontMatter et de Twig personnalis\u00e9 qui traite les \u00e9l\u00e9ments de base habituels : les t\u00e9moignages de la page d'accueil, les critiques, les fonctionnalit\u00e9s du produit, etc. . Ajouter une autre page. Pour ajouter une autre page, le processus est similaire. Par exemple, supposons que vous souhaitiez ensuite cr\u00e9er la page de blog. R\u00e9p\u00e9tez le processus pour ajouter un fichier templates/blog.html.twig , collez la source HTML et cr\u00e9ez une page pages/02.blog/blog.md. Maintenant, alors que les liens d'images \u00e0 l'int\u00e9rieur des pages doivent encore \u00eatre migr\u00e9s vers la syntaxe des actifs de Grav (ou simplement changer le chemin), vous ne voulez pas r\u00e9p\u00e9ter le m\u00eame travail que vous avez fait ci-dessus pour les actifs CSS et JS. Cela devrait \u00eatre r\u00e9utilis\u00e9 sur l'ensemble du site. \u00c9l\u00e9ments partag\u00e9s. Identifiez les parties communes des pages (en-t\u00eate et pied de page) et d\u00e9placez-les vers le fichier templates/partials/base.html.twig . Chaque mod\u00e8le de page doit ensuite \u00e9tendre partials/base.html.twig (https://github.com/getgrav/grav-theme-antimatter/blob/develop/templates/default.html.twig#L1) et ajouter simplement leur unique contenu. Ajouter un \u00e9l\u00e9ment \u00e0 une page sp\u00e9cifique. Probl\u00e8me : Vous devez ajouter un atout \u00e0 un mod\u00e8le sp\u00e9cifique sur votre th\u00e8me. La solution : La plupart du temps, vos actifs seront ajout\u00e9s \u00e0 l'int\u00e9rieur d'un bloc de brindilles dans votre mod\u00e8le de base comme ci-dessous. 1 | {% block javascripts %} 2 | {% do assets.addJs('theme://js/jquery.js', 91) %} 3 | {% endblock %} 4 | {{ assets.js()|raw }} Afin d'ajouter votre actif, vous devez \u00e9tendre ce bloc dans votre mod\u00e8le et appeler {{ parent() }} qui obtiendra les actifs d\u00e9j\u00e0 ajout\u00e9s dans votre mod\u00e8le de base. Supposons que vous souhaitiez ajouter un fichier \"gallery.js\" sur votre page \"Portfolio Gallery\". Modifiez votre mod\u00e8le et ajoutez votre \u00e9l\u00e9ment avec le {{ parent() }} . 1 | {% block javascripts %} 2 | {% do assets.addJs('theme://js/gallery.js', 100) %} 3 | {{ parent() }} 4 | {% endblock %} R\u00e9utiliser la page ou le contenu modulaire sur une autre page. Probl\u00e8me : Vous avez de nombreuses pages ou modules et souhaitez partager le m\u00eame bloc de contenu sur plusieurs pages sans avoir \u00e0 g\u00e9rer plusieurs instances distinctes du m\u00eame texte. La solution : Il s'agit d'une m\u00e9thode directe tr\u00e8s simple qui ne n\u00e9cessite pas de plugin et peut \u00eatre utilis\u00e9e dans le panneau d'administration. Remarque : Il existe \u00e9galement un plugin Grav Page Inject Plugin pour cette fonctionnalit\u00e9 qui peut convenir \u00e0 des sc\u00e9narios plus avanc\u00e9s. Tout d'abord, cr\u00e9ez un nouveau fichier de mod\u00e8le pour agir comme un espace r\u00e9serv\u00e9 pour le contenu - il peut avoir n'importe quel nom, celui-ci est nomm\u00e9 \"modular reuse\" et sera stock\u00e9 dans le dossier templates/modular de votre th\u00e8me pour cet exemple mais peut \u00eatre stock\u00e9 n'importe o\u00f9 dans le dossier des mod\u00e8les. modular_reuse.html.twig ne contient qu'une seule ligne : 1 | {{ page.content|brut }} Ensuite, cr\u00e9ez une nouvelle page modulaire dans le panneau d'adm*inistration o\u00f9 ce contenu doit \u00eatre affich\u00e9 \u00e0 l'aide de ce nouveau mod\u00e8le de \"r\u00e9utilisation modulaire\". Le nouveau nom de page peut \u00eatre ce que vous voulez car il ne sera pas affich\u00e9 - le titre de la page d'origine sera affich\u00e9. Le contenu de la page est d'une seule ligne : Page : 1 | {% include 'modular_reuse.html.twig' with {'page': page.find('/test-page/amazing-offers')} %} Modulaire : 1 | {% include 'modular/modular_reuse.html.twig' with {'page': page.find('/test-page/_amazing-offers')} %} Ce qui vient apr\u00e8s \"include\" est l'endroit o\u00f9 le mod\u00e8le de la premi\u00e8re \u00e9tape est stock\u00e9, probablement dans le dossier templates pour les pages du dossier templates/modular pour les modulaires. Apr\u00e8s page.find devrait venir le lien r\u00e9el vers le contenu original que vous souhaitez r\u00e9utiliser. Le contenu modulaire commence par un _ mais pas les pages. Le moyen le plus simple de trouver le bon lien est d'ouvrir la page dans le panneau d'administration et de copier l'URL apr\u00e8s le mot admin. La page finale devrait ressembler \u00e0 ceci : 1 | --- 2 | title: 'Modular Reuse Example' 3 | --- 4 | 5 | {% include 'modular/modular_reuse.html.twig' with {'page': page.find('/test-page/_amazing-offers')} %} D\u00e9sormais, les \"offres incroyables\" peuvent \u00eatre affich\u00e9es \u00e0 plusieurs endroits, mais ne doivent \u00eatre mises \u00e0 jour qu'une seule fois. Cr\u00e9ez un champ anti-spam personnalis\u00e9 pour votre formulaire de contact. Probl\u00e8me : Les m\u00e9thodes normales de pr\u00e9vention du spam, comme le champ de pot de miel, sont contourn\u00e9es par certains spam-bots. La solution : Faites en sorte qu'il soit plus difficile pour le bot de deviner ce qu'il peut et ne peut pas remplir lorsqu'il remplit le formulaire de contact. En termes simples, posez une question \u00e0 laquelle l'utilisateur ne manquera pas de r\u00e9pondre, mais dont les r\u00e9ponses sont difficiles \u00e0 comprendre pour un bot. Dans votre fichier Markdown avec Form-data , ajoutez ce champ : 1 | - name: personality 2 | type: radio 3 | label: What is five times eight? 4 | options: 5 | alaska: 32 6 | oklahoma: 40 7 | california: 48 8 | validate: 9 | required: true 10 | pattern: \"^oklahoma$\" 11 | message: Not quite, try that math again. La question devrait \u00eatre quelque chose de simple, mais accompagn\u00e9e de plusieurs mauvaises r\u00e9ponses simples. Ce qui compte, c'est l'ordre des r\u00e9ponses. La bonne r\u00e9ponse ne devrait jamais \u00eatre la premi\u00e8re ; viser quelque part au milieu. Il est important de randomiser vous-m\u00eame les valeurs derri\u00e8re les r\u00e9ponses (\u00e9tiquettes), de sorte qu'une base de donn\u00e9es de valeurs et de r\u00e9ponses associ\u00e9es n'aidera pas \u00e0 r\u00e9pondre. Les robots deviennent de plus en plus intelligents, mais ils ont tendance \u00e0 renoncer \u00e0 r\u00e9pondre plusieurs fois \u00e0 la m\u00eame question si la premi\u00e8re tentative \u00e9choue. De plus, m\u00eame les plus intelligents d'entre eux s'appuient sur des dictionnaires de donn\u00e9es connues pour deviner une r\u00e9ponse. Nous posons une question simple, \"Qu'est-ce que cinq fois huit?\", Et donnons trois options, \"32\", \"40\" et \"48\". La bonne r\u00e9ponse est \u00e9videmment \"40\", mais au lieu de v\u00e9rifier les comp\u00e9tences en math\u00e9matiques du bot, nous attribuons respectivement les valeurs \"alaska\", \"oklahoma\" et \"californie\" \u00e0 ces nombres. Parce que les bots regardent les valeurs possibles, plut\u00f4t que leur \u00e9tiquette, les r\u00e9ponses n'ont aucun rapport avec la question. Vous pouvez m\u00eame ajouter une r\u00e9ponse \"Ananas\" avec la valeur \"mississippi\" et valider par rapport \u00e0 cela, et simplement dire \u00e0 vos utilisateurs de choisir cela comme r\u00e9ponse. Il s'agit de personnaliser la randomisation des donn\u00e9es. Afficher diff\u00e9rents contenus robots.txt pour diff\u00e9rents environnements. Probl\u00e8me : Vous avez configur\u00e9 un sous-domaine, dev.votredomaine.com , en tant que site de d\u00e9veloppement pour pr\u00e9visualiser ce sur quoi vous travaillez avant de publier des modifications sur votredomaine.com , et souhaitez interdire aux indexeurs de recherche de l'explorer tout en gardant le site de production visible dans la recherche r\u00e9sultats. La solution : Bien que vous deviez prot\u00e9ger votre site de d\u00e9veloppement par un mot de passe pour le garder vraiment priv\u00e9, il est parfois suffisant, et simplement plus pratique, d'interdire simplement aux indexeurs des moteurs de recherche d'explorer votre site. Heureusement, Grav peut g\u00e9rer les pages au format txt comme il le fait en html, nous pouvons donc utiliser des configurations d'environnement et des mod\u00e8les Twig pour terminer le travail. Commen\u00e7ons par cr\u00e9er un fichier de configuration site.yaml qui indiquera \u00e0 notre mod\u00e8le que dev.votredomaine.com est un environnement de d\u00e9veloppement. /user/[dev.votredomaine.com]/config/site.yaml : environment : dev Ensuite, cr\u00e9ez un mod\u00e8le de page robots.txt.twig qui v\u00e9rifie si Grav est actuellement en cours d'ex\u00e9cution sur notre site de d\u00e9veloppement et affiche un contenu diff\u00e9rent si c'est le cas. /user/themes/[votre th\u00e8me]/templates/robots.txt.twig : 1 | {% if config.site.environment == 'dev' %} 2 | {% for rule in page.header.dev %} 3 | {{ rule }} 4 | {% endfor %} 5 | 6 | {% else %} 7 | {{ page.content|raw }} 8 | 9 | {% endif %} Enfin, cr\u00e9ez une page rout\u00e9e vers /robots.txt avec les r\u00e8gles robots.txt par d\u00e9faut dans le contenu de la page, et nos r\u00e8gles de version de d\u00e9veloppement alternative dans le frontmatter de la page. Pour rendre le contenu de la page sous forme de texte brut au lieu de HTML, nous d\u00e9sactiverons \u00e9galement le rendu Markdown. /user/pages/robots/robots.md : 1 | --- 2 | routes: 3 | default: /robots.txt 4 | process: 5 | markdown: false 6 | 7 | dev: 8 | - 'User-agent: *' 9 | - 'Disallow: /' 10 | --- 11 | 12 | User-agent: * 13 | Disallow: /backup/ 14 | Disallow: /bin/ 15 | Disallow: /cache/ 16 | Disallow: /grav/ 17 | Disallow: /logs/ 18 | Disallow: /system/ 19 | Disallow: /vendor/ 20 | Disallow: /user/ 21 | Allow: /user/pages/ 22 | Allow: /user/themes/ 23 | Allow: /user/images/ 24 | Allow: /user/plugins/*.css$ 25 | Allow: /user/plugins/*.js$ Vous devriez maintenant avoir un fichier robots.txt plac\u00e9 \u00e0 la racine de votre site avec un contenu dynamique, \u00e9galement modifiable avec le plugin Admin. Remarque : assurez-vous que votre site de production n'affichera pas Disallow: / , car cela oblit\u00e9rera compl\u00e8tement la visibilit\u00e9 de votre moteur de recherche.","title":"Recettes G\u00e9n\u00e9rales"},{"location":"cookbook-tutoriel/","text":"Cr\u00e9er un blog T\u00e9l\u00e9chargez et installez localement le squelette du site de blog \u00e0 partir de https://getgrav.org/downloads/skeletons , ou au moins pr\u00e9parez le r\u00e9f\u00e9rentiel https://github.com/getgrav/grav-skeleton-blog-site \u00e0 v\u00e9rifier. Ceci est un exemple de site qui utilise le th\u00e8me Antimati\u00e8re. Avoir un site Grav op\u00e9rationnel qui fonctionne d\u00e9j\u00e0 avec une structure de blog vous donnera s\u00fbrement un coup de main si vous \u00eates bloqu\u00e9 ou si vous ne comprenez pas quoi faire ensuite. V\u00e9rifiez que votre th\u00e8me fournit les mod\u00e8les de page Blog et Article. Commen\u00e7ons simplement : choisissez un th\u00e8me qui fournit d\u00e9j\u00e0 un mod\u00e8le de page de blog. Par exemple Antimatter, TwentyFifteen, Deliver, Lingonberry, Afterburner2 et bien d'autres. Comment v\u00e9rifier si votre th\u00e8me fournit d\u00e9j\u00e0 un mod\u00e8le de page de blog ? Allez dans le dossier /user/themes/[votretheme]/templates , et v\u00e9rifiez l'existence des fichiers blog.html.twig et item.html.twig . Si vous avez d\u00e9j\u00e0 choisi un th\u00e8me et que votre th\u00e8me n'est pas fourni avec ces fichiers, copiez-les depuis Antimatter : https://github.com/getgrav/grav-theme-antimatter/tree/develop/templates Vous devrez peut-\u00eatre modifier le balisage en fonction de votre th\u00e8me. La meilleure option si vous d\u00e9butez est d'utiliser un th\u00e8me qui les accompagne d\u00e9j\u00e0. Cr\u00e9er la structure des pages du blog. Il existe diff\u00e9rentes mani\u00e8res de structurer les pages. La valeur par d\u00e9faut et la plus simple consiste \u00e0 avoir une page parent, de type Blog, et des pages enfants pour les articles de blog. Avec le plugin d'administration. Cr\u00e9ez une page de type Blog. Cette page est la \"page d'accueil\" du blog, avec la liste des articles du blog. Cr\u00e9ez une ou plusieurs pages enfants de type Item . Ce sont les articles du blog. Manuellement. Allez dans votre dossier pages/, cr\u00e9ez une page 01.blog (modifiez le num\u00e9ro pour refl\u00e9ter la structure de votre menu), ajoutez-y un fichier blog.md . Dans ce fichier, ajoutez ce contenu : 1 | --- 2 | teneur: 3 | \u00e9l\u00e9ments : '@self.children' 4 | --- Cela indique \u00e0 Grav de parcourir les sous-pages (les articles de blog). Cr\u00e9ez un sous-dossier pour chaque article que vous souhaitez ajouter, et ajoutez dans chaque dossier un fichier item.md , avec le contenu de l'article de blog. URLs. La structure expliqu\u00e9e ci-dessus cr\u00e9era des articles de blog avec /blog/ dans l'URL. Ce n'est peut-\u00eatre pas ce dont vous avez besoin. Par exemple : si un blog est tout ce que vous avez sur votre site et que la liste des articles de blog est la page d'accueil. Dans ces cas, vous voudriez simplement que votre domaine racine acc\u00e8de \u00e0 ce contenu plut\u00f4t que de renvoyer les visiteurs vers un r\u00e9pertoire enfant. Dans ce cas, dans system.yaml (Configuration syst\u00e8me dans Admin), d\u00e9finissez l'option home.hide_in_urls (Masquer l'accueil dans les URL dans Admin) sur true. Le fonctionnement interne. Vous voudrez peut-\u00eatre savoir comment cela fonctionne. Le mod\u00e8le Blog, le contenu du fichier blog.html.twig fourni dans le dossier templates/ du th\u00e8me, it\u00e8re simplement sur ses pages enfants. Dans sa mani\u00e8re la plus simple : 1 | {% set collection = page.collection() %} 2 | 3 | {% for child in collection %} 4 | {% include 'partials/blog_item.html.twig' with {'blog':page, 'page':child, 'truncate':true} %} 5 | {% endfor %} page.collection() s\u00e9lectionne par d\u00e9faut la propri\u00e9t\u00e9 content.items de la page frontmatter YAML et renvoie un tableau contenant les \u00e9l\u00e9ments qui correspondent \u00e0 cette d\u00e9finition. Si la page contient : 1 | --- 2 | content: 3 | items: '@self.children' 4 | --- alors collection sera le tableau des sous-pages de la page courante. Dans ce cas, le th\u00e8me inclut le partiel partials/blog_item.html.twig , responsable du rendu du billet de blog unique, et lui transmet l'objet enfant contenant le billet de blog r\u00e9el \u00e0 rendre. Pour en savoir plus Collections : https://learn.getgrav.org/content/collections Page de liste : https://learn.getgrav.org/content/content-pages#listing-page Dossiers : https://learn.getgrav.org/content/content-pages#folders Taxonomie : https://learn.getgrav.org/content/taxonomy#taxonomy-example","title":"Cr\u00e9er un Blog"},{"location":"crochets-evenements/","text":"Crochets d'\u00e9v\u00e9nement Dans le chapitre pr\u00e9c\u00e9dent du Didacticiel sur les Plugins , vous avez peut-\u00eatre remarqu\u00e9 que notre logique de plugin \u00e9tait englob\u00e9e dans deux m\u00e9thodes. Chacune de ces m\u00e9thodes onPluginsInitialized et onPageInitialized correspond \u00e0 des hooks d'\u00e9v\u00e9nement qui sont disponibles tout au long du cycle de vie de Grav. Pour exploiter pleinement la puissance des plugins Grav, vous devez savoir quels crochets d'\u00e9v\u00e9nement sont disponibles, dans quel ordre ces crochets sont appel\u00e9s et ce qui est disponible pendant ces appels. Les crochets d'\u00e9v\u00e9nement ont une relation directe avec le cycle de vie Grav global. Ordre d'\u00e9v\u00e9nement La plupart des \u00e9v\u00e9nements dans Grav se d\u00e9clenchent dans un ordre sp\u00e9cifique et il est important de comprendre cet ordre si vous cr\u00e9ez des plugins : onFatalException (pas de commande, peut survenir \u00e0 tout moment) Classe PluginsLoadedEvent (1.7) Classe PluginsLoadedEvent (1.7) onPluginsInitialized Classe FlexRegisterEvent (1.7) onThemeInitialized onRequestHandlerInit (1.6) onTask (1.6) onTask.{task} onAction (1.6) onAction.{action} (1.6) onBackupsInitialized onSchedulerInitialized (1.6) onAssetsInitialized onTwigTemplatePaths onTwigLoader onTwigInitialized onTwigExtensions onBuildPagesInitialized (une fois lorsque les pages sont retrait\u00e9es) onPageProcessed (chaque page n'est pas encore mise en cache) onFormPageHeaderProcessed (1.6) (chaque page n'est pas encore mise en cache) onFolderProcessed (pour chaque dossier trouv\u00e9) onPagesInitialized onPageInitialized onPageContentRaw (chaque page n'est pas encore mise en cache) onMarkdownInitialized onPageContentProcessed (chaque page n'est pas encore mise en cache) onPageContent (appel\u00e9 la premi\u00e8re fois que Page :: content() est appel\u00e9 m\u00eame lorsqu'il est mis en cache) onPageNotFound onPageAction (1.6) onPageAction.{action} (1.6) onPageTask (1.6) onPageTask.{t\u00e2che} (1.6) onTwigPageVariables (chaque page n'est pas encore mise en cache) onHttpPostFilter (1.5.2) onTwigSiteVariables onCollectionProcessed (lorsque la collecte est demand\u00e9e) onOutputGenerated onOutputRendered onShutdown \u00c9v\u00e9nements divers : onBlueprintCreated onTwigTemplateVariables onTwigStringVariables onBeforeDownload onPageFallBackUrl onMediaLocate onGetPageBlueprints onGetPageTemplates onFlexObjectRender (1.6) onFlexCollectionRender (1.6) onBeforeCacheClear onImageMediumSaved (ImageFile) onAfterCacheClear (1.7) onHttpPostFilter (1.7) PermissionsRegisterEventclass (1.7) Crochets d'\u00e9v\u00e9nement Core Grav Plusieurs crochets d'\u00e9v\u00e9nement Grav principaux sont d\u00e9clench\u00e9s lors du traitement d'une page : onFatalException Il s'agit d'un \u00e9v\u00e9nement qui peut \u00eatre d\u00e9clench\u00e9 \u00e0 tout moment si PHP l\u00e8ve une exception fatale. Ceci est actuellement utilis\u00e9 par le plugin problems pour g\u00e9rer l'affichage d'une liste des raisons potentielles pour lesquelles Grav l\u00e8ve l'exception fatale. onPluginsInitialized Il s'agit du premier \u00e9v\u00e9nement de plugin disponible. \u00c0 ce stade, les objets suivants ont \u00e9t\u00e9 lanc\u00e9s : Uri Configuration D\u00e9bogueur Cache Plugins Un plugin ne sera pas charg\u00e9 du tout si l'option de configuration enabled: false a \u00e9t\u00e9 d\u00e9finie pour ce plugin particulier. onAssetsInitialized L'\u00e9v\u00e9nement indique que le gestionnaire d'actifs a \u00e9t\u00e9 initialis\u00e9 et est pr\u00eat pour l'ajout et la gestion d'actifs. onPagesInitialized Cet \u00e9v\u00e9nement signifie que toutes les pages du dossier user/pages de Grav ont \u00e9t\u00e9 charg\u00e9es en tant qu'objets et sont disponibles dans l'objet Pages. onPageNotFound Il s'agit d'un \u00e9v\u00e9nement qui peut \u00eatre d\u00e9clench\u00e9 si une page attendue n'est pas trouv\u00e9e. Ceci est actuellement utilis\u00e9 par le plugin error pour afficher une jolie page d'erreur 404. onPageInitialized La page actuelle demand\u00e9e par une URL a \u00e9t\u00e9 charg\u00e9e dans l'objet Page. onOutputGenerated La sortie a \u00e9t\u00e9 trait\u00e9e par le moteur de mod\u00e8les Twig et n'est plus qu'une cha\u00eene de caract\u00e8res HTML. onOutputRendered La sortie a \u00e9t\u00e9 enti\u00e8rement trait\u00e9e et envoy\u00e9e \u00e0 l'\u00e9cran. onShutdown Un nouvel \u00e9v\u00e9nement tr\u00e8s puissant qui vous permet d'effectuer des actions une fois que Grav a termin\u00e9 le traitement et que la connexion au client a \u00e9t\u00e9 ferm\u00e9e. Ceci est particuli\u00e8rement utile pour effectuer des actions qui ne n\u00e9cessitent pas d'interaction de l'utilisateur et qui pourraient potentiellement avoir un impact sur les performances. Les utilisations possibles incluent le suivi des utilisateurs et le traitement des travaux. onBeforeDownload Ce nouvel \u00e9v\u00e9nement passe dans un objet \u00e9v\u00e9nement qui contient un file . Cet \u00e9v\u00e9nement peut \u00eatre utilis\u00e9 pour effectuer une journalisation ou accorder/refuser l'acc\u00e8s pour t\u00e9l\u00e9charger ledit fichier. onGetPageTemplates Cet \u00e9v\u00e9nement permet aux plugins de fournir leurs propres mod\u00e8les en plus de ceux rassembl\u00e9s \u00e0 partir de la structure de r\u00e9pertoire et du noyau du th\u00e8me. Ceci est particuli\u00e8rement utile si vous souhaitez que le plugin fournisse son propre mod\u00e8le. Exemple 1 | /** 2 | * Add page template types. 3 | */ 4 | public function onGetPageTemplates(Event $event) 5 | { 6 | /** @var Types $types */ 7 | $types = $event->types; 8 | $types->register('downloads'); 9 | } Cela permet \u00e0 un plugin d'enregistrer un mod\u00e8le (qu'il pourrait fournir) afin qu'il apparaisse dans la liste d\u00e9roulante des types de mod\u00e8les de page (comme lors de l'\u00e9dition d'une page). Dans l'exemple ci-dessus, un type de downloads de mod\u00e8le est ajout\u00e9 car il existe un fichier downloads.html.twig dans le r\u00e9pertoire downloads . onGetPageBlueprints Cet \u00e9v\u00e9nement, comme onGetPageTemplates , permet au plugin de fournir ses propres ressources en plus des ressources principales et sp\u00e9cifiques au th\u00e8me. Dans ce cas, ce sont des plans. Exemple : 1 | $scanBlueprintsAndTemplates = function () use ($grav) { 2 | // Scan blueprints 3 | $event = new Event();3 | 4 | $event->types = self::$types; 5 | $grav->fireEvent('onGetPageBlueprints', $event); 6 | 7 | self::$types->scanBlueprints('theme://blueprints/'); 8 | 9 | // Scan templates 10 | $event = new Event(); 11 | $event->types = self::$types; 12 | $grav->fireEvent('onGetPageTemplates', $event); 13 | 14 | self::$types->scanTemplates('theme://templates/'); 15 |}; Dans cet exemple, nous utilisons \u00e0 la fois les crochets onGetPageTemplates et onGetPageBlueprints pour rendre ces ressources fournies par le plug-in (mod\u00e8les et plans) disponibles pour Grav pour l'h\u00e9ritage et d'autres utilisations. Twig Event Hooks Twig a son propre ensemble de hooks d'\u00e9v\u00e9nement. onTwigTemplatePaths Les emplacements de base des chemins de mod\u00e8le ont \u00e9t\u00e9 d\u00e9finis sur l' objet Twig . Si vous avez besoin d'ajouter d'autres emplacements o\u00f9 Twig recherchera des chemins de mod\u00e8le, c'est l'\u00e9v\u00e9nement \u00e0 utiliser. Exemple : 1 | /** 2 | * Add template directory to twig lookup path. 3 | */ 4 | public function onTwigTemplatePaths() 5 | { 6 | $this->grav['twig']->twig_paths[] = __DIR__ . '/templates'; 7 | } onTwigInitialized Le moteur de cr\u00e9ation de mod\u00e8les Twig est maintenant initialis\u00e9 \u00e0 ce stade. onTwigExtensions Les extensions principales de Twig ont \u00e9t\u00e9 charg\u00e9es, mais si vous avez besoin d'ajouter votre propre extension Twig , vous pouvez le faire avec ce hook d'\u00e9v\u00e9nement. onTwigPageVariables O\u00f9 Twig traite une page directement, c'est-\u00e0-dire lorsque vous d\u00e9finissez process: twig: true dans les en-t\u00eates YAML d'une page. C'est ici que vous devez ajouter toutes les variables \u00e0 Twig qui doivent \u00eatre disponibles pour Twig pendant ce processus. onTwigSiteVariables O\u00f9 Twig traite la hi\u00e9rarchie compl\u00e8te des mod\u00e8les de site. C'est ici que vous devez ajouter toutes les variables \u00e0 Twig qui doivent \u00eatre disponibles pour Twig pendant ce processus. Crochets d'\u00e9v\u00e9nement de collection onCollectionProcessed Si vous avez besoin de manipuler une collection apr\u00e8s son traitement, c'est le moment de le faire. Crochets d'\u00e9v\u00e9nement de page onBuildPagesInitialized Cet \u00e9v\u00e9nement est d\u00e9clench\u00e9 une fois lorsque les pages vont \u00eatre retrait\u00e9es. Cela se produit g\u00e9n\u00e9ralement si le cache a expir\u00e9 ou doit \u00eatre actualis\u00e9. C'est un \u00e9v\u00e9nement utile \u00e0 utiliser pour les plugins qui ont besoin de manipuler le contenu et de mettre en cache les r\u00e9sultats. onBlueprintCreated Ceci est utilis\u00e9 pour le traitement et la gestion des formulaires. onPageContentRaw Une fois qu'une page a \u00e9t\u00e9 trouv\u00e9e, l'en-t\u00eate est trait\u00e9, mais le contenu n'est pas trait\u00e9. Ceci est d\u00e9clench\u00e9 pour chaque page du syst\u00e8me Grav. Les performances ne sont pas un probl\u00e8me car cet \u00e9v\u00e9nement ne s'ex\u00e9cutera pas sur une page mise en cache, uniquement lorsque le cache est vid\u00e9 ou qu'un \u00e9v\u00e9nement de suppression du cache se produit. onPageProcessed Une fois qu'une page est analys\u00e9e et trait\u00e9e. Ceci est d\u00e9clench\u00e9 pour chaque page du syst\u00e8me Grav. Les performances ne sont pas un probl\u00e8me car cet \u00e9v\u00e9nement ne s'ex\u00e9cutera pas sur une page mise en cache, uniquement lorsque le cache est vid\u00e9 ou qu'un \u00e9v\u00e9nement de suppression du cache se produit. onMarkdownInitialized Appel\u00e9 lorsque Markdown a \u00e9t\u00e9 initialis\u00e9. Permet de remplacer l'impl\u00e9mentation de traitement Parsedown par d\u00e9faut. Voir un exemple d'utilisation sur le PR qui l'a introduit . onPageContentProcessed Cet \u00e9v\u00e9nement est d\u00e9clench\u00e9 apr\u00e8s que la m\u00e9thode content() de la page a trait\u00e9 le contenu de la page. Ceci est particuli\u00e8rement utile si vous souhaitez effectuer des actions sur le contenu post-trait\u00e9 tout en vous assurant que les r\u00e9sultats sont mis en cache. Les performances ne sont pas un probl\u00e8me car cet \u00e9v\u00e9nement ne s'ex\u00e9cutera pas sur une page mise en cache, uniquement lorsque le cache est vid\u00e9 ou qu'un \u00e9v\u00e9nement de suppression du cache se produit. onFolderProcessed Une fois qu'un dossier est analys\u00e9 et trait\u00e9. Ceci est d\u00e9clench\u00e9 pour chaque dossier du syst\u00e8me Grav. Les performances ne sont pas un probl\u00e8me car cet \u00e9v\u00e9nement ne s'ex\u00e9cutera pas sur une page mise en cache, uniquement lorsque le cache est vid\u00e9 ou qu'un \u00e9v\u00e9nement de suppression du cache se produit. onPageFallBackUrl Si une route n'est pas reconnue comme une page, Grav essaie d'acc\u00e9der \u00e0 un \u00e9l\u00e9ment multim\u00e9dia de la page. L'\u00e9v\u00e9nement est d\u00e9clench\u00e9 d\u00e8s que la proc\u00e9dure commence, de sorte que les plugins peuvent s'accrocher et fournir des fonctionnalit\u00e9s suppl\u00e9mentaires. onMediaLocate Ajoute la prise en charge des emplacements de m\u00e9dias personnalis\u00e9s pour les extraits. onTwigLoader Ajoute la prise en charge de l'utilisation des espaces de noms en conjonction avec deux nouvelles m\u00e9thodes dans la classe Twig : Twig::addPath($path, $namespace) et Twig::prependPath($path, $namespace) .","title":"Crochets d'\u00e9v\u00e8nements"},{"location":"cycle-vie/","text":"Cycle de vie Grav Il est souvent utile de savoir comment Grav traite afin de bien comprendre comment \u00e9tendre au mieux Grav via des plugins. Voici le cycle de vie Grav : index.php V\u00e9rifiez la version de PHP afin d'ex\u00e9cuter au moins la version 7.1.3 Initialisation du chargeur de classe Obtenir l'instance Grav Grav.php Aucune instance n'existe, donc appelez load() Ajouter loader Ajouter et initialiser debugger Ajouter grav (obsol\u00e8te) Enregistrer les services par d\u00e9faut Enregistrer les fournisseurs de services Fournisseur de services de comptes Ajouter permissions (1.7) Ajouter accounts (1.6) Ajouter user_groups (1.7) Ajouter users (obsol\u00e8te) Fournisseur de services d'actifs Ajouter assets Fournisseur de services de sauvegardes Ajouter backups (1.6) Fournisseur de services de configuration Ajouter setup Ajouter blueprints Ajouter config Ajouter langueges Ajouter language Fournisseur de services d'erreur Ajouter error Fournisseur de services de syst\u00e8me de fichiers Ajouter filesystem Fournisseur de services flexibles Ajouter flex (1.7) Fournisseur de services d'inflecteur Ajouter inflector Fournisseur de services d'enregistrement Ajouter log Fournisseur de services de sortie Ajouter output Fournisseur de services de pages Ajouter pages Ajouter page Demander un fournisseur de services Ajouter request (1.7) Fournisseur de services de planification Ajouter scheduler (1.6) Fournisseur de services de session Ajouter session Ajouter messages Fournisseur de services de flux Ajouter locator Ajouter actor Fournisseur de services de t\u00e2ches Ajouter task Ajouter action Fournisseurs de services simples Ajouter browser Ajouter cache Ajouter events Ajouter exif Ajouter plugins Ajouter taxonomy Ajouter themes Ajouter twig Ajouter uri appeler Grav::process() Grav.php Ex\u00e9cutez l'initialisation du processeur Configuration Initialiser $grav['config'] Initialiser $grav['plugins'] Enregistreur Initialiser $grav['log'] Erreurs Initialiser $grav['errors'] Enregistre les gestionnaires d'erreurs PHP D\u00e9bogueur Initialiser $grav['debugger'] G\u00e9rer les requ\u00eates du d\u00e9bogueur D\u00e9marrer la mise en m\u00e9moire tampon de sortie Localisation D\u00e9finir les param\u00e8tres r\u00e9gionaux et le fuseau horaire Plugins Initialiser $grav['plugins'] pages Initialiser $grav['pages'] Uri Initialiser $grav['uri'] Ajouter $grav['base_url_absolute'] Ajouter $grav['base_url_relative'] Ajouter $grav['base_url'] G\u00e9rer la redirection Rediriger si system.pages.redirect_trailing_slash est true et la barre oblique finale dans l'URL Comptes Initialiser $grav['accounts'] Session Initialiser $grav['session'] si system.session.initialize est true Ex\u00e9cuter le processeur de plugins \u00c9v\u00e9nement Fire onPluginsInitialized Ex\u00e9cuter le processeur de th\u00e8mes Initialiser $grav['themes'] v\u00e9nement Fire onThemeInitialized Ex\u00e9cuter le processeur de requ\u00eates Initialiser $grav['request'] Lancer l'\u00e9v\u00e9nement onRequestHandlerInit avec [request, handler] Si la r\u00e9ponse est d\u00e9finie \u00e0 l'int\u00e9rieur de l'\u00e9v\u00e9nement, arr\u00eater le traitement ult\u00e9rieur et g\u00e9n\u00e9rer la r\u00e9ponse Ex\u00e9cuter le processeur de t\u00e2ches Si la demande a l'attribut controller.class et une t\u00e2che ou une action : Ex\u00e9cutez le contr\u00f4leur Si NotFoundException : continuer (v\u00e9rifier la t\u00e2che et l'action) Si code de r\u00e9ponse 418 : continuer (ignorer la t\u00e2che et l'action) Sinon : arr\u00eater le traitement ult\u00e9rieur et g\u00e9n\u00e9rer la r\u00e9ponse Si task : \u00c9v\u00e9nement Fire onTask Ev\u00e9nement Fire onTask.[TASK] /li> Si action : \u00c9v\u00e9nement Fire onAction Ev\u00e9nement Fire onAction.[ACTION] Ex\u00e9cuter le processeur de sauvegardes Initialiser $grav['backups'] \u00c9v\u00e9nement Fire onBackupsInitialized Ex\u00e9cuter le processeur du planificateur Initialiser $grav['scheduler'] \u00c9v\u00e9nement Fire onSchedulerInitialized Ex\u00e9cuter le processeur d'actifs Initialiser $grav['assets'] \u00c9v\u00e9nement Fire onAssetsInitialized Ex\u00e9cuter le processeur Twig Initialiser $grav['twig'] Twig.php D\u00e9finir les chemins du mod\u00e8le Twig en fonction de la configuration G\u00e9rer les mod\u00e8les de langue si disponibles \u00c9v\u00e9nement Fire onTwigTemplatePaths < /li> \u00c9v\u00e9nement Fire onTwigLoader Charger la configuration Twig et la cha\u00eene du chargeur \u00c9v\u00e9nement Fire onTwigInitialized Charger les extensions Twig \u00c9v\u00e9nement Fire onTwigExtensions D\u00e9finissez des variables Twig standard (config, uri, taxonomy, actifs, navigateur, etc.) Ex\u00e9cuter le processeur de pages Initialiser $grav['pages'] Pages.php Appelez buildPages() (la logique diff\u00e8re quelque peu pour les Flex Pages, mais l'id\u00e9e est la m\u00eame)) V\u00e9rifiez si le cache est bon) Si le cache est bon, les pages de chargement datent de Si le cache n'est pas bon, appelez recurse()) Lancer l'\u00e9v\u00e9nement onBuildPagesInitialized dans recurse()) Si un fichier .md est trouv\u00e9 : Pages.php Appelez init() pour charger les d\u00e9tails du fichier D\u00e9finissez le filePath , modified , id Appelez header() pour initialiser les variables d'en-t\u00eate Appelez slug() pour d\u00e9finir le slug d'URL Appelez visible() pour d\u00e9finir l'\u00e9tat visible D\u00e9finissez le statut de modularTwig() en fonction du fait que le dossier commence par _ \u00c9v\u00e9nement Fire onPageProcessed Si un folder est trouve recurse() les enfants \u00c9v\u00e9nement Fire onFolderProcessed Appelez buildRoutes() Initialiser la taxonomy pour toutes les pages Cr\u00e9er une table route pour une recherche rapide \u00c9v\u00e9nement Fire onPagesInitialized avec [pages] Lancer l'\u00e9v\u00e9nement onPageInitialized avec [page] Si la page n'est pas routable : Lancer l'\u00e9v\u00e9nement onPageNotFount avec [page] Si t\u00e2che : Lancer l'\u00e9v\u00e9nement onPageTask avec [task, page]/LI> Lancer l'\u00e9v\u00e9nement onPageTask.[TASK] avec [task, page] Si action : Lancer l'\u00e9v\u00e9nement onPageAction avec [action, page] Lancer l'\u00e9v\u00e9nement onPageAction.[ACTION] avec [action, page] Ex\u00e9cuter le processeur d'actifs du d\u00e9bogueur Barre de d\u00e9bogage uniquement : ajoutez le d\u00e9bogueur CSS/JS aux ressources Ex\u00e9cuter le processeur de rendu Initialiser $grav['sortie'] Si instance de sortie de ResponseInterface : Arr\u00eater le traitement ult\u00e9rieur et g\u00e9n\u00e9rer la r\u00e9ponse Sinon: Rendre la page avec la m\u00e9thode processSite() de Twig Twig.php \u00c9v\u00e9nement Fire onTwigSiteVariables Obtenir la sortie de la page Fire onTwigPageVariables, \u00e9galement appel\u00e9 pour chaque sous-page modulaire Si une page n'est pas trouv\u00e9e ou n'est pas routable, d\u00e9clenchez d'abord l'\u00e9v\u00e9nement onPageFallBackUrl pour voir si nous avons une solution de secours pour un \u00e9l\u00e9ment multim\u00e9dia, puis d\u00e9clenchez onPageNotFound si ce n'est pas le cas. D\u00e9finir toutes les variables Twig sur l'objet Twig D\u00e9finissez le nom du mod\u00e8le en fonction des informations de fichier /en-t\u00eate/extension Appelez la m\u00e9thode render() Renvoyer le HTML r\u00e9sultant \u00c9v\u00e9nement Fire onOutputGenerated Faites \u00e9cho \u00e0 la sortie dans le tampon de sortie \u00c9v\u00e9nement Fire onOutputRendered Construire un objet de r\u00e9ponse Arr\u00eater le traitement ult\u00e9rieur et g\u00e9n\u00e9rer la r\u00e9ponse En-t\u00eate et corps HTTP de sortie D\u00e9bogueur de rendu (si activ\u00e9) Fermer Fermer la session Fermer la connexion au client \u00c9v\u00e9nement Fire onShutdown Chaque fois qu'une page a sa m\u00e9thode content() appel\u00e9e, le cycle de vie suivant se produit : Page.php Si le contenu n'est PAS mis en cache : Lancer l'\u00e9v\u00e9nement onPageContentRaw Traitez la page en fonction des param\u00e8tres Markdown et Twig. Fire onMarkdownInitialized event Fire onMarkdownInitialized \u00c9v\u00e9nement Fire onPageContent","title":"Cycle de vie de Grav"},{"location":"dashboard-authentification/","text":"Authentification \u00e0 2 facteurs L'authentification \u00e0 2 facteurs (2FA) est une excellente mesure de s\u00e9curit\u00e9 qui utilise une m\u00e9thode d'authentification de type horloge tournante qui g\u00e9n\u00e8re des codes \u00e0 six chiffres que vous pouvez utiliser en plus de votre nom d'utilisateur et de votre mot de passe pour acc\u00e9der \u00e0 l'administrateur. Pour profiter de cette fonctionnalit\u00e9, vous devrez t\u00e9l\u00e9charger une application prenant en charge 2FA telle que Authy ou Google Authenticator . Cette application agira comme un porte-cl\u00e9s virtuel pour les codes d'authentification. Comment le configurer La configuration de l'authentification \u00e0 2 facteurs dans Grav est facile. Tout ce que vous avez \u00e0 faire est d'acc\u00e9der \u00e0 Plugins> Panneau d'administration> Bases dans l'administration. Ici, vous trouverez l'authentification \u00e0 2 facteurs. Vous pouvez choisir d'activer cette fonctionnalit\u00e9 en s\u00e9lectionnant Oui . Cela permettra aux utilisateurs de configurer une authentification \u00e0 2 facteurs sur leurs comptes. Maintenant, vous pouvez s\u00e9lectionner votre image d'avatar pour acc\u00e9der aux param\u00e8tres de votre profil d'utilisateur. Ensuite, vous voudrez d\u00e9finir l'option 2FA Enabled sur Oui . Un code QR appara\u00eetra avec une cl\u00e9 secr\u00e8te 2FA. Notez la cl\u00e9 et mettez-la dans un endroit s\u00fbr. \u00c0 l'aide de l'application d'authentification de votre choix, scannez le code QR ou entrez la cl\u00e9 secr\u00e8te pour enregistrer votre cl\u00e9 2FA. Enregistrez votre page de profil pour verrouiller vos param\u00e8tres 2FA. Un badge 2FA violet appara\u00eetra d\u00e9sormais \u00e0 c\u00f4t\u00e9 de votre nom dans la barre lat\u00e9rale. Ce badge vous permet de savoir que 2FA est actif sur le compte. Vous pouvez maintenant vous d\u00e9connecter et vous reconnecter. Vous serez accueilli avec les m\u00eames champs de nom d'utilisateur et de mot de passe, mais une fois que vous aurez entr\u00e9 ces informations, il vous sera demand\u00e9 de fournir un code suppl\u00e9mentaire \u00e0 six chiffres. Ce code se trouve dans votre application d'authentification. Il se r\u00e9initialise toutes les 30 secondes, de sorte que le code n'est bon que pendant cette courte p\u00e9riode. Un nouveau code sera g\u00e9n\u00e9r\u00e9 pour le remplacer. C'est \u00e7a! Vous avez maintenant un site Grav plus s\u00e9curis\u00e9 ! Oh, et si vous voulez changer votre cl\u00e9 2FA, tout ce que vous avez \u00e0 faire est d'appuyer sur le gros bouton rouge R\u00e9g\u00e9n\u00e9rer . Questions fr\u00e9quemment pos\u00e9es Que se passe-t-il si je perds l'acc\u00e8s \u00e0 mon appareil 2FA ? Ne vous inqui\u00e9tez pas! Tout n'est pas perdu. Votre statut 2FA et votre cl\u00e9 de hachage sont stock\u00e9s dans le syst\u00e8me de fichiers de votre site sur votre fichier YAML utilisateur. Par exemple, si votre compte utilisateur est admin , acc\u00e9dez \u00e0 ROOT/user/accounts/admin.yaml et recherchez ces deux lignes : 1 | twofa_enabled : true 2 | twofa_secret : RQX46XTTBK7QMMB6VR4RAUNWOYVXXTSR D\u00e9finissez simplement twofa_enabled sur false et enregistrez. Vous devriez maintenant pouvoir acc\u00e9der \u00e0 votre site en utilisant uniquement votre nom d'utilisateur et votre mot de passe. Alternativement, vous pouvez utiliser le twofa_secret pour enregistrer votre compte sur l'application d'authentification de votre choix. Que faire si mon secret 2FA est compromis ? Si vous pensez que votre secret 2FA peut \u00eatre compromis, vous pouvez g\u00e9n\u00e9rer une nouvelle cl\u00e9 et invalider l'ancienne en s\u00e9lectionnant le gros bouton rouge R\u00e9g\u00e9n\u00e9rer dans les param\u00e8tres de votre profil utilisateur depuis l'administration.","title":"Authentification \u00e0 2 facteurs"},{"location":"dashboard-evenements/","text":"Crochets d'\u00e9v\u00e9nements d'administration Le plugin Admin a plusieurs crochets d'\u00e9v\u00e9nement qui peuvent \u00eatre utilis\u00e9s pendant le cycle de vie Grav . Voir la documentation g\u00e9n\u00e9rale du plugin pour l'utilisation des hooks d'\u00e9v\u00e9nement dans le chapitre Plugins. Crochets d'\u00e9v\u00e9nement d'administration disponibles onAdminTaskExecute onAdminCreatePageFrontmatter onAdminSave onAdminAfterSave onAdminAfterSaveAs onAdminAfterDelete onAdminAfterAddMedia onAdminAfterDelMedia Activation d'un hook d'\u00e9v\u00e9nement d'administration Les hooks d'\u00e9v\u00e9nement d'administration sont appel\u00e9s de la m\u00eame mani\u00e8re que les hooks d'\u00e9v\u00e9nement de base. onAdminTaskExecute Le plug-in Admin d\u00e9clenche diverses t\u00e2ches, en fonction de l'interaction de l'utilisateur. Les t\u00e2ches peuvent inclure la d\u00e9connexion, la connexion, l'enregistrement, 2faverify, etc. Une fois la t\u00e2che termin\u00e9e, ce crochet d'\u00e9v\u00e9nement se d\u00e9clenche. onAdminCreatePageFrontmatter Lors de la cr\u00e9ation d'une nouvelle page, cet \u00e9v\u00e9nement est d\u00e9clench\u00e9 apr\u00e8s que les donn\u00e9es d'en-t\u00eate ont \u00e9t\u00e9 initialement d\u00e9finies pour permettre aux plugins de manipuler par programme le frontmatter. onAdminSave Utilisez l'\u00e9v\u00e9nement d'administration onAdminSave() pour manipuler les donn\u00e9es d'objet de la page $object avant qu'elles ne soient enregistr\u00e9es dans le syst\u00e8me de fichiers. onAdminAfterSave Apr\u00e8s avoir enregistr\u00e9 la page dans le panneau d'administration, cet \u00e9v\u00e9nement est d\u00e9clench\u00e9. onAdminAfterSaveAs Lors de la cr\u00e9ation d'un dossier via le panneau, cet \u00e9v\u00e9nement se d\u00e9clenche imm\u00e9diatement apr\u00e8s la cr\u00e9ation du nouveau dossier et l'ex\u00e9cution d'un effacement standard du cache. onAdminAfterDelete Se d\u00e9clenche apr\u00e8s la suppression d'une page ou d'un dossier. Il est imm\u00e9diatement suivi d'un effacement de cache standard. onAdminAfterAddMedia Se d\u00e9clenche apr\u00e8s la fin d'une t\u00e2che d'ajout de m\u00e9dia, mais avant l'affichage du message de confirmation. onAdminAfterDelMedia Se d\u00e9clenche apr\u00e8s la fin d'une t\u00e2che de suppression de m\u00e9dia, mais avant l'affichage du message de confirmation.","title":"Crochets d'\u00e9v\u00e8nements"},{"location":"dashboard-extensions/","text":"Extensions Cette page fournit des guides sur la fa\u00e7on d'\u00e9tendre le panneau d'administration, ainsi que les meilleures pratiques pour le faire. Comprendre les th\u00e8mes d'administration Tout comme lorsque vous \u00e9tendez ou modifiez un th\u00e8me Grav standard, vous remplacerez les mod\u00e8les pour modifier la structure et l'apparence du plugin d'administration. Cela signifie que les mod\u00e8les que votre plugin d\u00e9clare \u00eatre utilis\u00e9s \u00e0 la place de ceux par d\u00e9faut doivent refl\u00e9ter exactement la structure du th\u00e8me d'administration. Par exemple, si nous voulions changer l'avatar dans la navigation de gauche, nous changerions nav-user-avatar.html.twig . Dans le plugin Admin, le chemin vers les templates est : user/plugins/admin/themes/grav/templates , ci-apr\u00e8s d\u00e9nomm\u00e9 ADMIN_TEMPLATES . Le fichier que nous recherchons est ADMIN_TEMPLATES/partials/nav-user-avatar.html.twig , qui contient <img src=\"https://www.gravatar.com/avatar/{{ admin.user.email|md5 } }?s=47\" /> . Dans votre plugin, le chemin vers les templates doit \u00eatre : user/plugins/myadminplugin/admin/themes/grav/templates, ci-apr\u00e8s d\u00e9nomm\u00e9 PLUGIN_TEMPLATES . Le fichier correspondant devrait alors \u00eatre PLUGIN_TEMPLATES/partials/nav-user-avatar.html.twig , qui contiendrait quelque chose comme <img src=\"{{ myadminplugin_avatar_image_path }}\" /> . Ainsi, nous rempla\u00e7ons le chemin vers le mod\u00e8le, mais de mani\u00e8re non destructive. Nous ciblons uniquement le mod\u00e8le pertinent, d'une mani\u00e8re qui ne remplace pas les mod\u00e8les inutiles ou n'emp\u00eache pas d'autres th\u00e8mes d'administration d'enregistrer leurs mod\u00e8les alternatifs pour la m\u00eame utilisation. Pour ce faire, nous enregistrons le chemin dans notre plugin comme ceci : 1 | public static function getSubscribedEvents(): array 2 | { 3 | return [ 4 | 'onAdminTwigTemplatePaths' => ['onAdminTwigTemplatePaths', 0] 5 | ]; 6 | } 7 | 8 | public function onAdminTwigTemplatePaths($event): void 9 | { 10 | $paths = $event['paths']; 11 | $paths[] = __DIR__ . '/admin/themes/grav/templates'; 12 | $event['paths'] = $paths; 13 |} Il est important de se rappeler que le th\u00e8me utilis\u00e9 dans le plugin Admin est sensible aux mod\u00e8les disponibles. En r\u00e8gle g\u00e9n\u00e9rale, vous ne devez modifier que les mod\u00e8les \u00e0 faible impact , c'est-\u00e0-dire apporter des modifications qui ne casseront pas l'interface pour tout utilisateur qui installe votre plugin. En ce sens, il est pr\u00e9f\u00e9rable de remplacer nav-user-avatar.html.twig que nav.html.twig , car ce dernier contient beaucoup plus de fonctionnalit\u00e9s mais utilise {% include 'partials/nav-user-details.html.twig' % } pour inclure le premier. ASTUCE : les fichiers de mod\u00e8le d'administration ont la fonction d'\u00e9chappement automatique activ\u00e9e. Vous n'avez pas besoin d'ajouter de filtres |e pour \u00e9chapper au contenu HTML, mais vous devez ajouter |raw si votre entr\u00e9e est du HTML valide. Ajout d'un champ personnalis\u00e9 Pour cr\u00e9er un champ personnalis\u00e9, nous l'ajouterons \u00e0 PLUGIN_TEMPLATES/forms/fields/myfield . Dans le dossier myfield , nous avons besoin d'un mod\u00e8le Twig qui d\u00e9clare comment le champ fonctionnera. Le moyen le plus simple d'ajouter un champ consiste \u00e0 rechercher un champ similaire dans ADMIN_TEMPLATES/forms/fields et \u00e0 le copier pour voir comment il est structur\u00e9. Par exemple, pour ajouter un curseur de plage HTML, nous cr\u00e9ons PLUGIN_TEMPLATES/forms/fields/range/range.html.twig . Dans ce fichier, nous ajoutons : 1 | {% extends \"forms/field.html.twig\" %} 2 | 3 | {% block input_attributes %} 4 | type=\"range\" 5 | {% if field.validate.min %}min=\"{{ field.validate.min }}\"{% endif %} 6 | {% if field.validate.max %}max=\"{{ field.validate.max }}\"{% endif %} 7 | {% if field.validate.step %}step=\"{{ field.validate.step }}\"{% endif %} 8 | {{ parent() }} 9 | {% endblock %} Cela ajoute un type de champ appel\u00e9 \"range\", avec le type range , qui permet \u00e0 l'utilisateur de s\u00e9lectionner une valeur en faisant glisser un bouton . Pour utiliser le nouveau champ dans un blueprint, nous ajouterions simplement ceci dans blueprints.yaml : 1 | form: 2 | fields: 3 | radius: 4 | type: range 5 | label: Radius 6 | id: radius 7 | default: 100 8 | validate: 9 | min: 0 10 | max: 100 11 | step: 10 Ce qui nous donne un curseur avec une valeur par d\u00e9faut de 100, o\u00f9 les valeurs accept\u00e9es sont comprises entre 0 et 100, et chaque valeur augmente de 10 au fur et \u00e0 mesure que nous la glissons. Nous pourrions \u00e9tendre cela davantage en utilisant les blocs prepend ou append disponibles, en ajoutant par exemple un indicateur visuel de la valeur s\u00e9lectionn\u00e9e. Nous changeons range.html.twig pour contenir ceci : 1 | {% extends \"forms/field.html.twig\" %} 2 | 3 | {% block input_attributes %} 4 | type=\"range\" 5 | style=\"display: inline-block;vertical-align: middle;\" 6 | {% if field.id is defined %} 7 | oninput=\"{{ field.id }}_output.value = {{ field.id }}.value\" 8 | {% endif %} 9 | {% if field.validate.min %}min=\"{{ field.validate.min }}\"{% endif %} 10 | {% if field.validate.max %}max=\"{{ field.validate.max }}\"{% endif %} 11 | {% if field.validate.step %}step=\"{{ field.validate.step }}\"{% endif %} 12 | { parent() }} 13 | {% endblock %} 14 | {% block append %} 15 | {% if field.id is defined %} 16 | <output 17 | name=\"{{ (scope ~ field.name)|fieldName }}\" 18 | id=\"{{ field.id }}_output\" 19 | style=\"display: inline-block;vertical-align: baseline;padding: 0 0.5em 5px 0.5em;\"> 20 | {{ value|join(', ')|e('html_attr') }} 21 | </output> 22 | {% endif %} 23 | {% endblock append %} Ainsi, nous ajoutons une balise <output> qui contiendra la valeur s\u00e9lectionn\u00e9e, et y ajouterons, ainsi qu'au champ lui-m\u00eame, un style simple pour les aligner correctement. Nous ajoutons \u00e9galement un attribut oninput au champ, afin que la modification des valeurs mette automatiquement \u00e0 jour la balise <output> avec la valeur. Cela n\u00e9cessite que chaque champ utilisant le range-slider ait une propri\u00e9t\u00e9 id unique, comme id: radius que nous avons d\u00e9clar\u00e9 ci-dessus, qui devrait \u00eatre quelque chose comme id: myadminplugin_radius pour \u00e9viter les conflits. Si ce nouveau mod\u00e8le doit \u00eatre partag\u00e9 entre le frontend et le panneau d'administration (par exemple en utilisant le dossier PLUGIN_TEMPLATES ), vous devez \u00e9chapper \u00e0 toutes les variables avec |e . Alternativement, vous pouvez simplement acc\u00e9der \u00e0 Configuration > Twig Templating > Autoescape variables automatique et le mettre sur Yes . Cr\u00e9ation de mod\u00e8les de pages personnalis\u00e9s Comme mentionn\u00e9 dans les bases du th\u00e8me , il existe une relation directe entre les pages de Grav et les fichiers de mod\u00e8le Twig fournis dans un th\u00e8me/plugin. Pour cr\u00e9er un mod\u00e8le de page personnalis\u00e9, vous aurez besoin d'un fichier de mod\u00e8le pour d\u00e9finir les champs du plugin Admin et d'un fichier de mod\u00e8le pour le rendu du contenu. Ajouter un template personnalis\u00e9 de page \u00e0 un th\u00e8me/plugin \u00c0 la racine du dossier theme/plugin, cr\u00e9ez un dossier nomm\u00e9 templates . Dans ce dossier, cr\u00e9ez un nouveau fichier mypage.html.twig. Ce sera le mod\u00e8le Twig pour le nouveau mod\u00e8le de page \"mypage\". Exemple mypage.html.twig : 1 | {% extends 'partials/base.html.twig' %} 2 | 3 | {% block content %} 4 | {{ page.header.newTextField|e }} 5 | {{ page.content|raw }} 6 | {% endblock %} Vous trouverez plus d\u2019informations sur les th\u00e8mes Twig dans la section Twig Primer . Les th\u00e8mes recherchent automatiquement les fichiers de mod\u00e8les dans le dossier templates du th\u00e8me. Si le mod\u00e8le est ajout\u00e9 via un plugin, vous devrez ajouter le mod\u00e8le via l'\u00e9v\u00e9nement onTwigTemplatePaths : 1 | public function onPluginsInitialized(): void 2 | { 3 | // If in an Admin page. 4 | if ($this->isAdmin()) { 5 | return; 6 | } 7 | // If not in an Admin page. 8 | $this->enable([ 9 | 'onTwigTemplatePaths' => ['onTwigTemplatePaths', 1], 10 | ]); 11 | } 12 | 13 | /** 14 | * Add templates directory to twig lookup paths. 15 | */ 16 | public function onTwigTemplatePaths(): void 17 | { 18 | $this->grav['twig']->twig_paths[] = __DIR__ . '/templates'; 19 | } Ajouter un blueprint personnalis\u00e9 de page \u00e0 un th\u00e8me/plugin Pour que le plugin Admin fournisse une nouvelle option de page mypage , cr\u00e9ez un dossier nomm\u00e9 blueprints \u00e0 la racine du th\u00e8me/plugin. Dans ce dossier, cr\u00e9ez un nouveau fichier mypage.yaml. C'est ici que vous d\u00e9finirez les champs personnalis\u00e9s que le plugin Admin affichera lors de la cr\u00e9ation d'une nouvelle page. Les champs de formulaire disponibles se trouvent dans le chapitre Formulaires. L'exemple de plan mypage.yaml ci-dessous \u00e9tend le mod\u00e8le de page par d\u00e9faut, puis ajoute header.newTextField sous l'onglet contenu. : 1 | title: My Page Blueprint 2 | '@extends': 3 | type: default 4 | context: blueprints://pages 5 | 6 | form: 7 | fields: 8 | tabs: 9 | type: tabs 10 | active: 1 11 | fields: 12 | content: 13 | type: tab 14 | fields: 15 | header.newTextField: 16 | type: text 17 | label: 'New Text Field' Comme pour le dossier des templates , un th\u00e8me ajoutera automatiquement tous les fichiers yaml de blueprints trouv\u00e9s dans le dossier des blueprints. Si le plan est ajout\u00e9 via un plugin, vous devrez ajouter le plan via l'\u00e9v\u00e9nement onGetPageTemplates : 1 | public function onPluginsInitialized(): void 2 | { 3 | // If in an Admin page. 4 | if ($this->isAdmin()) { 5 | $this->enable([ 6 | 'onGetPageBlueprints' => ['onGetPageBlueprints', 0], 7 | 'onGetPageTemplates' => ['onGetPageTemplates', 0], 8 | ]); 9 | } 10 | } 11 | 12 | /** 13 | * Add blueprint directory. 14 | */ 15 | public function onGetPageBlueprints(Event $event): void 16 | { 17 | $types = $event->types; 18 | $types->scanBlueprints('plugin://' . $this->name . '/blueprints'); 19 | } 20 | 21 | /** 22 | * Add templates directory. 23 | */ 24 | public function onGetPageTemplates(Event $event): void 25 | { 26 | $types = $event->types; 27 | $types->scanTemplates('plugin://' . $this->name . '/templates'); 28 | } Cr\u00e9ation d'une nouvelle page Apr\u00e8s avoir d\u00e9fini les fichiers de plan et de mod\u00e8le, cr\u00e9ez une nouvelle page dans le panneau d'administration en cliquant sur Add puis en s\u00e9lectionnant \"Mapage\": Le formulaire d'\u00e9dition Admin affiche maintenant le nouveau champ personnalis\u00e9 \"Nouveau champ de texte\":","title":"Modifier le panneau"},{"location":"dashboard-faq/","text":"FAQ Cette FAQ est destin\u00e9e \u00e0 fournir des didacticiels, des conseils et des astuces utiles pour vous aider \u00e0 tirer le meilleur parti du plug-in Admin. Installation manuelle de l'administration L'installation manuelle n'est pas la m\u00e9thode d'installation recommand\u00e9e, cependant, il est toujours possible d'installer le plugin d'administration manuellement. Fondamentalement, vous devez t\u00e9l\u00e9charger chacun des plugins suivants individuellement : admin login form e-mail Extrayez chaque fichier d'archive dans votre dossier user/plugins , puis assurez-vous que les dossiers sont renomm\u00e9s en admin/ , login/ , form/ et email/ . Suivez ensuite les instructions d'utilisation ci-dessous . Ajouter et g\u00e9rer des utilisateurs Lorsque vous installez le plugin Admin pour la premi\u00e8re fois, vous serez invit\u00e9 \u00e0 cr\u00e9er un utilisateur administrateur lorsque vous pointez votre navigateur sur votre site. Il s'agit d'un simple formulaire Web qui garantit qu'au moins un utilisateur administrateur a \u00e9t\u00e9 cr\u00e9\u00e9. Vous pouvez facilement ajouter d'autres utilisateurs, mais cela n\u00e9cessite un peu de travail dans le terminal/l'invite de commande. Depuis votre terminal, acc\u00e9dez \u00e0 la racine du site Grav auquel vous souhaitez ajouter des utilisateurs et tapez la commande suivante : $ | bin/plugin login newuser Cela lancera une s\u00e9rie d'invites pour vous guider dans la cr\u00e9ation d'un nouvel utilisateur. Celles-ci incluent la cr\u00e9ation d'un nom d'utilisateur, d'un mot de passe, d'une adresse e-mail et la d\u00e9finition du niveau d'autorisation du nouvel utilisateur. Vous aurez besoin d'un nom d'utilisateur compos\u00e9 de 3 \u00e0 16 caract\u00e8res pouvant inclure des lettres minuscules, des chiffres, des traits de soulignement et des traits d'union. Les majuscules, les espaces et les caract\u00e8res sp\u00e9ciaux ne sont pas autoris\u00e9s pour le nom d'utilisateur. \u00c0 un moment du processus de cr\u00e9ation, il vous sera demand\u00e9 de choisir un ensemble d'autorisations pour le nouvel utilisateur. Il existe actuellement trois options : R\u00d4LE(S) DESCRIPTION Admin Donne \u00e0 l'utilisateur l'acc\u00e8s au backend Admin. Ce r\u00f4le n'inclut pas l'acc\u00e8s frontal aux pages prot\u00e9g\u00e9es. Site Permet \u00e0 l'utilisateur d'acc\u00e9der \u00e0 toutes les pages du front-end. C'est l'\u00e9quivalent d'un utilisateur connect\u00e9. Admin and Site Permet \u00e0 l'utilisateur d'acc\u00e9der \u00e0 l'int\u00e9gralit\u00e9 du site, front-end et back-end. Les donn\u00e9es de l'utilisateur sont stock\u00e9es dans SITE_ROOT/user/accounts/ et chaque utilisateur re\u00e7oit un fichier YAML contenant les informations de connexion de cet utilisateur et d'autres d\u00e9tails. Voici un exemple des donn\u00e9es contenues dans un fichier de compte utilisateur. Par exemple, cela pourrait \u00eatre le contenu de SITE_ROOT/user/accounts/tester.yaml . Le nom de fichier tester.yaml indique que le nom d'utilisateur est tester 1 |email: test@rockettheme.com 2 |access: 3 | admin: 4 | login: true 5 | super: true 6 | site: 7 | login: true 8 | fullname: 'Tester McTesting' 9 | title: Admin 10 | hashed_password: $2y$10$5RAUI6ZCISWR.4f0D6FILu3efYq3078ZX/.9vtAnZbjxS/4PXN/WW Vous pouvez modifier ces informations directement dans le fichier YAML de l'utilisateur ou en s\u00e9lectionnant votre avatar d'utilisateur dans la barre lat\u00e9rale de l'administrateur. Cela vous am\u00e8nera \u00e0 une page o\u00f9 vous pourrez facilement g\u00e9rer les informations de l'utilisateur. Les photos d'avatar sont automatiquement g\u00e9n\u00e9r\u00e9es par Gravatar , en fonction de l'adresse e-mail de l'utilisateur. Pour des raisons de s\u00e9curit\u00e9, les mots de passe des utilisateurs sont stock\u00e9s sous forme de hachage. Si vous souhaitez modifier votre mot de passe, nous vous recommandons de le faire depuis l'administrateur. Gestion des ACL Chaque fichier yaml utilisateur a une propri\u00e9t\u00e9 access . En d\u00e9finissant cette propri\u00e9t\u00e9 de mani\u00e8re appropri\u00e9e, vous pouvez accorder \u00e0 un utilisateur sp\u00e9cifique l'acc\u00e8s \u00e0 une partie sp\u00e9cifique de l'administrateur. Voici les niveaux d'acc\u00e8s actuellement pris en charge expliqu\u00e9s : admin.login : permet \u00e0 un utilisateur de se connecter \u00e0 l'administrateur admin.super : accorde \u00e0 un utilisateur des pouvoirs de super administrateur, permettant l'acc\u00e8s \u00e0 toute l'interface et aux fonctionnalit\u00e9s d'administration en ignorant les autres propri\u00e9t\u00e9s d'acc\u00e8s \u00e0 l'exception de admin.login admin.pages : permet \u00e0 un utilisateur d'afficher des pages, de les modifier et d'en ajouter de nouvelles admin.maintenance : permet \u00e0 un utilisateur de mettre \u00e0 jour Grav du c\u00f4t\u00e9 administrateur, de v\u00e9rifier les mises \u00e0 jour et de vider le cache admin.plugins : permet \u00e0 un utilisateur d'acc\u00e9der \u00e0 la fonctionnalit\u00e9 des plugins, de modifier les param\u00e8tres des plugins, de d\u00e9sactiver les plugins ou d'en ajouter de nouveaux admin.themes : permet \u00e0 un utilisateur d'acc\u00e9der \u00e0 la fonctionnalit\u00e9 des th\u00e8mes, de modifier les param\u00e8tres du th\u00e8me, de modifier les th\u00e8mes et d'en ajouter de nouveaux admin.statistics : permet \u00e0 un utilisateur de voir les statistiques du site admin.cache : permet \u00e0 un utilisateur de vider le cache admin.configuration : permet \u00e0 un utilisateur d'acc\u00e9der \u00e0 la configuration de l'instance. L'autorisation pour les diff\u00e9rentes parties doit \u00eatre donn\u00e9e s\u00e9par\u00e9ment via les variables \u00e9num\u00e9r\u00e9es ci-dessous. Seule l'activation des \"sous-variables\" sans activer cette variable n'activera pas le menu de configuration pour l'utilisateur. admin.configuration_system : permet \u00e0 un utilisateur de modifier les param\u00e8tres syst\u00e8me admin.configuration_site : permet \u00e0 un utilisateur de modifier les param\u00e8tres du site admin.configuration_media : permet \u00e0 un utilisateur de modifier les types de m\u00e9dias disponibles admin.configuration_info : permet \u00e0 un utilisateur d'afficher les informations sur cette instance les autres niveaux d'acc\u00e8s, qui n'ont pas encore \u00e9t\u00e9 expliqu\u00e9s sont : admin.tools admin.settings admin.users Les modifications apport\u00e9es \u00e0 un fichier user.yaml alors que cet utilisateur est connect\u00e9 ne prendront effet qu'apr\u00e8s sa d\u00e9connexion et sa reconnexion. URL d'administration personnalis\u00e9e Une fa\u00e7on d'aider \u00e0 garder votre panneau d'administration s\u00e9curis\u00e9 est de masquer son emplacement. Pour ce faire, il faudrait changer l'URL de http://yourwebsite.com/admin \u00e0 quelque chose de plus ambigu qui sera plus difficile \u00e0 deviner pour quelqu'un. Pour ce faire, vous devez localiser admin.yaml qui se trouve dans le dossier user/plugins/admin/ et le copier dans user/config/plugins/admin.yaml . Changez ensuite la ligne route: '/admin' en quelque chose de plus ambigu, par exemple route: '/myspecialplace ', de cette fa\u00e7on si vous avez besoin d'acc\u00e9der au panneau d'administration de votre site grav, vous entrerez http://yourwebsite.com/myspecialplace Mode hors-ligne Dans le cas o\u00f9 votre serveur perd sa connexion \u00e0 Internet, Grav Admin entre automatiquement en mode hors ligne. Ce mode est indiqu\u00e9 par un avis sous le bas dans le coin sup\u00e9rieur gauche de l'administrateur. En mode hors ligne, l'administrateur ne tentera pas de r\u00e9cup\u00e9rer les mises \u00e0 jour du CMS, des plugins ou des th\u00e8mes. Cela \u00e9vite les raccrochages et autres probl\u00e8mes qui r\u00e9sulteraient autrement de l'impossibilit\u00e9 d'atteindre les serveurs de mise \u00e0 jour. Une fois la connexion Internet r\u00e9tablie, l'avis dispara\u00eetra et le mode hors ligne se terminera automatiquement.","title":"FAQ"},{"location":"dashboard-flood/","text":"Protection contre le Flood Les attaques par force brute sont un choix populaire pour les intrus de sites Web. Il peut s'agir d'une personne que vous connaissez essayant de deviner votre mot de passe encore et encore jusqu'\u00e0 ce qu'elle r\u00e9ussisse enfin ou d'un bot inondant votre site de tentatives de connexion jusqu'\u00e0 ce que le mot de passe soit finalement d\u00e9couvert. La fonction de protection contre le flood de Grav (\u00e9galement connue sous le nom de limitation de d\u00e9bit) rend ces types d'attaques exceptionnellement difficiles. Il vous permet de d\u00e9finir un certain nombre de tentatives de connexion infructueuses dans un laps de temps sp\u00e9cifique avant que le compte ne soit temporairement verrouill\u00e9. De plus, vous pouvez limiter le nombre de demandes de r\u00e9initialisation de mot de passe appliqu\u00e9es aux comptes avant de verrouiller cette fonctionnalit\u00e9. Ce dont vous aurez besoin Cette fonctionnalit\u00e9 est g\u00e9r\u00e9e via le plugin de connexion , qui doit d\u00e9j\u00e0 \u00eatre install\u00e9 et activ\u00e9 si vous utilisez le panneau d'administration. Comment le configurer Les param\u00e8tres de la protection contre les inondations de Grav se trouvent dans le plugin de connexion. Acc\u00e9dez simplement \u00e0 Admin > Plugins > Connexion et s\u00e9lectionnez l'onglet S\u00e9curit\u00e9 . Ici, vous pouvez d\u00e9finir les \u00e9l\u00e9ments suivants : Nombre maximal de r\u00e9initialisations de mot de passe avant le verrouillage Intervalle maximal de r\u00e9initialisation du mot de passe Nombre maximal d'\u00e9checs de connexion avant le verrouillage Intervalle maximal des \u00e9checs de connexion Cela vous permettra de d\u00e9terminer combien de r\u00e9initialisations de mot de passe ou de connexions \u00e9chou\u00e9es sont autoris\u00e9es dans un laps de temps d\u00e9fini avant que le verrouillage ne se produise. Cette d\u00e9connexion est temporaire et dure aussi longtemps que l'intervalle d\u00e9fini.","title":"Protection contre le Flood"},{"location":"dashboard-outils/","text":"Outils Dans certains cas, vous souhaiterez peut-\u00eatre t\u00e9l\u00e9charger un package de th\u00e8me ou de plug-in qui ne se trouve pas actuellement dans le r\u00e9pertoire principal des plug-ins Grav. Vous avez peut-\u00eatre un th\u00e8me premium disponible dans un fichier zip, ou vous d\u00e9veloppez un plugin et souhaitez t\u00e9l\u00e9charger votre derni\u00e8re version sur votre installation Grav pour le tester. Dans tous les cas, vous pouvez le faire via FTP, mais l'administrateur vous propose une solution encore plus simple. \u00c0 l'aide de l'outil d' installation directe , vous pouvez t\u00e9l\u00e9charger un package compress\u00e9 directement sur votre installation Grav et le rendre disponible pour une utilisation en quelques secondes. Cela ne se limite pas aux plugins et aux th\u00e8mes. Vous pouvez m\u00eame t\u00e9l\u00e9charger Grav lui-m\u00eame de cette fa\u00e7on et mettre \u00e0 niveau (ou r\u00e9trograder) en faisant cela \u00e9galement. Ceci est particuli\u00e8rement utile pour les contributeurs Grav qui souhaitent tester leur travail facilement. Comme pour tout processus d'installation, nous vous recommandons d'avoir une sauvegarde r\u00e9cente de votre installation Grav avant d'utiliser cet outil - surtout si vous pr\u00e9voyez de l'utiliser pour modifier l'ensemble de votre installation Grav. T\u00e9l\u00e9chargement La premi\u00e8re m\u00e9thode d'installation directe disponible est un t\u00e9l\u00e9chargement de fichier. Vous pouvez t\u00e9l\u00e9charger un package zip directement sur Grav \u00e0 l'aide de cet outil. S\u00e9lectionnez simplement le bouton Choisir Fichier (ou faites glisser votre package zip vers le bouton avec certains navigateurs) et s\u00e9lectionnez votre fichier de package local. Une fois que vous avez s\u00e9lectionn\u00e9 votre fichier, appuyez simplement sur T\u00e9l\u00e9charger et Installer pour installer votre package. Une fois votre package install\u00e9 avec succ\u00e8s, vous serez accueilli par une alerte vous en informant. C'est tout ce qu'on peut en dire ! Emplacement distant La deuxi\u00e8me m\u00e9thode consiste \u00e0 cr\u00e9er un lien direct vers un fichier de package. Par exemple, si vous avez un package h\u00e9berg\u00e9 sur un serveur distant, vous pouvez saisir l'URL de ce package dans le champ. Les liens de t\u00e9l\u00e9chargement conviviaux GPM tels que https://getgrav.org/download/themes/bootstrap/1.6.0 devraient fonctionner correctement. Par d\u00e9faut, ces t\u00e9l\u00e9chargements sont limit\u00e9s aux liens officiels du r\u00e9f\u00e9rentiel GPM. Mais vous pouvez acc\u00e9der \u00e0 Configuration > Syst\u00e8me et basculer l'option GPM officiel uniquement sur Non pour d\u00e9verrouiller ce champ et activer les liens directs vers les packages zip qui ne sont pas des r\u00e9f\u00e9rentiels GPM officiels. Par exemple : http://example.com/mypackage.zip . Il s'agit d'une fonctionnalit\u00e9 avanc\u00e9e et ne doit \u00eatre utilis\u00e9e que dans les cas o\u00f9 vous avez correctement v\u00e9rifi\u00e9 que le colis est s\u00fbr.","title":"Outils"},{"location":"dashboard-pages-configuration/","text":"Configuration Onglet Compatibilit\u00e9 OPTION DESCRIPTION Admin event compatibility Active les \u00e9v\u00e9nements onAdminSave et onAdminSaveAfter pour les plugins. Activ\u00e9 par d\u00e9faut. Onglet Mise en cache Pour plus d'informations, voir Objets Flex. OPTION DESCRIPTION Enable Index Caching La mise en cache de l'index acc\u00e9l\u00e8re les recherches en cr\u00e9ant des index de recherche temporaires pour les requ\u00eates. Index Cache Lifetime (seconds) Dur\u00e9e de vie de la mise en cache d'index en secondes. Enable Object Caching La mise en cache des objets acc\u00e9l\u00e8re le chargement des donn\u00e9es et des images des objets. Object Cache Lifetime (seconds) Dur\u00e9e de vie de la mise en cache d'objets en secondes. Enable Render Caching La mise en cache du rendu acc\u00e9l\u00e8re le rendu du contenu en mettant en cache le code HTML r\u00e9sultant. Render Cache Lifetime (seconds) Dur\u00e9e de vie du cache de rendu en secondes. Si le rendu HTML a un contenu dynamique, le cache de rendu peut \u00eatre d\u00e9sactiv\u00e9 \u00e0 partir du mod\u00e8le Twig par {% verbatim %}{% do block.disableCache() %} {% endverbatim %}.","title":"Configuration"},{"location":"dashboard-pages-editeur-avance/","text":"\u00c9diteur (avanc\u00e9) L'\u00e9diteur de page dans l'administration est un puissant \u00e9diteur de texte et gestionnaire de page qui vous permet de cr\u00e9er le contenu de votre page (y compris les fichiers multim\u00e9dias), ses options de publication et de taxonomie, ses param\u00e8tres, ses remplacements et ses options sp\u00e9cifiques au th\u00e8me. Il s'agit essentiellement d'un guichet unique pour g\u00e9rer une page sp\u00e9cifique. Dans cette page, nous passerons en revue les caract\u00e9ristiques et fonctionnalit\u00e9s trouv\u00e9es dans l'onglet Advanced de Page Editor . L'acc\u00e8s \u00e0 la fonctionnalit\u00e9 Pages n\u00e9cessite une autorisation access.admin.supe r ou access.admin.pages.list , voir Comptes d'utilisateurs et Groupes d'utilisateurs Vous remarquerez peut-\u00eatre les cases \u00e0 cocher \u00e0 gauche de certaines des options dans cette zone de l'administrateur. Ces cases indiquent que vous souhaitez remplacer les valeurs par d\u00e9faut pour cette page. Si vous ne les cochez pas, vous revenez \u00e0 l'\u00e9tat vide ou par d\u00e9faut. R\u00e9glages La zone Param\u00e8tre s se concentre sur diverses options critiques pour votre page. C'est l\u00e0 que vous iriez pour changer le nom du dossier dans lequel la page est stock\u00e9e, son parent et le mod\u00e8le utilis\u00e9 lors de l'affichage de la page. OPTION DESCRIPTION Folder Numeric Prefix Pr\u00e9fixe num\u00e9rique qui permet un tri manuel et implique la visibilit\u00e9. Folder Name D\u00e9finit le nom du dossier dans lequel la page est contenue. Parent D\u00e9finit le parent de la page actuelle. Cela peut \u00eatre - Racine - pour les pages de niveau sup\u00e9rieur, ou des pages sp\u00e9cifiques pour les faire appara\u00eetre en tant que sous-pages. Display Template D\u00e9finit le mod\u00e8le (fourni par le th\u00e8me) \u00e0 appliquer \u00e0 la page. Cela a un effet direct sur l'apparence de la page. Body Classes Les classes saisies dans ce champ sont appliqu\u00e9es au corps de la page. Ordering La section Ordering vous permet de configurer l'ordre des pages des dossiers non num\u00e9rot\u00e9s. OPTION DESCRIPTION Page Order Vous permet de configurer l'ordre de la page. Override Les remplacements sont ces options qui donnent \u00e0 votre page des fonctionnalit\u00e9s suppl\u00e9mentaires, d\u00e9finissent son slug sur quelque chose de diff\u00e9rent de celui par d\u00e9faut en fonction du nom du dossier, des param\u00e8tres de mise en cache, de la visibilit\u00e9 de la navigation et rendent une page inaccessible via une URL directe. Vous pouvez \u00e9galement utiliser cette zone pour activer et d\u00e9sactiver divers processus pour la page, tels que Twig qui vous permet d'injecter Twig dans le contenu de votre page et de le rendre. OPTION DESCRIPTION Menu La cha\u00eene \u00e0 utiliser dans un menu. S'il n'est pas d\u00e9fini, le titre sera utilis\u00e9. Slug La variable slug vous permet de d\u00e9finir sp\u00e9cifiquement la partie de l'URL de la page. Process Processus que vous aimeriez voir ex\u00e9cut\u00e9s et rendus disponibles dans le contenu de la page. Default Child Template D\u00e9finit un type de page par d\u00e9faut pour les pages enfants. Routable D\u00e9finit si cette page est accessible ou non par une URL. Si elle est d\u00e9sactiv\u00e9e, la page ne sera pas accessible sur le front-end. Caching Active ou d\u00e9sactive la mise en cache de la page. Visible D\u00e9termine si une page est visible dans la navigation. Remplacements d'itin\u00e9raire OPTION DESCRIPTION Canonical Route Entrez une nouvelle valeur \u00e0 utiliser pour le routage canonique. Route Aliases Cr\u00e9ez des alias de route. Remplacements sp\u00e9cifiques \u00e0 l'administration OPTION DESCRIPTION Children Display Order D\u00e9finissez l'ordre d'affichage des enfants. Vous pouvez choisir le nom du dossier ou la d\u00e9finition de la collection.","title":"Editeur (Avanc\u00e9)"},{"location":"dashboard-pages-editeur-contenu/","text":"\u00c9diteur (contenu) L'\u00e9diteur de page dans l'administration est un puissant \u00e9diteur de texte et gestionnaire de page qui vous permet de cr\u00e9er le contenu de votre page (y compris les fichiers multim\u00e9dias), ses options de publication et de taxonomie, ses param\u00e8tres, ses remplacements et ses options sp\u00e9cifiques au th\u00e8me. Il s'agit essentiellement d'un guichet unique pour g\u00e9rer une page sp\u00e9cifique. L'acc\u00e8s \u00e0 la fonctionnalit\u00e9 Pages n\u00e9cessite une autorisation access.admin.super ou access.admin.pages.list , voir Comptes d'utilisateurs et Groupes d'utilisateurs . Les onglets qui apparaissent dans l'\u00e9diteur de page ne sont pas universels. Il existe un ensemble par d\u00e9faut de champs de formulaire que l'on trouve couramment dans les th\u00e8mes Grav, mais ceux-ci peuvent varier d'un th\u00e8me \u00e0 l'autre. L'administration extrait les informations de champ de formulaire d'un certain nombre de sources, notamment le th\u00e8me et le mod\u00e8le utilis\u00e9s pour la page sp\u00e9cifique. Les onglets et options repr\u00e9sent\u00e9s dans cette documentation sont par d\u00e9faut. Les d\u00e9veloppeurs de th\u00e8mes ont la possibilit\u00e9 d'ajouter leurs propres options \u00e0 ces onglets, ou m\u00eame de supprimer ces onglets et de les remplacer par quelque chose de compl\u00e8tement diff\u00e9rent. Nous documentons un sc\u00e9nario de cas courant bas\u00e9 sur le th\u00e8me Antimati\u00e8re pour servir d'exemple. Dans cette page, nous passerons en revue les caract\u00e9ristiques et fonctionnalit\u00e9s trouv\u00e9es dans l'onglet Content de l'\u00e9diteur de page . Contr\u00f4les En haut de la page, vous trouverez les contr\u00f4les administratifs qui vous permettent d'enregistrer, de supprimer, de copier et de d\u00e9placer votre page. De plus, vous pouvez appuyer sur le bouton Back pour revenir \u00e0 la zone principale des Pages de l'administration. Les boutons Save et Delete sont assez explicites. Ils enregistrent et suppriment respectivement la page actuellement consult\u00e9e. La s\u00e9lection du bouton Move active une fen\u00eatre contextuelle qui vous permet d'attribuer un nouveau parent \u00e0 la page. Vous avez la m\u00eame option dans l'onglet Advanced . Copy cr\u00e9e une copie de votre page actuelle, en ajoutant un -2 (ou un autre pr\u00e9fixe num\u00e9rique si -2 est d\u00e9j\u00e0 utilis\u00e9) \u00e0 la fin du nom du dossier. Vous pouvez modifier \u00e0 la fois le nom et le titre du dossier comme bon vous semble. Titre Le titre d'une page est g\u00e9n\u00e9ralement d\u00e9fini lors de la cr\u00e9ation de cette page, mais vous pouvez le modifier apr\u00e8s coup ici. Notez que changer le titre de la page ici n'aura pas d'impact direct sur le nom du dossier (qui est utilis\u00e9 \u00e0 des fins de navigation) mais cela changera ce que les gens voient sur le front-end. Contenu de l'\u00e9diteur de page C'est le c\u0153ur de l'\u00e9diteur de page. C'est l\u00e0 que le corps du contenu de votre page est \u00e9crit et modifi\u00e9. Il comporte de nombreux outils puissants que l'on ne trouve g\u00e9n\u00e9ralement que dans les \u00e9diteurs de texte haut de gamme bas\u00e9s sur un navigateur. Par exemple, vous pouvez basculer entre les vues d'\u00e9dition et d'aper\u00e7u \u00e0 l'aide des boutons et situ\u00e9s dans la zone sup\u00e9rieure droite de l'\u00e9diteur. \u00c9tant donn\u00e9 que le contenu de Grav est principalement bas\u00e9 sur markdown, les raccourcis d'\u00e9dition ajoutent automatiquement des balises markdown \u00e0 votre contenu. Par exemple, la mise en surbrillance d'un bloc de texte et la s\u00e9lection de l'ic\u00f4ne B entourent la zone en surbrillance de balises **(zone s\u00e9lectionn\u00e9e)** en gras. Voici une ventilation des outils trouv\u00e9s dans l'\u00e9diteur de contenu : OUTIL DESCRIPTION Ajoute des balises en gras \u00e0 votre contenu. Ajoute des balises italiques \u00e0 votre contenu. Ajoute des balises ~~barr\u00e9es~~ \u00e0 votre contenu. Ajoute des liens vers votre contenu. Ajoute des m\u00e9dias \u00e0 votre contenu. Ajoute des balises de citation \u00e0 votre contenu. Cr\u00e9e une liste non ordonn\u00e9e. Cr\u00e9e une liste ordonn\u00e9e. Active la vue d'\u00e9dition. Active l'aper\u00e7u du contenu. Bascule vers une vue d'\u00e9dition ou d'aper\u00e7u pleine page. Page m\u00e9dia La section Page Media en bas de l'onglet Content concerne les fichiers multim\u00e9dias de votre page. Ces fichiers existent dans le m\u00eame dossier que le fichier Markdown de la page. Le t\u00e9l\u00e9chargement de nouveaux fichiers multim\u00e9dias est aussi simple que de glisser-d\u00e9poser un fichier ou de taper dans la zone blanche de la section. Cela fera appara\u00eetre un s\u00e9lecteur de fichiers qui vous permettra de choisir des fichiers \u00e0 t\u00e9l\u00e9charger. Vous avez d\u00e9j\u00e0 des fichiers multim\u00e9dias que vous aimeriez ins\u00e9rer dans votre page ? D\u00e9placez simplement le curseur de votre souris sur la vignette de l'image et faites glisser-d\u00e9poser l'image dans l'\u00e9diteur. Vous pouvez \u00e9galement s\u00e9lectionner l'option Insert * sur la vignette de l'image. Cela ins\u00e9rera le m\u00e9dia directement dans le contenu de votre page. Vous pouvez \u00e9galement supprimer des fichiers multim\u00e9dias en s\u00e9lectionnant Delete .","title":"Editeur (Contenu)"},{"location":"dashboard-pages-editeur-options/","text":"\u00c9diteur (Options) L'\u00e9diteur de page dans l'administration est un puissant \u00e9diteur de texte et gestionnaire de page qui vous permet de cr\u00e9er le contenu de votre page (y compris les fichiers multim\u00e9dias), ses options de publication et de taxonomie, ses param\u00e8tres, ses remplacements et ses options sp\u00e9cifiques au th\u00e8me. Il s'agit essentiellement d'un guichet unique pour g\u00e9rer une page sp\u00e9cifique. Dans cette page, nous passerons en revue les caract\u00e9ristiques et fonctionnalit\u00e9s trouv\u00e9es dans l'onglet Options de l'\u00e9diteur de page . L'acc\u00e8s \u00e0 la fonctionnalit\u00e9 Pages n\u00e9cessite une autorisation access.admin.super ou access.admin.pages.list , voir Comptes d'utilisateurs et Groupes d'utilisateurs . Vous remarquerez peut-\u00eatre les cases \u00e0 cocher \u00e0 gauche de certaines des options dans cette zone de l'administrateur. Ces cases indiquent que vous souhaitez remplacer les valeurs par d\u00e9faut pour cette page. Si vous ne les cochez pas, vous revenez \u00e0 l'\u00e9tat vide ou par d\u00e9faut. \u00c9dition Cette section concerne le contr\u00f4le de la mani\u00e8re dont votre contenu est publi\u00e9. Vous pouvez publier (ou d\u00e9publier) du contenu, d\u00e9finir des dates de publication ainsi que des dates et heures de d\u00e9publication et cr\u00e9er des valeurs de m\u00e9tadonn\u00e9es sp\u00e9cifiques \u00e0 la page. OPTION DESCRIPTION Published Par d\u00e9faut, une page est publi\u00e9e \u00e0 moins que vous ne d\u00e9finissiez explicitement publi\u00e9 : faux ou via une publish_date situ\u00e9e dans le futur, ou une unpublish_date dans le pass\u00e9. Date La variable date permet de d\u00e9finir sp\u00e9cifiquement une date associ\u00e9e \u00e0 cette page. Published Date Il s'agit de la date de publication officielle de la page. Il peut fournir une date pour d\u00e9clencher automatiquement la publication. Unpublished Date Il s'agit de la date/heure que vous souhaitez marquer pour que la page d\u00e9clenche automatiquement la d\u00e9publication. Metadata Valeurs de m\u00e9tadonn\u00e9es par d\u00e9faut qui seront affich\u00e9es sur chaque page \u00e0 moins qu'elles ne soient remplac\u00e9es par la page. Taxonomies La zone Taxonomies est l'endroit o\u00f9 vous pouvez configurer les propri\u00e9t\u00e9s organisationnelles de votre page. Dans quelle(s) cat\u00e9gorie(s) la page appara\u00eetra, ses balises, etc. peuvent \u00eatre configur\u00e9es ici. OPTION DESCRIPTION Category Ce champ vous permet de d\u00e9finir une ou plusieurs cat\u00e9gories pour la page. Il est utile pour le tri et le filtrage de contenu. Tag Les balises sont un excellent moyen de fournir des informations sur le contenu de votre page. Il est utile pour les sites ax\u00e9s sur le contenu en tant que m\u00e9canisme d'organisation et de filtrage. Month Plan du site Avoir un bon sitemap propre est important pour plusieurs raisons. Parmi eux, la navigation des utilisateurs et l'optimisation des moteurs de recherche (SEO). La mise en place d'un sitemap rend votre site intrins\u00e8quement plus convivial pour les moteurs de recherche, ce qui peut avoir un impact direct sur le classement. Cette zone de la page d'options n'est disponible que si vous installez le plugin Sitemap . OPTION DESCRIPTION Sitemap Change Frequency Ce menu d\u00e9roulant vous permet de d\u00e9finir une fr\u00e9quence \u00e0 laquelle le plan du site de la page est mis \u00e0 jour. Cela peut \u00eatre \u00e0 chaque fois qu'un changement est effectu\u00e9, toutes les heures, tous les jours, toutes les semaines, tous les mois, tous les ans ou jamais. Par d\u00e9faut, les options globales du sitemap sont utilis\u00e9es. Sitemap Priority D\u00e9finit la priorit\u00e9 de cette page dans votre plan du site.","title":"Editeur (Options)"},{"location":"dashboard-pages-editeur-securite/","text":"\u00c9diteur (S\u00e9curit\u00e9) Onglet S\u00e9curit\u00e9 > Acc\u00e8s \u00e0 la page Cette section d\u00e9finit l'acc\u00e8s frontal \u00e0 la page. OPTION DESCRIPTION Menu Visibility Requires Access R\u00e9glez sur Oui si la page doit \u00eatre affich\u00e9e dans les menus uniquement si l'utilisateur peut y acc\u00e9der. Page Access L'utilisateur avec les autorisations d'acc\u00e8s suivantes peut acc\u00e9der \u00e0 la page. Onglet S\u00e9curit\u00e9 > Autorisations de page Cette section d\u00e9finit l'acc\u00e8s administratif \u00e0 la page. CRUD ACL sp\u00e9cifique \u00e0 la page fonctionne en utilisant uniquement des groupes d'utilisateurs. De plus, il a deux groupes sp\u00e9ciaux nomm\u00e9s autors et defaults , qui donnent un acc\u00e8s sp\u00e9cial aux propri\u00e9taires de pages, et un repli par d\u00e9faut \u00e0 tous les utilisateurs connect\u00e9s. OPTION DESCRIPTION Inherit Permissions H\u00e9riter l'ACL de la page parent. Page Authors Les membres des auteurs de la page ont un acc\u00e8s de niveau propri\u00e9taire \u00e0 cette page d\u00e9finie dans le groupe de pages sp\u00e9cial \u00ab Auteurs \u00bb. Page Groups Les membres des groupes de pages ont un acc\u00e8s sp\u00e9cial \u00e0 cette page. Pour plus d'informations sur le fonctionnement des autorisations CRUD, veuillez consulter les autorisations de page .","title":"Editeur (S\u00e9curit\u00e9)"},{"location":"dashboard-pages-permissions/","text":"display: block; border-style: none; text-align: center; background: white; max-width: 100%; margin: 3rem auto; padding: 3px; text-align: center; } Autorisations de page Autorisations des pages Les autorisations d'utilisateur/de groupe pour les pages sont : OPTION VALEUR DESCRIPTION Configuration admin.configuration Donne \u00e0 l'utilisateur l'acc\u00e8s \u00e0 la zone de configuration de l'administration. \u293f Pages Configuration admin.configuration.pages Donne \u00e0 l'utilisateur l'acc\u00e8s \u00e0 la configuration des pages trouv\u00e9e dans la zone Pages de l'administration. Pages admin.pages Donne \u00e0 l'utilisateur un acc\u00e8s complet \u00e0 la zone Pages de l'administration. \u293f Create admin.pages.create Donne \u00e0 l'utilisateur l'acc\u00e8s Cr\u00e9er des pages. \u293f Read admin.pages.read Donne \u00e0 l'utilisateur l'acc\u00e8s Lire aux pages. \u293f Update admin.pages.update Donne \u00e0 l'utilisateur l'acc\u00e8s Mise \u00e0 jour des pages. \u293f Delete admin.pages.delete Donne \u00e0 l'utilisateur l'acc\u00e8s Supprimer aux pages. \u293f List admin.pages.list Donne \u00e0 l'utilisateur l'acc\u00e8s \u00e0 la zone Pages de l'administration. AVERTISSEMENT : Toutes les actions dans Grav ne sont v\u00e9rifi\u00e9es que par rapport \u00e0 un seul type d'autorisation. Si vous emp\u00eachez l'utilisateur de r\u00e9pertorier ou de lire des pages dans l'administration, mais autorisez toujours les utilisateurs \u00e0 cr\u00e9er, mettre \u00e0 jour et supprimer, ils peuvent effectuer ces actions. Cela signifie que m\u00eame si les utilisateurs ne peuvent pas voir les Pages dans l'administration, ils peuvent visiter directement la page d'\u00e9dition et effectuer ces actions \u00e0 partir de l\u00e0. ASTUCE : \u00c0 partir de Grav 1.7, vous pouvez et devez restreindre l'acc\u00e8s CRUD pour les pages individuelles et leurs enfants directement \u00e0 partir des pages elles-m\u00eames. Les valeurs possibles pour les autorisations sont : OPTION VALEUR DESCRIPTION Allowed true Autorise l'ex\u00e9cution d'une action s'il n'y a pas d'autorisation Refus\u00e9e au m\u00eame niveau. Denied false Emp\u00eache l'ex\u00e9cution de l'action. Si l'utilisateur a d\u00e9fini \u00e0 la fois Autoris\u00e9 et Refus\u00e9 , l'autorisation Refus\u00e9e l'emporte. Not set null Aucun effet, mais agit comme Refus\u00e9e si aucune autre r\u00e8gle ne s'applique. Les autorisations d\u00e9finies sp\u00e9cifiquement pour le compte d'utilisateur ont priorit\u00e9 sur les autorisations de groupe. Si l'autorisation n'a pas \u00e9t\u00e9 d\u00e9finie dans le compte d'utilisateur, la v\u00e9rification d'acc\u00e8s sera effectu\u00e9e pour tous les groupes d'utilisateurs auxquels l'utilisateur appartient. Si l'un des groupes d'utilisateurs a refus\u00e9 l'action, l'utilisateur n'a aucune autorisation pour l'action. Sinon, si l'un des groupes d'utilisateurs a autoris\u00e9 l'action, l'autorisation sera accord\u00e9e. Si l'autorisation n'a \u00e9t\u00e9 d\u00e9finie dans aucun des groupes de l'utilisateur, l'autorisation de super utilisateur agit comme universellement autoris\u00e9e, sinon refus\u00e9e sera appliqu\u00e9e. Les autorisations d\u00e9finies pour les comptes d'utilisateurs et les groupes d'utilisateurs agissent comme des autorisations par d\u00e9faut pour la gestion des pages. Toutes ces r\u00e8gles peuvent \u00eatre remplac\u00e9es dans l'onglet S\u00e9curit\u00e9 de n'importe quelle page. Flux de travail de v\u00e9rification de l'acc\u00e8s CRUD \u00e0 la page Le flux de travail de v\u00e9rification d'autorisation CRUD pour une page individuelle est le suivant : D\u00e9finir l' action = cr\u00e9er , lire , mettre \u00e0 jour , supprimer ou lister Parcourir tous les groupes de pages \u00e0 partir de la page actuelle match au groupe d' auteurs sp\u00e9ciaux si l'utilisateur est r\u00e9pertori\u00e9 dans les auteurs de la page match au groupe sp\u00e9cial par d\u00e9faut si l'utilisateur est connect\u00e9 match au groupe si l'utilisateur a \u00e9galement le groupe si match si l' action autorise le retour de Refuser : s'arr\u00eate imm\u00e9diatement et renvoie false si l'action autorise le retour de Autoriser : d\u00e9finir le drapeau d'autorisation = true passer au groupe suivant Apr\u00e8s avoir parcouru tous les groupes, v\u00e9rifiez si l'utilisateur a l'autorisation pour l'action si le drapeau d'autorisation est true : renvoie true V\u00e9rifiez les autorisations d'administration globale des pages de l'utilisateur (une seule fois) si l' action autorise le retour de Refuser : renvoie false si l' action autorise le retour de Autoriser : renvoie true V\u00e9rifier si la page h\u00e9rite des autorisations parentales si Inherit Permissions = Yes , faire les m\u00eames v\u00e9rifications avec la page parent sinon retourne null Page racine Page racine La page racine est une page sp\u00e9ciale dans Grav 1.7+ qui permet aux administrateurs du site de d\u00e9finir des autorisations par d\u00e9faut pour toutes les pages. Il ne peut \u00eatre vu que par un super utilisateur ou un utilisateur disposant des droits de configuration des pages . La page racine sera enregistr\u00e9e dans le fichier user/pages/root.md et ne contient aucun contenu car la page est actuellement inaccessible (cela peut changer \u00e0 l'avenir).","title":"Permissions"},{"location":"dashboard-pages/","text":"pages La page Pages vous donne un acc\u00e8s \u00e9ditorial rapide au contenu de votre site. C'est ici que vous pouvez acc\u00e9der \u00e0 l'\u00e9diteur d'une page, supprimer des pages, cr\u00e9er de nouvelles pages et savoir si une page est visible en un coup d'\u0153il. L'acc\u00e8s \u00e0 la fonctionnalit\u00e9 Pages n\u00e9cessite une autorisation access.admin.super ou access.admin.pages.list , voir Comptes d'utilisateurs et Groupes d'utilisateurs . Si vous cr\u00e9ez ou modifiez fr\u00e9quemment du contenu sur votre site, cette zone de l'admin vous deviendra tr\u00e8s famili\u00e8re. Ajout de nouvelles pages Trois boutons bordent le haut du panneau d'administration des Pages . Le bouton Back vous renvoie au tableau de bord , tandis que les boutons Add Page et Add Modular lancent la cr\u00e9ation de nouvelles pages pour votre site. Ci-dessous, nous d\u00e9composons les options disponibles lorsque vous s\u00e9lectionnez ces boutons. Ajouter une page Le bouton Add Page cr\u00e9e une page non modulaire pour votre site. Une fois s\u00e9lectionn\u00e9, une fen\u00eatre contextuelle appara\u00eetra vous permettant de saisir un Title et un Folder Name , d'attribuer une Parent Page et un Display Template , ainsi que de d\u00e9finir si la page doit \u00eatre visible ou masqu\u00e9e. OPTION DESCRIPTION Page Title C'est ici que vous entrez le titre de la page que vous cr\u00e9ez. Folder Name Vous pouvez d\u00e9finir un nom de dossier personnalis\u00e9 pour la page ou conserver celui g\u00e9n\u00e9r\u00e9 automatiquement en fonction du titre. Parent Page Ceci d\u00e9finit la page parent de la nouvelle page. Peut \u00eatre un enfant d'une autre page (comme la page d'accueil ou le blog) ou d\u00e9fini \u00e0 la racine de votre site. En d\u00e9finissant la valeur de l'option child_type dans le frontmatter d'une page parent, un Display Template par d\u00e9faut sera automatiquement s\u00e9lectionn\u00e9. Display Template Vous pouvez choisir le mod\u00e8le fourni par le th\u00e8me que vous souhaitez appliquer \u00e0 la page. Visible D\u00e9finit si vous voulez ou non que la page soit visible dans la navigation. Peut \u00eatre r\u00e9gl\u00e9 sur Auto pour que cela soit d\u00e9termin\u00e9 pour vous. Dans le r\u00e9glage automatique, s'il y a une autre page s\u0153ur qui utilise un pr\u00e9fixe num\u00e9rique, elle en utilise un et est donc visible. Sinon, il ne l'affiche pas. Une fois que vous avez rempli ces informations, s\u00e9lectionnez Continue pour acc\u00e9der \u00e0 l'\u00e9diteur de la nouvelle page. Nous couvrirons l'\u00e9diteur de page plus en d\u00e9tail dans le guide suivant . Le fait qu'une page soit visible ou non dans ces param\u00e8tres n'a d'effet que sur la navigation. La capacit\u00e9 d'une page \u00e0 \u00eatre visit\u00e9e par un navigateur est d\u00e9termin\u00e9e par les param\u00e8tres de publication de la page . Ajouter une page modulaire Le deuxi\u00e8me bouton en haut de la zone Page s de l'administration vous permet d'ajouter une sous-page modulaire \u00e0 votre site. Les pages modulaires sont diff\u00e9rentes des pages ordinaires car elles sont en fait une collection de pages, organis\u00e9es et affich\u00e9es sur une seule page. Ce bouton permet notamment de cr\u00e9er des sous-pages et de les affecter \u00e0 une page modulaire parente. Voici une r\u00e9partition des champs et des options qui apparaissent dans la fen\u00eatre contextuelle du bouton Add Modular Page . Option Description Page Title D\u00e9finit un titre pour la page modulaire. Folder Name Vous pouvez d\u00e9finir un nom de dossier personnalis\u00e9 pour la page ou conserver celui g\u00e9n\u00e9r\u00e9 automatiquement en fonction du titre. Page D\u00e9finit la page parente de la nouvelle sous-page modulaire. Il s'agit de la page sur laquelle le contenu de votre nouvelle page modulaire appara\u00eetra. Modular Template Affiche une liste de mod\u00e8les fournis par le th\u00e8me pour les pages modulaires parmi lesquelles vous pouvez choisir pour la nouvelle page. Une fois que vous avez rempli ces informations, s\u00e9lectionnez Continue pour acc\u00e9der \u00e0 l'\u00e9diteur de la nouvelle page. Nous couvrirons l'\u00e9diteur de page plus en d\u00e9tail dans le guide suivant . Liste des pages La liste des pages qui appara\u00eet dans cette zone vous donne un acc\u00e8s rapide \u00e0 toutes vos pages actuelles, ainsi qu'une m\u00e9thode en un coup d'\u0153il pour voir si les pages sont visibles ou non. La s\u00e9lection du titre de n'importe quelle page vous am\u00e8nera directement \u00e0 l'\u00e9diteur de cette page. La grande ic\u00f4ne X \u00e0 droite de chaque page vous permet de supprimer la page. Si vous survolez l'ic\u00f4ne directement \u00e0 gauche d'une page, elle vous indiquera son statut actuel. Par exemple, il peut indiquer Page \u2022 Routable \u2022 Visible si une page est routable (visible via l'URL) et visible (appara\u00eet dans les menus de navigation). Vous pouvez filtrer et rechercher vos pages pour trouver facilement la page exacte que vous recherchez. Par exemple, \u00e0 l'aide de l'option Add Filters , vous pouvez filtrer les pages par type afin que seules les pages modulaires , visibles et/ou routables apparaissent dans la liste. Si vous avez un titre de page sp\u00e9cifique (ou une partie de titre) en t\u00eate, vous pouvez utiliser la barre de recherche pour trouver rapidement la page sp\u00e9cifique que vous recherchez.","title":"Pages"},{"location":"dashboard-plugin/","text":"Plugins La zone Plugins de l'administration vous permet de g\u00e9rer vos plugins, d'en ajouter de nouveaux, de supprimer ceux qui existent d\u00e9j\u00e0 et d'acc\u00e9der rapidement \u00e0 des liens vers la documentation et d'autres informations. Dans cette page, nous explorerons en d\u00e9tail cette zone de l'administrateur, y compris comment activer et d\u00e9sactiver les plugins install\u00e9s, et en ajouter de nouveaux facilement. L'acc\u00e8s \u00e0 la fonctionnalit\u00e9 Plugins n\u00e9cessite une autorisation access.admin.super ou access.admin.plugins . Contr\u00f4les La zone Contr\u00f4les en haut de la page vous donne la possibilit\u00e9 d'ajouter de nouveaux plugins, ainsi que de v\u00e9rifier les mises \u00e0 jour des plugins existants. Le bouton Ajouter vous am\u00e8ne \u00e0 une page r\u00e9pertoriant tous les plugins Grav actuellement disponibles, vous permettant de visualiser leurs informations et de les installer en s\u00e9lectionnant le bouton Installer \u00e0 droite du plugin. L'ic\u00f4ne indique que le plugin est cr\u00e9\u00e9 et support\u00e9 par l'\u00e9quipe Grav. Les plugins sans cette ic\u00f4ne ont \u00e9t\u00e9 cr\u00e9\u00e9s par des d\u00e9veloppeurs tiers. Plugins install\u00e9s Cette zone de l'administrateur des plugins vous montre, en un coup d'\u0153il, quels plugins sont actuellement install\u00e9s sur votre site Grav. De plus, vous pouvez activer et d\u00e9sactiver ces plugins en s\u00e9lectionnant l'ic\u00f4ne bascule \u00e0 droite de chaque plugin. La s\u00e9lection de l'ic\u00f4ne en forme de chevron vous donnera plus d'informations sur le plugin, y compris son auteur, la page d'accueil du projet et le gestionnaire de bogues, ainsi que sa licence et une br\u00e8ve description. Vous pouvez \u00e9galement acc\u00e9der rapidement au fichier Lisez-moi du plug-in pour obtenir des informations suppl\u00e9mentaires et un guide d'utilisation. Vous pouvez \u00e9galement cliquer sur le nom du plugin pour acc\u00e9der \u00e0 une page plus d\u00e9taill\u00e9e comprenant la zone des param\u00e8tres du plugin o\u00f9 vous pouvez configurer le plugin.","title":"Plugins"},{"location":"dashboard-plugins-options/","text":"Options Le plugin Admin Panel a son propre ensemble d'options accessibles dans la zone Plugins de l'administrateur. Pour les atteindre, acc\u00e9dez simplement \u00e0 Plugins> Panneau d'administration et s\u00e9lectionnez le lien du titre du plug-in appel\u00e9 Panneau d'administration . Cela ouvrira une page remplie d'options utiles pour vous aider \u00e0 personnaliser votre exp\u00e9rience avec l'administrateur. Informations sur les plugins Le haut de la page des options du panneau d'administration vous donne des informations sur le plug-in du panneau d'administration. Cela inclut l'auteur du plug-in, la page d'accueil et la licence, ainsi que d'autres liens et informations pour vous aider \u00e0 trouver des informations suppl\u00e9mentaires et \u00e0 signaler tout bogue. C'est une fonctionnalit\u00e9 assez standard dans la page d'options de n'importe quel plugin. Bases La section Base de cette page vous propose un ensemble d'options pour vous aider \u00e0 d\u00e9finir votre exp\u00e9rience au sein de l'administrateur. Cela inclut la possibilit\u00e9 de modifier le texte qui appara\u00eet en haut de la barre lat\u00e9rale, de cr\u00e9er un chemin personnalis\u00e9 vers l'administrateur, etc. Nous avons d\u00e9compos\u00e9 ces options et ce qu'elles font ci-dessous. OPTION DESCRIPTION Enable Admin Caching La mise en cache dans l'administration peut \u00eatre activ\u00e9e ou d\u00e9sactiv\u00e9e ici. Cela vous permet de d\u00e9sactiver la mise en cache de l'administrateur sans affecter la mise en cache frontale. Administrator Path La modification du chemin d'acc\u00e8s \u00e0 l'administrateur s'effectue ici. Le chemin par d\u00e9faut est /admin , mais vous pouvez en faire ce que vous voulez \u00e0 partir de ce champ. Logo Text C'est ici que vous d\u00e9finissez le texte qui appara\u00eet en haut de la barre lat\u00e9rale de l'administrateur. Body Classes Vous voulez donner un look diff\u00e9rent au corps de votre admin ? Vous pouvez ajouter des classes de corps ici. S\u00e9parez plusieurs classes avec un espace. Sidebar Activation Choisissez entre les m\u00e9thodes Tab et Hover pour d\u00e9velopper la barre lat\u00e9rale. Hover Delay D\u00e9finissez le d\u00e9lai dont votre curseur a besoin pour survoler la barre lat\u00e9rale compress\u00e9e pour se d\u00e9velopper en mode Hover . Sidebar Size Choisissez entre Automatique et Petite comme taille de barre lat\u00e9rale par d\u00e9faut. Edit Mode Choisissez votre \u00e9diteur de contenu par d\u00e9faut. Par d\u00e9faut, les options sont Normal et Expert . Use Google Fonts Utilisez les polices personnalis\u00e9es Google. D\u00e9sactivez-le pour utiliser Helvetica. Utile lors de l'utilisation du cyrillique et d'autres langues avec des caract\u00e8res non pris en charge. Show GitHub Link Activez ou d\u00e9sactivez l'affichage du message \"Vous avez trouv\u00e9 un probl\u00e8me ? Veuillez le signaler sur GitHub.\". Automatically Check for Updates Choisissez de v\u00e9rifier automatiquement les mises \u00e0 jour du plug-in du panneau d'administration . Session Timeout D\u00e9finissez ici le d\u00e9lai d'expiration de la session (en secondes). Tableau de bord Cette section de la page vous permet de personnaliser les \u00e9l\u00e9ments qui apparaissent dans le tableau de bord principal de l'administrateur. Vous n'\u00eates pas fan du fil d'actualit\u00e9 et souhaitez vous en d\u00e9barrasser ? Vous souhaitez rationaliser votre tableau de bord en une ou deux sections que vous aimez ? C'est ici que vous pouvez le faire. OPTION DESCRIPTION Maintenance Widget Activez ou d\u00e9sactivez l'affichage de la zone Maintenance de la page principale du tableau de bord dans l'Admin. Statistics Widget Activez ou d\u00e9sactivez l'affichage de la zone Statistiques de la page principale du tableau de bord dans l'Admin. Notifications Feed Widget Activez ou d\u00e9sactivez l'affichage de la zone de Notifications de la page principale du tableau de bord dans l'administration. News Feed Widget Activez ou d\u00e9sactivez l'affichage de la zone News Feed de la page principale du tableau de bord dans l'administration. Latest Pages Widget Activez ou d\u00e9sactivez l'affichage de la zone Derni\u00e8res pages de la page principale du tableau de bord dans l'administration. Notifications Vous pouvez activer ou d\u00e9sactiver des types sp\u00e9cifiques de notifications \u00e0 partir de cette section. Vous pouvez d\u00e9sactiver les notifications de mise \u00e0 jour de flux, ainsi que les notifications pour les plugins et/ou les th\u00e8mes. OPTION DESCRIPTION Feed Notifications Activez ou d\u00e9sactivez les notifications bas\u00e9es sur les flux dans l'administration. Dashboard Notifications Activez ou d\u00e9sactivez les notifications bas\u00e9es sur le tableau de bord dans l'administration. Plugins Notifications Activez ou d\u00e9sactivez les notifications bas\u00e9es sur les plugins dans l'administration. Themes Notifications Activez ou d\u00e9sactivez les notifications bas\u00e9es sur des th\u00e8mes dans l'administration. Popularit\u00e9 L'une des fonctionnalit\u00e9s int\u00e9ressantes de l'administrateur est sa capacit\u00e9 \u00e0 suivre et \u00e0 afficher les informations sur le trafic \u00e0 partir du tableau de bord de l'administrateur. Cette section des options du plug-in Admin vous permet d'activer ou de d\u00e9sactiver le suivi du trafic et de configurer l'affichage de ces donn\u00e9es. OPTION DESCRIPTION Visitor tracking Vous pouvez activer ou d\u00e9sactiver la fonction de suivi des visiteurs ici. Days of stats Ce champ vous permet de d\u00e9finir le nombre de jours de donn\u00e9es de visiteurs conserv\u00e9es dans le graphique avant d'\u00eatre supprim\u00e9es. Ignore Ignorer le trafic vers des URL sp\u00e9cifiques de votre site. Par exemple /test ou /modular .","title":"Options"},{"location":"dashboard-themes/","text":"Th\u00e8mes Les th\u00e8mes dans l'administration sont l'endroit o\u00f9 vous pouvez ajouter et g\u00e9rer les th\u00e8mes de votre site. Dans cette page, nous allons explorer comment g\u00e9rer les th\u00e8mes existants et en ajouter un nouveau \u00e0 votre site. L'acc\u00e8s \u00e0 la fonctionnalit\u00e9 Th\u00e8mes n\u00e9cessite une autorisation access.admin.super ou access.admin.themes . Contr\u00f4les En haut de la zone Th\u00e8mes de l'administration, vous trouverez les boutons Retour , Ajouter et Rechercher les mises \u00e0 jour. Retour vous ram\u00e8ne simplement au tableau de bord ou \u00e0 la page principale des th\u00e8me s si vous \u00eates plus profond dans cette zone de l'administrateur. V\u00e9rifier les mises \u00e0 jour v\u00e9rifie vos th\u00e8mes actuellement install\u00e9s pour toutes les mises \u00e0 jour. Ajout d'un nouveau th\u00e8me Ajouter affiche un affichage des th\u00e8mes Grav actuellement disponibles que vous pouvez ajouter \u00e0 votre site. C'est un moyen rapide et facile d'installer un nouveau th\u00e8me. S\u00e9lectionnez simplement le bouton Installer pour installer le th\u00e8me. Cela vous am\u00e8nera au panneau d'informations du nouveau th\u00e8me qui contient des informations plus d\u00e9taill\u00e9es sur le th\u00e8me, ainsi que toutes les options d\u00e9finies dans son fichier de plans . Une fois que vous \u00eates satisfait des modifications apport\u00e9es aux param\u00e8tres, s\u00e9lectionnez simplement le bouton Enregistrer pour enregistrer vos modifications. Vous pouvez \u00e9galement supprimer le th\u00e8me de votre site en s\u00e9lectionnant le bouton rouge Supprimer le th\u00e8me dans la zone inf\u00e9rieure droite du panneau. Th\u00e8mes install\u00e9s La section Th\u00e8mes Install\u00e9s affiche vos th\u00e8mes actuellement install\u00e9s. La s\u00e9lection de la vignette d'un th\u00e8me vous am\u00e8ne \u00e0 la page d'informations de ce th\u00e8me, tandis que le bouton gris Activer au bas de chaque vignette vous permet de d\u00e9finir ce th\u00e8me comme th\u00e8me actif par d\u00e9faut pour votre site. Le th\u00e8me actuellement actif est indiqu\u00e9 par l'ic\u00f4ne Th\u00e8me Actif . En haut de chaque vignette, vous verrez le nom et le num\u00e9ro de version actuelle de chaque th\u00e8me. L'ic\u00f4ne de coche violette indique qu'un th\u00e8me a \u00e9t\u00e9 cr\u00e9\u00e9 par l'\u00e9quipe Grav. Les th\u00e8mes sans cette ic\u00f4ne sont cr\u00e9\u00e9s et g\u00e9r\u00e9s par des d\u00e9veloppeurs tiers.","title":"Th\u00e9mes"},{"location":"dashboard/","text":"Tableau de bord Le tableau de bord sert de centre d'informations pour le plug-in du Panneau d'Administration . \u00c0 partir de cette page, vous pouvez v\u00e9rifier les statistiques de trafic, les informations de maintenance, les mises \u00e0 jour de Grav, cr\u00e9er de nouvelles sauvegardes, voir les derni\u00e8res mises \u00e0 jour de page, ainsi que vider rapidement le cache de Grav. C'est un point de d\u00e9part pour votre exp\u00e9rience administrative. Le contenu du tableau de bord changera en fonction des autorisations de l'utilisateur. Par exemple, donner access.admin.super d\u00e9verrouille tout. Si ce niveau d'acc\u00e8s n'est pas accord\u00e9, access.admin.maintenance autorise l'effacement et les mises \u00e0 jour du cache. access.admin.pages permet d'acc\u00e9der aux pages. access.admin.statistics permet d'afficher les statistiques de consultation des pages du site. V\u00e9rification du cache et des mises \u00e0 jour En haut du tableau de bord, vous trouverez deux boutons. Le premier d'entre eux initie un vidage du cache Grav. Cliquer sur le bouton principal Clear Cache effacera tout le cache, y compris toute mise en cache des actifs et des images. \u00c0 l'aide de la fonction de drop-down \u00e0 droite, vous pouvez choisir parmi des types sp\u00e9cifiques de processus d'effacement du cache. Par exemple, si vous souhaitez uniquement vider le cache d'images sans perturber les autres donn\u00e9es mises en cache, vous pouvez le faire ici. Le deuxi\u00e8me bouton lance une v\u00e9rification de la mise \u00e0 jour de votre site. Cela inclut tous les plugins, th\u00e8mes et Grav pris en charge. Si de nouvelles mises \u00e0 jour sont d\u00e9couvertes, vous recevez une notification sur le tableau de bord. Ce n'est pas la seule m\u00e9thode que Grav a pour v\u00e9rifier les nouvelles mises \u00e0 jour. Les v\u00e9rifications de mise \u00e0 jour sont \u00e9galement d\u00e9clench\u00e9es chaque fois qu'une nouvelle page de l'administrateur est charg\u00e9e et mise en cache pendant une journ\u00e9e. Si vous effacez tout le cache de Grav et chargez une nouvelle page dans l'administrateur, une v\u00e9rification de la mise \u00e0 jour aura automatiquement lieu. Maintenance et Statistique de pages vues Les sections Maintenance et Page View Statistics vous permettent d'acc\u00e9der rapidement \u00e0 des informations importantes sur votre site. Du c\u00f4t\u00e9 de la Maintenance , vous pouvez voir un graphique en pourcentage vous permettant de savoir combien de morceaux de Grav sont compl\u00e8tement \u00e0 jour. Si de nouvelles mises \u00e0 jour sont disponibles, un bouton Update appara\u00eetra et vous permettra d'effectuer une mise \u00e0 jour en un clic pour tous les plugins et th\u00e8mes. Ce bouton ne mettra pas \u00e0 jour Grav lui-m\u00eame, qui vous informe d'une mise \u00e0 jour requise juste au-dessus des sections Maintenance et Page View Statistics. Vous pouvez mettre \u00e0 jour le noyau de Grav en s\u00e9lectionnant le bouton Update Grav Now dans sa barre de notification. Il y a aussi un graphique indiquant combien de temps le site est rest\u00e9 sans \u00eatre sauvegard\u00e9. La s\u00e9lection du bouton Backup g\u00e9n\u00e9rera un fichier zip que vous pourrez t\u00e9l\u00e9charger et stocker en tant que sauvegarde des donn\u00e9es de votre site. Les sauvegardes sont \u00e9galement stock\u00e9es dans le dossier backup/ de votre installation Grav. Vous pouvez les r\u00e9cup\u00e9rer via FTP ou les outils de gestion Web fournis par votre soci\u00e9t\u00e9 d'h\u00e9bergement. La section Statistiques sur les pages vues affiche des donn\u00e9es de trafic simples et en un coup d'\u0153il, d\u00e9composant le nombre de pages vues que le front-end du site a re\u00e7ues au cours du dernier jour, de la semaine et du mois (30 jours). Page View Les statistiques de la semaine \u00e9coul\u00e9e sont affich\u00e9es dans un graphique \u00e0 barres s\u00e9par\u00e9s par jours de la semaine. Derni\u00e8res mises \u00e0 jour des pages La zone derni\u00e8res mises \u00e0 jour de page de l'administrateur vous donne un aper\u00e7u des derni\u00e8res modifications de contenu apport\u00e9es aux pages de votre site Grav. Cette liste est tri\u00e9e par la derni\u00e8re mise \u00e0 jour et est g\u00e9n\u00e9r\u00e9e chaque fois que vous actualisez la page. La s\u00e9lection du titre d'une page dans cette liste vous am\u00e8nera directement \u00e0 l'\u00e9diteur de la page dans l'admin. Le bouton G\u00e9rer les pages vous am\u00e8ne au panneau d'administration des Pages .","title":"Tableau de bord"},{"location":"depannage-403/","text":"403 Interdit Il existe un probl\u00e8me obscur mais persistant avec Apache sous Windows provoquant une erreur interdite 403. Fondamentalement, Apache n'autorisera pas le : dans l'URL qui fonctionne sur d'autres syst\u00e8mes en raison d'un probl\u00e8me de s\u00e9curit\u00e9 bas\u00e9 sur le fait que les chemins Windows peuvent contenir des deux-points : C:\\some\\path . Nous avons r\u00e9solu ce probl\u00e8me en fournissant une option configurable pour le s\u00e9parateur de param\u00e8tres qui est par d\u00e9faut : Modifiez simplement votre user/config/system.yaml et ajoutez ceci en haut : param_sep : ';' Cela configurera Grav pour qu'il utilise un point-virgule plut\u00f4t qu'un deux-points pour des param\u00e8tres tels que http://yoursite.com/blog/tag:something sera d\u00e9sormais : http://yoursite.com/blog/tag;something . Probl\u00e8me 403 dans l'administration. Si vous avez install\u00e9 mod_security, nous avons eu des rapports de r\u00e8gle 350147 (http://wiki.atomicorp.com/wiki/index.php/WAF_350147) d\u00e9clenchant un faux positif. Ajoutez cette r\u00e8gle \u00e0 la liste blanche ou demandez \u00e0 l'assistance de votre h\u00e9bergeur de le faire. 1 | ModSecurity: [file \"/etc/httpd/conf/modsecurity.d/rules/tortix/ modsec/50_plesk_basic_asl_rules.conf\"] [line \"308\"] [id \"350147\"] [rev \"143\"] [msg \"Protected by Atomicorp.com Basic Non-Realtime WAF Rules: Potentially Untrusted Web Content Detected\"] [data \"\"] [severity \"CRITICAL\"] Access denied with code 403 (phase 2). Match of \"rx ((?:submit(?:\\\\+| )?(request)?(?:\\\\+| )?>+|<<(?:\\\\+| ) remove|(?:sign ?in|log ?(?:in|out)|next|modifier|envoyer|add|continue| weiter|account|results|select)?(?:\\\\+| )?>+)$|^< ?\\\\??(?: |\\\\+)?xml| ^<samlp|^>> ?$)\" against \"ARGS:notifications\" required. [hostname \"mydomain\"] [uri \"/grav/admin/notifications.json/task: processNotifications\"] [unique_id \"WXoYHcpkEKz0qCI66845gQAAAAo\"], referer: http://mydomain/grav/admin/tools","title":"403 Interdit"},{"location":"depannage-404/","text":"404 Non trouv\u00e9 Il y a plusieurs raisons pour lesquelles vous pourriez recevoir une erreur Not Found , et elles sont chacune caus\u00e9es par diff\u00e9rents facteurs. Les exemples ci-dessous concernent le serveur Web Apache, qui est le logiciel serveur le plus couramment utilis\u00e9. Utilisation IIS du fichier .htaccess. Apr\u00e8s avoir ajout\u00e9 la r\u00e9\u00e9criture d'URL au serveur IIS \u00e0 l'aide de Web Platform Installer, red\u00e9marrez le serveur IIS. Allez dans l'interface de gestion, IIS, double-cliquez sur URL Rewrite, sous Inbound Rules, cliquez sur Import Rules, sous Rules to Import, naviguez jusqu'au fichier de configuration, choisissez le fichier .htaccess \u00e0 la racine, puis cliquez sur Import. Red\u00e9marrez le serveur IIS. Acc\u00e9dez \u00e0 Grav maintenant. Fichier .htaccess manquant. La premi\u00e8re chose \u00e0 v\u00e9rifier est si vous avez le fichier .htaccess fourni \u00e0 la racine de votre installation Grav. Comme il s'agit d'un fichier cach\u00e9 , vous ne le verrez normalement pas dans les fen\u00eatres de votre explorateur ou de votre Finder. Si vous avez extrait Grav puis s\u00e9lectionn\u00e9 et d\u00e9plac\u00e9 ou copi\u00e9 les fichiers, vous avez peut-\u00eatre oubli\u00e9 ce fichier tr\u00e8s important. Il est fortement conseill\u00e9 de d\u00e9compresser Grav et de d\u00e9placer le dossier entier en place, puis de simplement renommer le dossier. Cela garantira que tous les fichiers conservent leurs positions appropri\u00e9es. Autoriser tout remplacer. Pour que le .htaccess fourni par Grav puisse d\u00e9finir les r\u00e8gles de r\u00e9\u00e9criture n\u00e9cessaires au bon fonctionnement du routage, Apache doit d'abord lire le fichier. Lorsque votre directive <Directory> ou <VirtualHost> est configur\u00e9e avec AllowOverride None , le fichier .htaccess est compl\u00e8tement ignor\u00e9. La solution la plus simple consiste \u00e0 changer cela en AllowOverride All o\u00f9 RewriteRule est utilis\u00e9, FollowSymLinks ou SymLinksIfOwnerMatch doit \u00eatre d\u00e9fini dans la directive Options. Ajoutez simplement sur la m\u00eame ligne '+FollowSymlinks' apr\u00e8s 'Options' Vous trouverez plus de d\u00e9tails sur AllowOverride et toutes les options de configuration possibles dans la documentation Apache. Probl\u00e8me de r\u00e9\u00e9criture de base. Si la page d'accueil de votre site Grav se charge, mais que toute autre page affiche cette erreur tr\u00e8s grossi\u00e8re de style Apache, la cause la plus probable est qu'il y a un probl\u00e8me avec votre fichier .htaccess . Le .htaccess par d\u00e9faut fourni avec Grav fonctionne correctement dans la plupart des cas. Cependant, il existe certaines configurations impliquant des h\u00f4tes virtuels o\u00f9 le syst\u00e8me de fichiers ne correspond pas directement \u00e0 la configuration de l'h\u00e9bergement virtuel. Dans ces cas, vous devez configurer l'option RewriteBase dans le .htaccess pour pointer vers le chemin correct. Il y a une courte explication \u00e0 cela dans le fichier .htaccess lui-m\u00eame : 1 | ## 2 | # If you are getting 404 errors on subpages, you may have to uncomment the RewriteBase entry 3 | # You should change the '/' to your appropriate subfolder. For example if you have 4 | # your Grav install at the root of your site '/' should work, else it might be something 5 | # along the lines of: RewriteBase /<your_sub_folder> 6 | ## 7 | 8 |# RewriteBase / Supprimez simplement le # avant la directive RewriteBase / pour le d\u00e9commenter et ajustez le chemin pour qu'il corresponde \u00e0 votre environnement de serveur. Nous avons inclus des informations suppl\u00e9mentaires pour vous aider \u00e0 localiser et \u00e0 d\u00e9panner votre fichier `.htaccess dans notre guide htaccess . Modules de r\u00e9\u00e9criture manquants. Certains packages de serveur Web (je regarde votre EasyPHP et WAMP !) ne sont pas livr\u00e9s avec le module de r\u00e9\u00e9criture Apache activ\u00e9 par d\u00e9faut. Ils peuvent g\u00e9n\u00e9ralement \u00eatre activ\u00e9s \u00e0 partir des param\u00e8tres de configuration d'Apache, ou vous pouvez le faire manuellement via le httpd.conf en d\u00e9commentant cette ligne (ou quelque chose de similaire) afin qu'ils soient charg\u00e9s par Apache : #LoadModule rewrite_module modules/mod_rewrite.so Red\u00e9marrez ensuite votre serveur Apache. Script de test .htaccess. Pour aider \u00e0 isoler .htaccess et r\u00e9\u00e9crire les probl\u00e8mes, vous pouvez t\u00e9l\u00e9charger ce fichier htaccess_tester.php et le d\u00e9poser dans votre r\u00e9pertoire racine Grav. Pointez ensuite votre navigateur sur http://votresite.com/htaccess_tester.php . Vous devriez obtenir un message de r\u00e9ussite et une copie du fichier Grav .htaccess affich\u00e9. Ensuite, vous pouvez tester si les r\u00e9\u00e9critures fonctionnent en sauvegardant le fichier .htaccess existant : $ | mv .htaccess .htaccess-backup Et puis essayez ce simple fichier .htaccess : 1 | <IfModule mod_rewrite.c> 2 | RewriteEngine On 3 | RewriteRule ^.*$ htaccess_tester.php 4 | </IfModule> Essayez ensuite cette URL : http://votresite.com/test . En fait, tout chemin que vous utilisez devrait afficher un message de r\u00e9ussite vous indiquant que mod_rewrite fonctionne. Une fois les tests termin\u00e9s, vous devez supprimer le fichier de test et restaurer votre fichier .htaccess : $ | rm htaccess_tester.php $ | mv .htaccess-backup .htaccess Page Grav d'erreur 404. Si vous recevez une erreur de style Grav disant Erreur 404 , votre .htaccess fonctionne correctement, mais vous essayez d'atteindre une page que Grav ne peut pas trouver. La cause la plus fr\u00e9quente de ceci est simplement que la page a \u00e9t\u00e9 d\u00e9plac\u00e9e ou renomm\u00e9e. Une autre chose \u00e0 v\u00e9rifier est si la page a un slug d\u00e9fini dans les en-t\u00eates YAML de la page. Cela remplace le nom de dossier explicite utilis\u00e9 par d\u00e9faut pour construire l'URL. Une autre cause pourrait \u00eatre que votre page n'est pas routable. L'option routable d'une page peut \u00eatre d\u00e9finie dans les en-t\u00eates de page . 404 Page introuvable sur Nginx. 404 Page introuvable sur Nginx Si votre site se trouve dans un sous-dossier, assurez-vous que votre emplacement nginx.conf pointe vers ce sous-dossier. L'exemple nginx.conf de Grav a un commentaire dans le code qui explique comment. Si votre page d'accueil fonctionne mais que d'autres pages sont introuvables, assurez-vous que votre nginx.conf est configur\u00e9 conform\u00e9ment \u00e0 l'exemple nginx.conf.","title":"404 non trouv\u00e9"},{"location":"depannage-500/","text":"500 Erreur de serveur interne Le serveur a rencontr\u00e9 une erreur interne ou une mauvaise configuration et n'a pas pu traiter votre demande. Veuillez contacter l'administrateur du serveur \u00e0 l'adresse webmaster@localhost pour l'informer de l'heure \u00e0 laquelle cette erreur s'est produite et des actions que vous avez effectu\u00e9es juste avant cette erreur. Plus d'informations sur cette erreur peuvent \u00eatre disponibles dans le journal des erreurs du serveur. *Serveur Apache/2.4.7 sur le port 80 de l'h\u00f4te local* Cette erreur peut \u00eatre d\u00e9clench\u00e9e par les \u00e9l\u00e9ments suivants : mauvaise configuration du serveur (httpd.conf) probl\u00e8mes .htaccess mod_security ou similaire Tester que PHP fonctionne. La premi\u00e8re chose \u00e0 faire est de vous assurer que PHP fonctionne correctement sur votre serveur et que Grav n'est pas la cause directe du probl\u00e8me. Pour tester cela, cr\u00e9ez simplement un fichier temporaire (supprimez-le ensuite pour des raisons de s\u00e9curit\u00e9 !) \u00e0 la racine de votre dossier Grav appel\u00e9 info.php . Ce fichier doit contenir le code PHP suivant : 1 | <?php phpinfo(); Pointez ensuite votre navigateur vers ce fichier : http://yoursite.com/your_grav_directory/info.php . Vous devriez obtenir une page de rapport r\u00e9pertoriant toutes les informations relatives \u00e0 la configuration PHP, y compris la version et les extensions charg\u00e9es. V\u00e9rifier les autorisations. Une erreur 500 peut \u00eatre d\u00e9clench\u00e9e en ayant les mauvaises autorisations. Consultez le guide des autorisations . Enregistrer le probl\u00e8me Globals. Certaines personnes qui ont r\u00e9cemment mis \u00e0 niveau vers PHP 5.5 \u00e0 partir de la version 5.4 ou 5.3 peuvent encore avoir des param\u00e8tres obsol\u00e8tes dans leur fichier php.ini. Un \u00e9l\u00e9ment qui peut provoquer une erreur 500 interne du serveur est le param\u00e8tre register_globals . Supprimez ou commentez simplement la ligne : 1 | register_global = On Red\u00e9marrez ensuite votre serveur Apache. ThreadStackSize sous Windows. Si votre serveur fonctionne sous Windows, vous pourriez obtenir une erreur de serveur interne 500 en raison du fait que ThreadStackSize est beaucoup trop petit. Ajoutez simplement ce code au bas de votre fichier httpd.conf : 1 | <IfModule mpm_winnt_module> 2 | ThreadStackSize 8388608 3 | </IfModule> Red\u00e9marrez ensuite votre serveur Apache. Options -Index. Grav utilise une option -Indexes pour ne forcer aucune liste de r\u00e9pertoires de dossiers. Certains h\u00f4tes n'aiment pas qu'Apache .htaccess manipule le param\u00e8tre Options. Nous avons vu des rapports selon lesquels le simple fait de commenter cette ligne dans le fichier .htaccess de Grav peut r\u00e9soudre les probl\u00e8mes d'erreur du serveur interne pour les utilisateurs dans cette situation : 1 | # Prevent file browsing 2 | # Options -Indexes Probl\u00e8mes de r\u00e9\u00e9criture de base. Ont eu des rapports de 500 erreurs de serveur internes sans d\u00e9finir la RewriteBase, sur l'h\u00e9bergement 1 & 1 (mais peuvent \u00e9galement s'appliquer \u00e0 d'autres). Essayez de changer 1 | # RewriteBase / \u00e0 1 | RewriteBase / Cr\u00e9dit : http://ahcox.com/webdev/1and1-internal-server-error-grav Navigation dans le panneau d'administration. Lorsque vous naviguez dans le panneau d'administration de Grav, le message d'erreur interne du serveur appara\u00eet en haut \u00e0 gauche. Cela est d\u00fb \u00e0 des autorisations incorrectes sur votre dossier /cache. Si cette erreur appara\u00eet, il est probable que vous n'ayez pas d\u00e9fini la bonne autorisation sur le dossier /cache, plut\u00f4t que de simplement rendre le dossier inscriptible, vous devez le rendre r\u00e9cursivement inscriptible. L'ex\u00e9cution de la commande ci-dessous \u00e0 partir de votre r\u00e9pertoire Grav devrait r\u00e9soudre le probl\u00e8me. $ | sudo chmod 755 cache/-R","title":"500 Erreur Interne au Serveur"},{"location":"depannage-autorisations/","text":"Autorisations Selon votre environnement d'h\u00e9bergement, les autorisations peuvent ou non \u00eatre un probl\u00e8me dont vous devez vous pr\u00e9occuper. La chose importante \u00e0 comprendre est qu'il y a un probl\u00e8me potentiel si l'utilisateur que vous utilisez pour \u00e9diter vos fichiers sur le syst\u00e8me de fichiers est diff\u00e9rent de l'utilisateur sous lequel PHP s'ex\u00e9cute (g\u00e9n\u00e9ralement le serveur Web), ou \u00e0 tout le moins, les deux utilisateurs n'ont pas acc\u00e8s en lecture/\u00e9criture \u00e0 ces fichiers. Tout d'abord, d\u00e9couvrez avec quel utilisateur Apache ou Nginx s'ex\u00e9cute en ex\u00e9cutant la commande suivante pour Apache : ps aux | grep -v root | grep apache | cut -d\\ -f1 | sort | uniq Pour Nginx : ps aux | grep -v root | grep nginx | cut -d\\ -f1 | sort | uniq Et d\u00e9couvrez quel utilisateur poss\u00e8de le fichier dans votre r\u00e9pertoire grav en ex\u00e9cutant ls -l En tant que CMS bas\u00e9 sur des fichiers, Grav doit \u00e9crire dans le syst\u00e8me de fichiers afin de cr\u00e9er des fichiers de cache et de journalisation. Il existe trois sc\u00e9narios principaux : PHP/Webserver s'ex\u00e9cute avec le m\u00eame utilisateur qui \u00e9dite les fichiers. (Pr\u00e9f\u00e9r\u00e9) C'est l'approche utilis\u00e9e par la plupart des configurations d'h\u00e9bergement partag\u00e9 et fonctionne \u00e9galement bien pour le d\u00e9veloppement local. Le billet de blog que nous avons \u00e9crit concernant MacOS Yosemite, Apache et PHP explique comment configurer Apache pour qu'il s'ex\u00e9cute en tant que compte d'utilisateur personnel. Cette approche n'est pas consid\u00e9r\u00e9e comme suffisamment s\u00e9curis\u00e9e pour \u00eatre utilis\u00e9e sur un h\u00e9bergeur d\u00e9di\u00e9, c'est pourquoi la deuxi\u00e8me ou la troisi\u00e8me option doit \u00eatre utilis\u00e9e. PHP/Webserver fonctionne avec des comptes diff\u00e9rents mais le m\u00eame groupe En utilisant un groupe partag\u00e9 entre votre utilisateur et votre compte PHP/Webserver avec les autorisations 775 et 664 , vous vous assurez que m\u00eame si vous avez deux comptes diff\u00e9rents, les deux auront un acc\u00e8s en lecture/\u00e9criture aux fichiers. Vous devriez \u00e9galement probablement d\u00e9finir un umask 0002 \u00e0 la racine afin que les nouveaux fichiers soient cr\u00e9\u00e9s avec les autorisations appropri\u00e9es. Diff\u00e9rents comptes, corrigez les autorisations manuellement La derni\u00e8re approche consiste \u00e0 avoir des comptes compl\u00e8tement diff\u00e9rents et \u00e0 mettre \u00e0 jour la propri\u00e9t\u00e9 et les autorisations des fichiers apr\u00e8s l'\u00e9dition pour s'assurer que l'utilisateur PHP/Webserver peut lire/\u00e9crire correctement. Un simple script shell de correction des autorisations peut \u00eatre utilis\u00e9 pour cela : 1 | #!/bin/ch 2 | chown -R joeblow:staff . 3 | find . -type f -exec chmod 664 {} \\; 4 | find ./bin -type f -exec chmod 775 {} \\; 5 | find . -type d -exec chmod 775 {} \\; 6 | find . -type d -exec chmod +s {} \\; Vous pouvez utiliser ce fichier et le modifier selon vos besoins pour l'utilisateur et le groupe appropri\u00e9s qui fonctionnent pour votre configuration. Ce que fait essentiellement ce script, c'est : Modifie le r\u00e9pertoire actuel, tous les fichiers et sous-dossiers en joeblow et la propri\u00e9t\u00e9 staff Recherche tous les fichiers du r\u00e9pertoire actuel et d\u00e9finit les autorisations sur 664 afin qu'ils soient RW pour Utilisateur et groupe et R pour Autres. Recherche tous les dossiers du r\u00e9pertoire actuel et d\u00e9finit les autorisations sur 775 afin qu'ils soient RWX pour l'utilisateur et le groupe et RX pour les autres. D\u00e9finit la propri\u00e9t\u00e9 de tous les r\u00e9pertoires pour s'assurer que les changements d'utilisateur et de groupe sont conserv\u00e9s Si les fichiers image dans le dossier cache sont \u00e9crits avec les mauvaises autorisations, essayez de d\u00e9finir dans votre fichier user/config/system.yaml , 1 | images: 2 | cache_perms : '0775' si la propri\u00e9t\u00e9 images est d\u00e9j\u00e0 pr\u00e9sente, ajoutez simplement cache_perms: '0775' \u00e0 la fin de celle-ci. Si cela ne fonctionne toujours pas, cr\u00e9ez un fichier setup.php dans le dossier racine Grav (celui avec index.php ), et ajoutez-y : 1 | <?php 2 | masque(0002); Si vous avez d\u00e9j\u00e0 un fichier setup.php , ajoutez simplement cette ligne en haut. Ce fichier est couramment utilis\u00e9 pour la configuration multisite, mais \u00e9tant appel\u00e9 dans chaque appel Grav, vous pouvez \u00e9galement l'utiliser pour d'autres utilisations. Co-h\u00e9bergement avec un site WordPress. En g\u00e9n\u00e9ral, Grav peut \u00eatre install\u00e9 dans un dossier de niveau racine d'un site WordPress existant et les deux CMS coexisteront bien. (N'oubliez pas de d\u00e9finir Base Rewrite dans le htaccess du dossier Grav.) Si vous rencontrez des erreurs d'autorisations avec les fichiers de cache lors de l'acc\u00e8s aux pages Admin et/ou de la visualisation de Grav, v\u00e9rifiez si WP-Engine est install\u00e9 pour ce site WordPress. Si c'est le cas, vous devrez contacter leur support pour cr\u00e9er une exception pour le dossier Grav \u00e0 partir de leur service de cache distribu\u00e9 agressif. Conseils sp\u00e9cifiques \u00e0 SELinux. Si les suggestions ci-dessus ne fonctionnent toujours pas, ex\u00e9cutez chcon -Rv system_u:object_r:httpd_sys_rw_content_t:s0 ./ dans le dossier racine Grav. Les r\u00e9f\u00e9rences: https://unix.stackexchange.com/questions/337704/selinux-is-preventing-nginx-from-writing-via-php-fpm https://github.com/getgrav/grav/issues/912#issuecomment-227627196 http://stopdisablingselinux.com http://stackoverflow.com/questions/28786047/failed-to-open-stream-on-file-put-contents-in-php-on-centos-7 http://www.serverlab.ca/tutorials/linux/web-servers-linux/configuring-selinux-policies-for-apache-web-servers/","title":"Autorisations"},{"location":"depannage-communs/","text":"Probl\u00e8mes communs Ici, vous pouvez trouver des informations sur les probl\u00e8mes et probl\u00e8mes soulev\u00e9s sur le forum Grav et sur le serveur Discord Chat qui se produisent assez fr\u00e9quemment pour que nous pensions gagner du temps et r\u00e9pertorier le probl\u00e8me et la solution pertinente dans un emplacement facile \u00e0 trouver. Impossible de se connecter au GPM. Probl\u00e8me : Le GPM est injoignable et vous obtenez cette erreur dans le panneau d'administration La solution : Tout d'abord, assurez-vous que PHP a install\u00e9 cURL et OpenSSL. Vous pouvez v\u00e9rifier cela dans le panneau d'administration, dans Configuration -> Info. Vous devriez voir une section \"OpenSSL\" avec OpenSSL support: enabled . Idem pour cURL, une section avec support cURL support: enabled . Si cela vous convient, assurez-vous que vous n'\u00eates pas derri\u00e8re un proxy. Si c'est le cas, configurez-le dans la configuration du syst\u00e8me Grav et assurez-vous qu'il n'y a pas de probl\u00e8mes de connexion . Ensuite, v\u00e9rifiez vos autorisations . Si apr\u00e8s tout ce qui pr\u00e9c\u00e8de, vous rencontrez toujours des probl\u00e8mes de connexion avec GPM, nous avons remarqu\u00e9 que sur certains serveurs (principalement des machines locales ex\u00e9cutant Windows), il y a des probl\u00e8mes lors de la v\u00e9rification du certificat SSL de getgrav.org, m\u00eame s'il s'agit d'une note A . Pour contourner ce probl\u00e8me, nous avons ajout\u00e9 une nouvelle configuration syst\u00e8me system.gpm.verify_peer qui est activ\u00e9e par d\u00e9faut. D\u00e9finissez-le sur false et r\u00e9essayez. Si, \u00e0 ce stade, cela ne fonctionne toujours pas, contactez-nous ou signalez-le si vous avez \u00e9t\u00e9 dirig\u00e9 ici via le chat/forum. V\u00e9rifiez \u00e9galement que la commande CLI fonctionne, en ouvrant une connexion SSH au serveur et en ex\u00e9cutant l'index bin/gpm et v\u00e9rifiez si c'est juste dans Admin que vous obtenez cette erreur, ou dans la ligne de commande \u00e9galement. L'interface d'administration ne d\u00e9file pas. Probl\u00e8me : lors de l'acc\u00e8s \u00e0 l'interface du plugin d'administration, la page ne d\u00e9file pas Solution : Plusieurs causes ont \u00e9t\u00e9 signal\u00e9es, mais les solutions les plus courantes sont les suivantes. Rechargez compl\u00e8tement la page en vidant le cache de votre navigateur, puis en l'actualisant. Assurez-vous que vous utilisez la derni\u00e8re version de Grav et passez \u00e0 la langue par d\u00e9faut - l'anglais. Si cela r\u00e9sout le probl\u00e8me de d\u00e9filement, veuillez signaler la langue d\u00e9fectueuse comme un probl\u00e8me . Si vous utilisez CloudFlare pour HTTPS ou en tant que CDN, leur optimisation JS - qui est activ\u00e9e par d\u00e9faut - peut bloquer le rendu des scripts. Pour le d\u00e9sactiver, connectez-vous \u00e0 CloudFlare et s\u00e9lectionnez le domaine concern\u00e9, puis effectuez l'une des actions suivantes : Pour d\u00e9sactiver compl\u00e8tement cette optimisation, acc\u00e9dez \u00e0 \"Vitesse\" et faites d\u00e9filer jusqu'\u00e0 \"Rocket Loader\". R\u00e9glez-le sur \"Off\" et CloudFlare ne bloquera pas le script, mais vous ne b\u00e9n\u00e9ficierez pas non plus de leur optimisation. Pour d\u00e9sactiver uniquement l'optimisation de l'interface d'administration de Grav, acc\u00e9dez \u00e0 \"R\u00e8gles de page\" et cliquez sur le bouton \"Cr\u00e9er une r\u00e8gle de page\". Pour le champ \"Si l'URL correspond\", renseignez votre nom de domaine, suivi de /admin , par exemple : example.com/admin . Cliquez sur \u00ab Ajouter un param\u00e8tre \u00bb et, dans la liste d\u00e9roulante, recherchez \u00ab Rocket Loader \u00bb. Lorsqu'il est s\u00e9lectionn\u00e9, modifiez la valeur dans \"S\u00e9lectionner une valeur\" sur off . Laissez le champ \"Ordre\" tel quel, par d\u00e9faut, il est d\u00e9fini sur First . Enfin, cliquez sur le bouton \"Enregistrer et d\u00e9ployer\" Si aucune des solutions ci-dessus ne fonctionne, veuillez v\u00e9rifier la console de votre navigateur pour toute erreur JavaScript signal\u00e9e ; Dans Chrome ou Firefox, appuyez sur F12 ou Ctrl+Maj+I, puis cliquez sur l'onglet \"Console\". Signalez les erreurs comme un probl\u00e8me . \u00c9chec de la r\u00e9cup\u00e9ration. \u00c0 l'int\u00e9rieur de l'administration, une fen\u00eatre contextuelle rouge \"Fetch Failed\" peut parfois appara\u00eetre. Si cela se produit de temps en temps, ne vous inqui\u00e9tez pas car cela pourrait simplement signifier un probl\u00e8me de connexion. Mais s'il appara\u00eet \u00e0 chaque fois, un probl\u00e8me rencontr\u00e9 par certains utilisateurs est que mod_security bloque les requ\u00eates r\u00e9seau de Grav. Cela peut \u00eatre r\u00e9solu en trouvant et en d\u00e9sactivant les r\u00e8gles qui sont d\u00e9clench\u00e9es, qui, selon la configuration de mod_security, peuvent \u00eatre diff\u00e9rentes d'un cas \u00e0 l'autre. Si vous utilisez votre propre serveur, un guide sur la fa\u00e7on de proc\u00e9der peut \u00eatre trouv\u00e9 dans http://www.inmotionhosting.com/support/website/modsecurity/find-and-disable-specific-modsecurity-rules , sinon contactez simplement votre fournisseur d'h\u00e9bergement et illustrez le probl\u00e8me. Probl\u00e8me connexe : admin#951 L'API Zend OPcache est restreinte. Si vous ex\u00e9cutez PHP avec Zend OPache et que vous recevez cette erreur, votre configuration OPCache actuelle limite l'acc\u00e8s \u00e0 la fonction API OPcache aux scripts uniquement \u00e0 partir d'une cha\u00eene sp\u00e9cifi\u00e9e . La solution la plus simple consiste \u00e0 trouver l'emplacement de cette directive soit dans votre fichier php.ini , soit dans un fichier opcache.ini sp\u00e9cialis\u00e9 qui est ins\u00e9r\u00e9 dans votre fichier php.in global et de d\u00e9finir cette valeur sur rien : 1 | opcache.restrict_api= Il s'agit d'un probl\u00e8me avec tout h\u00e9bergement g\u00e9r\u00e9 par ServerPilot avec PHP 7.2 activ\u00e9. Un ticket a \u00e9t\u00e9 soumis pour r\u00e9soudre ce probl\u00e8me de leur c\u00f4t\u00e9. Le partage LinkedIn et l'indexation Wayback Machine ne fonctionnent pas. Probl\u00e8me : Le partage de pages avec LinkedIn et la propagation des donn\u00e9es de la page ne fonctionnent pas. La Wayback Machine n'indexe pas correctement les pages de mon site Web. Solution : activez WebServer Gzip ou la compression Gzip. Les deux peuvent \u00eatre utilis\u00e9s, mais au moins un doit \u00eatre actif pour que ces fonctions particuli\u00e8res fonctionnent sur certains cas de serveur. Ce probl\u00e8me est apparu pour les utilisateurs sur des environnements de serveur sp\u00e9cifiques. En particulier, avec les serveurs AWS bas\u00e9s sur le cloud, les utilisateurs rencontraient des probl\u00e8mes pour partager des pages Web \u00e0 partir de leurs sites Grav sur LinkedIn ou pour les indexer correctement par la Wayback Machine. Ce probl\u00e8me a \u00e9t\u00e9 r\u00e9solu en activant la compression WebServer Gzip ou Gzip. Impossible de faire d\u00e9filer dans Admin sur CloudFlare. Pour les utilisateurs de CloudFlare, la possibilit\u00e9 de faire d\u00e9filer l'Admin peut \u00eatre interrompue. Il existe des solutions \u00e0 cela, comme suit: Dans l'interface de CloudFlare, acc\u00e9dez \u00e0 Speed et d\u00e9sactivez Rocket Loader (ou via une r\u00e8gle de page). Il peut \u00e9galement \u00eatre d\u00e9sactiv\u00e9 en mode \"automatique\" (par d\u00e9faut) avec un attribut de donn\u00e9es sur les scripts : script data-cfasync=\"false\" src=\"/javascript.js\"></script> . Un exemple de r\u00e8gle de page serait la correspondance d'URL example.com/staging/*/admin , o\u00f9 le * est un caract\u00e8re g\u00e9n\u00e9rique indiquant n'importe quel nom de dossier. Pour les param\u00e8tres, ajoutez Rocket Loader et s\u00e9lectionnez Off .","title":"Probl\u00e8mes Communs"},{"location":"depannage-erreur-serveur/","text":"Erreur du serveur Grav Les erreurs de serveur sont presque toujours caus\u00e9es par une mauvaise configuration de Grav. Quelque chose d'inattendu s'est produit et \u00e0 cause de cela, Grav est incapable de r\u00e9cup\u00e9rer et de servir la page. Lorsque vous voyez ce message, cela signifie que votre serveur fonctionne en mode Production pour emp\u00eacher l'affichage d'informations potentiellement sensibles \u00e0 vos utilisateurs. L'erreur elle-m\u00eame sera stock\u00e9e dans le fichier logs/grav.log . Veuillez examiner ce fichier pour d\u00e9terminer la nature exacte de l'erreur. Les raisons possibles incluent : Les erreurs de serveur sont caus\u00e9es par une configuration obsol\u00e8te Autorisations de fichier incorrectes qui emp\u00eachent Grav d'\u00e9crire des donn\u00e9es Changements dans le syst\u00e8me de fichiers dont Grav n'est pas encore au courant Erreurs dans l'analyse de la configuration en raison de fichiers de configuration au format incorrect Si vous avez install\u00e9 le plugin Grav Administration , vous pouvez parcourir les erreurs de serveur \u00e0 partir de l\u00e0. En cliquant sur les erreurs individuelles, vous pouvez voir les pages de d\u00e9bogage m\u00eame si le d\u00e9bogueur a \u00e9t\u00e9 d\u00e9sactiv\u00e9. Configuration obsol\u00e8te. La premi\u00e8re chose \u00e0 faire est de vider le cache pour vous assurer que la configuration est \u00e0 jour : $ | bin/grav clearcache Avant de continuer, assurez-vous que vous n'avez pas d'autres probl\u00e8mes d'autorisation de fichier comme celui-ci. Probl\u00e8mes d'installation et de configuration. Configuration requise autorisations de fichiers probl\u00e8mes d'installation probl\u00e8mes de configuration","title":"Erreus du Serveur Grav"},{"location":"depannage-htaccess/","text":"htaccess Grav est livr\u00e9 avec son propre fichier .htaccess . Ce fichier permet \u00e0 Grav de fonctionner correctement et doit \u00eatre conserv\u00e9 dans son dossier racine. Vous pouvez rencontrer des probl\u00e8mes qui peuvent \u00eatre r\u00e9solus \u00e0 l'aide du fichier .htaccess . Apache est l'une des solutions de serveur les plus populaires disponibles aujourd'hui. C'est gratuit et largement disponible un peu partout. Malheureusement, Apache n'est pas parfait, et parfois le fichier .htaccess peut vous donner mal \u00e0 la t\u00eate. Ne vous inqui\u00e9tez pas, c'est presque toujours r\u00e9parable. Comment modifier .htaccess sous Windows et macOS. Le fichier .htaccess est un fichier cach\u00e9, ce qui signifie que par d\u00e9faut, les utilisateurs de macOS et Windows ne pourront pas voir ce fichier dans le gestionnaire de fichiers (Finder) \u00e0 moins qu'ils n'autorisent l'affichage des fichiers cach\u00e9s. Sous macOS : Terminal ouvert. Entrez defaults write com.apple.finder AppleShowAllFiles YES dans le Terminal et appuyez sur Return . Entrez killall Finder dans le Terminal` et appuyez sur Return**. Vous devriez maintenant pouvoir voir le fichier .htaccess dans le r\u00e9pertoire racine du dossier Grav d\u00e9compress\u00e9. Vous pouvez remettre vos param\u00e8tres \u00e0 leur \u00e9tat cach\u00e9 d'origine en r\u00e9p\u00e9tant le processus et en saisissant NO \u00e0 la fin de l'\u00e9tape 2 au lieu de YES . Sous Windows 10 : Ouvrez l'Explorateur de fichiers . S\u00e9lectionnez l'onglet Affichage . Cochez la case \u00e0 c\u00f4t\u00e9 des \u00e9l\u00e9ments masqu\u00e9s . D\u00e9cocher cette case masquera \u00e0 nouveau ces fichiers cach\u00e9s, ramenant l'explorateur de fichiers \u00e0 son \u00e9tat par d\u00e9faut. Tester .htaccess. Disons que vous allez dans votre navigateur et naviguez vers votre nouveau site Grav et... il n'y est pas ! Un gros message audacieux indiquant que Not Found est l'endroit o\u00f9 votre beau site Grav devrait \u00eatre. Ce n'est pas un probl\u00e8me amusant \u00e0 avoir, mais la solution pourrait \u00eatre aussi simple que d'ajuster votre fichier .htaccess . La premi\u00e8re \u00e9tape du d\u00e9pannage des probl\u00e8mes avec le fichier .htaccess doit \u00eatre de s'assurer que le fichier est effectivement r\u00e9cup\u00e9r\u00e9 et utilis\u00e9 par le serveur. Assurez-vous que le fichier se trouve dans le r\u00e9pertoire racine de votre site Grav o\u00f9 il devrait se trouver, et qu'il est correctement nomm\u00e9 .htaccess avec un point (.) devant. Si le fichier est l\u00e0, votre prochaine \u00e9tape consiste \u00e0 le tester et \u00e0 vous assurer que votre serveur le r\u00e9cup\u00e8re. Il s'agit d'un processus simple qui consiste \u00e0 ajouter une seule ligne en haut du fichier. Pour tester, ouvrez le fichier .htaccess dans un \u00e9diteur de texte. Ensuite, vous voudrez cr\u00e9er une nouvelle premi\u00e8re ligne et placer le texte Test. Et enregistrer. Cette erreur ne r\u00e9sout pas votre probl\u00e8me par elle-m\u00eame, mais elle vous permet de savoir que le .htaccess dans le r\u00e9pertoire racine de votre site Grav est celui que votre serveur analyse. Si vous ne recevez pas cette erreur, assurez-vous que le fichier se trouve dans le r\u00e9pertoire racine de votre site. Cela devrait \u00eatre le fichier inclus avec l'installation originale de Grav. C'est l'une des raisons pour lesquelles nous vous recommandons de d\u00e9compresser le r\u00e9pertoire Grav compress\u00e9 et de d\u00e9placer ce r\u00e9pertoire l\u00e0 o\u00f9 vous voulez que votre site soit sur votre serveur, plut\u00f4t que de copier les fichiers et de les coller. Cela garantit que tous les fichiers et la structure de r\u00e9pertoires restent identiques, \u00e9vitant ainsi des probl\u00e8mes de ce type. D\u00e9pannage d'un fichier .htaccess cass\u00e9. Si rien n'a chang\u00e9 lorsque vous avez modifi\u00e9 le fichier .htaccess, vous devrez peut-\u00eatre vous assurer que .htaccess est activ\u00e9. Sinon, votre serveur ne le cherchera m\u00eame pas en premier lieu. Voici ce que vous pouvez faire : Recherchez et ouvrez le fichier httpd.conf ou apache.conf dans un \u00e9diteur de texte. Sous Windows, ce sera probablement le Bloc-notes ou un \u00e9diteur de texte con\u00e7u pour le d\u00e9veloppement. Les traitements de texte peuvent ajouter des informations inutiles qui pourraient aggraver le probl\u00e8me. Ensuite, vous voudrez rechercher la zone Directory du fichier. Il devrait y avoir un bloc de texte comme celui-ci : 1 | # 2 | # AllowOverride controls what directives may be placed in .htaccess files. 3 | # It can be \"All\", \"None\", or any combination of the keywords: 4 | # Options FileInfo AuthConfig Limit 5 | # 6 | AllowOverride All Si AllowOverride est d\u00e9fini sur None ou autre chose que All , vous devrez le changer en All et enregistrer. Cette modification n\u00e9cessitera une r\u00e9initialisation de votre serveur Apache pour s'enregistrer. Une fois que vous avez fait cela, donnez \u00e0 votre site un autre test. Nous avons \u00e9galement inclus des guides de d\u00e9pannage pour vous aider si vous rencontrez une erreur de serveur interne 404 ou 500 lors de l'utilisation de Grav.","title":"htacces"},{"location":"depannage-proxy/","text":"Probl\u00e8mes de proxy L'ex\u00e9cution de commandes GPM derri\u00e8re un proxy peut entra\u00eener une erreur. cURL vous permet de d\u00e9finir le proxy en tant que variable d'environnement ( http_proxy et https_proxy ), sans modifications n\u00e9cessaires dans Grav. Voir http://stackoverflow.com/questions/7559103/how-to-setup-curl-to-permanently-use-a-proxy Mais d'abord, si votre environnement a activ\u00e9 fopen , vous devez le d\u00e9sactiver en d\u00e9sactivant allow_url_fopen via php.ini. En effet, si fopen est disponible, Grav l'utilise automatiquement sur curl .","title":"Probl\u00e8mes de Proxy"},{"location":"depannage-token/","text":"Jeton de s\u00e9curit\u00e9 non valide Probl\u00e8me : vous obtenez cette erreur dans le panneau d'administration lorsque vous vous connectez pour effectuer des op\u00e9rations Il y a quelques causes possibles du probl\u00e8me, toutes li\u00e9es \u00e0 la Session : Essayez de recharger votre navigateur pour obtenir un nouveau jeton Essayez d'effacer les cookies de session de votre navigateur, essayez de vous d\u00e9connecter et de vous reconnecter. Assurez-vous que vous ex\u00e9cutez sous SSL et une URL HTTPS si vous avez session.secure: true d\u00e9fini dans le system.yaml de Grav V\u00e9rifiez que PHP a le bon chemin tmp configur\u00e9. Cela peut \u00eatre d\u00e9fini directement dans PHP ou en d\u00e9finissant le param\u00e8tre system.yaml session.path de Grav (il peut \u00e9galement \u00eatre d\u00e9fini via Admin, dans la configuration du syst\u00e8me) probl\u00e8me signal\u00e9 . Assurez-vous que la configuration de votre serveur Web est correcte et inclut la cha\u00eene de requ\u00eate probl\u00e8me signal\u00e9 .","title":"Jeton de S\u00e9curit\u00e9 non Valide"},{"location":"en-tete-frontmatter/","text":"En-t\u00eates / Frontmatter Les en-t\u00eates de page (\u00e9galement connus sous le nom de frontmatter) en haut d'une page sont compl\u00e8tement facultatifs, vous n'en avez pas du tout besoin pour qu'une page s'affiche dans Grav. Il existe 3 principaux types de pages ( Standard , Listing et Modular ) dans Grav, et chacun a des en-t\u00eates pertinents. Les en-t\u00eates sont \u00e9galement connus sous le nom de Page Frontmatter et sont commun\u00e9ment appel\u00e9s ainsi afin de ne pas \u00eatre confondus avec les en-t\u00eates HTTP. En-t\u00eates de page de base Il existe un certain nombre d'options d'en-t\u00eate de base disponibles. Activer le cache cache_enable : false Par d\u00e9faut, Grav mettra en cache le contenu du fichier de page pour s'assurer que tout fonctionne aussi vite que possible. Il existe des sc\u00e9narios avanc\u00e9s dans lesquels vous ne souhaitez pas que la page soit mise en cache. Un exemple de ceci est lorsque vous utilisez des variables Twig dynamiques dans votre contenu. La variable cache_enable permet de remplacer ce comportement. Nous aborderons les variables de contenu Twig dans un chapitre ult\u00e9rieur. Les valeurs valides sont true ou false . Date date: 01/01/2020 15h14 La variable date permet de d\u00e9finir sp\u00e9cifiquement une date associ\u00e9e \u00e0 cette page. Ceci est souvent utilis\u00e9 pour indiquer quand un message a \u00e9t\u00e9 cr\u00e9\u00e9 et peut \u00eatre utilis\u00e9 \u00e0 des fins d'affichage ou de tri. S'il n'est pas d\u00e9fini, la valeur par d\u00e9faut est l'heure de la derni\u00e8re modification de la page. Les dates aux formats m/d/y ou d-m-y sont d\u00e9sambigu\u00efs\u00e9es en regardant le s\u00e9parateur entre les diff\u00e9rents composants : si le s\u00e9parateur est une barre oblique ( / ), alors le m/d/y am\u00e9ricain est suppos\u00e9 ; tandis que si le s\u00e9parateur est un tiret ( - ) ou un point ( . ), le format d.m.y europ\u00e9en est utilis\u00e9. Menu menu : Ma page La variable menu vous permet de d\u00e9finir le texte \u00e0 utiliser dans la navigation. Il existe plusieurs couches de solutions de repli pour le menu, donc si aucune variable menu n'est d\u00e9finie, Grav essaiera d'utiliser la variable title . Published published : true Par d\u00e9faut, une page est publi\u00e9e \u00e0 moins que vous ne d\u00e9finissiez explicitement published : false ou via un publish_date d\u00e9fini ult\u00e9rieurement, ou unpublish_date pr\u00e9c\u00e9demment. Les valeurs valides sont true ou false . Slug slug : ma-page-slug La variable slug vous permet de d\u00e9finir sp\u00e9cifiquement la partie de l'URL de la page. Par exemple : http://yoursite.com/my-page-slug serait l'URL si vous d\u00e9finissez le slug ci-dessus. Si le slug n'est pas d\u00e9fini dans la page, Grav revient \u00e0 utiliser le nom du dossier (sans aucun pr\u00e9fixe num\u00e9rique). Les Slugs sont g\u00e9n\u00e9ralement enti\u00e8rement en minuscules, avec des caract\u00e8res accentu\u00e9s remplac\u00e9s par des lettres de l'alphabet anglais et des caract\u00e8res d'espacement remplac\u00e9s par un tiret ou un trait de soulignement. Alors que les futures versions de Grav prendront en charge les espaces dans les slugs, il n'est pas recommand\u00e9 d'avoir des espaces vides ou des lettres majuscules. Par exemple : si le titre d'un article de blog est Blog Post Example , le slug recommand\u00e9 serait blog-post-example . Taxonomy taxonomy : category : blog tag : [sample, d\u00e9mo, grav] Variable d'en-t\u00eate tr\u00e8s utile, la taxinomy vous permet d'attribuer des valeurs \u00e0 la taxonomie que vous avez d\u00e9finie comme types valides dans le fichier de configuration du site . Si la taxonomie n'est pas d\u00e9finie dans ce fichier, elle sera ignor\u00e9e. Dans cet exemple, la page est d\u00e9finie comme appartenant \u00e0 la cat\u00e9gorie blog et contient les balises : sample , demo et grav . Ces taxonomies peuvent \u00eatre utilis\u00e9es pour trouver ces pages \u00e0 partir d'autres pages, plugins et m\u00eame th\u00e8mes. Le chapitre Taxonomie couvrira ce concept plus en d\u00e9tail. Title Si vous n'avez aucun en-t\u00eate, vous n'aurez aucun contr\u00f4le sur le titre de la page tel qu'il appara\u00eet dans le navigateur et les moteurs de recherche. Pour cette raison, il est recommand\u00e9 de mettre au moins la variable title dans l'ent\u00eate de la page : title : Titre de ma page Si la variable title n'est pas d\u00e9finie, Grav a une solution de repli et essaiera d'utiliser la variable slug en majuscule. En-t\u00eates avanc\u00e9s Ceux-ci sont toujours importants mais moins couramment utilis\u00e9s. Ils peuvent \u00eatre utilis\u00e9s pour fournir des fonctionnalit\u00e9s avanc\u00e9es au sein de votre page. Ajouter l'extension d'URL append_url_extension : '.json' Permet \u00e0 la page de remplacer l'extension par d\u00e9faut et d'en d\u00e9finir une par programme. Il d\u00e9finira \u00e9galement les attributs d'en-t\u00eate appropri\u00e9s pour la r\u00e9ponse. Cache-Control cache_control : max-age=604800 Peut \u00eatre vide pour aucun param\u00e8tre ou une valeur de texte de cache-control valide . Assurez-vous que vous utilisez no-cache si la page contient des informations susceptibles de changer en fonction de l'utilisateur. Sinon, le contenu peut fuir vers d'autres utilisateurs. Expire le param\u00e8tre s'il est d\u00e9fini sur expire : 0 a le m\u00eame effet. Date Format dateformat : 'Y-m-d H:i:s' Remplace la configuration par d\u00e9faut de Grav pour les formats de date et permet de la d\u00e9finir au niveau de la page. Vous pouvez utiliser n'importe lequel des formats de date PHP disponibles. Debugger Lorsque vous activez le d\u00e9bogueur via le fichier de configuration system.yaml , le d\u00e9bogueur s'affichera sur chaque page. Il y a des cas o\u00f9 cela peut ne pas \u00eatre souhaitable ou peut provoquer des conflits avec la sortie. Cela arrive par exemple lorsque vous demandez une page destin\u00e9e \u00e0 renvoyer du HTML rendu \u00e0 un appel Ajax. Cela ne devrait pas injecter le d\u00e9bogueur dans les donn\u00e9es r\u00e9sultantes. Pour d\u00e9sactiver le d\u00e9bogueur sur cette page, vous pouvez utiliser l'en-t\u00eate de la page debugger : debugger : false ETag etag : true Activez ou d\u00e9sactivez au niveau de la page l'affichage ou non d'une variable d'en-t\u00eate ETag avec une valeur unique. false par d\u00e9faut sauf si remplac\u00e9 dans votre system.yaml . Expires expires: 604800 La page expire dans une dur\u00e9e fix\u00e9e en secondes (604800 secondes = 7 jours). Assurez-vous que vous utilisez expire : 0 si la page contient des informations qui peuvent changer en fonction de l'utilisateur. Sinon, le contenu peut fuir vers d'autres utilisateurs. Voir \u00e9galement le param\u00e8tre Cache-Control . External Url external_url : https://www.monsite.com/foo/bar Vous permet de remplacer l'URL g\u00e9n\u00e9r\u00e9e dynamiquement par celle que vous fournissez explicitement. Code de r\u00e9ponse HTTP http_response_code : 404 Permet la configuration dynamique d'un code de r\u00e9ponse HTTP. Language language: fr Cela vous permet de remplacer la langue d'une page particuli\u00e8re. LastModified last_modified : true Activez ou d\u00e9sactivez au niveau de la page l'affichage ou non d'une variable d'en-t\u00eate Derni\u00e8re modification avec la date de modification. false par d\u00e9faut sauf si remplac\u00e9 dans votre system.yaml . Lightbox lightbox : true Bien qu'il ne s'agisse pas \u00e0 proprement parler d'un en-t\u00eate de page standard, il s'agit d'un moyen courant d'activer le chargement d'un JavaScript et d'un CSS lightbox standard pour une page. Par d\u00e9faut, le th\u00e8me principal antimatter ne charge pas les pr\u00e9requis pour activer les fonctionnalit\u00e9s lightbox des images, assurez-vous d'installer un plugin lightbox tel que Featherlight , qui est disponible via GPM. Login Redirect Here login_redirect_here : false L'en-t\u00eate login_redirect_here vous permet de d\u00e9terminer si quelqu'un est conserv\u00e9 ou non sur cette page apr\u00e8s s'\u00eatre connect\u00e9 via le plugin de connexion Grav . D\u00e9finir cet en-t\u00eate sur false redirigera quelqu'un vers la page pr\u00e9c\u00e9dente apr\u00e8s une connexion r\u00e9ussie. Le r\u00e9glage \u00e0 true ici permettra \u00e0 la personne de rester sur la page actuelle apr\u00e8s une connexion r\u00e9ussie. C'est \u00e9galement le param\u00e8tre par d\u00e9faut, qui s'applique s'il n'y a pas d'en-t\u00eate login_redirect_here dans le frontmatter. Vous pouvez remplacer ce comportement par d\u00e9faut en for\u00e7ant un emplacement standard en sp\u00e9cifiant une option explicite dans votre configuration de connexion YAML : redirect_after_login : '/profile' Cela vous m\u00e8nera toujours \u00e0 la route /profile apr\u00e8s une connexion r\u00e9ussie. Markdown markdown: extra: false auto_line_breaks: false auto_url_links: false escape_markup: false special_chars: '>': 'gt' '<': 'lt' Propri\u00e9t\u00e9 Description extra : Activer la prise en charge de Markdown Extra (GFM par d\u00e9faut). auto_line_breaks : Active les sauts de ligne automatiques. auto_url_links : Activer les liens HTML automatiques. escape_markup : \u00c9chappez les balises de balisage dans les entit\u00e9s. special_chars : Liste des caract\u00e8res sp\u00e9ciaux \u00e0 convertir automatiquement. Vous pouvez les activer globalement via votre fichier de configuration user/config/system.yaml , ou vous pouvez remplacer ce param\u00e8tre global par page avec cette option d'en-t\u00eate markdown . Never Cache Twig never_cache_twig : true L'activer vous permettra d'ajouter une logique de traitement qui peut changer dynamiquement \u00e0 chaque chargement de page, plut\u00f4t que de mettre en cache les r\u00e9sultats et de les stocker pour chaque chargement de page. Cela peut \u00eatre activ\u00e9/d\u00e9sactiv\u00e9 \u00e0 l'\u00e9chelle du site dans le fichier system.yaml , ou sur une page sp\u00e9cifique. Peut \u00eatre d\u00e9fini sur true ou false . C'est un changement subtil, mais qui est particuli\u00e8rement utile dans les pages modulaires car il vous \u00e9vite d'avoir \u00e0 d\u00e9sactiver constamment la mise en cache lorsque vous travaillez avec. La page est toujours en cache, mais pas le Twig. Le Twig est trait\u00e9 apr\u00e8s la r\u00e9cup\u00e9ration du contenu mis en cache. Pour les formulaires modulaires, cela fonctionne d\u00e9sormais uniquement avec ce param\u00e8tre plut\u00f4t que d'avoir \u00e0 d\u00e9sactiver le cache de page modulaire. Ceci n'est pas compatible avec twig_first: true actuellement car tout le traitement se produit dans le seul appel Twig. Process process: markdown: false twig: true Le traitement de la page est une autre fonctionnalit\u00e9 avanc\u00e9e. Par d\u00e9faut, Grav traitera le markdown mais ne traitera pas twig dans une page. Ce choix de ne pas traiter Twig par d\u00e9faut existe purement pour des raisons de performances car ce n'est pas une fonctionnalit\u00e9 couramment n\u00e9cessaire. La variable process vous permet de remplacer ce comportement. Vous pouvez d\u00e9sactiver markdown sur une page particuli\u00e8re si vous souhaitez utiliser 100 % HTML dans votre page et ne pas ex\u00e9cuter du tout le processus de d\u00e9marquage. Cela permet \u00e9galement \u00e0 un plugin de traiter compl\u00e8tement le contenu d'une autre mani\u00e8re. Les valeurs valides sont true ou false . Il existe des situations o\u00f9 vous souhaitez utiliser la fonctionnalit\u00e9 de cr\u00e9ation de mod\u00e8les Twig dans votre contenu, et cela est accompli en d\u00e9finissant la variable twig sur true . Process Twig First twig_first: false Si d\u00e9fini sur true , le traitement Twig se produira avant tout traitement Markdown. Cela peut \u00eatre particuli\u00e8rement utile si votre Twig g\u00e9n\u00e8re des d\u00e9marques qui doivent \u00eatre disponibles pour \u00eatre trait\u00e9es par le compilateur Markdown. Une chose \u00e0 noter, si vous avez cache_enable : false et twig_first : true la vraie mise en cache de la page est effectivement d\u00e9sactiv\u00e9e. Publish Date publish_date: 01/23/2020 13:00 Champ facultatif, mais peut fournir une date pour d\u00e9clencher automatiquement la publication. Les valeurs valides sont toutes les valeurs de date de cha\u00eene prises en charge par strtotime() . Redirection redirect: '/some/custom/route' ou alors redirect: 'http://someexternalsite.com' Vous pouvez rediriger vers une autre page interne ou externe directement \u00e0 partir d'un en-t\u00eate de page. Bien s\u00fbr, cela signifie que cette page ne sera pas affich\u00e9e, mais la page peut toujours \u00eatre dans une collection, un menu, etc. car elle existera en tant que page dans Grav. Vous pouvez \u00e9galement ajouter un code de redirection \u00e0 une URL en utilisant des crochets : redirect: '/some/custom/route[303]' Routes routes: default: '/my/example/page' canonical: '/canonical/url/alias' aliases: - '/some/other/route' - '/can-be-any-valid-slug' Vous pouvez d\u00e9sormais fournir une route par d\u00e9faut qui remplace la structure de route standard telle que d\u00e9finie par la structure de dossiers. Vous pouvez \u00e9galement sp\u00e9cifier une route canonique sp\u00e9cifique qui peut \u00eatre utilis\u00e9e dans les th\u00e8mes pour g\u00e9n\u00e9rer un lien canonique : <link rel=\"canonical\" href=\"https://votresite/les-robes/les-robes-vertes-sont-impressionnantes\" /> Enfin, vous pouvez sp\u00e9cifier un tableau d'alias de route qui peuvent \u00eatre utilis\u00e9s comme routes alternatives pour une page particuli\u00e8re. Routable routable : faux Par d\u00e9faut, toutes les pages sont routables . Cela signifie qu'elles peuvent \u00eatre atteintes en pointant votre navigateur vers l'URL de la page. Cependant, vous devrez peut-\u00eatre cr\u00e9er une page pour contenir un contenu sp\u00e9cifique, mais elle est destin\u00e9e \u00e0 \u00eatre appel\u00e9e directement par un plugin, un autre contenu ou m\u00eame un th\u00e8me directement. Un bon exemple de cela est une page d' erreur 404 . Grav recherche automatiquement une page avec la route /error si une autre page est introuvable. Comme il s'agit d'une page r\u00e9elle dans Grav, vous auriez un contr\u00f4le total sur l'apparence de cette page. Cependant, vous ne voulez probablement pas que les gens acc\u00e8dent \u00e0 cette page directement dans leur navigateur, donc cette page a g\u00e9n\u00e9ralement sa variable routable d\u00e9finie sur false. Les valeurs valides sont true ou false . SSL ssl: true Vous pouvez d\u00e9sormais autoriser une page sp\u00e9cifique \u00e0 \u00eatre forc\u00e9e avec SSL activ\u00e9 ou d\u00e9sactiv\u00e9 . Cela ne fonctionne qu'avec l'option absolute_urls: true d\u00e9finie dans la configuration system.yaml . En effet, pour pouvoir basculer entre les pages SSL et non SSL, vous devez utiliser des URL compl\u00e8tes avec le protocole et l'h\u00f4te inclus. Summary summary: enabled: true format: short | long size: int L'option summary configure ce que la m\u00e9thode page.summary() renvoie. Ceci est le plus souvent utilis\u00e9 dans un sc\u00e9nario de type liste de blogs, mais peut \u00eatre utilis\u00e9 chaque fois que vous avez besoin d'un synopsis ou d'un r\u00e9sum\u00e9 du contenu de la page. Les sc\u00e9narios sont les suivants : Propri\u00e9t\u00e9 Description enabled : D\u00e9sactiver le r\u00e9sum\u00e9 de la page (le r\u00e9sum\u00e9 renvoie le m\u00eame que le contenu de la page). format : long = Tout d\u00e9limiteur r\u00e9capitulatif du contenu sera ignor\u00e9. short = D\u00e9tecter et tronquer le contenu jusqu'\u00e0 la position du d\u00e9limiteur r\u00e9capitulatif. L'attribut size a des significations diff\u00e9rentes lorsque le format est d\u00e9fini sur short et long : Taille Short Description size: 0 Si aucun d\u00e9limiteur de r\u00e9sum\u00e9 n'est trouv\u00e9, le r\u00e9sum\u00e9 est \u00e9gal au contenu de la page, sinon le contenu sera tronqu\u00e9 jusqu'\u00e0 la position du d\u00e9limiteur de r\u00e9sum\u00e9. size: int Tronque toujours le contenu apr\u00e8s les caract\u00e8res int . Si un d\u00e9limiteur r\u00e9capitulatif a \u00e9t\u00e9 trouv\u00e9, tronquer le contenu jusqu'\u00e0 la position du d\u00e9limiteur r\u00e9capitulatif. Taille Long Description size : 0 Le r\u00e9sum\u00e9 \u00e9quivaut \u00e0 tout le contenu de la page. size: int Le contenu sera tronqu\u00e9 apr\u00e8s int chars, ind\u00e9pendamment de la position du d\u00e9limiteur r\u00e9capitulatif Template template: custom Comme expliqu\u00e9 dans le chapitre pr\u00e9c\u00e9dent , le mod\u00e8le du th\u00e8me utilis\u00e9 pour afficher une page est bas\u00e9 sur le nom de fichier du fichier .md . Ainsi, un fichier appel\u00e9 default.md utilisera le mod\u00e8le default dans le th\u00e8me actif. Vous pouvez, bien s\u00fbr, remplacer ce comportement en d\u00e9finissant simplement la variable template dans l'en-t\u00eate et en choisissant un mod\u00e8le diff\u00e9rent. Dans l'exemple ci-dessus, la page utilisera le mod\u00e8le custom du th\u00e8me. Cette variable existe car vous devrez peut-\u00eatre modifier le mod\u00e8le d'une page par programmation \u00e0 partir d'un plugin. Template Format template_format: xml Traditionnellement, si vous voulez qu'une page affiche un format sp\u00e9cifique (c'est-\u00e0-dire : xml, json, etc.), vous deviez ajouter le format \u00e0 l'url. Par exemple, la saisie de http://example.com/sitemap.xml indiquerait au navigateur d'afficher le contenu \u00e0 l'aide du mod\u00e8le xml twig se terminant par .xml.twig . C'est bien beau, car on aime faire les choses simplement en Grav. En utilisant l'en-t\u00eate de page template_format , nous pouvons dire au navigateur comment rendre la page sans avoir besoin d'extensions dans l'URL. En saisissant template_format: xml dans notre page de plan de site, nous pouvons faire en sorte que http://example.com/sitemap fonctionne pour nous sans avoir \u00e0 ajouter .xml \u00e0 la fin. Nous avons utilis\u00e9 cette m\u00e9thode avec le plugin Grav Sitemap . Unpublish Date unpublish_date: 05/17/2020 00:32 Champ facultatif, mais peut fournir une date pour d\u00e9clencher automatiquement la d\u00e9publication. Les valeurs valides sont toutes les valeurs de date de cha\u00eene prises en charge par strtotime() . Visible visible: false Par d\u00e9faut, une page est visible dans la navigation si le dossier qui l'entoure a un pr\u00e9fixe num\u00e9rique, c'est-\u00e0-dire que /01.home est visible, tandis que /error n'est pas visible . Ce comportement peut \u00eatre remplac\u00e9 en d\u00e9finissant la variable visible dans l'en-t\u00eate. Les valeurs valides sont true ou false . En-t\u00eates de page personnalis\u00e9s Bien s\u00fbr, vous pouvez cr\u00e9er vos propres en-t\u00eates de page personnalis\u00e9s en utilisant n'importe quelle syntaxe YAML valide. Ceux-ci seraient sp\u00e9cifiques \u00e0 la page et seraient disponibles pour n'importe quel plugin ou th\u00e8me \u00e0 utiliser. Un bon exemple serait de d\u00e9finir une variable sp\u00e9cifique \u00e0 un plugin de sitemap, telle que : 1 | sitemap: 2 | changefreq: monthly 3 | priority: 1.03 L'importance de ces en-t\u00eates est que Grav ne les utilise pas par d\u00e9faut. Ils ne sont lus que par le plugin sitemap pour d\u00e9terminer \u00e0 quelle fr\u00e9quence cette page particuli\u00e8re est modifi\u00e9e et quelle devrait \u00eatre sa priorit\u00e9. Tout en-t\u00eate de page comme celui-ci doit \u00eatre document\u00e9, et g\u00e9n\u00e9ralement, il y aura une valeur par d\u00e9faut qui sera utilis\u00e9e si la page ne la fournit pas. Un autre exemple serait de stocker des donn\u00e9es sp\u00e9cifiques \u00e0 la page qui pourraient ensuite \u00eatre utilis\u00e9es par Twig dans le contenu de la page. Par exemple, vous avez peut-\u00eatre souhait\u00e9 associer une r\u00e9f\u00e9rence d'auteur \u00e0 la page. Si vous avez ajout\u00e9 ces param\u00e8tres YAML \u00e0 l'en-t\u00eate de la page : 1 | author: | name: Sandy Johnson | twitter: @sandyjohnson | bio: Sandy is a freelance journalist and author of several publications on open source CMS platforms. Vous pourrez ensuite y acc\u00e9der depuis Twig : 1 | <section id=\"d\u00e9tails-auteur\"> 2 | <h2>{{ page.header.author.name|e }}</h2> 3 | <p>{{ page.header.author.bio|e }}</p> 4 | <span>Contact : <a href=\"https://twitter.com/{{ page.header.author.twitter|e }}\"><i class=\"fa fa-twitter\"></i></ a></span> 5 | </section> Si le nom de la variable contient un caract\u00e8re sp\u00e9cial comme un tiret , vous devez utiliser la fonction d'attribut twigs : attribute(page.header, 'plugin-name').active En-t\u00eates de m\u00e9ta-page Les m\u00e9ta-en-t\u00eates vous permettent de d\u00e9finir l'ensemble standard de balises HTML pour chaque page ainsi que OpenGraph , Facebook et Twitter . Exemples de balises Meta standards 1 | metadata: 2 | refresh: 30 3 | generator: 'Grav' 4 | description: 'Your page description goes here' 5 | keywords: 'HTML, CSS, XML, JavaScript' 6 | author: 'John Smith' 7 | robots: 'noindex, nofollow' 8 | my_key: 'my_value' Cela produira le HTML : 1 | <meta name=\"generator\" content=\"Grav\" /> 2 | <meta name=\"description\" content=\"Votre description de page va ici\" /> 3 | <meta http-equiv=\"refresh\" content=\"30\" /> 4 | <meta name=\"keywords\" content=\"HTML, CSS, XML, JavaScript\" /> 5 | <meta name=\"auteur\" content=\"John Smith\" /> 6 | <meta name=\"robots\" content=\"noindex, nofollow\" /> 7 | <meta name=\"ma_cl\u00e9\" content=\"ma_valeur\" /> Toutes les balises m\u00e9ta HTML5 sont prises en charge. Exemples de m\u00e9tabalises OpenGraph 1 | metadata: 2 | 'og:title': The Rock 3 | 'og:type': video.movie 4 | 'og:url': http://www.imdb.com/title/tt0117500/ 5 | 'og:image': http://ia.media-imdb.com/images/rock.jpg Cela produira le HTML : 1 | <meta name=\"og:title\" property=\"og:title\" content=\"Le Rocher\" /> 2 | <meta name=\"og:type\" property=\"og:type\" content=\"video.movie\" /> 3 | <meta name=\"og:url\" property=\"og:url\" content=\"http://www.imdb.com/title/ tt0117500/\" /> 4 | <meta name=\"og:image\" property=\"og:image\" content=\"http://ia.media-imdb.com/images/rock.jpg\" /> Pour un aper\u00e7u complet de toutes les balises m\u00e9ta OpenGraph pouvant \u00eatre utilis\u00e9es, veuillez consulter la documentation officielle . Exemples de m\u00e9tabalise Facebook 1 | metadata: 2 | 'fb:app_id': your_facebook_app_id Cela produira le HTML : 1 | <meta name=\"fb:app_id\" property=\"fb:app_id\" content=\"your_facebook_app_id\" /> Facebook utilise principalement les m\u00e9tabalises OpenGraph, mais il existe des balises sp\u00e9cifiques \u00e0 Facebook et celles-ci sont prises en charge automatiquement par Grav. Exemples de m\u00e9tabalise Twitter 1 | metadata: 2 | 'twitter:card' : summary 3 | 'twitter:site' : @flickr 4 | 'twitter:title' : Your Page Title 5 | 'twitter:description' : Your page description can contain summary information 6 | 'twitter:image' : https://farm6.staticflickr.com/5510/14338202952_93595258ff_z.jpg Cela produira le HTML : 1 | <meta name=\"twitter:card\" property=\"twitter:card\" content=\"summary\" /> 2 | <meta name=\"twitter:site\" property=\"twitter:site\" content=\"@flickr\" /> 3 | <meta name=\"twitter:title\" property=\"twitter:title\" content=\"Titre de votre page\" /> 4 | <meta name=\"twitter:description\" property=\"twitter:description\" content=\"La description de votre page peut contenir des informations r\u00e9capitulatives\" /> 5 | <meta name=\"twitter:image\" property=\"twitter:image\" content=\"https://farm6.staticflickr.com/5510/14338202952_93595258ff_z.jpg\" /> Pour un aper\u00e7u complet de toutes les balises m\u00e9ta Twitter pouvant \u00eatre utilis\u00e9es, veuillez consulter la documentation officielle . Cela offre vraiment beaucoup de flexibilit\u00e9 et de puissance. Frontmatter.yaml Une fonctionnalit\u00e9 avanc\u00e9e qui peut s'av\u00e9rer utile pour certains utilisateurs exp\u00e9riment\u00e9s est la possibilit\u00e9 d'utiliser des valeurs frontmatter communes via un fichier frontmatter.yaml situ\u00e9 dans le dossier de la page. Ceci est particuli\u00e8rement utile lorsque vous travaillez avec des sites multilingues o\u00f9 vous souhaiterez peut-\u00eatre partager une partie du frontmatter entre toutes les versions linguistiques d'une page donn\u00e9e. Pour en profiter, cr\u00e9ez simplement un fichier frontmatter.yaml \u00e0 c\u00f4t\u00e9 du fichier .md de votre page et ajoutez toutes les valeurs frontmatter valides. Par exemple: 1 | metadata: 2 | generator: 'Super Grav' 3 | description: Give your page a powerup with Grav! Si un en-t\u00eate est d\u00e9fini \u00e0 la fois dans frontmatter.yaml et dans la page frontmatter, les valeurs de la page sont utilis\u00e9es, les valeurs frontmatter.yaml sont remplac\u00e9es. L'utilisation de frontmatter.yaml est une fonctionnalit\u00e9 c\u00f4t\u00e9 fichier et n'est pas prise en charge par le plug-in d'administration. L'utilisation de frontmatter.yaml est une fonctionnalit\u00e9 c\u00f4t\u00e9 fichier et n'est pas prise en charge par le plug-in d'administration.","title":"En-t\u00eates"},{"location":"filtres-twig/","text":"Les filtres Twig Les filtres Twig sont appliqu\u00e9s aux variables Twig en utilisant le | caract\u00e8re suivi du nom du filtre. Les param\u00e8tres peuvent \u00eatre transmis comme les fonctions Twig en utilisant des parenth\u00e8ses. absolute_url Prend un extrait de code HTML contenant un attribut src ou href qui utilise un chemin relatif. Convertit la cha\u00eene de chemin d'acc\u00e8s en un format d'URL absolu, y compris le nom d'h\u00f4te. <img src=\"/some/path/to/image.jpg\"/>|absolute_url \u2192 array_unique Wrapper pour PHP array_unique() qui supprime les doublons d'un tableau. ['foo', 'bar', 'foo', 'baz']|array_unique \u2192 Array ( [0] => foo [1] => bar [3] => baz ) base32_encode Effectue un encodage base32 sur la variable 'some variable here'|base32-encode \u2192 ONXW2ZJAOZQXE2LBMJWGKIDIMVZGK base32_decode Effectue un d\u00e9codage en base32 sur la variable 'ONXW2ZJAOZQXE2LBMJWGKIDIMVZGK'|base32_decode \u2192 some variable here base64_encode Effectue un encodage base64 sur la variable 'some variable here'|base64_encode \u2192 c29tZSB2YXJpYWJsZSBoZXJl base64_decode Effectue un d\u00e9codage base64 sur la variable 'c29tZSB2YXJpYWJsZSBoZXJl'|base64_decode \u2192 some variable here basename Renvoie le nom de base d'un chemin. '/etc/sudoers.d'|basename \u2192 sudoers.d camelize Convertit une cha\u00eene au format \"CamelCase\" 'send_email'|camelize \u2192 SendEmail l chunk_split Divise une cha\u00eene en plus petits morceaux d'une certaine taille 'ONXW2ZJAOZQXE2LBMJWGKIDIMVZGKA'|chunk_split(6, '-') \u2192 ONXW2Z-JAOZQX-E2LBMJ-WGKIDI-MVZGKA- contains D\u00e9terminer si une cha\u00eene particuli\u00e8re contient une autre cha\u00eene 'une cha\u00eene avec des choses dedans'|contains('things') \u2192 1 Casting Values PHP 7 obtient des v\u00e9rifications de type plus strictes, ce qui signifie que le passage d'une valeur de type incorrect peut d\u00e9sormais lever une exception. Pour \u00e9viter cela, vous devez utiliser des filtres qui garantissent que la valeur transmise \u00e0 une m\u00e9thode est valide : string Utilisez |string pour convertir la valeur en cha\u00eene. int Utilisez |int pour convertir la valeur en entier. bool Utilisez |bool pour convertir la valeur en bool\u00e9en. float Utilisez |float pour convertir la valeur en nombre \u00e0 virgule flottante. array Utilisez |array pour transtyper la valeur dans un tableau. defined Parfois, vous voulez v\u00e9rifier si une variable est d\u00e9finie, et si ce n'est pas le cas, fournissez une valeur par d\u00e9faut. Par example: set header_image_width = page.header.header_image_width|defined(900) Cela d\u00e9finira la variable header_image_width sur la valeur 900 si elle n'est pas d\u00e9finie dans l'en-t\u00eate de la page. dirname Renvoie le dirname d'un chemin. '/etc/sudoers.d'|dirname \u2192 /etc ends_with Prend une aiguille et une botte de foin et d\u00e9termine si la botte de foin se termine par l'aiguille. Fonctionne \u00e9galement maintenant avec un tableau d'aiguilles et renverra true si une botte de foin se termine par l'aiguille. 'le renard brun rapide'|ends_with('fox') \u2192 true fieldName Filtre le nom du champ en changeant la notation par points en notation par tableau 'field.name'|fieldName field[name] \u2192 field[name] gate_type Obtient le type d'une variable : page|get_type \u2192 object humanize Convertit une cha\u00eene dans un format plus \"lisible par l'homme\" 'something_text_to_read'|humanise \u2192 something text to read hyphenize Convertit une cha\u00eene en une version avec trait d'union. 'Something text to read'|hyphenize \u2192 something text to read json_decode Vous pouvez d\u00e9coder JSON en appliquant simplement ce filtre : array|json_decode 1 | {% set array = '{\"first_name\": \"Guido\", \"last_name\":\"Rossum\"}'|json_decode %} 2 | {{ print_r(array) }} stdClass Object ( [first_name] => Guido [last_name] => Rossum ) ksort Trier une carte de tableau par chaque cl\u00e9 array|ksort 1 | {% set items = {'orange':1, 'apple':2, 'peach':3}|ksort %} 2 | {{ print_r(items) }} Array ( [apple] => 2 [orange] => 1 [peach] => 3 ) ltrim '/strip/leading/slash/'|ltrim('/') \u2192 strip/leading/slash/ Trim gauche supprime les espaces de fin au d\u00e9but d'une cha\u00eene. Il peut \u00e9galement supprimer d'autres caract\u00e8res en d\u00e9finissant le masque de caract\u00e8re (voir https://php.net/manual/en/function.ltrim.php ) markdown Prenez une cha\u00eene arbitraire contenant du d\u00e9marquage et convertissez-la en HTML \u00e0 l'aide de l'analyseur de d\u00e9marquage de Grav. Param\u00e8tre boolean facultatif : true (par d\u00e9faut) : traiter comme un bloc (mode texte, le contenu sera envelopp\u00e9 dans des balises <p> ) false : traiter comme une ligne (le contenu ne sera pas encapsul\u00e9) string|markdown($is_block) 1 | <div class=\"div\"> 2 | {{ 'Un paragraphe avec **markdown** et [un lien](http://www.cnn.com)'|markdown }} 3 | </div> 4 | 5 | <p class=\"paragraph\">{{'Une ligne avec **markdown** et [un lien](http://www.cnn.com)'|markdown(false)}}</p> </p> <div class=\"div\"> <p>Un paragraphe avec <strong>markdown</strong> et <a href=\"http://www.cnn.com\">un lien</a></p> </div> <p class=\"paragraph\">Une ligne avec <strong>markdown</strong> et <a href=\"http://www.cnn.com\">un lien</a></p> <p> md5 Cr\u00e9e un hachage md5 pour la cha\u00eene 'n'importe quoi'|md5 \u2192 f0e166dc34d14d6c228ffac576c9a43c modulus Effectue la m\u00eame fonctionnalit\u00e9 que le symbole Modulo % en PHP. Il fonctionne sur un nombre en transmettant un diviseur num\u00e9rique et un tableau facultatif d'\u00e9l\u00e9ments \u00e0 s\u00e9lectionner. 7|modulus(3, ['rouge', 'bleu', 'vert']) \u2192 bleu monthize Convertit un nombre entier de jours en nombre de mois '181'|monthize \u2192 5 nicecron Obtient une sortie lisible par l'homme pour la syntaxe cron \"2 * * * *\"|nicecron \u2192 Toutes les heures \u00e0 2 minutes apr\u00e8s l'heure nicefilesize Sortie d'une taille de fichier dans un format de bonne taille lisible par l'homme 612394|nicefilesize \u2192 598,04 Ko nicenumber G\u00e9n\u00e9rer un nombre dans un format de nombre gentil lisible par l'homme 12430|nicenumber \u2192 12,43 k nicetime Afficher une date dans un format d'heure agr\u00e9able lisible par l'homme page.date|nicetime(false) \u2192 Il y a 4 mois Le premier argument sp\u00e9cifie s'il faut utiliser une description de date au format complet. C'est true par d\u00e9faut. Vous pouvez fournir un deuxi\u00e8me argument de false si vous souhaitez supprimer le descripteur relatif au temps (comme \u00ab il y a \u00bb ou \u00ab \u00e0 partir de maintenant \u00bb dans votre langue) du r\u00e9sultat. of_type V\u00e9rifie le type d'une variable au param\u00e8tre : page|of_type('string') \u2192 false ordinalise Ajoute un ordinal \u00e0 l'entier (tel que 1er, 2e, 3e, 4e) '10'|ordinalize \u2192 10 pad Compl\u00e8te une cha\u00eene \u00e0 une certaine longueur avec un autre caract\u00e8re. Il s'agit d'un wrapper pour la fonction PHP str_pad(). 'foobar'|pad(10, '-') \u2192 foobar---- pluralize Convertit une cha\u00eene en version plurielle anglaise 'person'| \u2192 pluralize \u2192 les gens pluralize prend \u00e9galement un param\u00e8tre num\u00e9rique facultatif que vous pouvez transmettre lorsque vous ne savez pas \u00e0 l'avance \u00e0 combien d'\u00e9l\u00e9ments le nom fera r\u00e9f\u00e9rence. Sa valeur par d\u00e9faut est 2, donc fournira la forme plurielle si elle est omise. Par example: <p>We have {{ num_vacancies }} {{ 'vacancy'|pluralize(num_vacancies) }} right now.</p> print_r Imprime des informations lisibles par l'homme sur une variable page.header|print_r Objet stdClass ( [title] => Filtres Brindille [body_classes] => twig__headers [page-toc] => Tableau ( [actif] => 1 [d\u00e9but] => 3 [profondeur] => 1 ) [processus] => Tableau ( [brindille] => 1 ) [taxonomie] => Tableau ( [cat\u00e9gorie] => docs ) [m\u00e9tadonn\u00e9es] => Tableau ( [description] => [g\u00e9n\u00e9rateur] => GravCMS [title] => Filtres Brindille [image] => https://webshot.getgrav.org/?url=aHR0cHM6Ly9sZWFybi5nZXRncmF2Lm9yZy8xNy90aGVtZXMvdHdpZy10YWdzLWZpbHRlcnMtZnVuY3Rpb25zL2ZpbHRlcnM= [robots] => tous [fb:app_id] => [og:url] => https://learn.getgrav.org/17/themes/twig-tags-filters-functions/filters [og:site_name] => Documentation Grav [og:title] => Filtres Twig [og:description] => [og:type] => article [og:image] => https://webshot.getgrav.org/?url=aHR0cHM6Ly9sZWFybi5nZXRncmF2Lm9yZy8xNy90aGVtZXMvdHdpZy10YWdzLWZpbHRlcnMtZnVuY3Rpb25zL2ZpbHRlcnM= [og:image:largeur] => 1200 [og:image:hauteur] => 630 [og:image:secure] => https://webshot.getgrav.org/?url=aHR0cHM6Ly9sZWFybi5nZXRncmF2Lm9yZy8xNy90aGVtZXMvdHdpZy10YWdzLWZpbHRlcnMtZnVuY3Rpb25zL2ZpbHRlcnM= [twitter:card] => summary_large_image [gazouillement:site] => [twitter:title] => Filtres Twig [twitter:description] => [twitter:image] => https://webshot.getgrav.org/?url=aHR0cHM6Ly9sZWFybi5nZXRncmF2Lm9yZy8xNy90aGVtZXMvdHdpZy10YWdzLWZpbHRlcnMtZnVuY3Rpb25zL2ZpbHRlcnM= [twitter:image:alt] => Filtres Twig ) ) randomize Randomise la liste fournie. Si une valeur est fournie en tant que param\u00e8tre, il ignorera les n premi\u00e8res valeurs et les conservera dans l'ordre. array|randomiser 1 | {% set ritems = ['one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'ten']|randomize(2) %} 2 | {{ print_r(ritems) }} Array ( [0] => one [1] => two [2] => four [3] => seven [4] => ten [5] => three [6] => eight [7] => five [8] => nine [9] => six ) regex_replace Un wrapper utile pour la m\u00e9thode PHP preg_replace() , vous pouvez effectuer des remplacements complexes de Regex sur du texte via ce filtre : 'The quick brown fox jumps over the lazy dog.'|regex_replace(['/quick/','/brown/','/fox/','/dog/'], ['slow','black', 'bear','turtle']) \u2192 The slow black bear jumps over the lazy turtle . Utilisez le d\u00e9limiteur ~ plut\u00f4t que le d\u00e9limiteur / si possible. Sinon, vous devrez probablement double-\u00e9chapper certains caract\u00e8res . Par exemple ~\\/\\/#.*~ plut\u00f4t que '/\\\\/\\\\#.*/' , qui se conforme plus \u00e9troitement \u00e0 la syntaxe PCRE utilis\u00e9e par PHP. rtrim '/strip/trailing/slash/'|rtrim('/') \u2192 /strip/trailing/slash Supprime les espaces de fin \u00e0 la fin d'une cha\u00eene. Il peut \u00e9galement supprimer d'autres caract\u00e8res en d\u00e9finissant le masque de caract\u00e8re (voir https://php.net/manual/en/function.rtrim.php ). singularize Convertit une cha\u00eene en version anglaise singuli\u00e8re 'shoes'|singularize \u2192 shoe safe_email Le filtre de messagerie s\u00e9curis\u00e9 convertit une adresse e-mail en caract\u00e8res ASCII pour la rendre plus difficile \u00e0 reconna\u00eetre et \u00e0 capturer par les robots de spam. \"someone@domaine.com\"|safe_email \u2192 somone@domaine.com Exemple d'utilisation avec un lien mailto : 1 | <a href=\"mailto:{{ 'your.email@server.com'|safe_email }}\"> 2 | Email me 3 | </a> Vous ne remarquerez peut-\u00eatre pas de diff\u00e9rence au d\u00e9but, mais l'examen de la source de la page (sans utiliser les outils de d\u00e9veloppement du navigateur, la source de la page r\u00e9elle) r\u00e9v\u00e9lera l'encodage des caract\u00e8res sous-jacents. sort_by_key Trier une carte de tableau par une cl\u00e9 particuli\u00e8re array|sort_by_key 1 | {% set people = [{'email':'fred@yahoo.com', 'id':34}, {'email':'tim@exchange.com', 'id':21}, 2 | {'email':'john@apple.com', 'id':2}]|sort_by_key('id') %} 3 | {% for person in people %}{{ person.email }}:{{ person.id }}, {% endfor %} john@apple.com:2, tim@exchange.com:21, fred@yahoo.com:34, starts_with Prend une aiguille et une botte de foin et d\u00e9termine si la botte de foin commence par l'aiguille. Fonctionne \u00e9galement maintenant avec un tableau d'aiguilles et renverra true si aucune botte de foin commence par l'aiguille. 'The quick brown fox'|starts_with('the') \u2192 true titleize Convertit une cha\u00eene au format \"Title Case\" 'welcome page'|titleize \u2192 Welcome Page t Traduire une cha\u00eene dans la langue courante 'MY_LANGUAGE_KEY_STRING'|t \u2192 'Du texte en anglais' Cela suppose que ces cha\u00eenes de langue sont traduites sur votre site et que vous avez activ\u00e9 la prise en charge de -language. Veuillez vous r\u00e9f\u00e9rer \u00e0 la documentation multilingue pour des informations plus d\u00e9taill\u00e9es. tu Traduire une cha\u00eene dans la langue actuelle d\u00e9finie dans les pr\u00e9f\u00e9rences utilisateur de l'interface d'administration 'MY_LANGUAGE_KEY_STRING'|tu \u2192 Quelque texte en anglais' Cela utilise le champ de langue d\u00e9fini dans l'utilisateur yaml. ta Traduit un tableau avec une langue utilise le filtre |ta . Voir la documentation multilingue pour un exemple d\u00e9taill\u00e9. 'MONTHS_OF_THE_YEAR'|ta(post.date|date('n') - 1) \u2192 april tl Traduit une cha\u00eene dans une langue sp\u00e9cifique. Pour plus de d\u00e9tails, consultez la documentation multilingue . 'SIMPLE_TEXT'|tl(['en']) truncate Vous pouvez facilement g\u00e9n\u00e9rer une version raccourcie et tronqu\u00e9e d'une cha\u00eene \u00e0 l'aide de ce filtre. Il prend un certain nombre de caract\u00e8res comme seul champ obligatoire, mais a quelques autres options : 'one sentence. two sentences'|truncate(5)|raw \u2192 one s\u2026 Tronque simplement \u00e0 5 caract\u00e8res. 'one sentence. two sentences'|truncate(5, true)|raw \u2192 one sentence.\u2026 Le filtre |raw Twig doit \u00eatre utilis\u00e9 avec la valeur par d\u00e9faut \u2026 (points de suspension) \u00e9l\u00e9ment de remplacement afin qu'il soit rendu avec l'\u00e9chappement automatique de Twig. Tronque \u00e0 la fin de phrase la plus proche apr\u00e8s 5 caract\u00e8res. Vous pouvez \u00e9galement tronquer le texte HTML, mais vous devez d'abord utiliser le filtre |striptags pour supprimer toute mise en forme HTML qui pourrait \u00eatre endommag\u00e9e si vous terminez entre des balises : '<span>une <strong>sentence</strong>. deux phrases</span>' |raw|striptags|truncate(25) \u2192 one sentence. two sentenc\u2026 Versions sp\u00e9cialis\u00e9es : safe_truncate Utilisez |safe_truncate pour tronquer le texte par nombre de caract\u00e8res d'une mani\u00e8re \"word-safe\". truncate_html Utilisez |truncate_html pour tronquer le code HTML par nombre de caract\u00e8res. pas \"mot-s\u00fbr\" ! safe_truncate_html Utilisez |safe_truncate_html pour tronquer le code HTML par nombre de caract\u00e8res d'une mani\u00e8re \u00ab sans danger pour les mots \u00bb. underscorize Convertit une cha\u00eene au format \"under_scored\" 'CamelCased'|underscorize \u2192 camel_cased yaml_encode Vider/encoder une variable dans la syntaxe YAML 1 | {% set array = {foo: [0, 1, 2, 3], baz: 'qux' } %} 2 | {{ array|yaml_encode }} foo : - 0 - 1 - 2 - 3 baz: qux yaml_decode D\u00e9coder/analyser une variable \u00e0 partir de la syntaxe YAML 1 | {% set yaml = \"foo: [0, 1, 2, 3]\\nbaz: qux\" %} 2 | {{ yaml|yaml_decode|var_dump }} array(2) { [\"foo\"]=> array(4) { [0]=> int(0) [1]=> int(1) [2]=> int(2) [3]=> int(3) } [\"baz\"]=> string(3) \"qux\" }","title":"Filtres Twig"},{"location":"fonctions-twig/","text":"Les fonctions Twig Les fonctions Twig sont appel\u00e9es directement avec tous les param\u00e8tres pass\u00e9s entre parenth\u00e8ses. array Convertir une valeur en tableau {% set value = array(value) %} array_dyff Calcule la diff\u00e9rence des tableaux. 1 | {% set diff = array_diff(array1, array2...) %} array_key_value La fonction array_key_value permet d'ajouter une paire cl\u00e9/valeur \u00e0 un tableau associ\u00e9 1 | {% set my_array = {fruit: 'apple'} %} 2 | {% set my_array = array_key_value('meat','steak', my_array) %} 3 | {{ print_r(my_array)}} sorties : Array ( [fruit] => apple [meat] => steak ) array_key_exists Wrapper pour la fonction array_key_exists de PHP qui renvoie si oui ou non une cl\u00e9 existe dans un tableau associatif. 1 | {% set my_array = {fruit: 'apple', meat: 'steak'} %} 2 | {{ array_key_exists('meat', my_array) }} sorties : 1 array_intersect La fonction array_intersect fournit l'intersection de deux tableaux ou collections Grav. 1 | {% set array_1 = {fruit: 'apple', meat: 'steak'} %} 2 | {% set array_2 = {fish: 'tuna', meat: 'steak'} %} 3 | {{ print_r(array_intersect(array_1, array_2)) }} sorties : Array ( [meat] => steak ) array_unique Wrapper pour PHP array_unique() qui supprime les doublons d'un tableau. array_unique(['foo', 'bar', 'foo', 'baz']) \u2192 Array ( [0] => foo [1] => bar [3] => baz ) authorize Autorise un utilisateur authentifi\u00e9 \u00e0 voir une ressource. Accepte une seule cha\u00eene d'autorisation ou un tableau de cha\u00eenes d'autorisation. autorize(['admin.statistiques', 'admin.super']) body_class Prend un tableau de classes, et si elles ne sont pas d\u00e9finies sur body_classes , regardez si elles sont d\u00e9finies dans la configuration actuelle du th\u00e8me. set body_classes = body_class(['header-fixed', 'header-animated', 'header-dark', 'header-transparent', 'sticky-footer']) cron Cr\u00e9er un objet \"Cron\" \u00e0 partir de la syntaxe cron cron(\"3 * * * *\").getNextRunDate()|date(config.date_format.default) dump Prend une variable Twig valide et la vide dans le panneau du d\u00e9bogueur Grav. Le d\u00e9bogueur doit \u00eatre activ\u00e9 pour voir les valeurs dans l'onglet messages. dump(page.header) debug Identique \u00e0 dump() evaluate La fonction d'\u00e9valuation peut \u00eatre utilis\u00e9e pour \u00e9valuer une cha\u00eene en tant que Twig : evaluate('grav.language.getLanguage') evaluate_twig Semblable \u00e0 evaluate, mais \u00e9valuera et traitera avec Twig evaluate_twig('Ceci est une variable brindille : {{ foo }}', {foo: 'bar'})) \u2192 This is a twig variable: bar exif Sortez les donn\u00e9es EXIF \u200b\u200b\u200b\u200bd'une image en fonction de son chemin de fichier. Cela n\u00e9cessite que media: auto_metadata_exif: true soit d\u00e9fini dans system.yaml . Par exemple, dans un mod\u00e8le Twig : 1 | {% set image = page.media['sample-image.jpg'] %} 2 | {% set exif = exif(image.filepath, true) %} 3 | {{ exif.MaxApertureValue }} Cela \u00e9crirait la valeur MaxApertureValue d\u00e9finie dans l'appareil photo, par exemple \"40/10\". Vous pouvez toujours utiliser {{ dump(exif)}}S ? pour afficher toutes les donn\u00e9es disponibles dans le d\u00e9bogueur. get_cookie R\u00e9cup\u00e9rez la valeur d'un cookie avec cette fonction : get_cookie('your_cookie_key') get_type Obtient le type d'une variable : get_type(page) \u2192 object gist Prend un identifiant Github Gist et cr\u00e9e le code d'int\u00e9gration Gist appropri\u00e9 gist('bc448ff158df4bc56217') \u2192 <script src=\"https://gist.github.com/bc448ff158df4bc56217.js\">></script> http_response_code Si response_code est fourni, le code d'\u00e9tat pr\u00e9c\u00e9dent sera renvoy\u00e9. Si response_code n'est pas fourni, le code d'\u00e9tat actuel sera renvoy\u00e9. Ces deux valeurs prendront par d\u00e9faut un code d'\u00e9tat 200 si elles sont utilis\u00e9es dans un environnement de serveur Web. http_response_code(404) isajaxrequest la fonction isajaxrequest() peut \u00eatre utilis\u00e9e pour v\u00e9rifier si l'option d'en-t\u00eate HTTP_X_REQUESTED_WITH est d\u00e9finie : json_decode Vous pouvez d\u00e9coder JSON en appliquant simplement ce filtre : json_decode({\"first_name\": \"Guido\", \"last_name\":\"Rossum\"}) media_directory Renvoie un objet m\u00e9dia pour un r\u00e9pertoire arbitraire. Une fois obtenu, vous pouvez manipuler les images de la m\u00eame mani\u00e8re que les pages. media_directory('theme://images')['some-image.jpg'].cropResize(200,200).html nicefilesize Sortie d'une taille de fichier dans un format de bonne taille lisible par l'homme. nicefilesize(612394) \u2192 598,04 Ko nicenumber G\u00e9n\u00e9rer un nombre dans un format de nombre gentil lisible par l'homme nicenumber(12430) \u2192 12,43 k nicetime Afficher une date dans un format d'heure agr\u00e9able lisible par l'homme nicetime(page.date) \u2192 il y a 9 mois nonce_field G\u00e9n\u00e9rez un champ nonce de s\u00e9curit\u00e9 Grav pour un formulaire avec une action requise : nonce_field('action') \u2192 <input type=\"hidden\" name=\"nonce\" value=\"f4b4c7a6f7b9cc18ca81db4080ad14f2\"/> of_type V\u00e9rifie le type d'une variable au param\u00e8tre : of_type(page, 'string') \u2192 false pethinfo Analyse un chemin dans un tableau. 1 | {% set parts = pathinfo('/www/htdocs/inc/lib.inc.php') %} 2 | {{ print_r(parts) }} affiche : Array ( [nom_r\u00e9pertoire] => /www/htdocs/inc [nom_base] => lib.inc.php [extension] => php [nom_fichier] => lib.inc ) print_r Imprime une variable dans un format lisible print_r(page.header) Objet stdClass ( [title] => Fonctions Twig [body_classes] => twig__headers [page-toc] => Tableau ( [actif] => 1 [d\u00e9but] => 3 [profondeur] => 1 ) [processus] => Tableau ( [brindille] => 1 ) [taxonomie] => Tableau ( [cat\u00e9gorie] => docs ) [m\u00e9tadonn\u00e9es] => Tableau ( [description] => [g\u00e9n\u00e9rateur] => GravCMS [title] => Fonctions Twig [image] => https://webshot.getgrav.org/?url=aHR0cHM6Ly9sZWFybi5nZXRncmF2Lm9yZy8xNy90aGVtZXMvdHdpZy10YWdzLWZpbHRlcnMtZnVuY3Rpb25zL2Z1bmN0aW9ucw== [robots] => tous [fb:app_id] => [og:url] => https://learn.getgrav.org/17/themes/twig-tags-filters-functions/functions [og:site_name] => Documentation Grav [og:title] => Fonctions Twig [og:description] => [og:type] => article [og:image] => https://webshot.getgrav.org/?url=aHR0cHM6Ly9sZWFybi5nZXRncmF2Lm9yZy8xNy90aGVtZXMvdHdpZy10YWdzLWZpbHRlcnMtZnVuY3Rpb25zL2Z1bmN0aW9ucw== [og:image:largeur] => 1200 [og:image:hauteur] => 630 [og:image:secure] => https://webshot.getgrav.org/?url=aHR0cHM6Ly9sZWFybi5nZXRncmF2Lm9yZy8xNy90aGVtZXMvdHdpZy10YWdzLWZpbHRlcnMtZnVuY3Rpb25zL2Z1bmN0aW9ucw== [twitter:card] => summary_large_image [gazouillement:site] => [twitter:title] => Fonctions Twig [twitter:description] => [twitter:image] => https://webshot.getgrav.org/?url=aHR0cHM6Ly9sZWFybi5nZXRncmF2Lm9yZy8xNy90aGVtZXMvdHdpZy10YWdzLWZpbHRlcnMtZnVuY3Rpb25zL2Z1bmN0aW9ucw== [twitter:image:alt] => Fonctions Twig ) ) random_string G\u00e9n\u00e8rera une cha\u00eene al\u00e9atoire du nombre de caract\u00e8res requis. Particuli\u00e8rement utile pour cr\u00e9er un identifiant ou une cl\u00e9 unique. random_string(10) \u2192 CKHT5LGcFA unique_id G\u00e9n\u00e8re une cha\u00eene al\u00e9atoire avec une longueur, un pr\u00e9fixe et un suffixe configurables. Contrairement \u00e0 la fonction int\u00e9gr\u00e9e PHP uniqid() et aux utilitaires random_string , cette cha\u00eene sera g\u00e9n\u00e9r\u00e9e vraiment unique et non conflictuelle. unique_id(9) \u2192 5b065bd9e unique_id(11, { pr\u00e9fixe : 'user_' }) \u2192 uniqueid(11, { pr\u00e9fixe : 'user' }) }} unique_id(13, { suffixe : '.json' }) \u2192 unique_id(13, { suffixe : '.json' }) }} range G\u00e9n\u00e8re un tableau contenant une plage d'\u00e9l\u00e9ments, \u00e9ventuellement \u00e9chelonn\u00e9s range(25, 300, 50) \u2192 Array ( [0] => 25 [1] => 75 [2] => 125 [3] => 175 [4] => 225 [5] => 275 ) read_file Fonction simple pour lire un fichier bas\u00e9 sur un chemin de fichier et le sortir. read_file('plugins://admin/README.md')|markdown # Grav Standard Administration Panel Plugin This **admin plugin** for [Grav](https://github.com/getgrav/grav) is an HTML user interface that provides a convenient way to configure Grav and easily create and modify pages... redirect_me Redirige vers une URL de votre choix redirect_me('http://google.com', 304) regex_filter Effectue un preg_grep sur un tableau avec un motif regex regex_filter(['p\u00e2tes', 'poisson', 'steak', 'pommes de terre'], \"/p.*/\") Array ( [0] => pasta [3] => potatoes ) regex_replace Un wrapper utile pour la m\u00e9thode PHP preg_replace() , vous pouvez effectuer des remplacements complexes de Regex sur du texte via ce filtre : regex_replace('Le renard brun rapide saute par-dessus le chien paresseux.', ['/quick/','/brown/','/fox/','/dog/'], ['slow','black', 'ours', 'tortue']) L'ours noir lent saute par-dessus la tortue paresseuse. regex_match Un wrapper utile pour la m\u00e9thode PHP preg_match() , vous pouvez effectuer une correspondance d'expression r\u00e9guli\u00e8re complexe sur du texte via ce filtre : regex_match('http://www.php.net/index.html', '@^(?:http://)?([^/]+)@i') Array ( [0] => http://www.php.net [1] => www.php.net ) regex_split Un wrapper utile pour la m\u00e9thode PHP preg_split() . Divisez la cha\u00eene par une expression r\u00e9guli\u00e8re sur le texte via ce filtre : regex_split('hypertext language, programming', '/\\\\s*,\\\\s*/u') Array ( [0] => hypertext language [1] => programming ) repeat R\u00e9p\u00e9tera tout ce qui est pass\u00e9 dans un certain nombre de fois. repeat ('blah', 10) \u2192 bla bla bla bla bla bla bla bla bla bla string Renvoie une cha\u00eene \u00e0 partir d'une valeur. Si la valeur est un tableau, renvoyez-le encod\u00e9 en json string(23) => \"23\" string(['test' => 'x']) => {\"test\":\"x\"} svg_image Renvoie le contenu d'une image SVG et ajoute des classes suppl\u00e9mentaires si n\u00e9cessaire. Fournit les avantages du svg en ligne sans avoir \u00e0 coller le code directement sur la page. Utile pour les images r\u00e9utilisables telles que les ic\u00f4nes de m\u00e9dias sociaux. {{ svg_image(path, classes, strip_style) }} strip_style = supprimer le style svg en ligne - utile pour le style avec les classes CSS. Exemple: {{ svg_image('theme://images/something.svg', 'my-class-here mb-10', true) }} theme_var Obtenez une variable de th\u00e8me \u00e0 partir de l'en-t\u00eate de la page si elle existe, sinon utilisez la configuration du th\u00e8me : theme_var('grid-size') Cela essaiera d'abord page.header.grid-size , si cela n'est pas d\u00e9fini, il essaiera theme.grid-size \u00e0 partir du fichier de configuration du th\u00e8me. il peut \u00e9ventuellement prendre une valeur par d\u00e9faut : theme_var('grid-size', 1024) t Traduire une cha\u00eene, comme le filtre |t . t('SITE_NAME') \u2192 Site Name ta Fonctionne de la m\u00eame mani\u00e8re que le filtre |ta . tl Traduit une cha\u00eene dans une langue sp\u00e9cifique. Pour plus de d\u00e9tails, consultez la documentation multilingue . tl('SIMPLE_TEXT', ['fr']) url Cr\u00e9era une URL et convertira tous les flux d'URL PHP en ressources HTML valides. Une valeur par d\u00e9faut peut \u00eatre transmise dans le cas o\u00f9 l'URL ne peut pas \u00eatre r\u00e9solue. url('theme://images/logo.png')|default('http://www.placehold.it/150x100/f4f4f4') \u2192 http://www.placehold.it/150x100/f4f4f4 vardump La fonction vardump() affiche la variable actuelle \u00e0 l'\u00e9cran (plut\u00f4t que dans le d\u00e9bogueur comme avec dump() ). 1 | {% set my_array = {foo: 'bar', baz: 'qux'} %} 2 | {{ vardump(my_array) }} [ \"foo\" => \"barre\" \"baz\" => \"qux\" ] xss Autoriser une v\u00e9rification manuelle d'une cha\u00eene pour les vuln\u00e9rabilit\u00e9s XSS xss('cette cha\u00eene contient un <script>alerte(\"bonjour\");</script> XSS vulnerability') \u2192 dangereux_tags","title":"Fonctions Twig"},{"location":"formulaires-blueprint-avance/","text":"Fonctionnalit\u00e9s avanc\u00e9es Blueprint Il existe des fonctionnalit\u00e9s avanc\u00e9es dans les plans qui vous permettent de les \u00e9tendre et d'avoir des champs dynamiques. D\u00e9finir des r\u00e8gles de validation. Si vous avez besoin des m\u00eames r\u00e8gles de validation plusieurs fois, vous pouvez cr\u00e9er votre propre r\u00e8gle personnalis\u00e9e. 1 | rules: 2 | slug: 3 | pattern : \"[a-z][a-z0-9_\\-]+\" 4 | min : 2 5 | max : 80 6 | form: 7 | fields: 8 | folder: 9 | type : texte 10 | label : Nom du dossier 11 | validate: 12 | rule : limace L'exemple ci-dessus cr\u00e9e une r\u00e9gle slug , qui est ensuite utilis\u00e9 dans le champ de dossier du formulaire. Type de base extensible (extends@). Vous pouvez \u00e9tendre le plan existant, ce qui vous permet d'ajouter de nouveaux champs ainsi que de modifier ceux existants \u00e0 partir du plan de base. 1 | extends@ : par d\u00e9faut Dans le format \u00e9tendu, vous pouvez sp\u00e9cifier un contexte de recherche pour votre fichier de base : 1 | extends@: 2 | type: default 3 | context: blueprints://pages Vous pouvez \u00e9galement \u00e9tendre le plan lui-m\u00eame, s'il existe plusieurs versions du m\u00eame plan. 1 | extends@: parent@ Il n\u2019y a aucune limite quant au nombre de plans que vous pouvez \u00e9tendre. Les champs d\u00e9finis dans le premier plan seront remplac\u00e9s par tous les plans ult\u00e9rieurs de la liste. 1 | extends@: 2 | - parent@ 3 | - type: default 4 | context: blueprints://pages Comprendre les propri\u00e9t\u00e9s de type et de contexte. Dans les exemples ci-dessus, le type fait r\u00e9f\u00e9rence \u00e0 un fichier et contex \u00e0 un chemin. La propri\u00e9t\u00e9 contaext utilise Streams , ce qui signifie qu'elle se r\u00e9sout en un emplacement physique. context: blueprints:// par d\u00e9faut donnera /user/plugins/admin/blueprints , le dossier blueprints de l'administrateur. type : default donnera default.yaml , lors de la recherche de fichiers. \u00c9tant donn\u00e9 que ces deux propri\u00e9t\u00e9s sont utilis\u00e9es ensemble, elles g\u00e9n\u00e8rent un chemin complet que Grav peut comprendre : /user/plugins/admin/blueprints/default.yaml . Chaque fois que vous voyez la syntaxe :/ / dans ces documents, vous pouvez \u00eatre s\u00fbr qu'elle fait r\u00e9f\u00e9rence \u00e0 un flux. Et lors de l'utilisation de context , ce flux doit \u00eatre r\u00e9solu dans un dossier existant pour fonctionner. Formulaire d'int\u00e9gration (import@). Parfois, vous souhaiterez peut-\u00eatre partager certains champs ou sous-formulaires entre plusieurs formulaires. Cr\u00e9ons des blueprints://partials/gallery.yaml que nous souhaitons int\u00e9grer \u00e0 notre formulaire : 1 | form: 2 | fields: 3 | gallery.images: 4 | type: list 5 | label: Images 6 | fields: 7 | .src : 8 | type : text 9 | label : Image Notre formulaire comporte ensuite une section dans laquelle nous souhaitons int\u00e9grer les images de la galerie : 1 | form: 2 | fields: 3 | images: 4 | type: section 5 | title: Images 6 | underline: true 7 | import@: 8 | type: partials/gallery 9 | context: blueprints:// Bien que YAML ne permette pas d'utiliser la m\u00eame cl\u00e9 import@ plusieurs fois, vous pouvez toujours importer plusieurs plans en ajoutant un num\u00e9ro unique apr\u00e8s @ , par exemple import@1 , import@2 et ainsi de suite. Le nombre n'a d'autre signification que d'emp\u00eacher l'analyseur YAML de g\u00e9n\u00e9rer des erreurs : 1 | form: 2 | fields: 3 | images: 4 | type: section 5 | title: Images 6 | underline: true 7 | import@1: 8 | type: partials/gallery 9 | context: blueprints:// 10 | import@2: 11 | type: partials/another-gallery 12 | context: blueprints:// Suppression de champs/propri\u00e9t\u00e9s (unset-*@). Si vous souhaitez supprimer un champ, vous pouvez ajouter unset@: true \u00e0 l'int\u00e9rieur. Si vous souhaitez supprimer une propri\u00e9t\u00e9 du champ, ajoutez simplement le nom de la propri\u00e9t\u00e9, par exemple : unset-options@ supprime toutes les options. Remplacement des champs/propri\u00e9t\u00e9s (replace-*@). Par d\u00e9faut, les plans utilisent une fusion approfondie de ses propri\u00e9t\u00e9s. Parfois, au lieu de fusionner le contenu du champ, vous souhaitez repartir d\u2019une table propre. Si vous souhaitez remplacer l'int\u00e9gralit\u00e9 du champ, votre nouveau champ doit commencer par replace@ : 1 | author.name: 2 | replace@: true 3 | type: text 4 | label: Author name Comme r\u00e9sultat author.name n'aura que deux propri\u00e9t\u00e9s : type et label quel que soit ce que le formulaire avait auparavant. Vous pouvez faire la m\u00eame chose pour des propri\u00e9t\u00e9s individuelles : 1 | summary.enabled: 2 | replace-options@: true 3 | options: 4 | 0: Yeah 5 | 1: Nope 6 | 2: Do not care Note : replace-*@ est l'alias de unset-*@ . Utilisation de la configuration (config-*@). Il peut arriver que vous souhaitiez obtenir la valeur par d\u00e9faut de la configuration Grav. Par exemple, vous souhaiterez peut-\u00eatre que le champ auteur soit par d\u00e9faut l'auteur du site : 1 | form: 2 | fields: 3 | author: 4 | type: text 5 | label: Author 6 | config-default@: site.author.name Si le nom de l'auteur de votre site est John Doe , le formulaire est \u00e9quivalent \u00e0 : 1 | form: 2 | fields: 3 | author: 4 | type: text 5 | label: Author 6 | default: \"John Doe\" Vous pouvez utiliser config-*@ pour n'importe quel champ ; par exemple, si vous souhaitez modifier le champ type , vous pouvez simplement utiliser config-type@: site.forms.author.type pour vous permettre de modifier le type de champ de saisie \u00e0 partir de votre configuration. Utilisation des appels de fonction (data-*@). Vous pouvez effectuer des appels de fonction avec des param\u00e8tres de vos plans pour r\u00e9cup\u00e9rer dynamiquement une valeur pour n'importe quelle propri\u00e9t\u00e9 de votre champ. Vous pouvez le faire en utilisant la notation data-*@: comme cl\u00e9, o\u00f9 * est le nom du champ que vous souhaitez remplir avec le r\u00e9sultat de l'appel de fonction. \u00c0 titre d'exemple, nous \u00e9ditons une page et nous souhaitons avoir un champ qui nous permette de changer son parent ou, en d'autres termes, de d\u00e9placer la page vers un autre emplacement. Pour cela, nous avons besoin d'une valeur par d\u00e9faut qui pointe vers l'emplacement actuel ainsi que d'une liste d'options comprenant tous les emplacements possibles. Pour cela, nous avons besoin d'un moyen de demander \u00e0 Grav 1 | form: 2 | fields: 3 | route: 4 | type: select 5 | label: Parent 6 | classes: fancy 7 | data-default@: '\\Grav\\Plugin\\Admin::route' 8 | data-options@: '\\Grav\\Common\\Page\\Pages::parentsRawRoutes' 9 | options: 10 | '/': '- Root -' Si vous modifiiez la page des membres de l'\u00e9quipe, le formulaire r\u00e9sultant ressemblerait \u00e0 ceci : 1 | form: 2 | fields: 3 | route: 4 | type: select 5 | label: Parent 6 | classes: fancy 7 | default: /team 8 | options: 9 | '/': '- Root -' 10 | '/home': 'Home' 11 | '/team': 'Team' 12 | '/team/ceo': ' Meet Our CEO' 13 | ... Bien que data-default@: et data-options@: soient probablement les propri\u00e9t\u00e9s de champ dynamique les plus utilis\u00e9es, vous n'\u00eates pas limit\u00e9 \u00e0 celles-l\u00e0. Il n'y a aucune limite quant aux propri\u00e9t\u00e9s que vous pouvez r\u00e9cup\u00e9rer, y compris type , label, validation et m\u00eame fields` sous le champ actuel. De plus, vous pouvez transmettre des param\u00e8tres \u00e0 l'appel de fonction simplement en utilisant un tableau o\u00f9 la premi\u00e8re valeur est le nom de la fonction et les param\u00e8tres suivent : 1 | data-default@ : ['\\Grav\\Theme\\ImaginaryClass::getMyDefault', 'default', false] Modification de l'ordre des champs. Lorsque vous \u00e9tendez un plan ou importez un fichier, par d\u00e9faut les nouveaux champs sont ajout\u00e9s \u00e0 la fin de la liste. Parfois, ce n'est pas ce que vous souhaitez faire, vous souhaiterez peut-\u00eatre ajouter un \u00e9l\u00e9ment en premier ou apr\u00e8s un champ existant. Si vous souhaitez cr\u00e9er un champ, vous pouvez indiquer son ordre \u00e0 l'aide de la propri\u00e9t\u00e9 ordering@ . Ce champ peut contenir soit un nom de champ, soit un entier (-1 = premier \u00e9l\u00e9ment). Voici un exemple: 1 | form: 2 | fields: 3 | route: 4 | ordering@: -1 5 | type: select 6 | label: Parent 7 | classes: fancy 8 | default: /team 9 | options: 10 | '/': '- Root -' 11 | '/home': 'Home' 12 | '/team': 'Team' 13 | '/team/ceo': ' Meet Our CEO' 14 | ... Cela garantit que le champ itin\u00e9raire sera le premier champ \u00e0 appara\u00eetre dans le formulaire. Cela facilite l'importation et/ou l'extension d'un champ existant et le placement de vos champs suppl\u00e9mentaires l\u00e0 o\u00f9 vous souhaitez qu'ils soient plac\u00e9s. Voici un autre exemple : 1 | form: 2 | fields: 3 | author: 4 | ordering@: header.title 5 | type: text 6 | label: Author 7 | default: \"John Doe\" Dans l'exemple ci-dessus, nous avons utilis\u00e9 le nom d'un autre champ pour d\u00e9finir l'ordre. Dans cet exemple, nous l'avons configur\u00e9 pour que le champ author apparaisse apr\u00e8s le champ title dans le formulaire. Lorsque vous commandez des champs dans un plan de page, vous devez toujours r\u00e9f\u00e9rencer les noms de champs pr\u00e9fix\u00e9s par header. , par exemple : header.title pour que la commande fonctionne. Cr\u00e9ation d'un nouveau type de champ de formulaire. Si vous cr\u00e9ez un type de champ de formulaire sp\u00e9cial, qui n\u00e9cessite une gestion particuli\u00e8re dans les plans, il existe une fonction de plugin que vous pouvez utiliser. 1 | /** 2 | * Get list of form field types specified in this plugin. Only 3 | special types needs to be listed. 4 | * 5 | * @return array 6 | */ 7 | public function getFormFieldTypes() 8 | { 9 | return [ 10 | 'display' => [ 11 | 'input@' => false 12 | ], 13 | 'spacer' => [ 14 | 'input@' => false 15 | ] 16 | ]; 17 | } Vous n'avez pas besoin d'enregistrer cette fonction car ce n'est pas vraiment un \u00e9v\u00e9nement, mais elle est d\u00e9clench\u00e9e lorsque l'objet plugin est construit. Le but de cette fonction est de donner des instructions suppl\u00e9mentaires sur la mani\u00e8re de g\u00e9rer le champ, par exemple, le code ci-dessus rend les types d'affichage et d'espacement virtuels, ce qui signifie qu'ils n'existeront pas dans les donn\u00e9es r\u00e9elles. Vous pouvez ajouter n'importe quelle paire key: value , y compris des propri\u00e9t\u00e9s dynamiques telles que data-options@ qui seront automatiquement ajout\u00e9es aux champs. onBlueprintCreated ou acc\u00e8s aux donn\u00e9es du plan. \u00c9tant donn\u00e9 que les plans sont constitu\u00e9s de champs avec des points, l'obtention d'un champ imbriqu\u00e9 \u00e0 partir du plan utilise la notation / au lieu de . . 1 | $tabs = $blueprint->get('form/fields/tabs'); Cela permet d'acc\u00e9der \u00e0 des champs de donn\u00e9es sp\u00e9ciaux, comme : 1 | $name = $blueprint->get('form/fields/content.name'); 2 | $name = $blueprint->get('form/fields/content/fields/.name'); Pour une compatibilit\u00e9 ascendante, vous pouvez sp\u00e9cifier un diviseur dans le dernier (3\u00e8me) param\u00e8tre de set() et get() . 1 | $tabs = $blueprint->get('form/fields/tabs', null, '/');","title":"Fonctionnalit\u00e9s avanc\u00e9s Blueprint"},{"location":"formulaires-blueprints/","text":"Blueprints Qu'est-ce qu'un Blueprint ? Les blueprints sont un aspect important de Grav. Ils sont essentiellement la base de l'interaction d'un th\u00e8me ou d'un plugin avec l'administrateur Grav. Ils indiquent \u00e0 Grav ce qu'est un th\u00e8me ou un plugin, son nom, o\u00f9 il peut \u00eatre trouv\u00e9 sur GitHub, etc. Il g\u00e9n\u00e8re \u00e9galement les options de configuration pour ce th\u00e8me ou ce plugin dans l'administration Grav. Un Blueprint est d\u00e9fini dans un fichier YAML et peut g\u00e9n\u00e9ralement h\u00e9berger des propri\u00e9t\u00e9s ainsi que des d\u00e9finitions de formulaire. La grande majorit\u00e9 des utilisateurs de Grav n'auront jamais \u00e0 travailler avec Blueprints. En termes simples, ils d\u00e9terminent comment les plugins et les th\u00e8mes apparaissent dans le back-end du site. Pour la plupart des utilisateurs, c'est l\u00e0 qu'ils r\u00e9cup\u00e8rent, configurent leurs th\u00e8mes et plugins \u00e0 l'aide de l'administrateur Grav ou manipulent les options dans le fichier YAML principal du th\u00e8me ou du plugin. Les personnes qui travailleront le plus avec Blueprints sont les d\u00e9veloppeurs qui cr\u00e9ent de nouveaux th\u00e8mes et plugins et personnalisent les options d'une ressource dans le back-end. Il s'agit d'un outil puissant qui d\u00e9finit quelle est votre ressource, o\u00f9 Grav peut trouver des mises \u00e0 jour pour celle-ci et quelles options de configuration vous devriez pouvoir d\u00e9finir dans le back-end. Types de Blueprints Grav utilise Blueprints pour : d\u00e9finir les informations sur les th\u00e8mes et les plugins. d\u00e9finir les options de configuration de th\u00e8me/plugin \u00e0 afficher dans l'Admin. d\u00e9finir les formulaires Pages dans l'Admin. d\u00e9finir les options affich\u00e9es dans la section Configuration Admin. \u00c0 ce stade, nous d\u00e9crirons des d\u00e9tails suppl\u00e9mentaires sur le fonctionnement des Blueprints dans Grav. Th\u00e8mes et plugins Lorsqu'il est utilis\u00e9 avec des th\u00e8mes et des plugins, la convention consiste \u00e0 mettre un blueprints.yaml dans le package. Cela indique \u00e0 Grav les m\u00e9tadonn\u00e9es de cette ressource, ce qui la pr\u00e9sente \u00e0 l'administrateur Grav. Un fichier blueprints.yaml est une partie importante de tout th\u00e8me et plugin. Il est essentiel pour le syst\u00e8me GPM (Grav Package Manager). GPM utilise les informations stock\u00e9es dans le plan pour mettre le plugin \u00e0 la disposition des utilisateurs. Dans notre exemple de plugin blueprint , nous plongeons dans le plan du plugin Assets . Ce plan d\u00e9finit le nom, les informations sur l'auteur, les mots-cl\u00e9s, la page d'accueil, le lien du rapport de bogue et d'autres m\u00e9tadonn\u00e9es qui non seulement indiquent \u00e0 Grav o\u00f9 il peut localiser les mises \u00e0 jour du plug-in, mais fournissent une ressource utile \u00e0 l'utilisateur accessible depuis l'administrateur Grav. Une fois ces informations renseign\u00e9es, plus bas dans la page du Blueprint, vous trouverez des informations sur les formulaires. Ces informations cr\u00e9ent les formulaires d'administration accessibles par l'utilisateur dans le backend de Grav. Par exemple, si vous vouliez ajouter une bascule qui active ou d\u00e9sactive une fonctionnalit\u00e9 particuli\u00e8re de ce plugin, vous l'ajouteriez ici. Le fichier blueprints.yaml fonctionne avec le fichier YAML nomm\u00e9 du plugin (exemple : assets.yaml ). Le blueprint d\u00e9finit les options configurables et le fichier YAML nomm\u00e9 de la ressource d\u00e9finit leurs valeurs. C'est ce fichier YAML nomm\u00e9 qui est ensuite dupliqu\u00e9 dans la section user/config de l'instance Grav pour remplacer ces valeurs par d\u00e9faut manuellement ou via l'administrateur Grav. Donc, essentiellement, lorsqu'il s'agit d'une option de configuration pour un th\u00e8me ou un plugin, le fichier blueprints.yaml le d\u00e9finit, et le fichier YAML nomm\u00e9 pour cette ressource vous indique \u00e0 quoi il est d\u00e9fini. Pages Les pages Grav peuvent vraiment \u00eatre n'importe quoi. Une page peut \u00eatre une liste de blog, un article de blog, une page de produit, une galerie d'images, etc. Ce qui d\u00e9termine ce qu'une page doit faire et comment elle doit appara\u00eetre est le Plan de Page . Grav fournit quelques plans de page de base : par d\u00e9faut et modulaire. Ce sont les deux principaux \u00e9l\u00e9ments constitutifs de Grav. Des plans de page suppl\u00e9mentaires sont ajout\u00e9s et configur\u00e9s par le th\u00e8me, qui peut d\u00e9cider d'ajouter autant de plans de page que possible, ou de se concentrer sur certains plans de page particuliers ax\u00e9s sur ce qu'il doit faire. Un th\u00e8me Grav est beaucoup plus flexible et puissant que ce \u00e0 quoi vous pourriez \u00eatre habitu\u00e9 sur d'autres plates-formes. Cela permet aux th\u00e8mes d'\u00eatre sp\u00e9cifiques \u00e0 l'application. Par exemple, un th\u00e8me peut se sp\u00e9cialiser dans l'un de ces objectifs : construire un site de documentation, comme celui que vous \u00eates en train de lire. cr\u00e9ation d'un site e-commerce. construire un blog. construire un site de portefeuille. Un th\u00e8me peut \u00e9galement permettre \u00e0 ses utilisateurs de tous les cr\u00e9er, mais g\u00e9n\u00e9ralement, un th\u00e8me affin\u00e9 cr\u00e9\u00e9 dans un seul but peut mieux satisfaire cet objectif qu'un th\u00e8me g\u00e9n\u00e9rique. Un fichier de page est utilis\u00e9 par une page en d\u00e9finissant son nom de fichier de d\u00e9marquage, par ex. blog.md , default.md ou form.md . Chacun de ces fichiers utilisera un fichier de page diff\u00e9rent. Vous pouvez \u00e9galement modifier le type de fichier \u00e0 l'aide de la propri\u00e9t\u00e9 d'en-t\u00eate template . Le mod\u00e8le utilis\u00e9 par une page d\u00e9termine non seulement le \"look and feel\" dans le frontend, mais d\u00e9termine \u00e9galement comment le plugin d'administration le rendra, vous permettant d'ajouter des options, de s\u00e9lectionner des cases, des entr\u00e9es personnalis\u00e9es et des bascules. Comment faire : dans votre th\u00e8me, ajoutez un dossier blueprints/ et ajoutez un fichier YAML avec le nom du mod\u00e8le de page que vous avez ajout\u00e9. Par exemple, si vous ajoutez un mod\u00e8le de page de blog , ajoutez un fichier blueprints/blog.yaml . Vous pouvez trouver un exemple de ce r\u00e9pertoire dans le th\u00e8me Antimatter . Composants d'un Blueprint Deux ensembles d'informations sont pr\u00e9sent\u00e9s dans un fichier blueprints.yaml . Le premier ensemble d'informations de m\u00e9tadonn\u00e9es est l'identit\u00e9 de la ressource elle-m\u00eame, le second ensemble concerne les formulaires. Toutes ces informations sont stock\u00e9es dans un seul fichier blueprints.yaml stock\u00e9 \u00e0 la racine de chaque plugin et th\u00e8me. Voici un exemple de la partie m\u00e9tadonn\u00e9es d'un fichier blueprints.yaml : 1 | name: GitHub 2 | slug: github 3 | type: plugin 4 | version: 1.0.1 5 | description: \"This plugin wraps the [GitHub v3 API](https://developer.github.com/v3/) 6 | and uses the [php-github-api](https://github.com/KnpLabs/php-github-api/) library to 7 | add a nice GitHub touch to your Grav pages.\" 8 | icon: github 9 | author: 10 | name: Team Grav 11 | email: devs@getgrav.org 12 | url: https://getgrav.org 13 | homepage: https://github.com/getgrav/grav-plugin-github 14 | keywords: github, plugin, api 15 | bugs: https://github.com/getgrav/grav-plugin-github/issues 16 | license: MIT Comme vous pouvez le voir ici, cette zone contient de nombreuses informations d'identification g\u00e9n\u00e9rales sur le plugin, y compris son nom, son num\u00e9ro de version, sa description, les informations sur l'auteur, la licence, les mots-cl\u00e9s et les URL o\u00f9 vous pouvez trouver plus d'informations ou signaler des bogues. Vous pouvez voir cette section en action dans la capture d'\u00e9cran prise \u00e0 partir de Grav Admin ci-dessous. La section suivante est la zone des formulaires, qui se trouve juste quelques espaces en dessous des donn\u00e9es r\u00e9pertori\u00e9es ci-dessus. Cette zone du blueprint g\u00e9n\u00e8re des formulaires et des champs utilis\u00e9s pour configurer le plugin \u00e0 partir de Grav Admin. Voici un exemple rapide de cette zone du fichier blueprints.yaml . 1 | form: 2 | validation: strict 3 | fields: 4 | enabled: 5 | type: toggle 6 | label: Plugin status 7 | highlight: 1 8 | default: 1 9 | options: 10 | 1: Enabled 11 | 0: Disabled 12 | validate: 13 | type: bool Cette zone du fichier cr\u00e9e toutes les options administratives accessibles dans Grav Admin. Dans ce cas particulier, nous avons cr\u00e9\u00e9 une simple bascule d'\u00e9tat du plugin qui permet \u00e0 l'utilisateur d'activer ou de d\u00e9sactiver le plugin depuis l'administrateur (illustr\u00e9 ci-dessous). D\u00e9bogage des Blueprints Les erreurs dans les fichiers Blueprint peuvent entra\u00eener des r\u00e9sultats inattendus. ASTUCE : vous pouvez ex\u00e9cuter la commande CLI command bin/grav yamllinter pour obtenir un rapport sur les erreurs dans les fichiers yaml. Cela peut \u00eatre d'une valeur inestimable lors de la modification de fichiers yaml.","title":"Blueprints"},{"location":"formulaires-ex-blueprint/","text":"Exemple: Plugin Blueprint Un plugin blueprint donne \u00e0 Grav un aper\u00e7u de ce qu'est un plugin, sa source, ses informations de support et d'auteur, ses d\u00e9pendances et les champs de formulaire utilis\u00e9s pour administrer le plugin dans Grav Admin. A titre d'exemple, voici le Blueprint pour un plugin : 1 | name: Assets 2 | slug: assets 3 | type: plugin 4 | version: 1.0.4 5 | description: \"This plugin provides a convenient way to add CSS and JS assets directly from your pages.\" 6 | icon: list-alt 7 | author: 8 | name: Team Grav 9 | email: devs@getgrav.org 10 | url: https://getgrav.org 11 | homepage: https://github.com/getgrav/grav-plugin-assets 12 | demo: https://learn.getgrav.org 13 | keywords: assets, javascript, css, inline 14 | bugs: https://github.com/getgrav/grav-plugin-assets/issues 15 | license: MIT 16 | 17 | dependencies: 18 | - { name: afterburner2 } 19 | - { name: github } 20 | - { name: email, version: '~2.0' } Il existe diff\u00e9rentes propri\u00e9t\u00e9s que vous pouvez utiliser pour donner une identit\u00e9 \u00e0 votre ressource. Certains sont obligatoires , d'autres sont facultatifs. PROPRI\u00c9T\u00c9 DESCRIPTION name * Il s'agit du nom de la ressource. \u00c9vitez d'ajouter un plugin ou un th\u00e8me, cela n'est pas n\u00e9cessaire. slug * Il s'agit de l'identifiant unique de la ressource, il est \u00e9galement utilis\u00e9 pour d\u00e9terminer le nom du dossier dans lequel la ressource est stock\u00e9e, par ex. user/plugins/__slug__ type * Il s'agit du type de ressource, il doit s'agir soit d'un plugin, soit d'un th\u00e8me version * La version de la ressource. Cette valeur doit toujours changer \u00e0 chaque version, de mani\u00e8re incr\u00e9mentielle. Vous devez \u00e9galement suivre la norme semver. description * La description de votre ressource. Veuillez ne pas d\u00e9passer 200 caract\u00e8res. Une description doit \u00eatre courte et aller droit au but. Vous pouvez utiliser la syntaxe Markdown si n\u00e9cessaire. C'est aussi une bonne id\u00e9e d'envelopper votre description entre guillemets. icon * L'ic\u00f4ne est ce qui sera utilis\u00e9 sur getgrav.org . \u00c0 ce stade, nous utilisons la biblioth\u00e8que d'ic\u00f4nes FontAwesome , donc si vous d\u00e9veloppez un nouveau plugin ou th\u00e8me, il devrait \u00eatre de votre devoir de vous assurer que l'ic\u00f4ne que vous avez choisie n'est pas d\u00e9j\u00e0 utilis\u00e9e. Sinon, nous devrons le changer pour vous. screeshot (facultatif) La capture d'\u00e9cran n'est \u00e9valu\u00e9e que pour les th\u00e8mes et compl\u00e8tement ignor\u00e9e pour les plugins . Pour les th\u00e8mes , il s'agirait du nom de fichier de la capture d'\u00e9cran fournie avec le th\u00e8me (par d\u00e9faut : screenshot.jpg). Si vous avez une image screenshot.jpg \u00e0 la racine de votre th\u00e8me, alors vous pouvez \u00e9viter d'utiliser cette propri\u00e9t\u00e9. Notre r\u00e9f\u00e9rentiel le r\u00e9cup\u00e9rera automatiquement. author.name * Le nom complet du d\u00e9veloppeur author.email (facultatif) L'adresse e-mail du d\u00e9veloppeur. author.url (facultatif) La page d'accueil du d\u00e9veloppeur. homepage (facultatif) Si vous avez une page d'accueil d\u00e9di\u00e9e \u00e0 votre ressource, c'est l'endroit qu'il vous faut. docs (facultatif) Si vous avez \u00e9crit de la documentation pour votre ressource, vous pouvez les lier ici. demo (facultatif) Si vous avez une d\u00e9mo en cours d'ex\u00e9cution sur votre ressource, liez-la ici. guide (facultatif) Si vous avez des didacticiels ou des guides pratiques pour votre ressource, liez-les ici. keywords (facultatif) Bien qu'il n'y ait pas encore d'utilisation r\u00e9elle des mots-cl\u00e9s, vous pouvez lister ici les mots-cl\u00e9s relatifs \u00e0 votre ressource, s\u00e9par\u00e9s par des virgules. bugs (facultatif) L'URL o\u00f9 les bogues peuvent \u00eatre signal\u00e9s, g\u00e9n\u00e9ralement ce serait le lien des probl\u00e8mes GitHub. license (facultatif) Le type de licence de votre ressource (MIT, GPL, etc.). Il est conseill\u00e9 de toujours fournir un fichier LICENCE avec votre ressource. dependencies (facultatif) Une liste des d\u00e9pendances requises par le plugin/th\u00e8me. Le processus par d\u00e9faut consiste \u00e0 utiliser GPM pour les installer, cependant, si une URL de r\u00e9f\u00e9rentiel GIT facultative est fournie, l'installation directe \u00e0 partir du r\u00e9f\u00e9rentiel sera \u00e9galement une option. De m\u00eame, si vous utilisez un tableau, vous pouvez d\u00e9finir explicitement un nom et une version \u00e0 l'aide de versions de package de style Composer. gpm (facultatif) Indique s'il faut obtenir les mises \u00e0 jour du GPM. D\u00e9finir sur false pour d\u00e9sactiver les mises \u00e0 jour GPM pour les ressources non-GPM. Voici un exemple de la partie identit\u00e9 du plugin GitHub blueprints : 1 | name: GitHub 2 | slug: github 3 | type: plugin 4 | version: 1.0.1 5 | description: \"This plugin wraps the [GitHub v3 API](https://developer.github.com/v3/) | and uses the [php-github-api](https://github.com/KnpLabs/php-github-api/) library to | add a nice GitHub touch to your Grav pages.\" 6 | icon: github 7 | author: 8 | name: Team Grav 9 | email: devs@getgrav.org 10 | url: https://getgrav.org 11 | homepage: https://github.com/getgrav/grav-plugin-github 12 | keywords: github, plugin, api 13 | bugs: https://github.com/getgrav/grav-plugin-github/issues 14 | license: MIT Le th\u00e8me blueprints fonctionnent \u00e0 peu pr\u00e8s de la m\u00eame mani\u00e8re que les plugins.","title":"Exemple - Plugin Blueprint"},{"location":"formulaires-ex-config-blueprint/","text":"Exemple : Config Blueprints Il est courant d'ajouter des options de configuration dans site.yaml , \u00e0 afficher dans le contenu du site. Pour rendre ces options configurables via le panneau d'administration, ajoutez des champs \u00e0 user/blueprints/config/site.yaml . Par example: 1 | @extends: 2 | '@parent' 3 | 4 | form: 5 | fields: 6 | content: 7 | 8 | fields: 9 | myfield: 10 | type: text 11 | label: My Field Ajoute le type d'entr\u00e9e \"Mon champ\", en l'ajoutant \u00e0 la section Contenu de la configuration du site. Vous pouvez \u00e9galement ajouter de nouvelles sections enti\u00e8res, par exemple : 1 | @extends: 2 | '@parent' 3 | 4 | form: 5 | fields: 6 | anothersection: 7 | type: section 8 | title: Another Section 9 | underline: true 10 | 11 | fields: 12 | myfield: 13 | type: text 14 | label: A label 15 | size: large","title":"Exemple - Config Blueprint"},{"location":"formulaires-ex-config/","text":"Exemple : Plugin Configuration Nous avons vu dans l'exemple pr\u00e9c\u00e9dent comment d\u00e9finir un blueprint pour un plugin et/ou un th\u00e8me. Voyons maintenant comment proposer des options de configuration pour un plugin ou un th\u00e8me, qui seront affich\u00e9es par le plugin d'administration. Si vous souhaitez que votre plugin (ou th\u00e8me) ait des options directement configurables depuis l'interface d'administration, vous devez remplir le fichier blueprints.yaml avec des formulaires. Par exemple, voici le fichier archives.yaml du plugin Archives : 1 | enabled: true 2 | built_in_css: true 3 | date_display_format: 'F Y' 4 | show_count: true 5 | limit: 12 6 | order: 7 | by: date 8 | dir: desc 9 | filter_combinator: and 10 | filters: 11 | category: blog Ce sont les param\u00e8tres par d\u00e9faut du plugin. Sans le plugin Admin pour configurer ces param\u00e8tres, l'utilisateur doit copier ce fichier dans le dossier /user/config/plugins/ et les y installer. En fournissant un fichier blueprints.yaml correctement format\u00e9, vous pouvez autoriser l'utilisateur \u00e0 modifier les param\u00e8tres depuis l'interface d'administration. Lorsque les param\u00e8tres sont enregistr\u00e9s, ils sont automatiquement \u00e9crits dans /user/config/plugins/archives.yaml (ou sous config/themes, s'il s'agit d'un th\u00e8me). La structure commence comme suit : 1 | name: Archives 2 | version: 1.3.0 3 | description: The **Archives** plugin creates links for pages grouped by month/year 4 | icon: university 5 | author: 6 | name: Team Grav 7 | email: devs@getgrav.org 8 | url: https://getgrav.org 9 | homepage: https://github.com/getgrav/grav-plugin-archives 10 | demo: http://demo.getgrav.org/blog-skeleton 11 | keywords: archives, plugin, blog, month, year, date, navigation, history 12 | bugs: https://github.com/getgrav/grav-plugin-archives/issues 13 | license: MIT 14 | 15 | form: 16 | validation: strict 17 | fields: Voici la pi\u00e8ce dont nous avons besoin. Chaque champ du fichier archives.yaml n\u00e9cessite un \u00e9l\u00e9ment de formulaire correspondant, par exemple : Toggle 1 | enabled: 2 | type: toggle 3 | label: Plugin status 4 | highlight: 1 5 | default: 1 6 | options: 7 | 1: Enabled 8 | 0: Disabled 9 | validate: 10 | type: bool Select 1 | date_display_format: 2 | type: select 3 | size: medium 4 | classes: fancy 5 | label: Date Format 6 | default: 'jS M Y' 7 | options: 8 | 'F jS Y': \"January 1st 2014\" 9 | 'l jS of F': \"Monday 1st of January\" 10 | 'D, m M Y': \"Mon, 01 Jan 2014\" 11 | 'd-m-y': \"01-01-14\" 12 | 'jS M Y': \"10th Feb 2014\" Text 1 | limit: 2 | type: text 3 | size: x-small 4 | label: Count Limit 5 | validate: 6 | type: number 7 | min: 1 L'\u00e9l\u00e9ment racine (dans ces exemples enabled , date_display_format , limit ) est le nom de l'option. Les composants suppl\u00e9mentaires de chaque champ d\u00e9terminent la fa\u00e7on dont ce champ est affich\u00e9. Par exemple, son type ( type ), sa taille ( size ), l'\u00e9tiquette affich\u00e9e ( label ) et une info-bulle utile facultative qui appara\u00eet au survol ( help ). default et placeholder vous permettent de cr\u00e9er des valeurs par d\u00e9faut et d'am\u00e9liorer le rendu des champs pour l'utilisateur. Le reste des champs peut changer selon le type de champ. Par exemple, le type de champ select requiert une liste options . Les options imbriqu\u00e9es sont accessibles via la notation par points (par exemple, order.dir ) 1 | order.dir: 2 | type: toggle 3 | label: Order Direction 4 | highlight: asc 5 | default: desc 6 | options: 7 | asc: Ascending 8 | desc: Descending Le plugin Admin d\u00e9finit de nombreux autres types de champs qui peuvent \u00eatre utilis\u00e9s, dans plugins/admin/themes/grav/templates/forms/fields . Il est important de noter que lorsque form.validation est d\u00e9fini sur strict , comme dans l'exemple du plug-in Archives , vous devez ajouter des plans de formulaire pour toutes les options, sinon une erreur appara\u00eetra lors de l'enregistrement. Si vous souhaitez plut\u00f4t autoriser la personnalisation de quelques champs dans l'interface d'administration, pas tous, d\u00e9finissez form.validation comme loose .","title":"Exemple - Plugin Configuration"},{"location":"formulaires-ex-formulaire-contact/","text":"Exemple : Formulaire de contact Formulaire de contact simple. Le plugin Grav Form est le moyen le plus simple d'avoir des formulaires sur votre site. Voyons comment cr\u00e9er un formulaire de contact simple. Un exemple vivant. Le squelette de l'article Sora a une page de formulaire pr\u00eate \u00e0 \u00eatre consult\u00e9e lors de la lecture de ce didacticiel : Page en direct Fichier markdown de la page Configurer la page. Vous pouvez mettre un formulaire dans n'importe quelle page de votre site. Tout ce que vous avez \u00e0 faire est de renommer le fichier markdown de la page en form.md , ou d'ajouter un en-t\u00eate de mod\u00e8le dans le frontmatter de la page, pour qu'il utilise le mod\u00e8le de formulaire form . Le mod\u00e8le de votre page, ou le mod\u00e8le parent de la page, doit impl\u00e9menter la balise {% block content %} pour que le Plugin Grav Form puisse afficher vos entr\u00e9es sur la page. Les champs de formulaire et les instructions de traitement sont d\u00e9finis dans le frontmatter YAML de la page, il vous suffit donc d'ouvrir le fichier Markdown de la page avec votre \u00e9diteur pr\u00e9f\u00e9r\u00e9 et d'y ins\u00e9rer le code suivant : 1 | --- 2 | title: Contact Form 3 | 4 | form: 5 | name: contact 6 | 7 | fields: 8 | name: 9 | label: Name 10 | placeholder: Enter your name 11 | autocomplete: on 12 | type: text 13 | validate: 14 | required: true 15 | 16 | email: 17 | label: Email 18 | placeholder: Enter your email address 19 | type: email 20 | validate: 21 | required: true 22 | 23 | message: 24 | label: Message 25 | placeholder: Enter your message 26 | type: textarea 27 | validate: 28 | required: true 29 | 30 | g-recaptcha-response: 31 | label: Captcha 32 | type: captcha 33 | recaptcha_not_validated: 'Captcha not valid!' 34 | 35 | buttons: 36 | submit: 37 | type: submit 38 | value: Submit 39 | reset: 40 | type: reset 41 | value: Reset 42 | 43 | process: 44 | captcha: true 45 | save: 46 | fileprefix: contact- 47 | dateformat: Ymd-His-u 48 | extension: txt 49 | body: \"{% include 'forms/data.txt.twig' %}\" 50 | email: 51 | subject: \"[Site Contact Form] {{ form.value.name|e }}\" 52 | body: \"{% include 'forms/data.html.twig' %}\" 53 | message: Thank you for getting in touch! 54 | display: thankyou 55 | --- 56 | 57 | # Contact form 58 | 59 | Some sample page content Assurez-vous d'avoir configur\u00e9 les adresses e-mail \"E-mail de\" et \"E-mail vers\" dans le plugin E-mail avec votre adresse e-mail. Cet exemple utilise Google reCAPTCHA via le champ captcha , et vous devez configurer votre site_key et secret_key dans le plugin de formulaire pour que cela fonctionne. Si vous ne souhaitez pas utiliser Google reCaptcha, supprimez simplement le champ g-recaptcha-response et le processus captcha: true . Maintenant, dans le dossier de la page, cr\u00e9ez un sous-dossier nomm\u00e9 thankyou/, cr\u00e9ez un nouveau fichier nomm\u00e9 formdata.md . Et collez le code suivant dans le fichier : 1 | --- 2 | title: Email sent 3 | cache_enable: false 4 | process: 5 | twig: true 6 | --- 7 | 8 | ## Email sent! C'est \u00e7a! Page en direct Fichier de page markdown Les pages modulaires sont un peu diff\u00e9rentes. Dans ce cas, voir aussi utilisation des formulaires dans les pages modulaires . Lorsque les utilisateurs soumettent le formulaire, le plugin vous enverra un e-mail (comme d\u00e9fini dans les param\u00e8tres de formulaire form du plugin Grav Email) et enregistrera les donn\u00e9es saisies dans le dossier data/ . Pour plus de d\u00e9tails sur la mise en place et la configuration du courrier \u00e9lectronique, veuillez lire la documentation du plugin Email de courrier \u00e9lectronique . Vous pouvez activer le plugin Grav Data Manager pour voir ces donn\u00e9es dans le plugin Admin . \u00c0 l'avenir, nous voulons que Grav soit capable de g\u00e9n\u00e9rer dynamiquement des formulaires \u00e0 partir du plugin d'administration.","title":"Exemple - Formulaire de contact"},{"location":"formulaires-ex-page-blueprint/","text":"Exemple : Page Blueprints Les pages Blueprints s'\u00e9tendent \u00e0 partir de la page par d\u00e9faut et vous permettent d'ajouter des options. Fondamentalement, les pages personnalis\u00e9es peuvent prendre vie en utilisant des plans de page. Avec un plan de page, vous pouvez configurer \u00e0 100% le formulaire d'\u00e9dition d'une page telle qu'elle appara\u00eet dans l'Admin. Un premier exemple Si vous souhaitez utiliser le formulaire de page par d\u00e9faut et ajouter simplement quelques zones de s\u00e9lection par exemple, vous pouvez \u00e9tendre la page par d\u00e9faut. Cela utilisera le formulaire de page par d\u00e9faut et ajoutera un champ de texte \u00e0 l'onglet Avanced , sous la section Overrides : 1 | title: Gallery 2 | extends@: 3 | type: default 4 | context: blueprints://pages 5 | 6 | form: 7 | fields: 8 | tabs: 9 | type: tabs 10 | active: 1 11 | 12 | fields: 13 | advanced: 14 | fields: 15 | overrides: 16 | fields: 17 | header.an_example_text_field: 18 | type: text 19 | label: Add a number 20 | default: 5 21 | validate: 22 | required: true 23 | type: int Cela ajoutera \u00e0 la place un nouvel onglet, appel\u00e9 Gallery , avec certains champs. 1 | title: Gallery 2 | '@extends': 3 | type: default 4 | context: blueprints://pages 5 | 6 | form: 7 | fields: 8 | tabs: 9 | type: tabs 10 | active: 1 11 | 12 | fields: 13 | gallery: 14 | type: tab 15 | title: Gallery 16 | 17 | fields: 18 | header.an_example_text_field: 19 | type: text 20 | label: Add a number 21 | default: 5 22 | validate: 23 | required: true 24 | type: int 25 | 26 | header.an_example_select_box: 27 | type: select 28 | label: Select one of the following 29 | default: one 30 | options: 31 | one: One 32 | two: Two 33 | three: Three Les types de champs que vous pouvez ajouter sont r\u00e9pertori\u00e9s dans Champs de formulaire disponibles pour une utilisation dans l'administration Comment nommer les champs Il est important que les champs utilisent la structure header.* , afin que le contenu du champ soit enregistr\u00e9 dans l'en-t\u00eate de page lors de l'enregistrement. Cr\u00e9er un formulaire de page enti\u00e8rement personnalis\u00e9 Vous pouvez \u00e9viter d'\u00e9tendre le formulaire par d\u00e9faut et cr\u00e9er un formulaire de page compl\u00e8tement unique. Par example: 1 | title: Gallery 2 | 3 | form: 4 | fields: 5 | tabs: 6 | type: tabs 7 | active: 1 88 | 9 | fields: 10 | gallery: 11 | type: tab 12 | title: Gallery 13 | 14 | fields: 15 | header.an_example_text_field: 16 | type: text 17 | label: Add a number 18 | default: 5 19 | validate: 20 | required: true 21 | type: int 22 | 23 | header.an_example_select_box: 24 | type: select 25 | label: Select one of the following 26 | default: one 27 | options: 28 | one: One 29 | two: Two 30 | three: Three 31 | 32 | route: 33 | type: parents 34 | label: PLUGIN_ADMIN.PARENT 35 | classes: fancy ATTENTION : le champ route a chang\u00e9 dans Grav 1.7. Veuillez mettre \u00e0 jour vos blueprints existants pour utiliser le nouveau type : parents . Une note pour le mode expert Lors de la modification de pages en mode Expert , le Blueprint n'est pas lu et le formulaire de page est le m\u00eame sur toutes les pages. En effet, en mode Expert, vous modifiez les champs de la page directement dans le champ Frontmatter , et il n'est pas n\u00e9cessaire d'avoir une pr\u00e9sentation personnalis\u00e9e. O\u00f9 mettre les pages Blueprints Pour que le plugin d'administration r\u00e9cup\u00e8re les plans et affiche ainsi les nouveaux types de page, vous devez placer les plans au bon endroit. Dans le dossier User Blueprints Mettez-les dans user/blueprints/pages/ . C'est un bon endroit pour les mettre lorsque vous voulez simplement que vos plans soient pr\u00e9sents sur votre site. Dans le th\u00e8me Mettez-les dans user/themes/YOURTHEME/blueprints/ . C'est mieux lorsque vous avez \u00e9galement l'intention de diffuser votre th\u00e8me : le th\u00e8me fournira les pages blueprints et il sera plus facile \u00e0 utiliser. Dans le dossier Donn\u00e9es Si vous utilisez un th\u00e8me bas\u00e9 sur Gantry5, le meilleur emplacement est user/data/gantry5/themes/YOURTHEME/blueprints/ , sinon vos fichiers pourraient \u00eatre perdus lors d'une mise \u00e0 jour du th\u00e8me. Dans un plugin Mettez-les dans user/plugins/YOURPLUGIN/blueprints/ . C'est l'endroit o\u00f9 les mettre si vous d\u00e9finissez et ajoutez des pages personnalis\u00e9es dans le plugin. Ensuite, abonnez-vous \u00e0 l'\u00e9v\u00e9nement onGetPageBlueprints et ajoutez-les \u00e0 Grav. L'exemple suivant ajoute les blueprints du dossier blueprints/ . 1 | public static function getSubscribedEvents() 2 | { 3 | return [ 4 | 'onGetPageBlueprints' => ['onGetPageBlueprints', 0] 5 | 6 | ]; 7 | } 8 | 9 | public function onGetPageBlueprints($event) 10 | { 11 | $types = $event->types; 12 | $types->scanBlueprints('plugins://' . $this->name . '/blueprints'); 13 | }","title":"Exemple - Page Blueprint"},{"location":"formulaires-frontaux/","text":"Formulaires frontaux Le plugin Form vous donne la possibilit\u00e9 de cr\u00e9er pratiquement n'importe quel type de formulaire frontal. Il s'agit essentiellement d'un kit de construction de formulaire, que vous pouvez utiliser dans vos propres pages. Avant d'aller plus loin, n'oubliez pas d'installer le plugin Form avec le formulaire d'installation bin/gpm install form s'il n'est pas encore install\u00e9. Pour comprendre le fonctionnement du plugin Form , commen\u00e7ons par expliquer comment cr\u00e9er un formulaire simple. Avec la version Form 2.0 , il est d\u00e9sormais n\u00e9cessaire de transmettre le nom du formulaire en tant que champ masqu\u00e9. Si vous utilisez le form-plugin-provided forms.html.twig , cela est g\u00e9r\u00e9 automatiquement, cependant, si vous avez remplac\u00e9 le forms.html.twig par d\u00e9faut dans votre th\u00e8me ou plugin, vous devez ajouter manuellement {% include \"forms/ fields/formname/formname.html.twig\" %} dans votre fichier Twig de rendu de formulaire. Cr\u00e9er un formulaire unique simple. Pour ajouter un formulaire \u00e0 une page de votre site, cr\u00e9ez une page et d\u00e9finissez son fichier de page sur \"Formulaire\". Vous pouvez le faire via le panneau d'administration, ou directement via le syst\u00e8me de fichiers en nommant la page form.md . Ainsi, par exemple, user/pages/03.your-form/form.md . Le contenu de cette page sera : 1 | --- 2 | title: A Page with an Example Form 3 | form: 4 | name: contact-form 5 | fields: 6 | name: name 7 | label: Name 8 | placeholder: Enter your name 9 | autofocus: on 10 | autocomplete: on 11 | type: text 12 | validate: 13 | required: true 14 | 15 | email 16 | label: Email 17 | placeholder: Enter your email address 18 | type: email 19 | validate: 20 | required: true 21 | 22 | buttons: 23 | submit: 24 | type: submit 25 | value: Submit 26 | reset: 27 | type: reset 28 | value: Reset 29 | 30 | process: 31 | email: 32 | from: \"{{ config.plugins.email.from }}\" 33 | to: 34 | - \"{{ config.plugins.email.to }}\" 35 | - \"{{ form.value.email }}\" 36 | subject: \"[Feedback] {{ form.value.name|e }}\" 37 | body: \"{% include 'forms/data.html.twig' %}\" 38 | save: 39 | fileprefix: feedback- 40 | dateformat: Ymd-His-u 41 | extension: txt 42 | body: \"{% include 'forms/data.txt.twig' %}\" 43 | message: Thank you for your feedback! 44 | display: thankyou 45 | 46 | --- 47 | 48 | # My Form 49 | 50 | Regular **markdown** content goes here... Il s'agit du contenu du fichier form.md , lorsqu'il est visualis\u00e9 via le syst\u00e8me de fichiers. Pour ce faire via Admin Plugin, ouvrez la page en mode expert , copiez la partie entre les triples tirets --- et collez-la dans le champ Frontmatter. Cela suffit pour afficher un formulaire dans la page, sous le contenu de la page. C'est un formulaire simple avec un nom, un champ email, deux boutons : un pour soumettre le formulaire et un pour r\u00e9initialiser les champs. Pour plus d'informations sur les champs disponibles fournis par le plugin Form, consultez la section suivante . Que se passe-t-il lorsque vous appuyez sur le bouton Submit ? Il ex\u00e9cute les actions du process en s\u00e9rie. Pour d\u00e9couvrir d'autres actions, consultez les options disponibles ou cr\u00e9ez la v\u00f4tre . Un e-mail est envoy\u00e9 \u00e0 l'adresse e-mail saisie, avec pour objet [Feedback] [name entered] . Le corps de l'email est d\u00e9fini dans le fichier forms/data.html.twig du th\u00e8me utilis\u00e9. Un fichier est cr\u00e9\u00e9 dans user/data pour stocker les donn\u00e9es d'entr\u00e9e du formulaire. Le mod\u00e8le est d\u00e9fini dans forms/data.txt.twig du th\u00e8me utilis\u00e9. La sous-page de thankyou s'affiche, ainsi que le message pass\u00e9. La page de thankyou doit \u00eatre une sous-page de la page contenant le formulaire. Assurez-vous d'avoir configur\u00e9 le plugin Email pour vous assurer qu'il a la bonne configuration afin d'envoyer des emails avec succ\u00e8s. Formulaires multiples. Avec la sortie de Form Plugin v2.0 , vous pouvez d\u00e9sormais d\u00e9finir plusieurs formulaires sur une seule page. La syntaxe est similaire mais chaque formulaire est diff\u00e9renci\u00e9 par le nom du formulaire, en l'occurrence contact-form et newletter-form : 1 | forms: 2 | contact-form: 3 | fields: 4 | ... 5 | buttons: 6 | ... 7 | process: 8 | ... 9 | 10 | newsletter-form: 11 | fields: 12 | ... 13 | buttons: 14 | ... 15 | process: 16 | ... Vous pouvez m\u00eame utiliser ce format pour des formulaires uniques, en fournissant simplement un formulaire sous form: : 1 | forms: 2 | contact-form: 3 | fields: 4 | ... 5 | buttons: 6 | ... 7 | process: 8 | ... Affichage des formulaires de Twig. Le moyen le plus simple d'inclure un formulaire consiste simplement \u00e0 inclure un fichier Twig dans le mod\u00e8le qui affiche la page o\u00f9 le formulaire est d\u00e9fini. Par example: 1 | {% include \"forms/form.html.twig\" %} Cela utilisera le mod\u00e8le Twig fourni par le plugin Form lui-m\u00eame. \u00c0 son tour, il affichera le formulaire tel que vous l'avez d\u00e9fini dans la page et g\u00e9rera l'affichage d'un message de r\u00e9ussite ou d'erreurs lorsque le formulaire est soumis. Il existe cependant une m\u00e9thode plus puissante d'affichage des formulaires qui peut tirer parti du nouveau support multi-formulaires. Avec cette m\u00e9thode, vous passez en fait un param\u00e8tre form: au mod\u00e8le Twig en sp\u00e9cifiant le formulaire que vous souhaitez afficher : 1 | {% include \"forms/form.html.twig\" with { form: forms('contact-form') } %} En utilisant cette m\u00e9thode, vous pouvez choisir un nom sp\u00e9cifique d'un formulaire \u00e0 afficher. Vous pouvez m\u00eame fournir le nom d'un formulaire d\u00e9fini dans d'autres pages. Tant que tous vos noms de formulaires sont uniques sur votre site, Grav trouvera et affichera le formulaire correct ! Vous pouvez m\u00eame afficher plusieurs formulaires sur une seule page : 1 | # Contact Form 2 | {% include \"forms/form.html.twig\" with { form: forms('contact-form') } %} 3 | 4 | # Newsletter Signup 5 | {% include \"forms/form.html.twig\" with { form: forms('newsletter-form') } %} Une autre fa\u00e7on d'afficher un formulaire consiste \u00e0 r\u00e9f\u00e9rencer la route de la page plut\u00f4t que le nom du formulaire \u00e0 l'aide d'un tableau, par exemple : 1 | # Contact Form 2 | {% include \"forms/form.html.twig\" with { form: forms( {route:'/forms/contact'} ) } %} Cela trouvera le premier formulaire de la page avec route /forms/contact Affichage des formulaires dans le contenu de la page. Vous pouvez \u00e9galement afficher un formulaire \u00e0 partir du contenu de votre page (par exemple default.md ) directement sans que cette page ait m\u00eame un formulaire d\u00e9fini \u00e0 l'int\u00e9rieur. Passez simplement le nom ou l'itin\u00e9raire au formulaire. Le traitement Twig doit \u00eatre activ\u00e9 et le cache de page doit \u00eatre d\u00e9sactiv\u00e9 pour garantir que le formulaire est trait\u00e9 de mani\u00e8re dynamique sur la page et non mis en cache de mani\u00e8re statique et que la gestion du formulaire peut se produire. 1 | --- 2 | title: Page with Forms 3 | process: 4 | twig: true 5 | cache_enable: false 6 | --- 7 | 8 | # Contact Form 9 | {% include \"forms/form.html.twig\" with {form: forms('contact-form')} %} 10 | # Newsletter Signup 11 | {% include \"forms/form.html.twig\" with {form: forms( {route: '/12 | newsletter-signup'} ) } %} Formulaires modulaires. Avec les versions pr\u00e9c\u00e9dentes du plugin Form, pour obtenir un formulaire \u00e0 afficher dans une sous-page modulaire de votre page modulaire globale, vous deviez d\u00e9finir le formulaire dans la page modulaire de niveau sup\u00e9rieur . De cette fa\u00e7on, le formulaire serait trait\u00e9 et disponible pour \u00eatre affich\u00e9 dans la sous-page modulaire. Dans Form v2.0 , vous pouvez d\u00e9sormais d\u00e9finir le formulaire directement dans la sous-page modulaire comme n'importe quel autre formulaire. Cependant, s'il n'est pas trouv\u00e9, le plugin de formulaire cherchera dans la 'page actuelle', c'est-\u00e0-dire la page modulaire de niveau sup\u00e9rieur pour un formulaire, il est donc enti\u00e8rement r\u00e9trocompatible avec la fa\u00e7on de faire 1.0. Vous pouvez \u00e9galement configurer le mod\u00e8le Twig de votre sous-page modulaire pour utiliser un formulaire d'une autre page, comme dans les exemples ci-dessus. Lorsque vous utilisez un formulaire d\u00e9fini dans une sous-page modulaire, vous devez d\u00e9finir l' action : sur la page modulaire parente et configurer votre formulaire avec une redirect : ou fficher : l'action, car cette sous-page modulaire n'est pas une page appropri\u00e9e \u00e0 charger sur le formulaire soumission car il n'est pas routable , et donc pas accessible par un navigateur. Voici un exemple qui existe dans form/modular/_form/form.md : 1 | --- 2 | title: Modular Form 3 | 4 | form: 5 | action: '/form/modular' 6 | inline_errors: true 7 | fields: 8 | person.name: 9 | type: text 10 | label: Name 11 | validate: 12 | required: true 13 | 14 | buttons: 15 | submit: 16 | type: submit 17 | value: Submit 18 | 19 | process: 20 | message: \"Thank you from your submission <b>{{ form.value('person.name') }}</b>!\" 21 | reset: true 22 | display: '/form/modular' 23 | --- 24 | 25 | ## Modular Form","title":"Formulaire frontaux"},{"location":"formulaires-procedure-formulaire-pages/","text":"Proc\u00e9dure : formulaires dans des pages modulaires Utiliser des formulaires dans des pages modulaires. Si votre th\u00e8me ne fournit pas de fichier templates/forms/form.html.twig , il n'est pas configur\u00e9 pour utiliser des formulaires, mais pas de panique - copiez simplement les mod\u00e8les de formulaire depuis Antimatter, le th\u00e8me Grav par d\u00e9faut : templates/form.html.twig templates/formdata.html.twig Maintenant, cr\u00e9ez un dossier modulaire avec le type de page form.md . Par exemple : 01.votre-page-modulaire/_contact/form.md . La page form.md ne contiendra aucune d\u00e9finition de formulaire. C'est juste une indication que c'est la partie qui doit g\u00e9n\u00e9rer le formulaire. Important : r\u00e9glez 1 | --- 2 | cache_enable: false 3 | --- dans cet en-t\u00eate de page frontmatter, en raison du fonctionnement des pages modulaires, si vous l'oubliez, le formulaire sera mis en cache, ainsi que le nonce g\u00e9n\u00e9r\u00e9 toutes les 12 heures. Ainsi, lorsque le changement de 12 heures est atteint, le formulaire cesse de fonctionner jusqu'\u00e0 ce que le cache soit actualis\u00e9. Cette \u00e9tape n'est pas n\u00e9cessaire pour les formulaires de page autonomes. Ajoutez maintenant l'en-t\u00eate du formulaire \u00e0 la page modulaire principale, modular.md . La page modular.md doit contenir toute la d\u00e9finition du formulaire, avec les champs, etc., comme s'il s'agissait d'un en-t\u00eate de fichier form.md \"pleine page\". Avec son propre chemin de page comme champ form.action . Dans Form v2.0, vous pouvez d\u00e9sormais d\u00e9finir le formulaire directement dans la sous-page modulaire comme n'importe quel autre formulaire. Cependant, s'il n'est pas trouv\u00e9, le plugin de formulaire cherchera dans la \"page actuelle\", c'est-\u00e0-dire la page modulaire de niveau sup\u00e9rieur pour un formulaire, il est donc enti\u00e8rement r\u00e9trocompatible avec la fa\u00e7on de faire 1.0. !!! Par exemple: 1 | --- 2 | content: 3 | items: '@self.modular' 4 | 5 | form: 6 | action: /your-modular-page 7 | name: my-nice-form 8 | fields: 9 | - 10 | name: name 11 | label: Name 12 | placeholder: 'Enter your name' 13 | autofocus: 'on' 14 | autocomplete: 'on' 15 | type: text 16 | default: test 17 | 18 | buttons: 19 | - 20 | type: submit 21 | value: Submit 22 | 23 | process: 24 | - 25 | message: 'Thank you for your feedback!' 26 |--- Dans l'en-t\u00eate du formulaire, assurez-vous d'ajouter le param\u00e8tre d'action action , avec la route de page modulaire. Comme pr\u00e9sent dans l'exemple ci-dessus. Cette \u00e9tape est n\u00e9cessaire car si vous n'ajoutez pas explicitement form.action , le code recherche g\u00e9n\u00e9ralement l'itin\u00e9raire de la page, mais \u00e9tant le formulaire dans une sous-page modulaire, pas une page r\u00e9elle, le chemin est erron\u00e9 et interrompt la soumission du formulaire. Donc, si la page modulaire est par ex. site.com/my-page , il suffit de mettre form: action: /my-page dans modular.md . M\u00eame si la page modulaire est la page d'accueil, utilisez la route de la page, par ex. form : action : /home . Un exemple vivant. Le squelette Deliver a une page de formulaire modulaire pr\u00eate \u00e0 \u00eatre consult\u00e9e lors de la lecture de ce didacticiel : Page en direct Fichier markdown de la page D\u00e9pannage des formulaires dans les pages modulaires. La meilleure fa\u00e7on de d\u00e9panner un formulaire est de revenir d'abord aux racines et d'ajouter vos personnalisations une par une pour voir ce qui ne va pas. Je sugg\u00e8re de cr\u00e9er un \"formulaire r\u00e9gulier\", en veillant \u00e0 ce qu'il fonctionne, puis essayez de le mettre sous une forme modulaire. Essayez de faire fonctionner le formulaire sur un squelette bas\u00e9 sur l'antimati\u00e8re, qui fournit tous les fichiers dont vous avez d\u00e9j\u00e0 besoin. Si les champs du formulaire n'apparaissent pas, si vous avez install\u00e9 le plugin Assets d\u00e9sactivez-le/d\u00e9sinstallez-le. Il y a un probl\u00e8me connu avec la rupture des formulaires modulaires qui sera bient\u00f4t corrig\u00e9.","title":"Procedure - Formulaire pages modulaires"},{"location":"formulaires-procedure-traitement-ajax/","text":"Proc\u00e9dure : Soumission Ajax Envoi de formulaires via Ajax. Le m\u00e9canisme par d\u00e9faut pour le traitement des formulaires repose sur la soumission de formulaires de style HTML standard qui entra\u00eene l'envoi du contenu d'un formulaire HTML au serveur via POST ou GET (la valeur par d\u00e9faut est POST ). Une fois le formulaire trait\u00e9 , et execut\u00e9 les r\u00e9sultats sont renvoy\u00e9s au formulaire (ou \u00e0 une page redirig\u00e9e ) o\u00f9 les messages sont affich\u00e9s et le formulaire peut \u00eatre modifi\u00e9 pour une nouvelle soumission si n\u00e9cessaire. Cela implique un rechargement de page, ce qui est parfois ind\u00e9sirable. C'est l\u00e0 qu'un formulaire soumis via JavaScript en utilisant Ajax ou XHR est l'option pr\u00e9f\u00e9r\u00e9e. Heureusement, les capacit\u00e9s de formulaire de Grav sont \u00e0 la hauteur de la t\u00e2che. Cr\u00e9ation du formulaire. Vous pouvez cr\u00e9er n'importe quel formulaire standard que vous aimez, donc pour cet exemple, nous garderons le formulaire aussi simple que possible pour nous concentrer sur les parties de gestion Ajax. Tout d'abord, nous allons cr\u00e9er un formulaire dans une page appel\u00e9e : forms/ajax-test/ et cr\u00e9er une page de formulaire appel\u00e9e form.md : --- 1 | title: Ajax Test-Form 2 | form: 3 | name: ajax-test-form 4 | action: '/forms/ajax-test' 5 | template: form-messages 6 | refresh_prevention: true 7 | 8 | fields: 9 | name: 10 | label: Your Name 11 | type: text 12 | 13 | buttons: 14 | submit: 15 | type: submit 16 | value: Submit 17 | 18 | process: 19 | message: 'Thank you for your submission!' 20 | --- Comme vous pouvez le voir, il s'agit d'un formulaire tr\u00e8s basique qui demande simplement votre nom et fournit un bouton d'envoi. La seule chose qui ressort est le mod\u00e8le template : form-messages . Comme indiqu\u00e9 dans la section Formulaires frontaux , vous pouvez fournir un mod\u00e8le Twig personnalis\u00e9 avec lequel afficher le r\u00e9sultat du traitement du formulaire. C'est un excellent moyen pour nous de traiter le formulaire, puis de renvoyer simplement les messages via Ajax et de les injecter dans la page. Il existe d\u00e9j\u00e0 un mod\u00e8le form-messages.html.twig fourni avec le plugin de formulaires qui fait exactement cela. REMARQUE : nous utilisons une action cod\u00e9e en dur action: '/forms/ajax-test' afin que l'ajax ait une URL coh\u00e9rente plut\u00f4t que de laisser le formulaire d\u00e9finir l'action sur la route de la page actuelle. Cela r\u00e9sout un probl\u00e8me avec la requ\u00eate Ajax qui ne g\u00e8re pas correctement les redirections. Sinon, cela peut entra\u00eener des probl\u00e8mes sur la page d'accueil. Il n'est pas n\u00e9cessaire que ce soit la page de formulaire actuelle, il doit simplement s'agir d'un itin\u00e9raire coh\u00e9rent et accessible. Contenu de la page. Dans cette m\u00eame page, il faut mettre un peu de HTML et de JavaScript : Vanilla JS 1 | <div id=\"form-result\"></div> 2 | 3 | <script> 4 | document.addEventListener('DOMContentLoaded', function() { 5 | const form = document.querySelector('#ajax-test-form'); 6 | form.addEventListener('submit', function(event) { 7 | event.preventDefault(); 8 | 9 | const result = document.querySelector('#form-result'); 10 | const action = form.getAttribute('action'); 11 | const method = form.getAttribute('method'); 12 | 13 | fetch(action, { 14 | method: method, 15 | body: new FormData(form) 16 | }) 17 | .then(function(response) { 18 | if (response.ok) { 19 | return response.text(); 20 | } else { 21 | return response.json(); 22 | } 23 | }) 24 | .then(function(output) { 25 | if (result) { 26 | result.innerHTML = output; 27 | } 28 | }) 29 | .catch(function(error) { 30 | if (result) { 31 | result.innerHTML = 'Error: ' + error; 32 | } 33 | 34 | throw new Error(error); 35 | }); 36 | }); 37 | }); 38 | </script> jQuery 1 | <div id=\"form-result\"></div> 2 | 3 | <script> 4 | $(document).ready(function(){ 5 | 6 | var form = $('#ajax-test-form'); 7 | form.submit(function(e) { 8 | // prevent form submission 9 | e.preventDefault(); 10 | 11 | // submit the form via Ajax 12 | $.ajax({ 13 | url: form.attr('action'), 14 | type: form.attr('method'), 15 | dataType: 'html', 16 | data: form.serialize(), 17 | success: function(result) { 18 | // Inject the result in the HTML 19 | $('#form-result').html(result); 20 | } 21 | }); 22 | }); 23 | }); 24 | </script> Nous d\u00e9finissons d'abord un espace r\u00e9serv\u00e9 div avec l'ID #form-result \u00e0 utiliser comme emplacement pour injecter les r\u00e9sultats du formulaire. Nous utilisons ici la syntaxe JQuery pour plus de simplicit\u00e9, mais vous pouvez \u00e9videmment utiliser le code JavaScript de votre choix tant qu'il remplit une fonction similaire. Nous arr\u00eatons d'abord l'action de soumission par d\u00e9faut du formulaire et effectuons un appel Ajax \u00e0 l'action du formulaire avec les donn\u00e9es du formulaire s\u00e9rialis\u00e9es. Le r\u00e9sultat de cet appel est ensuite d\u00e9fini sur cette div que nous avons cr\u00e9\u00e9e pr\u00e9c\u00e9demment.","title":"Proc\u00e9dure - Traitement Ajax"},{"location":"formulaires-ref-formulaire-actions/","text":"R\u00e9f\u00e9rence : Actions avec formulaire Actions avec formulaires. Nous avons vu quelques exemples d'actions de formulaire dans l'exemple de formulaire simple ci-dessus. D\u00e9taillons les actions que vous pouvez utiliser. E-mail. Envoie un e-mail avec les options sp\u00e9cifi\u00e9es. Exemple: 1 | process: 2 | - email: 3 | from: \"{{ config.plugins.email.from }}\" 4 | to: \"{{ config.plugins.email.to }}\" 5 | subject: \"Contact by {{ form.value.name|e }}\" 6 | body: \"{% include 'forms/data.html.twig' %}\" Envoie un e-mail \u00e0 partir de l'adresse e-mail sp\u00e9cifi\u00e9e dans la configuration du plugin Email, l'envoie \u00e0 cette m\u00eame adresse e-mail (c'est un formulaire de contact, nous nous l'envoyons). \u00c0 moins que vous ne souhaitiez utiliser d'autres valeurs, vous pouvez librement omettre from et to, car ils sont d\u00e9j\u00e0 configur\u00e9s par d\u00e9faut pour utiliser ces valeurs. L'e-mail a l'objet et le corps d\u00e9finis. Dans ce cas, le corps est g\u00e9n\u00e9r\u00e9 par le fichier forms/data.html.twig , qui se trouve dans le mod\u00e8le actif (Antimatter et les autres th\u00e8mes principaux l'ont, mais il n'est pas garanti que tous les th\u00e8mes l'incluent). Antimatter le met \u00e0 1 | {% for field in form.fields %} 2 | <div><strong>{{ field.label }}</strong>: {{ string(form.value(field.name)|e) }}</div> 4 | {% endfor %} En bref, il boucle simplement les valeurs et les imprime dans le corps de l'e-mail. Reportez-vous \u00e0 la documentation du plug-in de messagerie pour d'autres options de messagerie de formulaire importantes , notamment les corps de message en plusieurs parties (bon pour les scores anti-spam), `reply_to` et les pi\u00e8ces jointes . Attribut d'e-mail dynamique. Si vous souhaitez par exemple d\u00e9finir le champ email.from \u00e0 partir d'une entr\u00e9e Form, vous pouvez r\u00e9cup\u00e9rer son contenu et l'utiliser de cette mani\u00e8re : from : \"{{ form.value.email|e }}\" Dans ce cas, nous r\u00e9cup\u00e9rons le champ \"email\" du formulaire et l'utilisons pour l'attribut \"de\". De cette fa\u00e7on, le propri\u00e9taire du site recevra un e-mail et pourra r\u00e9pondre directement \u00e0 l'e-mail saisi dans le formulaire. Redirection. Redirige l'utilisateur vers une autre page. L'action est imm\u00e9diate, donc si vous l'utilisez, vous devrez probablement la mettre en bas de la liste des actions. 1 | process: 2 | - redirect: '/forms/landing-page' Vous pouvez \u00e9galement d\u00e9finir tout ou partie du champ de redirection redirect \u00e0 partir d'une entr\u00e9e de formulaire ou d'un champ de formulaire masqu\u00e9. Vous pouvez obtenir son contenu et l'utiliser de cette mani\u00e8re : redirect: \"/path to/location/{{ form.value.hiddenfield }}\" Dans ce cas, nous r\u00e9cup\u00e9rons le champ \"hiddenfield\" du formulaire et l'utilisons pour la derni\u00e8re partie de l'emplacement de redirection. Cela peut \u00eatre utile lors de la cr\u00e9ation de formulaires qui, par exemple, redirigent vers un t\u00e9l\u00e9chargement une fois termin\u00e9s. Message. D\u00e9finit un message \u00e0 afficher sur la page suivante. Fonctionne si vous d\u00e9finissez \u00e9galement une action d'affichage, qui redirige l'utilisateur vers une autre page. Notez que vous pouvez utiliser Twig dans le message si vous le souhaitez. 1 | process: 2 | - message: Thank you for your feedback! 3 | - display: thankyou Message de validation. Vous pouvez utiliser l'action de message pour d\u00e9clencher en cas d'\u00e9chec de la validation. Par example: 1 | username: 2 | type: text 3 | label: Username 4 | validate: 5 | required: true 6 | message: My custom message when validation fails! Cela vous permettra d'\u00e9crire un message personnalis\u00e9 que les utilisateurs verront en cas d'\u00e9chec de la validation. Affichage. Apr\u00e8s avoir soumis le formulaire, l'utilisateur peut \u00eatre redirig\u00e9 vers une autre page. Cette page sera une sous-page du formulaire, donc par exemple, si votre formulaire se trouve dans /form , vous pouvez rediriger les utilisateurs vers /form/thankyou avec le code suivant : 1 | process: 2 | - display: thankyou Le plugin Form fournit un mod\u00e8le de donn\u00e9es de formulaire formdata adapt\u00e9 \u00e0 la page de destination du processus, car il g\u00e9n\u00e8re le r\u00e9sultat de la soumission du formulaire. Dans l'exemple ci-dessus, vous pouvez cr\u00e9er une page pages /form/thankyou/formdata.md . Si vous redirigez vers une sous-page, display: thankyou fonctionne parfaitement. Si vous redirigez vers un chemin de page absolu, comme site.com/thankyou , faites-le pr\u00e9c\u00e9der de / , par exemple : : /thankyou . Antimatter et les th\u00e8mes compatibles fournissent le mod\u00e8le formdata.html.twig Twig, qui ressemble \u00e0 ceci : 1 | {% extends 'partials/base.html.twig' %} 2 | 3 | {% block content %} 4 | 5 | {{ content|raw }} 6 | 7 | <div class=\"alert\">{{ form.message|e }}</div> 8 | <p>Here is the summary of what you wrote to us:</p> 9 | 10 | {% include \"forms/data.html.twig\" %} 11 | 12 | {% endblock %} Si la page thankyou/formdata.md est 1 - --- 2 | title: Email sent 3 | cache_enable: false 4 | process: 5 | twig: true 6 | --- 7 | 8 | ## Email sent! La sortie sera une page avec le \"Email envoy\u00e9!\" titre, suivi d'un message de confirmation et des donn\u00e9es du formulaire saisies dans la page pr\u00e9c\u00e9dente. Vous pouvez utiliser n'importe quel type de page comme page de destination. Cr\u00e9ez simplement le v\u00f4tre et d\u00e9finissez le type de page de destination en cons\u00e9quence. Sauvegarde. Enregistre les donn\u00e9es du formulaire dans un fichier. Le fichier est enregistr\u00e9 dans le dossier user/data , dans un sous-dossier nomm\u00e9 comme param\u00e8tre form.name . Le formulaire doit avoir un nom pour que cette action r\u00e9ussisse, et le sous-dossier doit \u00eatre cr\u00e9\u00e9 avec les autorisations appropri\u00e9es avant que les donn\u00e9es puissent y \u00eatre enregistr\u00e9es, car un nouveau r\u00e9pertoire ne sera pas cr\u00e9\u00e9 s'il n'en existe pas. Par example: Le pr\u00e9fixe de fichier fileprefix et le corps body peuvent contenir le balisage Twig. 1 | process: 2 | - save: 3 | fileprefix: feedback- 4 | dateformat: Ymd-His-u 5 | extension: txt 6 | body: \"{% include 'forms/data.txt.twig' %}\" 7 | operation: create Le corps est tir\u00e9 du fichier templates/forms/data.html.twig du th\u00e8me, fourni par Antimatter et des th\u00e8mes mis \u00e0 jour. L'op\u00e9ration operation peut \u00eatre soit cr\u00e9er create (par d\u00e9faut) pour cr\u00e9er un nouveau fichier par soumission de formulaire, soit ajouter add pour ajouter \u00e0 un seul fichier. Notez que l'op\u00e9ration d'ajout n\u00e9cessite maintenant un nom de fichier statique : \u00e0 d\u00e9finir, voir l'exemple ci-dessous. 1 | process: 2 | - save: 3 | filename: feedback.txt 4 | body: \"{% include 'forms/data.txt.twig' %}\" 5 | operation: add Captcha. Pour valider \u00e9galement le captcha c\u00f4t\u00e9 serveur, ajoutez l'action de processus captcha. 1 | process: 2 | - captcha: 3 | recaptcha_secret: ENTER_YOUR_CAPTCHA_SECRET_KEY Le recaptcha_secret est facultatif et utilisera les valeurs de configuration du plugin Form si vous les avez fournies ici. Adresse IP de l'utilisateur. Affichez l'adresse IP de l'utilisateur sur la sortie. Placez-le au-dessus des processus d'e-mail / de sauvegarde dans le 'form.md' pour vous assurer qu'il est utilis\u00e9 par le ou les processus de sortie. 1 | process: 2 | - ip: 3 | label: User IP Address Horodatage. Ajoutez un horodatage de soumission de formulaire \u00e0 la sortie. Placez-le au-dessus des processus d'e-mail / de sauvegarde dans le 'form.md' pour vous assurer qu'il est utilis\u00e9 par le ou les processus de sortie. process: - timestamp: label: Submission Timestamp R\u00e9initialiser le formulaire apr\u00e8s envoi. Par d\u00e9faut, le formulaire n'est pas effac\u00e9 apr\u00e8s l'envoi. Ainsi, si vous n'avez pas d'action d'affichage display et que l'utilisateur est renvoy\u00e9 \u00e0 la page de formulaire, celle-ci est toujours remplie avec les donn\u00e9es saisies. Si vous voulez \u00e9viter cela, ajoutez une action de r\u00e9initialisation reset : 1 | process: 2 | - reset: true M\u00e9moriser les valeurs des champs. \u00c0 l'aide de l'action m\u00e9moriser remember , vous pouvez autoriser vos utilisateurs \u00e0 \"rappeler\" certaines valeurs de champ depuis la derni\u00e8re fois qu'un formulaire a \u00e9t\u00e9 soumis. Ceci est particuli\u00e8rement utile pour les formulaires qui sont soumis \u00e0 plusieurs reprises, comme une soumission anonyme qui n\u00e9cessite des informations sur l'exp\u00e9diteur. HTML5 et le plugin Grav's Form le fournissent d\u00e9j\u00e0 de mani\u00e8re limit\u00e9e via le navigateur, alors utilisez-le. Cependant, vous pouvez constater que la saisie semi-automatique ne fonctionne pas de mani\u00e8re fiable pour certains utilisateurs et champs. L'action de m\u00e9morisation remember utilise des cookies pour stocker la derni\u00e8re valeur, elle ne fonctionnera donc que sur le m\u00eame appareil et navigateur o\u00f9 le navigateur est configur\u00e9 pour les autoriser \u00e0 partir de votre site. Pour utiliser cette action, listez simplement les noms des champs que vous souhaitez m\u00e9moriser. Par exemple, un formulaire de recommandation m\u00e9dicale en ligne est un bon cas d'utilisation. Ceux-ci sont g\u00e9n\u00e9ralement remplis \u00e0 partir du m\u00eame ordinateur avec certaines valeurs de champ qui changent rarement et sont ennuyeuses \u00e0 remplir \u00e0 plusieurs reprises. 1 | process: 2 | - remember: 3 | - referrer-name 4 | - referrer-address 5 | - referrer-specialty 6 | - preferred-practitioner Actions personnalis\u00e9es. Vous pouvez vous \"accrocher\" \u00e0 un traitement de formulaire et effectuer n'importe quel type d'op\u00e9ration. Effectuez un traitement personnalis\u00e9, ajoutez des donn\u00e9es pour une application Web en ligne, et m\u00eame enregistrez-les dans une base de donn\u00e9es. Pour ce faire, dans le champ de traitement du formulaire, ajoutez votre propre nom d'action de traitement, par exemple \"votreaction\". 1 | process: 2 | yourAction: true Ensuite, cr\u00e9ez un plugin simple. Dans son fichier PHP principal, inscrivez-vous \u00e0 l'\u00e9v\u00e9nement onFormProcessed 1 | namespace Grav\\Plugin; 2 | use Grav\\Common\\Plugin; 3 | use RocketTheme\\Toolbox\\Event\\Event; 4 | 5 | class EmailPlugin extends Plugin 6 | { 7 | public static function getSubscribedEvents() 8 | { 9 | return [ 10 | 'onFormProcessed' => ['onFormProcessed', 0] 11 | ]; 12 | } 13 | } Fournissez ensuite un gestionnaire pour l'action saveToDatabase : 1 | public function onFormProcessed(Event $event) 2 | { 3 | $form = $event['form']; 4 | $action = $event['action']; 5 | $params = $event['params']; 6 | 7 | switch ($action) { 8 | case 'yourAction': 9 | //do what you want 10 | } 11 | } Si votre traitement risque de mal tourner et que vous souhaitez arr\u00eater les prochaines actions de formulaire, qui sont ex\u00e9cut\u00e9es en s\u00e9rie, vous pouvez arr\u00eater le traitement en appelant stopPropagation sur l'objet $event : 1 | $event->stopPropagation(); 2 | return; Un exemple de code avec la gestion des formulaires est disponible dans le plug-in Form et dans les r\u00e9f\u00e9rentiels du plug-in Email. Un exemple de gestion de formulaire personnalis\u00e9. Le plugin Form offre cette possibilit\u00e9 d'envoyer des e-mails, d'enregistrer des fichiers, de d\u00e9finir des messages d'\u00e9tat et c'est vraiment pratique. Parfois, cependant, vous avez besoin d'un contr\u00f4le total. C'est par exemple ce que fait le plugin Login. Il d\u00e9finit le frontmatter de la page login.md : 1 | title: Login 2 | template: form 3 | 4 | form: 5 | name: login 6 | 7 | fields: 8 | - name: username 9 | type: text 10 | placeholder: Username 11 | autofocus: true 12 | 13 | - name: password 14 | type: password 15 | placeholder: Password Le plugin Forms g\u00e9n\u00e8re et affiche correctement le formulaire. Notez qu'aucun processus process n'est d\u00e9fini. Les boutons de formulaire buttons manquent \u00e9galement, car ils sont ajout\u00e9s manuellement dans templates/login.html.twig . C'est l\u00e0 que l'action action et la t\u00e2che task du formulaire sont \u00e9galement d\u00e9finies. Dans ce cas, task est login.login et l'action action est d\u00e9finie sur l'URL de la page. Lorsqu'un utilisateur appuie sur \"Connexion\" dans le formulaire, Grav appelle l'\u00e9v\u00e9nement onTask.login.login . user/plugins/login/login.php se connecte \u00e0 onTask.login.login \u00e0 son fichier classes/controller.php , et c'est l\u00e0 que l'authentification se produit.","title":"R\u00e9f\u00e9rence - Formulaire actions"},{"location":"formulaires-ref-index-formulaires/","text":"R\u00e9f\u00e9rence : Index des champs de formulaire Attributs de champ communs. Chaque champ accepte une liste d'attributs que vous pouvez utiliser. Chaque champ peut partager ces attributs communs, mais des champs particuliers peuvent les ignorer. La meilleure fa\u00e7on de v\u00e9rifier quels attributs sont autoris\u00e9s sur un champ est de v\u00e9rifier la description du champ dans cette page et de voir quels attributs sont mentionn\u00e9s. Cette liste fournit un terrain d'entente, il n'est donc pas n\u00e9cessaire de r\u00e9p\u00e9ter la description d'un champ commun. ATTRIBUT DESCRIPTION autocomplete Accepte on ou off autofocus Si activ\u00e9, autofocus sur ce champ classes Accepte une cha\u00eene avec une ou plusieurs classes CSS \u00e0 ajouter default D\u00e9finit la valeur par d\u00e9faut du champ disabled D\u00e9finit l'\u00e9tat d\u00e9sactiv\u00e9 du champ help Ajoute une info-bulle au champ id D\u00e9finit l'identifiant du champ. D\u00e9finit \u00e9galement l'attribut for sur l'\u00e9tiquette label D\u00e9finit le libell\u00e9 du champ display_label Accepte true ou false labelclasses Accepte une cha\u00eene avec une ou plusieurs classes CSS \u00e0 ajouter name D\u00e9finit le nom du champ novalidate D\u00e9finit l'\u00e9tat novalidate du champ ouyterclasses Classes ajout\u00e9es \u00e0 la div qui incluent l'\u00e9tiquette et le champ placeholder D\u00e9finit la valeur de l'espace r\u00e9serv\u00e9 du champ readonly D\u00e9finit l'\u00e9tat du champ en lecture seule size D\u00e9finit la taille du champ, qui \u00e0 son tour ajoute une classe \u00e0 son conteneur. Les valeurs valides sont large , x-small , medium , long , small . Vous pouvez bien s\u00fbr en ajouter plus dans le mod\u00e8le que vous voyez, lorsqu'il est utilis\u00e9 dans le frontend style D\u00e9finit le style du champ title D\u00e9finit la valeur du titre du champ type D\u00e9finit le type de champ validate.required S'il est d\u00e9fini sur une valeur positive, d\u00e9finit le champ comme requis. validate.pattern D\u00e9finit un mod\u00e8le de validation validate.message D\u00e9finit le message affich\u00e9 si la validation \u00e9choue Pour ajouter des attributs personnalis\u00e9s, vous pouvez utiliser : attributes: key: value Pour ajouter des valeurs data-* personnalis\u00e9es, vous pouvez utiliser : datasets: key: value Les d\u00e9finitions d' attributes et de datasets pr\u00e9sent\u00e9es ci-dessus conduisent \u00e0 la d\u00e9finition de champ suivante : <input name=\"data[name]\" value=\"\" type=\"text\" class=\"form-input \" key=\"value\" data-key=\"value\"> REMARQUE : Vous pouvez d\u00e9finir des valeurs positives de plusieurs mani\u00e8res : 'on' , true , 1 . Les autres valeurs sont interpr\u00e9t\u00e9es comme n\u00e9gatives. Champs disponibles. Champ Captcha de base. Ajout\u00e9 dans Forms 7.0.0 comme alternative locale au champ Google ReCaptcha. Ce champ est particuli\u00e8rement utile lorsque vous traitez du SPAM dans les formulaires de contact lorsque vous ne voulez pas vous soucier des tracas ou peut-\u00eatre des restrictions GPDR qui accompagnent l'offre de Google. Il utilise des polices r\u00e9sistantes \u00e0 l'OCR pour dissuader les attaques et peut \u00eatre configur\u00e9 avec des codes \u00e0 copier ou de simples questions math\u00e9matiques. Le type de champ basic-captcha est enti\u00e8rement configurable via la configuration de forms mais est livr\u00e9 avec des valeurs par d\u00e9faut raisonnables. La configuration globale de Basic-Captcha est configur\u00e9e dans votre fichier de configuration de formulaire global (g\u00e9n\u00e9ralement user/config/plugins/form.yaml ). Les options par d\u00e9faut sont : 1 | basic_captcha: 2 | type: characters # options: [characters | math] 3 | chars: 4 | length: 6 # number of chars to output 5 | font: zxx-noise.ttf # options: [zxx-noise.ttf | zxx- camo.ttf | zxx-xed.ttf | zxx-sans.ttf] 6 | bg: '#cccccc' # 6-char hex color 7 | text: '#333333' # 6-char hex color 8 | size: 24 # font size in px 9 | start_x: 5 # start position in x direction in px 10 | start_y: 30 # start position in y direction in px 11 | box_width: 135 # box width in px 12 | box_height: 40 # box height in px 13 | math: 14 | min: 1 # smallest digit 15 | max: 12 # largest digit 16 | operators: ['+','-','*'] # operators that can be used in math Exemple: 1 | basic-captcha: 2 | type: basic-captcha 3 | placeholder: copy the 6 characters 4 | label: Are you human? Cela n\u00e9cessite \u00e9galement un \u00e9l\u00e9ment process: matching pour garantir que le formulaire est correctement valid\u00e9. Il doit s'agir de la premi\u00e8re entr\u00e9e de la section process : du formulaire pour garantir que le formulaire ne sera pas trait\u00e9 en cas d'\u00e9chec de la validation captcha. Exemple: 1 | process: 2 | basic-captcha: 3 | message: Humanity verification failed, please try again... Champ Captcha du tourniquet (Cloudflare). Depuis Form v7.1.0 , Grav ajoute la prise en charge du nouveau champ Cloudflare Turnstile. Ce champ est une nouvelle fa\u00e7on de pr\u00e9venir le SPAM dans les formulaires et constitue une excellente alternative au champ Google ReCaptcha et aux restrictions GPDR fournies avec l'offre de Google. Ce champ est particuli\u00e8rement utile lorsqu'il s'agit de spam dans les formulaires de contact. En savoir plus sur le tourniquet . (1) Avantages par rapport \u00e0 Google ReCaptcha. Conforme au RGPD et ax\u00e9 sur la confidentialit\u00e9 des utilisateurs ; V\u00e9rification de d\u00e9fi extr\u00eamement rapide ; Tr\u00e8s simple \u00e0 mettre en \u0153uvre \u00e0 la fois dans Cloudflare et Grav, pas d'interface utilisateur ni de param\u00e8tres complexes \u00e0 configurer ; Pas de solutions de contournement sophistiqu\u00e9es pour les soumissions de formulaires asynchrones (ajax), cela fonctionne ! ; Exp\u00e9rience utilisateur exceptionnelle par rapport \u00e0 ReCaptcha, plus besoin de compter les voitures, les feux tricolores ou autres b\u00eatises ; Construit sur l'apprentissage automatique, il s'am\u00e9liorera au fil du temps et s'adaptera aux nouveaux vecteurs d'attaque ; Analyses exhaustives sur l'efficacit\u00e9 du d\u00e9fi, voir capture d'\u00e9cran . L'int\u00e9gration. Avant d'int\u00e9grer Grav Forms avec Turnstile, vous devez d'abord cr\u00e9er un nouveau site Turnstile , vous pouvez \u00e9galement suivre le tutoriel officiel \"d\u00e9marrer\" . Ici, vous pouvez \u00e9galement choisir le type de widget que vous souhaitez utiliser, il peut \u00eatre soit g\u00e9r\u00e9, non interactif ou invisible. Il est important de noter que vous ne pouvez changer le type de widget que depuis Cloudflare, vous ne pourrez pas le configurer via Grav. Cependant, si un choix n\u2019est pas satisfait, vous pourrez le modifier plus tard si n\u00e9cessaire. Apprenez-en davantage sur les diff\u00e9rents types de widgets . Assurez-vous d'ajouter tout domaine sur lequel vous pourriez avoir besoin d'utiliser le champ Tourniquet, cela peut inclure votre environnement local. Une fois que vous avez cr\u00e9\u00e9 un site, vous recevrez un site_key et un site_secret que vous devrez configurer dans le fichier de configuration de votre formulaire (g\u00e9n\u00e9ralement user/config/plugins/form.yaml ). Vous pouvez ignorer la balise de script sugg\u00e9r\u00e9e, car Grav s'en charge pour vous. Les options par d\u00e9faut sont : 1 | turnstile: 2 | theme: light 3 | site_key: <Your Turnstile Site Key> 4 | secret_key: <Your Turnstile Secret Key> Enfin, vous aurez \u00e9galement besoin d'un \u00e9l\u00e9ment matching process: pour garantir que le formulaire soit correctement valid\u00e9. Il doit s'agir de la premi\u00e8re entr\u00e9e de la section process : du formulaire pour garantir que le formulaire ne sera pas trait\u00e9 en cas d'\u00e9chec de la validation captcha. Exemple. Un exemple typique de formulaire de contact ressemblerait \u00e0 ce qui suit. 1 | form: 2 | name: contact 3 | fields: 4 | name: 5 | label: Name 6 | type: text 7 | validate: 8 | required: true 9 | email: 10 | label: Email 11 | type: email 12 | validate: 13 | required: true 14 | message: 15 | label: Message 16 | type: textarea 17 | validate: 18 | required: true 19 | captcha: 20 | type: turnstile 21 | theme: light 22 | buttons: 23 | submit: 24 | type: submit 25 | value: Submit 26 | process: 27 | turnstile: true 28 | email: 29 | subject: \"[Acme] {{ form.value.name|e }}\" 30 | reply_to: \"{{ form.value.name|e }} <{{ form.value.email }}>\" 31 | message: Thanks for contacting us! 32 | reset: true 33 | display: '/' Champ Google Captcha (ReCaptcha). Le type de champ captcha est utilis\u00e9 pour ajouter un \u00e9l\u00e9ment Google reCAPTCHA \u00e0 votre formulaire. Contrairement \u00e0 d'autres \u00e9l\u00e9ments, il ne peut \u00eatre utilis\u00e9 qu'une seule fois dans un formulaire. Vous devez configurer vos configurations Google reCAPTCHA dans la console d'administration reCAPTCHA . Depuis la version 3.0 , le champ prend en charge 3 variantes de reCAPTCHA. La configuration globale de reCAPTCHA est mieux d\u00e9finie dans votre fichier de configuration de formulaire global (g\u00e9n\u00e9ralement user/config/plugins/form.yaml ). Les options par d\u00e9faut sont : 1 | recaptcha: 2 | version: 2-checkbox 3 | theme: light 4 | site_key: 5 | secret_key: Ces options doivent \u00eatre d\u00e9finies en fonction des \u00e9l\u00e9ments suivants : CLEF VALEURS version Par d\u00e9faut \u00e0 2-checkbox , mais peut \u00e9galement \u00eatre 2-invisible ou 3 theme Par d\u00e9faut light , mais peut aussi \u00eatre dark (ne fonctionne actuellement que pour les versions 2-x ) site_key Votre cl\u00e9 de site Google secret_key Votre cl\u00e9 secr\u00e8te Google Veuillez vous assurer que le domaine du site est r\u00e9pertori\u00e9 dans la configuration reCAPTCHA de Google. Dans la d\u00e9finition du formulaire, l'attribut name du champ captcha doit \u00eatre g-recaptcha-response . La raison en est que Google reCAPTCHA stocke le code de confirmation Captcha dans un champ nomm\u00e9 g-recaptcha-response . Exemple: 1 | g-recaptcha-response: 2 | type: captcha 3 | label: Captcha Vous pouvez \u00e9galement fournir un message d'\u00e9chec recaptcha_not_validated personnalis\u00e9, mais si vous ne le faites pas, celui par d\u00e9faut est fourni par le plugin Form. Si vous souhaitez d\u00e9finir un recaptcha_site_key sp\u00e9cifique au formulaire plut\u00f4t que de le d\u00e9finir globalement dans la configuration du formulaire, vous pouvez \u00e9galement le d\u00e9finir. 1 | g-recaptcha-response: 2 | type: captcha 3 | label: Captcha 4 | recaptcha_site_key: ENTER_YOUR_CAPTCHA_PUBLIC_KEY 5 | recaptcha_not_validated: 'Captcha not valid!' ATTRIBUT DESCRIPTION recaptcha_site_key La cl\u00e9 de site Google reCAPTCHA (facultatif) recaptcha_not_validated Le message \u00e0 afficher si le captcha n'est pas valide Attributs communs autoris\u00e9s help label name outerclasses validate.required Cela n\u00e9cessite \u00e9galement un \u00e9l\u00e9ment process: matching pour garantir que le formulaire est correctement valid\u00e9. Il doit s'agir de la premi\u00e8re entr\u00e9e de la section process : du formulaire pour garantir que le formulaire ne sera pas trait\u00e9 si la validation ReCaptcha \u00e9choue. 1 | process: 2 | captcha: true Validation Captcha c\u00f4t\u00e9 serveur Le code ci-dessus validera le Captcha dans le frontend et emp\u00eachera la soumission du formulaire s'il n'est pas correct. Pour valider \u00e9galement le captcha c\u00f4t\u00e9 serveur, ajoutez l'action captcha process \u00e0 vos formulaires : 1 | process: 2 | captcha: true Vous pouvez \u00e9galement fournir un message de r\u00e9ussite facultatif, mais si vous ne le faites pas, aucun message sp\u00e9cifique ne s'affichera en cas de r\u00e9ussite. Si vous souhaitez d\u00e9finir un recaptcha_secret sp\u00e9cifique au formulaire plut\u00f4t que de le d\u00e9finir globalement dans la configuration du formulaire, vous pouvez \u00e9galement le d\u00e9finir. 1 | process: 2 | captcha: 3 | recaptcha_secret: ENTER_YOUR_CAPTCHA_SECRET_KEY 4 | message: 'Successfully passed reCAPTCHA!' Voir l'exemple de formulaire de contact pour le voir en action. Champ d'une case \u00e0 cocher. Le type de champ checkbox est utilis\u00e9 pour ajouter une seule case \u00e0 cocher \u00e0 votre formulaire. Exemple: 1 | agree_to_terms: 2 | type: checkbox 3 | label: \"Agree to the terms and conditions\" 4 | validate: 5 | required: true Attributs communs autoris\u00e9s autofocus classes default disabled id label name novalidate outerclasses size style validate.required validate.pattern validate.message Champ de plusieurs cases \u00e0 cocher. Le type de champ checkboxes est utilis\u00e9 pour ajouter un groupe de cases \u00e0 cocher \u00e0 votre formulaire. Exemples: 1 | pages.process: 2 | type: checkboxes 3 | label: PLUGIN_ADMIN.PROCESS 4 | help: PLUGIN_ADMIN.PROCESS_HELP 5 | default: 6 | markdown: true 7 | twig: true 8 | options: 9 | markdown: Markdown 10 | twig: Twig 11 | use: keys 1 | my_field: 2 | type: checkboxes 3 | label: A couple of checkboxes 4 | default: 5 | - option1 6 | - option2 7 | options: 8 | option1: Option 1 9 | option2: Option 2 ATTRIBUT DESCRIPTION use Lorsqu'elle est d\u00e9finie sur keys , la case \u00e0 cocher stockera la valeur de la cl\u00e9 de l'\u00e9l\u00e9ment lors de la soumission du formulaire. Sinon, il utilisera la valeur de l'\u00e9l\u00e9ment. options Un tableau d'options cl\u00e9-valeur qui seront autoris\u00e9es. Attributs communs autoris\u00e9s autofocus classes default disabled help id label name outerclasses size style validate.required validate.pattern validate.message REMARQUE : Le champ des cases \u00e0 cocher ne prend pas en charge l'action de processus remember Champ conditionnel. Le type de champ conditional est utilis\u00e9 pour afficher conditionnellement d'autres champs bas\u00e9s sur une condition. Exemples: Si votre condition renvoie d\u00e9j\u00e0 un true ou false , vous pouvez simplement utiliser ce format simplifi\u00e9 : 1 | my_conditional: 2 | type: conditional 3 | condition: config.plugins.yourplugin.enabled 4 | fields: # The field(s) below will be displayed only if the plugin named yourplugin is enabled 5 | header.mytextfield: 6 | type: text 7 | label: A text field Cependant, si vous avez besoin de conditions plus complexes, vous pouvez ex\u00e9cuter une logique qui renvoie 'true' ou 'false ' sous forme de cha\u00eenes, et le champ le comprendra \u00e9galement. 1 | my_conditional: 2 | type: conditional 3 | condition: \"config.site.something == 'custom'\" 4 | fields: # The field(s) below will be displayed only if the `site` configuration option `something` equals `custom` 5 | header.mytextfield: 6 | type: text 7 | label: A text field ATTRIBUT DESCRIPTION condition La condition \u00e9valu\u00e9e par twig. Toute variable accessible par twig peut \u00eatre \u00e9valu\u00e9e Attributs communs autoris\u00e9s disabled id label name Champ Date. Le type de champ date est utilis\u00e9 pour ajouter un champ de saisie de date HTML5. Exemple: - type: date label: Enter a date validate.min: \"2014-01-01\" validate.max: \"2018-12-31\" ATTRIBUT DESCRIPTION validate.min D\u00e9finit l'attribut min du champ (voir http://html5doctor.com/the-woes-of-date-input/#feature-min-max-attributes ) validate.max D\u00e9finit l'attribut max du champ (voir http://html5doctor.com/the-woes-of-date-input/#feature-min-max-attributes ) Attributs communs autoris\u00e9s autofocus classes default disabled help id label name novalidate outerclasses readonly size style title validate.required validate.pattern validate.message Champ d'affichage. Le type de champ d'affichage display est utilis\u00e9 pour afficher du texte ou des instructions \u00e0 l'int\u00e9rieur du formulaire. Peut accepter le contenu de d\u00e9marquage Exemple: 1 | test: 2 | type: display 3 | size: large 4 | label: Instructions 5 | markdown: true 6 | content: \"This is a test of **bold** and _italic_ in a text/display 7 | field\\n\\nanother paragraph....\" ATTRIBUT DESCRIPTION markdown Valeur bool\u00e9enne qui active le traitement de d\u00e9marque sur le champ de contenu. content Le contenu textuel \u00e0 afficher. Attributs communs autoris\u00e9s help label name id outerclasses size style Champ e-mail. Le type de champ email est utilis\u00e9 pour pr\u00e9senter un champ de saisie de texte qui accepte un email, en utilisant l'entr\u00e9e email HTML5. Les e-mails sont insensibles \u00e0 la casse par conception. Assurez-vous que la logique de votre application g\u00e8re correctement les e-mails en majuscules, minuscules ou mixtes. Exemple: 1 | header.email: 2 | type: email 3 | autofocus: true 4 | label: Email ATTRIBUT DESCRIPTION minlength Longueur minimale du texte. maxlength Longueur maximale du texte. validate.min Identique \u00e0 minlength. validate.max Identique \u00e0 maxlength. Attributs communs autoris\u00e9s autofocus classes default disabled help id label name novalidate outerclasses readonly size style title validate.required validate.pattern validate.message Champ de fichier. Avec le type de champ de fichier file , vous pouvez permettre aux utilisateurs de t\u00e9l\u00e9charger des fichiers via le formulaire. Le champ par d\u00e9faut n'autorise qu'un seul fichier , de type image et sera t\u00e9l\u00e9charg\u00e9 sur la page courante o\u00f9 le formulaire a \u00e9t\u00e9 d\u00e9clar\u00e9. 1 | # Default settings 2 | my_files: 3 | type: file 4 | multiple: false 5 | destination: 'self@' 6 | accept: 7 | - image/* ATTRIBUT DESCRIPTION multiple Peut \u00eatre true ou false , lorsqu'il est d\u00e9fini sur true , plusieurs fichiers peuvent \u00eatre s\u00e9lectionn\u00e9s en m\u00eame temps. destination Peut \u00eatre @self, @page:/route, local/rel/path/ ou un flux PHP. Mis \u00e0 @self , les fichiers seront t\u00e9l\u00e9charg\u00e9s l\u00e0 o\u00f9 le formulaire a \u00e9t\u00e9 d\u00e9clar\u00e9 (.md actuel). L'utilisation de @page:/route sera t\u00e9l\u00e9charg\u00e9e vers l'itin\u00e9raire sp\u00e9cifi\u00e9 d'une page, si elle existe (par exemple, @page:/blog/a-blog-post ). D\u00e9fini sur \u00ab local/rel/path \u00bb : peut \u00eatre n'importe quel chemin relatif \u00e0 l'instance Grav. Par exemple, utilisateur/images/t\u00e9l\u00e9chargements. Si le chemin n'existe pas, il sera cr\u00e9\u00e9, alors assurez-vous qu'il est accessible en \u00e9criture. Vous pouvez \u00e9galement d\u00e9finir la valeur sur n'importe quel flux PHP valide reconnu par Grav comme user-data://my-form ou theme://media/uploads. accept Prend un tableau de types MIME autoris\u00e9s. Par exemple, pour autoriser uniquement les fichiers gifs et mp4 : accept: ['image/gif', 'video/mp4'] . Le champ Fichier dans l'administrateur est un peu diff\u00e9rent, permettant \u00e9galement de supprimer un fichier t\u00e9l\u00e9charg\u00e9 sur un formulaire, car le cas d'utilisation dans l'administrateur est de t\u00e9l\u00e9charger puis d'associer un fichier \u00e0 un champ. Attributs communs autoris\u00e9s help label name outerclasses Par d\u00e9faut, dans Admin, le champ de fichier file \u00e9crasera un fichier t\u00e9l\u00e9charg\u00e9 portant le m\u00eame nom qu'un fichier plus r\u00e9cent, contenu dans le m\u00eame dossier que celui dans lequel vous souhaitez le t\u00e9l\u00e9charger, sauf si vous d\u00e9finissez avoid_overwriting sur true dans la d\u00e9finition du champ. Champ cach\u00e9. Le type de champ masqu\u00e9 hidden permet d'ajouter un \u00e9l\u00e9ment masqu\u00e9 \u00e0 un formulaire. Exemple: 1 | header.some_field: 2 | type: hidden 3 | default: my-value ATTRIBUT DESCRIPTION name Le nom du champ. S'il est manquant, le nom du champ est obtenu \u00e0 partir de l'\u00e9l\u00e9ment de d\u00e9finition du champ (dans l'exemple ci-dessus : header.some_field ) Attributs communs autoris\u00e9s default Champ pot de miel. Le type de champ pot de miel honeypot cr\u00e9e un champ cach\u00e9 qui, une fois rempli, renverra une erreur. C'est un moyen utile d'emp\u00eacher les robots de remplir et de soumettre un formulaire. Exemple: 1 | fields: 2 | honeypot: 3 | type: honeypot Il s'agit d'un simple champ de texte qui n'appara\u00eet pas sur le front-end. Les robots, qui d\u00e9tectent les champs dans le code et les remplissent automatiquement, rempliront probablement le champ. L'erreur emp\u00eache ce formulaire d'\u00eatre correctement soumis. L'erreur revient \u00e0 c\u00f4t\u00e9 de l'\u00e9l\u00e9ment de formulaire, plut\u00f4t qu'en haut dans un bloc de message. Un champ de pot de miel est une alternative populaire aux champs de captcha. Champ ignore. Le type de champ Ignorer ignore peut \u00eatre utilis\u00e9 pour supprimer les champs inutilis\u00e9s lors de l'extension \u00e0 partir d'un autre Blueprint Exemple: 1 | header.process: 2 | type: ignore 3 | content: 4 | type: ignore Champ nombre. Le type de champ nombre number est utilis\u00e9 pour pr\u00e9senter un champ de saisie de texte qui n'accepte que des nombres, en utilisant l'entr\u00e9e num\u00e9rique HTML5. Exemple: 1 | header.count: 2 | type: number 3 | label: 'How Much?' 4 | validate: 5 | min: 10 6 | max: 360 7 | step: 10 ATTRIBUT DESCRIPTION valider.min Valeur minimale. valider.max Valeur maximale. valider.step Qui incr\u00e9mente pour passer \u00e0 la vitesse sup\u00e9rieure Attributs communs autoris\u00e9s autofocus classes default disabled help id label name novalidate outerclasses readonly size style title validate.required validate.pattern validate.message Champ Mot de passe. Le type de champ de mot de passe password est utilis\u00e9 pour pr\u00e9senter un champ de saisie de texte de mot de passe. Exemple: 1 | password: 2 | type: password 3 | label: Password Attributs communs autoris\u00e9s autofocus classes default disabled help id label name novalidate outerclasses readonly size style title validate.required validate.pattern validate.message Champ radio. Le type champ radio permet de pr\u00e9senter un ensemble de champs radio Exemple: 1 | my_choice: 2 | type: radio 3 | label: Choice 4 | default: markdown 5 | options: 6 | markdown: Markdown 7 | twig: Twig ATTRIBUT DESCRIPTION options Un tableau d'options cl\u00e9-valeur qui seront autoris\u00e9es. Attributs communs autoris\u00e9s default disabled help id label name outerclasses validate.required validate.pattern validate.message Champ plage. Le champ de plage range est utilis\u00e9 pour pr\u00e9senter un champ de saisie de plage . Exemple: 1 | header.choose_a_number_in_range: 2 | type: range 3 | label: Choose a number 4 | validate: 5 | min: 1 6 | max: 10 Attributs communs autoris\u00e9s autofocus classes default disabled help id label name novalidate outerclasses readonly size style title validate.required validate.pattern validate.message Champ de section. Le type de champ Section est utilis\u00e9 pour diviser une page de param\u00e8tres en sections. Exemple: 1 | content: 2 | type: section 3 | title: PLUGIN_ADMIN.DEFAULTS 4 | underline: true 5 | 6 | fields: 7 | 8 | #..... subfields ATTRIBUT DESCRIPTION title Un titre de rubrique. text Un texte \u00e0 afficher en dessous. security Un tableau d'informations d'identification dont un utilisateur a besoin pour visualiser cette section. title_level D\u00e9finissez une balise de titre personnalis\u00e9e. Par d\u00e9faut : h3 . Champ s\u00e9lection. Le type de champ de s\u00e9lection select est utilis\u00e9 pour pr\u00e9senter un champ de s\u00e9lection. Exemple 1: 1 | pages.order.by: 2 | type: select 3 | size: long 4 | classes: fancy 5 | label: 'Default Ordering' 6 | help: 'Pages in a list will render using this order unless it is overridden' 7 | options: 8 | default: 'Default - based on folder name' 9 | folder: 'Folder - based on prefix-less folder name' 10 | title: 'Title - based on title field in header' 11 | date: 'Date - based on date field in header' Exemple 2 - D\u00e9sactivation des options individuelles : 1 | my_element: 2 | type: select 3 | size: long 4 | classes: fancy 5 | label: 'My Select Element' 6 | help: 'Use the disabled key:value to display but disable a particular option' 7 | options: 8 | option1: 9 | value: 'Option 1' 10 | option2: 11 | value: 'Option 2' 12 | option3: 13 | disabled: true 14 | value: 'Option 3' ATTRIBUT DESCRIPTION options Un tableau d'options cl\u00e9-valeur qui seront autoris\u00e9es. La cl\u00e9 sera soumise par le formulaire. multiple Autoriser le formulaire \u00e0 accepter plusieurs valeurs. Si vous d\u00e9finissez multiple sur true, vous devez ajouter 1 | pages.order.by: 2 | validate: 3 | type: array Sinon, le tableau des valeurs s\u00e9lectionn\u00e9es ne sera pas enregistr\u00e9 correctement. Attributs communs autoris\u00e9s autofocus classes default disabled help id label name novalidate outerclasses size style title validate.required validate.pattern validate.message Champ s\u00e9lection Optgroup. Le type de champ select_optgroup est utilis\u00e9 pour pr\u00e9senter un champ de s\u00e9lection avec des regroupements. Exemple: 1 | -header.newField: 2 | type: select_optgroup 3 | label: Test Optgroup Select Field 4 | options: 5 | - OptGroup1: 6 | - Option1 7 | - Option2 8 | - OptGroup2: 9 | - Option3 10 | - Option4 ATTRIBUT DESCRIPTION options Un tableau d'options cl\u00e9-valeur qui seront autoris\u00e9es. multiple Autoriser le formulaire \u00e0 accepter plusieurs valeurs. Attributs communs autoris\u00e9s autofocus classes default disabled help id label name novalidate outerclasses size style validate.required validate.pattern validate.message Champ d'espacement. Le type de champ d'espacement spacer est utilis\u00e9 pour ajouter du texte, un titre ou une balise hr Exemple: 1 | test: 2 | type: spacer 3 | title: A title 4 | text: Some text 5 | underline: true ATTRIBUT DESCRIPTION title Ajouter un titre h3 au formulaire. text Ajoutez du texte. Si le titre est d\u00e9fini, ajoutez-le apr\u00e8s le titre. underline Bool\u00e9en, ajouter une balise <hr> si positif. Onglets / Champs d'onglet. Les types de champs d'onglet tabs et tab sont utilis\u00e9s pour diviser les champs de formulaire contenus en onglets. Exemple: 1 | tabs: 2 | type: tabs 3 | active: 1 4 | 5 | fields: 6 | content: 7 | type: tab 8 | title: PLUGIN_ADMIN.CONTENT 9 | 10 | fields: 11 | 12 | # .... other subfields 13 | 14 | options: 15 | type: tab 16 | title: PLUGIN_ADMIN.OPTIONS 17 | 18 | fields: 19 | 20 | # .... other subfields Attribut Description active Le num\u00e9ro d'onglet actif. Champ t\u00e9l\u00e9phone. Le type de champ tel est utilis\u00e9 pour pr\u00e9senter un champ de saisie de texte qui accepte un num\u00e9ro de t\u00e9l\u00e9phone, en utilisant l'entr\u00e9e tel HTML5 . Exemple: 1 | header.phone: 2 | type: tel 3 | label: 'Your Phone Number' ATTRIBUT DESCRIPTION minlength Longueur minimale du texte. maxlength Longueur maximale du texte. validate.min Identique \u00e0 minlength. validate.max Identique \u00e0 maxlength. Attributs communs autoris\u00e9s autofocus classes default disabled help id label name novalidate outerclasses readonly size style title validate.required validate.pattern validate.message Champ de texte. Le champ text est utilis\u00e9 pour pr\u00e9senter un champ de saisie de texte. Exemple: 1 | header.title: 2 | type: text 3 | autofocus: true 4 | label: PLUGIN_ADMIN.TITLE 5 | minlength: 10 6 | maxlength: 255 ATTRIBUT DESCRIPTION prepend Ajouter du texte ou du code HTML au d\u00e9but d'un champ. append Ajouter du texte ou du code HTML \u00e0 la fin d'un champ. minlength Longueur minimale du texte. maxlength Longueur maximale du texte. validate.min Iidentique \u00e0 minlength. validate.max Iidentique \u00e0 maxlength. Attributs communs autoris\u00e9s autofocus classes default disabled help id label name novalidate outerclasses readonly size style title validate.required validate.pattern validate.message Champ de zone de texte. Le champ textarea est utilis\u00e9 pour pr\u00e9senter un champ de saisie textarea. Exemple: 1 | header.content: 2 | type: textarea 3 | autofocus: true 4 | label: PLUGIN_ADMIN.CONTENT 5 | minlength: 10 6 | maxlength: 255 ATTRIBUT DESCRIPTION rows Ajoutez un attribut rows avec la valeur associ\u00e9e \u00e0 cette propri\u00e9t\u00e9. cols Ajoutez un attribut cols avec la valeur associ\u00e9e \u00e0 cette propri\u00e9t\u00e9. minlength Longueur minimale du texte. maxlength Longueur maximale du texte. validate.min Identique \u00e0 minlength. validate.max Identique \u00e0 maxlength. Attributs communs autoris\u00e9s autofocus classes default disabled help id label name novalidate outerclasses readonly size style title validate.required validate.pattern validate.message Champ bascule. Le type de champ \u00e0 bascule toggle est un type d'entr\u00e9e marche/arr\u00eat, avec des \u00e9tiquettes configurables. Exemple: 1 | summary.enabled: 2 | type: toggle 3 | label: PLUGIN_ADMIN.ENABLED 4 | highlight: 1 5 | help: PLUGIN_ADMIN.ENABLED_HELP 6 | options: 7 | 1: PLUGIN_ADMIN.YES 8 | 0: PLUGIN_ADMIN.NO 9 | validate: 10 | type: bool ATTRIBUT DESCRIPTION highlight La touche de l'option \u00e0 mettre en surbrillance (d\u00e9finie en vert lorsqu'elle est s\u00e9lectionn\u00e9e). options La liste des options de valeur-cl\u00e9. Attribut communs autoris\u00e9s default help label name style toggleable validate.required validate.pattern validate.message Champ d'URL. Le type de champ url est utilis\u00e9 pour pr\u00e9senter un champ de saisie de texte qui accepte une URL, en utilisant l'entr\u00e9e url HTML5 . Exemple: 1 | header.phone: 2 | type: url 3 | label: 'Your Phone Number' ATTRIBUT DESCRIPTION minlength Longueur minimale du texte. maxlength Longueur maximale du texte. validate.min Identique \u00e0 minlength. validate.max Identique \u00e0 maxlength. Attributs communs autoris\u00e9s autofocus classes default disabled help id label name novalidate outerclasses readonly size style title validate.required validate.pattern validate.message Champs actuellement non document\u00e9s. CHAMP DESCRIPTION Array Avatar Color Columns Column Datetime Fieldset Formname Month Signature Switch Time Unique Id Value Week NDT : la version anglaise d'origine est ici .","title":"R\u00e9f\u00e9rence - Index des champs de formulaires"},{"location":"formulaires-ref-options-formulaires/","text":"R\u00e9f\u00e9rence : Options de formulaire Name Il n'y a pas d'options obligatoires pour les formulaires. Cependant, comme indiqu\u00e9 dans la vue d'ensemble des formulaires frontaux , il est fortement recommand\u00e9 d'avoir au moins un nom de formulaire : 1 | form: 2 | name: my-form Cela doit \u00eatre unique pour votre site Grav. En effet, le nom du formulaire sert d'identifiant unique pour ce formulaire via le syst\u00e8me. Un formulaire peut \u00eatre r\u00e9f\u00e9renc\u00e9 par ce nom \u00e0 partir de n'importe quelle autre page. Method Cette option vous permet de contr\u00f4ler si le formulaire doit \u00eatre soumis via POST ou GET . La valeur par d\u00e9faut est POST . Notez \u00e9galement que si vous avez un champ de fichier dans votre formulaire, la m\u00e9thode obtiendra \u00e9galement enctype=\"multipart/form-data\" ajout\u00e9 : 1 | form: 2 | method: GET Action L'action par d\u00e9faut va \u00eatre la route en tant que page actuelle. Cela a du sens la plupart du temps car le formulaire doit \u00eatre trait\u00e9 par la m\u00eame page qui h\u00e9berge le formulaire. Il arrive parfois que vous souhaitiez remplacer l'action pour sp\u00e9cifier une extension de fichier diff\u00e9rente ( .json peut-\u00eatre) ou m\u00eame cibler une ancre de page sp\u00e9cifique : 1 | form: 2 | action: '/contact-us#contact-form' Vous pouvez m\u00eame traiter le formulaire sur une autre page si cette page est celle o\u00f9 vous souhaitez g\u00e9rer les r\u00e9sultats. Cela peut \u00e9galement \u00eatre utilis\u00e9 comme technique pour modifier le mod\u00e8le de la r\u00e9ponse par rapport \u00e0 celui utilis\u00e9 dans le formulaire d'origine : 1 | form: 2 | action: /contact-us/ajax-process O\u00f9 vous avez un fichier de page appel\u00e9 form-messages.html.twig qui renvoie uniquement les donn\u00e9es du message. Sinon, vous pouvez utiliser l'approche ci-dessous... Template Habituellement, le mod\u00e8le Twig de la page qui affiche le formulaire est parfaitement capable de g\u00e9rer tous les messages de r\u00e9ussite/\u00e9chec ou les r\u00e9ponses de validation en ligne. Cependant, il est parfois utile de renvoyer la r\u00e9ponse du formulaire en utilisant un mod\u00e8le Twig diff\u00e9rent. Un bon exemple de cela est lorsque vous souhaitez traiter votre formulaire via Ajax. Vous souhaitez probablement que le code HTML pour les messages de r\u00e9ussite/\u00e9chec soit renvoy\u00e9 par le mod\u00e8le, afin qu'ils puissent \u00eatre r\u00e9inject\u00e9s dans la page par JavaScript : 1 | form: 2 | template: form-messages ID La possibilit\u00e9 de d\u00e9finir un champ id CSS au niveau du formulaire. S'il n'est pas fourni, le nom du formulaire est utilis\u00e9. 1 | form: 2 | id: my-form-id Classes Vous pouvez \u00e9galement d\u00e9finir des classes explicites sur le formulaire. Il n'y a pas de valeurs par d\u00e9faut ici. 1 | form: 2 | classes: 'form-style form-surround' Inline Errors La d\u00e9finition d'erreurs en ligne dans le fichier ou la d\u00e9finition de d\u00e9marquage du formulaire permet l'affichage d'erreurs en ligne, un outil de d\u00e9pannage important. 1 | form: 2 | inline_errors: true Client-side Validation La d\u00e9sactivation de la validation c\u00f4t\u00e9 client vous permettra de voir les erreurs en ligne et la validation d\u00e9taill\u00e9e c\u00f4t\u00e9 serveur qui vont au-del\u00e0 de la validation c\u00f4t\u00e9 client HTML5. Vous pouvez d\u00e9sactiver la validation c\u00f4t\u00e9 client via form.yaml ou dans la d\u00e9finition du formulaire. 1 | form: 2 | client_side_validation: false XSS Checks Par d\u00e9faut, Grav 1.7 et les versions ult\u00e9rieures activent diverses v\u00e9rifications XSS dans tous les formulaires. Les param\u00e8tres par d\u00e9faut peuvent \u00eatre trouv\u00e9s \u00e0 partir de la configuration de la s\u00e9curit\u00e9 . Cependant, vous pouvez remplacer ces param\u00e8tres par formulaire ou par champ, par exemple, vous pouvez d\u00e9sactiver les v\u00e9rifications XSS dans l'ensemble du formulaire en : 1 | form: 2 | xss_check: false AVERTISSEMENT : Il n'est pas recommand\u00e9 de d\u00e9sactiver toutes les v\u00e9rifications XSS, mais de remplacer les r\u00e8gles sp\u00e9cifiques par champ. Tous les exemples ici fonctionneront \u00e9galement \u00e0 l'int\u00e9rieur d'un champ de formulaire. Vous pouvez activer ou d\u00e9sactiver des r\u00e8gles individuelles en rempla\u00e7ant la configuration principale. Les r\u00e8gles qui ne sont pas remplac\u00e9es utiliseront la configuration de s\u00e9curit\u00e9 : 1 | form: 2 | xss_check: 3 | enabled_rules: 4 | on_events: false 5 | invalid_protocols: false 6 | moz_binding: false 7 | html_inline_styles: false 8 | dangerous_tags: false Mieux encore, vous pouvez \u00e9galement autoriser des protocoles et des balises sp\u00e9cifiques : 1 | form: 2 | xss_check: 3 | safe_protocols: 4 | - javascript 5 | safe_tags: 6 | - iframe Keep Alive Vous pouvez vous assurer que vos formulaires n'\u00e9chouent pas \u00e0 se soumettre lorsque votre session expire, en activant l'option keep_alive sur le formulaire. En activant ceci, une requ\u00eate AJAX sera faite \u00e0 Grav avant l'expiration de votre session pour la garder \"fra\u00eeche\": 1 | form: 2 | keep_alive: true Fieldsets Vous pouvez configurer des balises <fieldset></fieldset> pour les champs de votre formulaire \u00e0 l'aide de la d\u00e9signation fieldset: dans le formulaire. 1 | form: 2 | name: Example Form 3 | fields: 4 | example: 5 | type: fieldset 6 | id: my-fieldset 7 | legend: 'Test Fieldset' 8 | fields: 9 | first_field: { type: text, label: 'First Field' } 10 | second_field: { type: text, label: 'Second Field' } Le formulaire ci-dessus sort comme suit : 1 | <form action=\"/grav/example/forms\" class=\"\" id=\"my-example-form\" method=\"post\" name=\"Example Form\"> 2 | <fieldset id=\"my-fieldset\"> 3 | <legend>Test Fieldset</legend> 4 | <div class=\"form-group\"> 5 | <div class=\"form-label-wrapper\"> 6 | <label class=\"form-label\">First Field</label> 7 | </div> 8 | <div class=\"form-data\" data-grav-default=\"null\" data-grav-disabled=\"true\" data-grav-field=\"text\"> 9 | <div class=\"form-input-wrapper\"> 10 | <input class=\"form-input\" name=\"data[first_field]\" type=\"text\" value=\"\"> 11 | </div> 12 | </div> 13 | </div> 14 | <div class=\"form-group\"> 15 | <div class=\"form-label-wrapper\"> 16 | <label class=\"form-label\">Second Field</label> 17 | </div> 18 | <div class=\"form-data\" data-grav-default=\"null\" data-grav-disabled=\"true\" data-grav-field=\"text\"> 19 | <div class=\"form-input-wrapper\"> 20 | <input class=\"form-input\" name=\"data[second_field]\" type=\"text\" value=\"\"> 21 | </div> 22 | </div> 23 | </div> 24 | </fieldset> 25 | </form> Dans l'exemple ci-dessus, les champs apparaissent dans l'ensemble de champs my-fieldset . Vous remarquerez \u00e9galement que les balises <legend></legend> sont prises en charge via l'option legend: .","title":"R\u00e9f\u00e9rence - Options de formulaires"},{"location":"formulaires-references/","text":"R\u00e9f\u00e9rence : Champs de formulaire Blueprint Champs de formulaire disponibles pour une utilisation dans l'administration Les formulaires c\u00f4t\u00e9 administrateur peuvent \u00eatre cr\u00e9\u00e9s avec une vari\u00e9t\u00e9 de champs. Ce document fournit une r\u00e9f\u00e9rence compl\u00e8te des propri\u00e9t\u00e9s de chaque champ et fournit des exemples d'utilisation. En plus des champs list\u00e9s ci-dessous, r\u00e9serv\u00e9s \u00e0 une utilisation dans l'Admin, vous pouvez \u00e9galement utiliser tous les champs disponibles dans les formulaires frontend d\u00e9crits dans la R\u00e9f\u00e9rence des champs des formulaires frontend . Champs de formulaire sp\u00e9ciaux disponibles exclusivement dans l'administration CHAMPS DESCRIPTION Array utilis\u00e9 pour cr\u00e9er des tableaux cl\u00e9-valeur. BackupHistory Blueprint Colorpicker affiche un s\u00e9lecteur de couleurs. Columns utilis\u00e9es pour diviser le formulaire en plusieurs colonnes. Column utilis\u00e9e pour afficher une seule colonne (utilis\u00e9e avec le champ Colonnes ). Cron CronStatus Dateformat une s\u00e9lection sp\u00e9ciale qui rend la date/heure actuelle dans les formats pass\u00e9s. Datetime un champ de s\u00e9lection de date et d'heure. Editor afficher un \u00e9diteur de markdown. Elements un champ conditionnel et organisationnel pour afficher/masquer les enfants en fonction de la valeur s\u00e9lectionn\u00e9e du \"d\u00e9clencheur\". Ceci est extr\u00eamement utile pour r\u00e9duire l'encombrement lorsqu'il y a beaucoup d'options \u00e0 afficher. Groupe de champs un ensemble de champs \u00e0 l'int\u00e9rieur d'un accord\u00e9on pliable. File dans Admin, File est sp\u00e9cialis\u00e9 pour \u00eatre utilis\u00e9 dans les configurations de plugins et de th\u00e8mes (blueprints). G\u00e8re le t\u00e9l\u00e9chargement d'un fichier vers un emplacement, sa suppression et sa suppression de la configuration du th\u00e8me / plugin. Filepicker Filepicker permet de choisir des fichiers \u00e0 partir d'un emplacement dans le syst\u00e8me de fichiers du serveur Web. Frontmatter IconPicker List utilis\u00e9e pour cr\u00e9er des collections de champs. Markdown MediaPicker Multilevel Order PageMedia PageMediaSelect affiche une s\u00e9lection avec tous les m\u00e9dias de la page. Utilis\u00e9 dans les plans Pages pour permettre \u00e0 l'utilisateur de choisir un fichier multim\u00e9dia \u00e0 affecter \u00e0 un champ. Pages affiche une liste des pages du site Parents Permissions Range Section utilis\u00e9e pour diviser une page de param\u00e8tres en sections ; chaque section est accompagn\u00e9e d'un titre Selectize S\u00e9lectionnez un hybride d'une zone de texte et d'une zone de s\u00e9lection. Principalement utile pour le balisage et d'autres champs de s\u00e9lection d'\u00e9l\u00e9ments. SelectUnique Taxonomie une s\u00e9lection sp\u00e9ciale pr\u00e9configur\u00e9e pour s\u00e9lectionner une ou plusieurs taxonomies ThemeSelect Userinfo Xss Attributs des champs communs Chaque champ accepte une liste d'attributs que vous pouvez utiliser. Chaque champ peut partager ces attributs communs, mais des champs particuliers peuvent les ignorer. La meilleure fa\u00e7on de v\u00e9rifier quels attributs sont autoris\u00e9s sur un champ est de v\u00e9rifier la description du champ dans cette page et de voir quels attributs sont mentionn\u00e9s. Cette liste fournit un terrain d'entente, il n'est donc pas n\u00e9cessaire de r\u00e9p\u00e9ter la description d'un champ commun. ATTRIBUTS DESCRIPTION autocomplete la saisie semi-automatique accepte on ou off autofocus si activ\u00e9, autofocus sur ce champ classes accepte une cha\u00eene avec une ou plusieurs classes CSS \u00e0 ajouter default d\u00e9finit la valeur par d\u00e9faut du champ. Cela garantit que vous r\u00e9cup\u00e9rerez toujours soit une valeur sp\u00e9cifi\u00e9e par l'utilisateur, soit cette valeur par d\u00e9faut. Voir aussi placeholder . disabled d\u00e9finit l'\u00e9tat d\u00e9sactiv\u00e9 du champ help Ajoute une info-bulle au champ id d\u00e9finit l'identifiant du champ ainsi que l'attribut for sur l'\u00e9tiquette label d\u00e9finit le libell\u00e9 du champ name d\u00e9finit le nom du champ novalidate d\u00e9finit l'\u00e9tat novalidate du champ placeholder d\u00e9finit la valeur de l'espace r\u00e9serv\u00e9 du champ. Il s'agit de d\u00e9finir une valeur que l'utilisateur peut voir comme une invite pour sa propre valeur, mais cela n'influence pas la valeur finalement \u00e9crite. Voir aussi par default . readonly d\u00e9finit l'\u00e9tat du champ en lecture seule size d\u00e9finit la taille du champ, qui \u00e0 son tour ajoute une classe \u00e0 son conteneur. Les valeurs valides sont large , x-small , medium , long , small . Vous pouvez bien s\u00fbr en ajouter plus dans le mod\u00e8le que vous voyez, lorsqu'il est utilis\u00e9 dans le frontend style d\u00e9finit le style de champ. S'il est d\u00e9fini sur vertical, le champ peut appara\u00eetre en pleine largeur. C'est un moyen facile de nettoyer le formulaire. title d\u00e9finit la valeur du titre du champ toggleable ajouter une case \u00e0 cocher qui basculera l'attribut activ\u00e9/d\u00e9sactiv\u00e9 du champ validate.required si d\u00e9fini sur une valeur positive, d\u00e9finit le champ comme requis validate.pattern d\u00e9finit un mod\u00e8le de validation validate.message d\u00e9finit le message affich\u00e9 si la validation \u00e9choue validate.type d\u00e9finit le type de champ utilis\u00e9 lors de la validation En savoir plus sur les champs Vous pouvez lire comment les champs sont construits \u00e0 partir de la source : champs ajout\u00e9s par le plug-in de formulaire et champs uniquement disponibles dans Admin . Validation La plupart des champs permettent la validation. 1 | validate: 2 | required: true fera que le champ sera marqu\u00e9 comme requis. 1 | validate: 2 | message: 'Some message' affichera le message d\u00e9fini lorsque le champ n'est pas correctement rempli. 1 | validate: 2 | pattern: 'Some pattern' validera la valeur du champ par rapport au mod\u00e8le regex pass\u00e9. Exemples : Pattern : \"[1-9][0-9]*\", mod\u00e8le : '[A-Za-z0-9-]+', mod\u00e8le : '[a-z0-9-]+', mod\u00e8le : '^[a-z0-9_-]{3,16}$', mod\u00e8le : '(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8 ,}' validate.type validate.type indique le type par rapport auquel il doit \u00eatre valid\u00e9. Quelques exemples: Un \u00e9diteur se traduira par une textarea : 1 | content: 2 | type: editor 3 | validate: 4 | type: textarea Un selectize sera un commalist : 1 | taxonomies: 2 | type: selectize 3 | size: large 4 | label: PLUGIN_ADMIN.TAXONOMY_TYPES 5 | classes: fancy 6 | help: PLUGIN_ADMIN.TAXONOMY_TYPES_HELP 7 | validate: 8 | type: commalist 9 | 10 | filters.category: 11 | type: selectize 12 | label: Category filter 13 | help: Comma separated list of category names 14 | validate: 15 | type: commalist Valider une adresse e-mail : 1 | author.email: 2 | type: text 3 | size: large 4 | label: PLUGIN_ADMIN.DEFAULT_EMAIL 5 | help: PLUGIN_ADMIN.DEFAULT_EMAIL_HELP 6 | validate: 7 | type: email Assurez-vous qu'une valeur est un bool\u00e9en : 1 | summary.enabled: 2 | type: toggle 3 | label: PLUGIN_ADMIN.ENABLED 4 | highlight: 1 5 | help: PLUGIN_ADMIN.ENABLED_HELP 6 | options: 7 | 1: PLUGIN_ADMIN.YES 8 | 0: PLUGIN_ADMIN.NO 9 | validate: 10 | type: bool Assurez-vous qu'une valeur est un entier compris entre 0 et 65536 : 1 | summary.size: 2 | type: text 3 | size: x-small 4 | label: PLUGIN_ADMIN.SUMMARY_SIZE 5 | help: PLUGIN_ADMIN.SUMMARY_SIZE_HELP 6 | validate: 7 | type: int 8 | min: 0 9 | max: 65536 Assurez-vous qu'une valeur est un nombre > 1 : 1 | pages.list.count: 2 | type: text 3 | size: x-small 4 | label: PLUGIN_ADMIN.DEFAULT_PAGE_COUNT 5 | help: PLUGIN_ADMIN.DEFAULT_PAGE_COUNT_HELP 6 | validate: 7 | type: number 8 | min: 1 Validez un type de taxonomie en tant que tableau : 1 | header.taxonomy: 2 | type: taxonomy 3 | label: PLUGIN_ADMIN.TAXONOMY 4 | multiple: true 6 | validate: 7 | type: array Validez un champ de texte en tant que slug : 1 | folder: 2 | type: text 3 | label: PLUGIN_ADMIN.FOLDER_NAME 4 | validate: 5 | type: slug Champ de tableau Le type de champ attay est utilis\u00e9 pour cr\u00e9er une simple liste d'objets cl\u00e9-valeurs, ou simplement une liste de valeurs si vous utilisez l'option value_only . Exemple: 1 | metadata: 2 | type: array 3 | label: PLUGIN_ADMIN.METADATA 4 | help: PLUGIN_ADMIN.METADATA_HELP 5 | placeholder_key: PLUGIN_ADMIN.METADATA_KEY 6 | placeholder_value: PLUGIN_ADMIN.METADATA_VALUE 7 | required: true ATTRIBUT DESCRIPTION placeholder_key placeholder_value value_only N'exige pas ou ne stocke pas de cl\u00e9s de tableau, stocke juste un simple tableau de valeurs. value_type D\u00e9finissez sur textarea pour afficher un champ de zone de texte pour saisir les valeurs du tableau plut\u00f4t que le champ de texte plus petit. ATTRIBUT COMMUN AUTORIS\u00c9 default help label name style toggleable validate.required validate.type Champ de s\u00e9lecteur de couleurs Le type de champ colorpicker est utilis\u00e9 pour afficher un champ color picker Exemple: 1 | color: 2 | type: colorpicker 3 | label: Choose a color 4 | default: '\"FFFFFF' ATTRIBUT COOMUN AUTORIS\u00c9 autocomplete autofocus classes default disabled help id label name placeholder style title toggleable validate.message validate.required validate.type Colonnes / Champs de colonne Les columns et les types de champ column sont utilis\u00e9s pour diviser les champs de formulaire contenus en colonnes Exemple: 1 | columns: 2 | type: columns 3 | fields: 4 | column1: 5 | type: column 6 | fields: 7 | 8 | # .... subfields 9 | 10 | column2: 11 | type: column 12 | fields: 13 | 14 | # .... other subfields ATTRIBUT DESCRIPTION fields Les colonnes / sous-champs de colonne Champ de format de date Le type de champ dateformat est utilis\u00e9 pour Exemple: 1 | pages.dateformat.short: 2 | type: dateformat 3 | size: medium 4 | classes: fancy 5 | label: PLUGIN_ADMIN.SHORT_DATE_FORMAT 6 | help: PLUGIN_ADMIN.SHORT_DATE_FORMAT_HELP 7 | default: \"jS M Y\" 8 | options: 9 | \"F jS \\\\a\\\\t g:ia\": Date1 10 | \"l jS \\\\of F g:i A\": Date2 11 | \"D, d M Y G:i:s\": Date3 12 | \"d-m-y G:i\": Date4 13 | \"jS M Y\": Date5 ATTRIBUT DESCRIPTION options Le champ options de valeur-cl\u00e9 disponibles multiple Bol\u00e9en. Si positif, le champ accepte plusieurs valeurs selectize ATTRIBUT COMMUN AUTORIS\u00c9 autofocus classes default disable help label name novalidate size style toggleable validate.required validate.type Champ de date The datetime field type is used to store and present a date and time field. Example: 1 | header.date: 2 | type: datetime 3 | label: PLUGIN_ADMIN.DATE 4 | toggleable: true 5 | help: PLUGIN_ADMIN.DATE_HELP ATTRIBUT DESCRIPTION format Une valeur de format datetime, vous pouvez utiliser n'importe lequel des formats datetime PHP disponibles . validate.min Une valeur valide minimale. validate.max Une valeur maximale valide. ATTRIBUT COMMUN AUTORIS\u00c9 default help label name size style toggleable alidate.required validate.type Champ de l'\u00e9diteur Le type de champ editor est utilis\u00e9 pour pr\u00e9senter l'\u00e9diteur Codemirror Exemple: 1 | frontmatter: 2 | classes: frontmatter 3 | type: editor 4 | label: PLUGIN_ADMIN.FRONTMATTER 5 | autofocus: true 6 | codemirror: 7 | mode: 'yaml' 8 | indentUnit: 4 9 | autofocus: true 10 | indentWithTabs: false 11 | lineNumbers: true 12 | styleActiveLine: true 13 | gutters: ['CodeMirror-lint-markers'] 14 | lint: true ATTRIBUT DESCRIPTION codemirror Un ensemble de valeurs \u00e0 d\u00e9finir dans l'\u00e9diteur de codemirror . Par d\u00e9faut, utilise le mode : gfm (d\u00e9marquage aromatis\u00e9 github). resizer Si positif, active le resizer. Sinon l'\u00e9diteur est fixe. ATTRIBUT COMMUN AUTORIS\u00c9 default help label name style validate.required validate.type autofocus classes disabled id novalidate placeholder readonly Champ d'\u00e9l\u00e9ments Ce champ est uniquement organisationnel et permet de regrouper des \u00e9l\u00e9ments au sein d'un groupe nomm\u00e9 qui ne sera affich\u00e9 que si la valeur de l'\u00e9l\u00e9ment s\u00e9lectionn\u00e9 correspond au groupe. Exemple: 1 | header.elements-demo.type: 2 | type: elements 3 | label: 'Elements Demo' 4 | size: small 5 | default: gelato 6 | options: 7 | gelato: Gelato Flavors 8 | color: Color 9 | planets: Planets 10 | fields: 11 | gelato: 12 | type: element 13 | fields: 14 | .flavours: 15 | type: array 16 | default: 17 | pistacchio: Pistacchio 18 | vanilla: Vanilla 19 | chocolate: Chocolate 20 | stracciatella: Stracciatella 21 | color: 22 | type: element 23 | fields: 24 | .description: 25 | type: textarea 26 | rows: 10 27 | default: Color (American English) or colour (Commonwealth English) is the | visual perceptual property corresponding in humans to the categories called blue, green, | red, etc. Color derives from the spectrum of light (distribution of light power versus | wavelength) interacting in the eye with the spectral sensitivities of the light receptors. | Color categories and physical specifications of color are also associated with objects | or materials based on their physical properties such as light absorption, reflection, | or emission spectra. By defining a color space colors can be identified numerically by | their coordinates. 28 | planets: 29 | type: element 30 | fields: 31 | .favorites: 32 | type: text 33 | placeholder: What are your favorite planets? 34 | markdown: true 35 | description: 'Find a list of planets from [Wikipedia](https://en.wikipedia | .org/wiki/Planet)' Champ d'ensemble de champs The champs fieldset regroupe un ensemble de champs \u00e0 l'int\u00e9rieur d'une bo\u00eete r\u00e9ductible. Exemple: 1 | header.fieldset: 2 | type: fieldset 3 | title: Your title 4 | help: Help text 5 | info: Info text 6 | text: Text inside fieldset and before other fields 7 | icon: comments # Fork Awesome icons system (see : forkaweso.me). 8 | collapsed: true # Initial state of fieldset (see collapsible option) 9 | collapsible: true # Whether one can expand the fieldset or not 10 | fields: 11 | header.fieldset.an_example_text: 12 | type: text 13 | label: text 14 | header.fieldset.an_example_textarea: 15 | type: textarea 16 | label: textarea Les ensembles de champs doivent \u00e9galement \u00eatre enregistr\u00e9s dans le frontmatter, avec header , afin que leurs \u00e9tats de sous-champ soient correctement m\u00e9moris\u00e9s ! Probl\u00e8me connu : si les champs d'un fieldset utilisent un toggleable :, leur \u00e9tat ne sera pas m\u00e9moris\u00e9 si le fieldset nomm\u00e9 n'est pas pr\u00e9fix\u00e9 par header . Voici un exemple de structure valide avec une modification de l'option pagination : 1 | header.fieldset: 2 | type: fieldset 3 | ... etc... 4 | fields: 5 | header.content.pagination: 6 | type: toggle 7 | toggleable: true 8 | label: \"Activate Pagination ?\" 9 | highlight: 1 10 | default: 0 11 | options: 12 | 1: Yes 13 | 0: No 14 | validate: 15 | type: bool Ic\u00f4ne du jeu de champs Vous pouvez utiliser une ic\u00f4ne \u00e0 placer dans l'en-t\u00eate de l'ensemble de champs. Le syst\u00e8me d'ic\u00f4nes utilis\u00e9 est Fork Awesome . ATTRIBUT DESCRIPTION icon Une ic\u00f4ne pour la bo\u00eete. collapsed Si true , la liste s'ouvre r\u00e9duite. Par d\u00e9faut, il est d\u00e9velopp\u00e9. collapsible Si l'on peut \u00e9tendre ou non le jeu de champs. ATTRIBUT COMMUN AUTORIS\u00c9 disabled help label name size style toggleable Champ de fichier Le champ field est destin\u00e9 \u00e0 \u00eatre utilis\u00e9 par les plans de configuration de th\u00e8me et de plugins , PAS les plans de page . Pour les pages, vous devez utiliser le champ pagemedia existant, puis utiliser le champ filepicker pour s\u00e9lectionner les fichiers. Le champ field ne fonctionne pas actuellement comme pr\u00e9vu dans un champ de liste. Utilisez un seul champ pagemedia distinct de la liste avec un ou plusieurs champs filepicker dans la liste. Plus de d\u00e9tails peuvent \u00eatre trouv\u00e9s dans la section d\u00e9di\u00e9e Comment ajouter un t\u00e9l\u00e9chargement de fichiers . Notez \u00e9galement que l'affichage d'une image t\u00e9l\u00e9charg\u00e9e dans un champ de fichier ne se fait pas de la m\u00eame mani\u00e8re qu'avec un champ filepicker. Plus de d\u00e9tails sur la fa\u00e7on d'acc\u00e9der aux images t\u00e9l\u00e9charg\u00e9es dans un champ de fichier peuvent \u00eatre trouv\u00e9s sur cette entr\u00e9e de livre de recettes . Exemple: 1 | custom_logo_login_screen: 2 | type: file 3 | label: Custom Logo Login Screen 4 | destination: 'plugins://admin/assets' 5 | accept: 6 | - image/* 1 | custom_file: 2 | type: file 3 | label: A Label 4 | destination: 'theme://assets' 5 | multiple: true 6 | limit: 5 7 | filesize: 1 8 | accept: 9 | - image/* ATTRIBUT DESCRIPTION destination Le dossier o\u00f9 les fichiers seront stock\u00e9s, en utilisant un flux ou par rapport \u00e0 la racine Grav. Par exemple : plugins://mon-plugin/assets . multiple S'il faut ou non autoriser plus d'un fichier par champ. limit Lorsque multiple est activ\u00e9, permet de limiter le nombre de fichiers autoris\u00e9s \u00e0 \u00eatre t\u00e9l\u00e9charg\u00e9s. filesize La taille en Mo de chaque fichier est autoris\u00e9e. accept Ajouter une liste des types mime de page et des extensions accept\u00e9s. Par exemple [\"image/*\", '.mp3'] . random_name Utilise un nom de fichier al\u00e9atoire pour chaque fichier. avoid_overwriting Ajoute un horodatage avant chaque nom de fichier en cas de conflit. ATTRIBUT COMMUN AUTORIS\u00c9 default disabled help label name size style toggleable validate.required validate.type Champ de s\u00e9lecteur de fichiers Le type de champ filepicker peut \u00eatre utilis\u00e9 dans les configurations de pages, de plugins et de th\u00e8mes (blueprints). G\u00e8re la s\u00e9lection d'un fichier \u00e0 partir d'un emplacement et l'enregistre dans les en-t\u00eates de page ou la configuration du th\u00e8me/plug-in. Exemple: 1 | picked_image: 2 | type: filepicker 3 | folder: 'theme://images/pages' 4 | label: Select a file 5 | preview_images: true 6 | accept: 7 | - .png 8 | - .jpg 1 | header.a_file : 2 | type : s\u00e9lecteur de fichiers 3 | dossier : 'self@' 4 | preview_images : vrai 5 | label : s\u00e9lectionnez un fichier ATTRIBUT DESCRIPTION folder Le dossier o\u00f9 les fichiers seront recherch\u00e9s, en utilisant un flux ou par rapport \u00e0 la racine Grav. Accepte n'importe quelle valeur dans le format de destination du champ de fichier . accept Une liste des extensions de fichiers accept\u00e9es. preview_images Si activ\u00e9, les fichiers image auront un petit aper\u00e7u. on_demand Si activ\u00e9, ne chargera les fichiers et les images que lorsque le s\u00e9lecteur de fichiers est focalis\u00e9. Ceci est utile pour r\u00e9duire les temps de chargement de la page d'\u00e9dition de l'administrateur lorsqu'il y a de gros m\u00e9dias ou de nombreux champs de s\u00e9lecteur de fichiers. ATTRIBUT COMMUN AUTORIS\u00c9 default disabled help label name size style toggleable validate.required Champ de pot de miel Le type de champ honeypot cr\u00e9e un champ cach\u00e9 qui, une fois rempli, renverra une erreur. C'est un moyen utile d'emp\u00eacher les robots de remplir et de soumettre un formulaire. Exemple: 1 | fields: 2 | - name: honeypot 3 | type: honeypot Il s'agit d'un simple champ de texte qui n'appara\u00eet pas sur le front-end. Les robots, qui d\u00e9tectent les champs dans le code et les remplissent automatiquement, rempliront probablement le champ. L'erreur emp\u00eache ce formulaire d'\u00eatre correctement soumis. L'erreur revient \u00e0 c\u00f4t\u00e9 de l'\u00e9l\u00e9ment de formulaire, plut\u00f4t qu'en haut dans un bloc de message. Un champ de pot de miel est une alternative populaire aux champs de captcha. Champ de liste Champ de liste Le type de champ list est utilis\u00e9 pour cr\u00e9er des collections de champs. Le champ accepte un attribut de fields qui h\u00e9bergera des sous-champs, et il y aura un bouton \"Ajouter un \u00e9l\u00e9ment\" pour permettre \u00e0 l'utilisateur d'ajouter plus d'\u00e9l\u00e9ments \u00e0 la collection. Exemple: 1 | header.buttons: 2 | name: buttons 3 | type: list 4 | style: vertical 5 | label: Buttons 6 | fields: 7 | .text: 8 | type: text 9 | label: Text 10 | .url: 11 | type: text 12 | label: URL 13 | .primary: 14 | type: toggle 15 | label: Primary 16 | highlight: 1 17 | default: 1 18 | options: 19 | 1: 'Yes' 20 | 0: 'No' 21 | validate: 22 | type: bool Cet exemple g\u00e9n\u00e9rera cette interface d'administration : Lors de l'enregistrement de la page, nous verrons le YAML suivant ajout\u00e9 au frontmatter de la page : 1 | buttons: 2 | - 3 | text: 'Some text' 4 | url: 'https://getgrav.org' 5 | primary: false 6 | - 7 | text: 'Another text' 8 | url: 'https://another-url.com' 9 | primary: true Cela sera utilis\u00e9 dans le th\u00e8me Twig pour afficher la liste d'une mani\u00e8re agr\u00e9able. Un autre exemple de cette d\u00e9finition de champ est cette liste de fonctionnalit\u00e9s, utilis\u00e9e par la page enfant modulaire des fonctionnalit\u00e9s d'Antimati\u00e8re. Chaque fonctionnalit\u00e9 a une ic\u00f4ne, un en-t\u00eate et du texte : 1 | header.features: 2 | name: features 3 | type: list 4 | label: Features 5 | 6 | fields: 7 | .icon: 8 | type: text 9 | label: Icon 10 | .header: 11 | type: text 12 | label: Header 13 | .text: 14 | type: text 15 | label: Text L'acc\u00e8s et l'affichage des donn\u00e9es d'un champ list se fait avec une simple boucle for twig, comme dans l'exemple ci-dessous : 1 | {% for feature in page.header.features %} 2 | {{ feature.icon }} 3 | {{ feature.header }} 4 | {{ feature.text }} 5 | {% endfor %} ATTRIBUT DESCRIPTION fields Les sous-champs. collapsed Si true , la liste s'ouvre r\u00e9duite. Par d\u00e9faut, il est d\u00e9velopp\u00e9. style Peut \u00eatre r\u00e9gl\u00e9 sur vertical pour conserver l'espace horizontal. btnLabel Le texte de l'\u00e9tiquette \"ajouter un nouvel \u00e9l\u00e9ment\". sort Bool\u00e9en. Si n\u00e9gatif, d\u00e9sactive la possibilit\u00e9 de trier les \u00e9l\u00e9ments. controls D\u00e9cide o\u00f9 le bouton \"Ajouter un \u00e9l\u00e9ment\" sera plac\u00e9. Peut \u00eatre d\u00e9fini sur [top|bottom|both] . Par d\u00e9faut sur bottom . placement D\u00e9cide o\u00f9 l'\u00e9l\u00e9ment ajout\u00e9 sera plac\u00e9. Peut \u00eatre d\u00e9fini sur [top|bottom|position] . Par d\u00e9faut sur bottom . Si la valeur de placement est top ou bottom , les deux boutons ajoutent respectivement l'\u00e9l\u00e9ment en haut ou en bas. Si la valeur de placement est position , l'\u00e9l\u00e9ment est ajout\u00e9 en fonction de la position du bouton cliqu\u00e9 - si le bouton du haut est cliqu\u00e9, l'\u00e9l\u00e9ment sera ajout\u00e9 en haut et si c'est le bouton du bas - en bas. min Nombre minimum d'\u00e9l\u00e9ments autoris\u00e9s dans la liste. max Nombre maximum d'\u00e9l\u00e9ments autoris\u00e9s dans la liste. Le bouton \"Ajouter un \u00e9l\u00e9ment\" ne fonctionnera pas au-del\u00e0 de ce num\u00e9ro. ATTRIBUT COMMUN AUTORIS\u00c9 default help label name validate.required validate.type size Champ PageMediaSelect Le type de champ pagemediaselect est utilis\u00e9 pour permettre aux utilisateurs de choisir un m\u00e9dia parmi l'un des m\u00e9dias de la page d\u00e9j\u00e0 t\u00e9l\u00e9charg\u00e9 via FTP ou \u00e0 l'aide du gestionnaire de m\u00e9dias de la page. Exemple 1 | header.img_link: 2 | label: Choose media 3 | type: pagemediaselect ATTRIBUT DESCRIPTION multiple S\u00e9lectionnez plusieurs fichiers ATTRIBUT COMMUN AUTORIS\u00c9 default help label name style toggleable validate.required autofocus classes disabled id novalidate size Champ Pages Le type de champ pages affiche une liste des pages du site. Exemple 1 | home.alias: 2 | type: pages 3 | size: medium 4 | classes: fancy 5 | label: PLUGIN_ADMIN.HOME_PAGE 6 | start_route: '/some_page' 7 | show_all: false 8 | show_modular: false 9 | show_root: false 10 | help: PLUGIN_ADMIN.HOME_PAGE_HELP ATTRIBUT DESCRIPTION start_route Choisissez une route racine pour la liste. show_fullpath Afficher le chemin de la page au lieu du titre. show_slug Afficher le slug. show_all Affiche toutes les pages. show_modular Affiche les pages modulaires. show_root Affiche la page racine. options Une liste facultative de choix suppl\u00e9mentaires. multiple S\u00e9lectionnez plusieurs pages. limit_levels Combien de niveaux afficher. selectize Si vous d\u00e9finissez multiple sur true, vous devez ajouter validate.type: array . Sinon, le tableau des pages s\u00e9lectionn\u00e9es ne sera pas enregistr\u00e9 correctement. ATTRIBUT COMMUN AUTORIS\u00c9 default help label name style toggleable validate.required validate.type autofocus classes disabled novalidate size Champ de section Le type de champ Section est utilis\u00e9 pour diviser une page de param\u00e8tres en sections. Exemple: 1 | content: 2 | type: section 3 | title: PLUGIN_ADMIN.DEFAULTS 4 | underline: true 5 | 6 | fields: 7 | 8 | #..... subfields ATTRIBUT DESCRIPTION title Un titre de rubrique. underline Ajouter un soulignement apr\u00e8s le titre. text Un texte \u00e0 afficher en dessous. security Un tableau d'informations d'identification dont un utilisateur a besoin pour visualiser cette section. title_level D\u00e9finissez une balise de titre personnalis\u00e9e. Par d\u00e9faut : h3. Champ de s\u00e9lection Le type de champ selectize est utilis\u00e9 pour afficher un hybride d'une zone de texte et d'une zone de s\u00e9lection. Principalement utile pour le balisage et d'autres champs de s\u00e9lection d'\u00e9l\u00e9ments. Exemple: 1 | taxonomies: 2 | type: selectize 3 | selectize: 4 | options: 5 | - text: \"test\" 6 | value: \"real value 1\" 7 | - text: \"test-2\" 8 | value: \"real value 2\" 9 | - text: \"test-3\" 10 | value: \"real value 3\" 11 | size: large 12 | label: PLUGIN_ADMIN.TAXONOMY_TYPES 13 | classes: fancy 14 | help: PLUGIN_ADMIN.TAXONOMY_TYPES_HELP 15 | validate: 16 | type: commalist ATTRIBUT COMMUN AUTORIS\u00c9 default help label name style toggleable validate.required validate.type Attribut communs DANS LE BLOC D'ENTR\u00c9E autocomplete autofocus classes disabled id placeholder readonly size title validate.pattern validate.message Champ de taxonomie Le type de champ taxonomy est une s\u00e9lection sp\u00e9ciale pr\u00e9configur\u00e9e pour s\u00e9lectionner une ou plusieurs valeurs de taxonomie. Exemple: 1 | header.taxonomy: 2 | type: taxonomy 3 | label: PLUGIN_ADMIN.TAXONOMY 4 | multiple: true 5 | validate: 6 | type: array ATTRIBUT DESCRIPTION multiple Bol\u00e9en. Si positif, le champ accepte plusieurs valeurs. ATTRIBUT COMMUN AUTORIS\u00c9 autofocus classes default disabled help id label name novalidate outerclasses size style validate.required validate.pattern validate.message","title":"R\u00e9f\u00e9rence - Champs de formulaire Blueprint"},{"location":"formulaires-telechargement/","text":"Comment ajouter un t\u00e9l\u00e9chargement de fichier T\u00e9l\u00e9chargements de fichiers Vous pouvez ajouter une fonctionnalit\u00e9 de t\u00e9l\u00e9chargement de fichiers dans les plans Pages, Config, Plugins et Th\u00e8mes. Les t\u00e9l\u00e9chargements de fichiers sont toujours bas\u00e9s sur Ajax et permettent le glisser-d\u00e9poser depuis le bureau ou de les s\u00e9lectionner en tant que champs de fichiers normaux. Chaque fois qu'un fichier est ajout\u00e9 au champ, il est automatiquement t\u00e9l\u00e9charg\u00e9 dans un dossier temporaire et ne sera stock\u00e9 que lorsque l'action Enregistrer (ou Soumettre) aura lieu. Exemple d'utilisation : 1 | custom_file: 2 | name: myfile 3 | type: file 4 | label: A Label 5 | destination: 'plugins://my-plugin/assets' 6 | multiple: true 7 | autofocus: false 8 | accept: 9 | - image/* Afin d'ajouter un t\u00e9l\u00e9chargement de fichier, vous devez avoir une commande de rendu javascript en bas dans votre mod\u00e8le Twig de base. {{ assets.js('bottom') }} Options Un champ de fichier a plusieurs options disponibles, du type ou de l'extension MIME accept\u00e9 \u00e0 la taille de fichier autoris\u00e9e : Valeurs par d\u00e9faut 1 | custom_file: 2 | type: file 3 | label: A Label 4 | multiple: false 5 | destination: 'self@' 6 | random_name: false 7 | avoid_overwriting: false 8 | limit: 10 9 | accept: 10 | - image/* multiple multiple: false # [false | true] Comme un champ de fichier HTML5 normal, lorsque l'option multiple est activ\u00e9e, elle permet de t\u00e9l\u00e9charger plus d'un seul fichier. Ce param\u00e8tre est \u00e9galement li\u00e9 \u00e0 l'option limit , qui d\u00e9termine le nombre de fichiers multiples autoris\u00e9s pour le champ. destination destination: 'self@' # [<path> | <stream> | self@ | page@:<path>] La destination est l'emplacement o\u00f9 les fichiers t\u00e9l\u00e9charg\u00e9s doivent \u00eatre stock\u00e9s. Cela peut \u00eatre soit un path normal (relatif \u00e0 la racine de Grav), un stream (tel que theme://images ), self@ ou le pr\u00e9fixe sp\u00e9cial page@: . self@ n'est pas autoris\u00e9 en dehors de la port\u00e9e Pages ou Flex Objects, une erreur sera renvoy\u00e9e. Si vous utilisez un champ de fichier en dehors d'une page ou d'un objet Flex, vous devez toujours modifier le param\u00e8tre de destination . Exemples Si vous souhaitez t\u00e9l\u00e9charger des fichiers dans un dossier testing de plug-in ( user/plugins/testing ), la destination serait : destination : 'plugins://testing' En supposant que nous ayons un article de blog sur la route /blog/ajax-upload (l'emplacement physique \u00e9tant user/pages/02.blog/ajax-upload ), avec le pr\u00e9fixe page@ : la destination serait : destination : 'page@:/blog/ajax-upload' En supposant que le th\u00e8me actuel est antimatter et que nous voulons t\u00e9l\u00e9charger dans le dossier assets (l'emplacement physique \u00e9tant user/themes/antimatter/assets ), avec le flux de th\u00e8me, la destination serait : destination : 'theme://assets' random_name random_name: false # [false | true] Lorsque le random_name est activ\u00e9, le fichier t\u00e9l\u00e9charg\u00e9 sera renomm\u00e9 avec une cha\u00eene al\u00e9atoire de 15 caract\u00e8res. Ceci est utile si vous souhaitez hacher vos fichiers t\u00e9l\u00e9charg\u00e9s ou si vous cherchez un moyen de r\u00e9duire les collisions de noms. Exemple 'my_file.jpg' => 'y5bqsGmE1plNTF2.jpg' avoid_overwritting avoid_overwriting: false # [false | true] Lorsque avoid_overwritting est activ\u00e9 et qu'un fichier portant le m\u00eame nom que celui t\u00e9l\u00e9charg\u00e9 existe d\u00e9j\u00e0 dans la destination , il sera renomm\u00e9. Le fichier nouvellement t\u00e9l\u00e9charg\u00e9 sera pr\u00e9c\u00e9d\u00e9 de la date et de l'heure actuelles, concat\u00e9n\u00e9es par un tiret. Exemple 'my_file.jpg' => '20160901130509-my_file.jpg' limit limit: 10 # [1...X | 0 (unlimited)] Lorsque le param\u00e8tre multiple est activ\u00e9, limit permet de restreindre le nombre de fichiers autoris\u00e9s pour un champ individuel. Si multipl e n'est pas activ\u00e9 (non activ\u00e9 par d\u00e9faut), limit retombe automatiquement \u00e0 1 . Lorsque la limite est d\u00e9finie sur 0 , cela signifie qu'il n'y a aucune restriction sur le nombre de fichiers autoris\u00e9s pouvant \u00eatre t\u00e9l\u00e9charg\u00e9s. Il est recommand\u00e9 de toujours s'assurer que vous disposez d'une limite d\u00e9finie de fichiers autoris\u00e9s pouvant \u00eatre t\u00e9l\u00e9charg\u00e9s. De cette fa\u00e7on, vous avez plus de contr\u00f4le sur l'utilisation des ressources de votre serveur. accept 1 | accept: 2 | - 'image/*' # Array of MIME types and/or extensions. ['*'] for allowing any file. . Le param\u00e8tre accept autorise un tableau de type MIME ainsi que des d\u00e9finitions d'extensions. Toutes les extensions doivent commencer par . (point) plus l'extension elle-m\u00eame. De plus, vous pouvez \u00e9galement autoriser n'importe quel fichier en utilisant simplement la notation * (\u00e9toile) accep : ['*'] . Exemple 1.Pour autoriser uniquement les fichiers yaml et json : 1 | accept: 2 | - .yaml 3 | - .json 2.Pour autoriser uniquement les images et les vid\u00e9os : 1 | accept: 2 | - 'image/*' 3 | - 'video/*' 3.Pour autoriser n'importe quelle image, n'importe quelle vid\u00e9o et uniquement les fichiers mp3 : 1 | accept: 2 | - 'image/*' 3 | - 'video/*' 4 | - .mp3 4.Pour autoriser n'importe quel fichier : 1 | accept: 2 | - '*' filesize La taille maximale du fichier est limit\u00e9e par : filesize au niveau du champ :, puis ... Fichiers de configuration au niveau du plug-in de formulaire user/plugins/form.yaml : files: filesize: , alors si aucun de ceux-ci n'est limitatif... Configuration du niveau PHP pour upload_max_filesize pour les fichiers individuels qui sont t\u00e9l\u00e9charg\u00e9s, et post_max_size pour la taille maximale de la publication du formulaire. Exemple 1.Pour limiter un champ sp\u00e9cifique \u00e0 5M 1 | custom_file: 2 | name: myfile 3 | type: file 4 | label: A Label 5 | destination: 'plugins://my-plugin/assets' 6 | filesize: 5 7 | accept: 8 | - image/* 2.Pour limiter tous les champs de fichier \u00e0 5 Mo , modifiez votre fichier user/config/form.yaml : 1 | files: 2 | multiple: false 3 | limit: 10 4 | destination: 'self@' 5 | avoid_overwriting: false 6 | random_name: false 7 | filesize: 5 8 | accept: 9 | - 'image/*","title":"Comment ajouter un t\u00e9l\u00e9chargement de fichier"},{"location":"groupe-utilisateur/","text":"Groupes d'utilisateurs Liste de groupe Les User Groups d\u00e9finissent des r\u00f4les communs pour les utilisateurs. C'est le moyen pr\u00e9f\u00e9r\u00e9 de d\u00e9finir des autorisations pour les utilisateurs, car la gestion des r\u00f4les est plus facile que de modifier les r\u00e8gles individuellement pour chaque user account . Apr\u00e8s avoir cr\u00e9\u00e9 un groupe d'utilisateurs, vous pouvez l'affecter \u00e0 des comptes d'utilisateurs \u00e0 partir de l'onglet Acc\u00e8s . Groupe d'utilisateurs Modifier le groupe OPTION DESCRIPTION Group Name Le nom du groupe est l'identifiant du groupe. Il ne peut pas \u00eatre modifi\u00e9 apr\u00e8s la cr\u00e9ation du groupe. Display Name Le nom d'affichage est le nom visible du groupe. Description Icon Enabled Si d\u00e9fini sur Yes , le groupe a \u00e9t\u00e9 activ\u00e9 sur votre site. Si No , les autorisations d\u00e9finies par le groupe ne s'appliquent pas. Permissions Liste de toutes les autorisations de votre site. Voir ci-dessous . Autorisations Les administrateurs trouveront la zone des autorisations particuli\u00e8rement utile. C'est ici que vous pouvez configurer exactement ce \u00e0 quoi un utilisateur pourra acc\u00e9der et faire au sein de l'administrateur. Voici une ventilation rapide des options d'autorisations et de ce qu'elles permettent \u00e0 quelqu'un de faire. Site Autorisations du site OPTION VALEUR DESCRIPTION Login to Site site.login Permet \u00e0 l'utilisateur de se connecter au frontal. Administrateur Autorisations d'administration OPTION VALEUR DESCRIPTION Login to Admin admin.login Permet \u00e0 l'utilisateur de se connecter \u00e0 l'administrateur. Il doit \u00eatre d\u00e9fini sur Yes pour permettre \u00e0 l'utilisateur de se connecter. Super User admin.super D\u00e9signe l'utilisateur en tant que super administrateur, lui donnant la possibilit\u00e9 de voir et de configurer toutes les zones du site. Clear Cach admin.cache Permet \u00e0 l'utilisateur d'acc\u00e9der aux boutons de r\u00e9initialisation du cache. Configuration admin.configuration Donne \u00e0 l'utilisateur l'acc\u00e8s \u00e0 la zone de Configuration de l'administration. \u293f Manage System Configuration admin.configuration.system Donne \u00e0 l'utilisateur l'acc\u00e8s \u00e0 l'onglet Systeme dans la zone Configuration de l'administration. \u293f Manage Site Configuration admin.configuration.site Donne \u00e0 l'utilisateur l'acc\u00e8s \u00e0 l'onglet Sit dans la zone Configuration de l'administration. \u293f Manage Media Configuration a dmin.configuration.media Donne \u00e0 l'utilisateur l'acc\u00e8s \u00e0 l'onglet Media dans la zone Configuration de l'administration. \u293f See Server Information admin.configuration.info Donne \u00e0 l'utilisateur l'acc\u00e8s \u00e0 l'onglet Info dans la zone Configuration de l'administration. \u293f Pages Configuration dmin.configuration.pages Donne \u00e0 l'utilisateur l'acc\u00e8s \u00e0 la configuration des pages trouv\u00e9e dans la zone Pages de l'administration. \u293f Accounts Configuration admin.configuration.accounts Donne \u00e0 l'utilisateur l'acc\u00e8s \u00e0 la * configuration des comptes qui se trouvent dans la zone Comptes de l'administration. Pages admin.pages Donne \u00e0 l'utilisateur un acc\u00e8s complet \u00e0 la zone Pages de l'administration. Site Maintenance admin.maintenance Permet \u00e0 l'utilisateur d'acc\u00e9der \u00e0 la zone Maintenance du tableau de bord . Site Statistics admin.statistics Permet \u00e0 l'utilisateur d'acc\u00e9der \u00e0 la zone Statistiques du tableau de bord . Manage Plugins admin.plugins Donne \u00e0 l'utilisateur l'acc\u00e8s \u00e0 la zone Plugins de l'administration. Manage Themes admin.themes Donne \u00e0 l'utilisateur l'acc\u00e8s \u00e0 la zone Th\u00e8mes de l'administration. Access to Tools admin.tools Acc\u00e8s aux outils d'administration. User Accounts admin.accounts Donne \u00e0 l'utilisateur un acc\u00e8s complet \u00e0 la zone Comptes de l'administration.","title":"Groupe d'utilisateurs"},{"location":"installation/","text":"Installation L'installation de Grav est un processus trivial. En fait, il n'y a pas vraiment d'installation. Vous avez plusieurs options pour installer Grav. La premi\u00e8re - et la plus simple - consiste \u00e0 t\u00e9l\u00e9charger l'archive zip et \u00e0 l'extraire. La deuxi\u00e8me m\u00e9thode consiste \u00e0 installer avec Composer . La troisi\u00e8me m\u00e9thode consiste \u00e0 cloner le projet source directement \u00e0 partir de GitHub , puis \u00e0 ex\u00e9cuter une commande de script incluse pour installer les d\u00e9pendances n\u00e9cessaires. Il existe d'autres fa\u00e7ons d'ex\u00e9cuter des scripts group\u00e9s. V\u00e9rifier la version PHP Grav est incroyablement facile \u00e0 installer et \u00e0 faire fonctionner. Assurez-vous d'avoir au moins la version PHP 7.3.6+ en allant sur le terminal et en tapant php -v : $ | php-v | PHP 7.3.18 (cli) (built : Jun 5 2020 11:06:30) ( NTS ) | Copyright (c) 1997-2018 The PHP Group | Zend Engine v3.3.18, Copyright (c) 1998-2018 Zend Technologies | with Zend OPcache v7.3.18, Copyright (c) 1999-2018, by Zend Technologies Option 1 : Installer \u00e0 partir du package ZIP Le moyen le plus simple d'installer Grav est de t\u00e9l\u00e9charger le package ZIP et de l'extraire : T\u00e9l\u00e9chargez le dernier package Grav ou Grav + Admin . Extrayez le fichier ZIP dans le webroot de votre serveur Web, par ex. ~/webroot/grav Il existe des packages Skeleton disponibles, qui incluent le syst\u00e8me principal Grav, des exemples de pages, des plugins et la configuration. Ils sont un excellent moyen de commencer; tout ce que vous avez \u00e0 faire est de t\u00e9l\u00e9charger le Skeleton que vous pr\u00e9f\u00e9rez et de suivre les \u00e9tapes ci-dessus. Vous pouvez \u00e9galement t\u00e9l\u00e9charger n'importe quelle installation pr\u00e9-emball\u00e9e d'une version \u00e9tiquet\u00e9e \u00e0 partir de getgrav.org. Utilisez le format https://getgrav.org/download/TYPE/PACKAGE/VERSION. getgrav.org/download/core/grav/1.7.0 t\u00e9l\u00e9chargements Grav Core v1.7.0 getgrav.org/download/core/grav/1.7.0-rc.10?testing=true t\u00e9l\u00e9charge Grav Core v1.7.0-rc.10, une version de test getgrav.org/download/core/grav-admin/1.7.0 t\u00e9l\u00e9charge Grav Core avec le plugin Admin, \u00e0 Core v1.7.0 getgrav.org/download/core/grav-admin/1.7.0-rc.10?testing=true t\u00e9l\u00e9charge Grav Core v1.7.0-rc.10 avec le plugin Admin, une version de test getgrav.org/download/core/grav-update/1.7.0 t\u00e9l\u00e9charge le package de mise \u00e0 jour pour Grav Core getgrav.org/download/plugins/flex-objects-json/0.1.0 t\u00e9l\u00e9charge le plugin Flex Objects JSON \u00e0 v0.1.0 getgrav.org/download/themes/quark/2.0.3 t\u00e9l\u00e9charge le th\u00e8me Quark en v2.0.3 Si vous avez t\u00e9l\u00e9charg\u00e9 le fichier ZIP et que vous pr\u00e9voyez ensuite de le d\u00e9placer vers votre racine Web, veuillez d\u00e9placer le DOSSIER ENTIER car il contient plusieurs fichiers cach\u00e9s (tels que .htaccess) qui ne seront pas s\u00e9lectionn\u00e9s par d\u00e9faut. L'omission de ces fichiers cach\u00e9s peut causer des probl\u00e8mes lors de l'ex\u00e9cution de Grav. Option 2 : Installer avec Composer La m\u00e9thode alternative consiste \u00e0 installer Grav avec composer : $ | composer create-project getgrav/grav ~/webroot/grav Si vous souhaitez d\u00e9couvrir la version \u00e0 la pointe de la technologie de Grav, ajoutez 1.x-dev comme param\u00e8tre suppl\u00e9mentaire : $ | composer create-project getgrav/grav ~/webroot/grav 1.x-dev Installer depuis GitHub Une autre m\u00e9thode consiste \u00e0 cloner Grav \u00e0 partir du r\u00e9f\u00e9rentiel GitHub, puis \u00e0 ex\u00e9cuter un simple script d'installation de d\u00e9pendance : Clonez le r\u00e9f\u00e9rentiel Grav de GitHub dans un dossier de la racine Web de votre serveur, par ex. ~/webroot/grav . Lancez un terminal ou une console et acc\u00e9dez au dossier Webroot : $ | cd ~/webroot $ | git clone -b master https://github.com/getgrav/grav.git Installez les d\u00e9pendances du fournisseur via composer : $ | cd ~/webroot/grav $ | composer install --no-dev -o Installez les d\u00e9pendances du plugin et du th\u00e8me en utilisant l'application Grav CLI bin/grav $ | cd ~/webroot/grav $ | bin/grav install Cela clonera automatiquement les d\u00e9pendances requises de GitHub directement dans cette installation Grav. Options suppl\u00e9mentaires Installer avec Docker Docker est un moyen extr\u00eamement efficace de d\u00e9marrer des platesformes et des services sur les serveurs et les environnements locaux. Si vous configurez plusieurs environnements qui doivent \u00eatre identiques ou si vous travaillez en collaboration, il offre un moyen simple d'assurer la coh\u00e9rence entre les installations. Si vous d\u00e9veloppez plusieurs sites Grav, vous pouvez rationaliser leur configuration \u00e0 l'aide de Docker. Des images Docker stables sont disponibles qui utilisent les serveurs Web Apache (l'image officielle), Nginx et Caddy . Si vous recherchez, vous trouverez plus que vous pouvez essayer. Avec n'importe quelle image, assurez-vous de cr\u00e9er des volumes pour conserver les dossiers user , backups et logs de Grav. (Les sauvegardes et les journaux sont facultatifs si vous n'avez pas besoin de conserver ces donn\u00e9es.) Installer sur Cloudron Cloudron est une solution compl\u00e8te pour ex\u00e9cuter des applications sur votre serveur et les maintenir \u00e0 jour et s\u00e9curis\u00e9es. Sur votre Cloudron, vous pouvez installer Grav en quelques clics. Si vous h\u00e9bergez plusieurs sites, vous pouvez les installer compl\u00e8tement isol\u00e9s les uns des autres sur le m\u00eame serveur. Le code source du paquet peut \u00eatre trouv\u00e9 ici . Installer via Linode Marketplace Si vous utilisez des serveurs Linode, il existe une m\u00e9thode simple et document\u00e9e utilisant Linode Marketplace . Cela mettra en place un nouveau site Grav sur un nouveau serveur virtuel Linode d\u00e9di\u00e9. Le serveur virtuel encourra des frais p\u00e9riodiques. Serveurs Web Apache/IIS/Nginx Utiliser Grav avec un serveur Web tel qu'Apache, IIS ou Nginx est aussi simple que d'extraire Grav dans un dossier sous webroot . Tout ce dont il a besoin pour fonctionner est PHP 7.3.6 ou sup\u00e9rieur, vous devez donc vous assurer que votre instance de serveur r\u00e9pond \u00e0 cette exigence. Vous trouverez plus d'informations sur les pr\u00e9requis de Grav dans le chapitre des pr\u00e9requis de ce guide. Si votre webroot est, par exemple, ~/public_html , vous pouvez l'extraire dans ce dossier et y acc\u00e9der via http://localhost . Si vous l'avez extrait dans ~/public_html/grav , vous y acc\u00e9derez via http://localhost/grav . Chaque serveur Web doit \u00eatre configur\u00e9. Grav est livr\u00e9 avec .htaccess par d\u00e9faut, pour Apache, et est livr\u00e9 avec certains fichiers de configuration de serveur par d\u00e9faut , pour nginx , caddy server , iis et lighttpd . Utilisez-les en cons\u00e9quence si n\u00e9cessaire. Ex\u00e9cuter Grav avec le serveur Web PHP int\u00e9gr\u00e9 Vous pouvez ex\u00e9cuter Grav \u00e0 l'aide d'une simple commande depuis Terminal / Invite de commandes en utilisant le serveur PHP int\u00e9gr\u00e9 disponible tant que PHP est install\u00e9. Tout ce que vous avez \u00e0 faire est d'acc\u00e9der \u00e0 la racine de votre installation Grav \u00e0 l'aide du terminal ou de l'invite de commande et de taper bin/grav server . Bien que techniquement tout ce dont vous avez besoin est PHP install\u00e9, si vous installez l'application Symfony CLI , le serveur fournira un certificat SSL afin que vous puissiez utiliser https:// et utiliser PHP-FPM pour de meilleures performances. La saisie de cette commande vous pr\u00e9sentera une sortie semblable \u00e0 la suivante : $ | bin/grav server | | Grav Web Server | =============== | |Tailing Web Server log file (/Users/joeblow/.symfony/log/ 96e710135f52930318e745e901e4010d0907cec3.log) | Tailing PHP-FPM log file (/Users/joeblow/.symfony/log/96e710135f52930318e745e901e4010d0907cec3/53fb8ec204547646acb3461995e4da5a54cc7575.log) | Tailing PHP-FPM log file (/Users/joeblow/.symfony/log/96e710135f52930318e745e901e4010d0907cec3/53fb8ec204547646acb3461995e4da5a54cc7575.log) | | [OK] Web server listening | The Web server is using PHP FPM 8.0.8 | https://127.0.0.1:8000 | | [Web Server ] Jul 30 14:54:53 |DEBUG | PHP Reloading PHP versions | [Web Server ] Jul 30 14:54:54 |DEBUG | PHP Using PHP version 8.0.8 (from default version in $PATH) | [PHP-FPM ] Jul 6 14:40:17 |NOTICE | FPM fpm is running, pid 64992 | [PHP-FPM ] Jul 6 14:40:17 |NOTICE | FPM ready to handle connections | [PHP-FPM ] Jul 6 14:40:17 |NOTICE | FPM fpm is running, pid 64992 | [PHP-FPM ] Jul 6 14:40:17 |NOTICE | FPM ready to handle connections | [Web Server ] Jul 30 14:54:54 |INFO | PHP listening path=\"/usr/local/Cellar/php/8.0.8_2/sbin/php-fpm\" php=\"8.0.8\" port=65140 | [PHP-FPM ] Jul 30 14:54:54 |NOTICE | FPM fpm is running, pid 73709 | [PHP-FPM ] Jul 30 14:54:54 |NOTICE | FPM ready to handle connections | [PHP-FPM ] Jul 30 14:54:54 |NOTICE | FPM fpm is running, pid 73709 | [PHP-FPM ] Jul 30 14:54:54 |NOTICE | FPM ready to handle connections Votre terminal vous donnera \u00e9galement des mises \u00e0 jour en temps r\u00e9el de toute activit\u00e9 sur ce serveur. Vous pouvez copier l'URL fournie dans la ligne [OK] Web server listening et la coller dans le navigateur de votre choix pour acc\u00e9der \u00e0 votre site, y compris l'administrateur. https://127.0.0.1:8000 Il s'agit d'un outil utile pour un d\u00e9veloppement rapide et ne doit pas \u00eatre utilis\u00e9 \u00e0 la place d'un serveur Web d\u00e9di\u00e9 tel qu'Apache ou Nginx. Installation r\u00e9ussie La premi\u00e8re fois qu'il se charge, Grav pr\u00e9-compile certains fichiers. Si vous actualisez maintenant votre navigateur, vous obtiendrez une version en cache plus rapide. Dans les exemples pr\u00e9c\u00e9dents, $ repr\u00e9sente l'invite de commande. Cela peut sembler diff\u00e9rent sur diff\u00e9rentes plates-formes. Par d\u00e9faut, Grav est livr\u00e9 avec des exemples de pages pour vous donner un point de d\u00e9part. Votre site est d\u00e9j\u00e0 enti\u00e8rement fonctionnel et vous pouvez le configurer, ajouter du contenu, l'\u00e9tendre ou le personnaliser autant que vous le souhaitez. Probl\u00e8mes d'installation et de configuration Si des probl\u00e8mes sont d\u00e9couverts lors du chargement initial de la page (ou apr\u00e8s un \u00e9v\u00e9nement de vidage du cache), une page d'erreur peut s'afficher : Veuillez consulter la section D\u00e9pannage pour obtenir de l'aide concernant des probl\u00e8mes sp\u00e9cifiques. Si vous rencontrez des probl\u00e8mes avec les autorisations de fichiers, veuillez consulter la documentation de d\u00e9pannage des autorisations . Vous pouvez \u00e9galement consulter la documentation des guides d'h\u00e9bergement\" qui contient des instructions sp\u00e9cifiques pour divers environnements d'h\u00e9bergement. Mises \u00e0 jour Grav Pour garder votre site \u00e0 jour, veuillez lire Mise \u00e0 jour de Grav & Plugins .","title":"Installation"},{"location":"liaison-images/","text":"Liaison d'images Grav propose une vari\u00e9t\u00e9 d'options de liaison flexibles qui vous permettent de lier des images d'une page \u00e0 une autre, et m\u00eame \u00e0 partir de sources distantes. Si vous avez d\u00e9j\u00e0 li\u00e9 des fichiers \u00e0 l'aide de HTML ou travaill\u00e9 avec un syst\u00e8me de fichiers \u00e0 l'aide d'une ligne de commande, une grande partie de cela devrait \u00eatre \u00e9l\u00e9mentaire \u00e0 comprendre. Nous allons passer \u00e0 quelques exemples simples en utilisant ce mod\u00e8le tr\u00e8s basique et r\u00e9duit de ce \u00e0 quoi pourrait ressembler le r\u00e9pertoire Pages d'un site Grav. En utilisant cette structure de r\u00e9pertoires comme exemple, nous examinerons les diff\u00e9rents types de liens que vous pouvez utiliser pour afficher des fichiers multim\u00e9dias dans votre contenu. Nous avons des fichiers image dans chaque dossier, y compris une image pour chaque article de blog, et trois images dans un r\u00e9pertoire sp\u00e9cial /images qui agit comme une page mais ne contient que des fichiers multim\u00e9dias. L'utilisation du dossier /images sert d'exemple de la mani\u00e8re dont vous pouvez g\u00e9rer un r\u00e9pertoire d'images simple et centralis\u00e9 pour stocker les fichiers fr\u00e9quemment utilis\u00e9s par plusieurs pages. Cela simplifie le processus de liaison dans ces cas. Si vous d\u00e9cidez d'utiliser un r\u00e9pertoire d'images centralis\u00e9, sachez que ce r\u00e9pertoire doit exister dans le dossier pages car ce dossier est destin\u00e9 au contenu frontal. Pour commencer, voici un bref aper\u00e7u de certains des composants standard d'une balise d'image bas\u00e9e sur Grav Markdown. ![Alt Text](../path/image.ext) CHAINE DESCRIPTION ! Lorsqu'il est plac\u00e9 au d\u00e9but d'une balise de lien Markdown traditionnelle, il indique qu'il s'agit d'une balise d'image. [] Le crochet est utilis\u00e9 pour envelopper le texte alternatif facultatif de l'image. () La parenth\u00e8se est utilis\u00e9e pour entourer la r\u00e9f\u00e9rence \u00e0 l'image elle-m\u00eame. Ceci est plac\u00e9 directement apr\u00e8s le crochet. ../ Lorsqu'il est utilis\u00e9 dans le lien, il indique un d\u00e9placement vers le haut d'un r\u00e9pertoire. Vous pouvez combiner un lien de page normal et un lien d'image comme pour envelopper une image dans un lien : [![Alt \u200b\u200btext](/path/to/img.jpg)](http://example.net/) . Slug Relatif Les liens d'image relatifs utilisent des destinations d\u00e9finies par rapport \u00e0 la page actuelle. Cela peut \u00eatre aussi simple que de cr\u00e9er un lien vers un autre fichier dans le r\u00e9pertoire en cours, tel qu'un fichier image associ\u00e9 \u00e0 la page en cours, ou aussi complexe que de remonter plusieurs niveaux de r\u00e9pertoire, puis de revenir au dossier/fichier sp\u00e9cifique o\u00f9 une image peut r\u00e9sider. Avec des liens relatifs, l'emplacement du fichier source est tout aussi important que celui de la destination. Si l'un ou l'autre des fichiers de l'ensemble est d\u00e9plac\u00e9, en modifiant le chemin entre eux, le lien peut \u00eatre rompu. L'avantage de ce type de structure de liaison est que vous pouvez basculer rapidement entre un serveur de d\u00e9veloppement local et un serveur live avec un nom de domaine diff\u00e9rent et tant que la structure de fichiers reste coh\u00e9rente, les liens devraient fonctionner sans probl\u00e8me. Un lien de fichier pointe vers un fichier particulier par son nom, plut\u00f4t que par son r\u00e9pertoire ou son slug. Si vous cr\u00e9ez un lien d'image dans pages/01.blog/test-post-1/item.md vers /pages/01.blog/test-post-3/test-image-3.jpg vous utiliserez la commande suivante : ![Test Image 3](../test-post-3/test-image-3.jpg) Ce lien monte d'un dossier, comme indiqu\u00e9 par ../ , puis descend d'un dossier, pointant directement vers test-image-3.jpg comme destination. Si nous voulons charger blog-header.jpg depuis le r\u00e9pertoire .blog , nous proc\u00e9derions comme suit : ![Blog Header](../../blog/blog-header.jpg) Vous n'avez pas besoin d'inclure les num\u00e9ros de commande ( 01 .) pour les liens relatifs slug. Grav a int\u00e9gr\u00e9 la prise en charge des slugs dans l'en-t\u00eate du fichier de d\u00e9marquage principal de la page. Ce slug remplace le nom du dossier de la page et tous les fichiers multim\u00e9dias qu'il contient. Par exemple, Test Post 2 a un slug d\u00e9fini via son fichier Markdown ( /pages/01.blog/test-post-2/item.md ). L'en-t\u00eate de ce fichier contient les \u00e9l\u00e9ments suivants : 1 | --- 2 | title: Test Post 2 3 | slug: test-slug 4 | taxonomy: 5 | category: blog 6 |--- Vous remarquerez que le slug test-slug a \u00e9t\u00e9 d\u00e9fini. Les slugs d\u00e9finis de cette mani\u00e8re sont compl\u00e8tement facultatifs et n'ont pas besoin d'\u00eatre pr\u00e9sents. Comme mentionn\u00e9 dans le dernier chapitre, ils fournissent un moyen facile de cr\u00e9er des liens. Si un slug est d\u00e9fini, tout lien que vous cr\u00e9ez vers un fichier multim\u00e9dia dans ce dossier devra \u00eatre Slug Relatif ou Absolu avec une URL compl\u00e8te d\u00e9finie pour le lien. Si nous voulons lier test-image-2.jpg de Test Post 2 , nous entrerons ce qui suit : ![Test Image 2](../test-slug/test-image-2.jpg) Vous remarquerez que nous avons navigu\u00e9 vers le haut d'un r\u00e9pertoire en utilisant ( ../ ) puis vers le bas dans le dossier de page test-slug en utilisant le slug qui a \u00e9t\u00e9 d\u00e9fini dans le fichier /pages/01.blog/test-post-2/item.md . R\u00e9pertoire Relatif Les liens d'image relatifs au r\u00e9pertoire utilisent des destinations d\u00e9finies par rapport \u00e0 la page actuelle. La principale diff\u00e9rence entre un lien relatif au slug et un lien relatif au r\u00e9pertoire est qu'au lieu d'utiliser les slugs d'URL, vous faites r\u00e9f\u00e9rence via le chemin complet avec les noms de dossier. Un exemple de ceci serait quelque chose comme : ![Test Image 3](../../01.blog/02.my_folder/test-image-3.jpg) Le principal avantage de cela est que vous pouvez maintenir l'int\u00e9grit\u00e9 des liens dans d'autres syst\u00e8mes en dehors de Grav, tels que GitHub. Absolu Les liens absolus sont similaires aux liens relatifs, mais sont relatifs \u00e0 la racine du site. Dans Grav , ceci est g\u00e9n\u00e9ralement bas\u00e9 dans votre r\u00e9pertoire /user/pages/ . Ce type de lien peut se faire de deux mani\u00e8res diff\u00e9rentes. Vous pouvez le faire de la m\u00eame mani\u00e8re que le style Slug Relatif qui utilise le slug ou le nom du r\u00e9pertoire dans le chemin pour plus de simplicit\u00e9. Cette m\u00e9thode supprime les probl\u00e8mes potentiels de changements de commande ult\u00e9rieurs (changement du num\u00e9ro au d\u00e9but du nom du dossier) rompant le lien. Ce serait la m\u00e9thode de liaison absolue la plus couramment utilis\u00e9e. Dans un lien absolu, le lien s'ouvre avec un / . Voici un exemple de lien absolu fait vers pages/01.blog/test-post-2/test-image-2.jpg dans le style Slug depuis pages/01.blog/blog.md . ![Test Image 2](/blog/test-slug/test-image-2.jpg) Une technique puissante consiste \u00e0 cr\u00e9er un dossier user/pages/images/ dans votre site Grav et \u00e0 y placer vos images. Ensuite, vous pouvez facilement les r\u00e9f\u00e9rencer avec une URL absolue \u00e0 partir de n'importe quelle page Grav : /images/test-image-4.jpg et \u00eatre toujours en mesure d'effectuer des actions multim\u00e9dias sur celles-ci. PHP Streams Grav a \u00e9galement la capacit\u00e9 de r\u00e9f\u00e9rencer et de lier des images via des flux PHP. Il existe plusieurs flux PHP int\u00e9gr\u00e9s disponibles qui sont utiles, notamment : user:// - dossier utilisateur, par exemple: user/ page:// - dossier de pages, par exemple : user/pages/ image:// - dossier d'images, par exemple : user/images/ plugins:// - dossier des plugins, par exemple : user/plugins/ theme:// - th\u00e8me actuel, par exemple : user/th\u00e8mes/antimatter/ Ceux-ci vous permettent d'acc\u00e9der facilement aux images qui sont traditionnellement en dehors de la hi\u00e9rarchie des pages ( user/pages/ ). ![Stream Image](user://media/images/my-image.jpg) ou alors: ![Stream Image](theme://images/my-image.jpg) Pour obtenir la liste compl\u00e8te des emplacements de flux par d\u00e9faut, consultez Configuration multisite - Flux . Remote Les liens d'image remote vous permettent d'afficher directement \u00e0 peu pr\u00e8s n'importe quel fichier multim\u00e9dia via son URL. Cela ne doit pas n\u00e9cessairement inclure le contenu de votre propre site, mais c'est possible. Voici un exemple d'affichage d'un fichier image distant. ![Remote Image 1](https://getgrav.org/images/testimage.png) Vous pouvez cr\u00e9er un lien vers pratiquement n'importe quelle URL directe, y compris les liens HTTPS s\u00e9curis\u00e9s. Actions media sur les images L'un des principaux avantages de l'utilisation d'images associ\u00e9es \u00e0 des pages est qu'elle vous permet de profiter des puissantes actions m\u00e9dia de Grav. Par exemple, voici une ligne que vous utiliseriez pour charger une image depuis une autre page : ![Styling Example](../test-post-3/test-image-3.jpg?cropResize=400,200) ou profiter des streams pour acc\u00e9der \u00e0 une image dans votre th\u00e8me actuel : ![Stream Image](theme://images/default-avatar.jpg?cropZoom=200,200&brightness=-75) Vous trouverez plus d'informations sur les actions et les autres fonctionnalit\u00e9s des fichiers multim\u00e9dias dans le chapitre suivant . Attributs d'image Une nouvelle fonctionnalit\u00e9 int\u00e9ressante dont vous pouvez profiter consiste \u00e0 fournir des attributs d'image directement via la syntaxe markdown. Cela vous permet d'ajouter facilement des classes et des id HTML sans avoir besoin de Markdown Extra . Voici quelques exemples : Attribut de classe unique ![My Image](my-image.jpg?classes=float-left) qui se traduira par un code HTML similaire \u00e0 : <img src=\"/your/pages/some-page/my-image.jpg\" class=\"float-left\" /> Attribut de plusieurs classes ![My Image](my-image.jpg?classes=float-left,shadow) qui se traduira par un code HTML similaire \u00e0 : <img src=\"/your/pages/some-page/my-image.jpg\" class=\"float-left shadow\" /> Attribut d'id ![My Image](my-image.jpg?id=special-id) qui se traduira par un code HTML similaire \u00e0 : <img src=\"/your/pages/some-page/my-image.jpg\" id=\"special-id\" />","title":"Liaison d'images"},{"location":"liaison-pages/","text":"Liaison de pages Grav propose une vari\u00e9t\u00e9 d'options de liaison flexibles qui vous permettent de cr\u00e9er un lien d'une page \u00e0 une autre, et m\u00eame \u00e0 des pages distantes. Si vous avez d\u00e9j\u00e0 li\u00e9 des fichiers \u00e0 l'aide de HTML ou travaill\u00e9 avec un syst\u00e8me de fichiers \u00e0 l'aide d'une ligne de commande, cela devrait \u00eatre tr\u00e8s facile \u00e0 comprendre. Nous allons passer \u00e0 quelques exemples simples en utilisant ce mod\u00e8le tr\u00e8s basique et r\u00e9duit de ce \u00e0 quoi pourrait ressembler le r\u00e9pertoire Pages d'un site Grav. En utilisant cette structure de r\u00e9pertoires comme exemple, nous examinerons les diff\u00e9rents types de liens que vous pouvez utiliser dans votre contenu. Pour commencer, voici un bref aper\u00e7u de certains des composants communs d'un lien Grav et de ce qu'ils signifient. [Contenu li\u00e9](../chemin/slug/page) CHAINE DESCRIPTION [] Le crochet est utilis\u00e9 pour envelopper le texte ou le contenu alternatif qui devient li\u00e9. En HTML, ce serait le contenu plac\u00e9 entre <a href=\"\"> et </a> . () La parenth\u00e8se est utilis\u00e9e pour entourer le lien lui-m\u00eame. Ceci est plac\u00e9 directement apr\u00e8s le crochet. ../ Lorsqu'il est utilis\u00e9 dans le lien, il indique un d\u00e9placement vers le haut d'un r\u00e9pertoire. Slug Relatif Grav ne se contente pas de limiter vos liens internes \u00e0 des noms sp\u00e9cifiques dans votre structure de fichiers/r\u00e9pertoires. Il peut \u00e9galement extraire les slugs attribu\u00e9s \u00e0 la fois dans l'en-t\u00eate du fichier, ainsi que dans le nom du r\u00e9pertoire de secours. Cela facilite la cr\u00e9ation de liens rapides car vous n'avez pas \u00e0 vous souvenir du nom de fichier sp\u00e9cifique, mais d'un slug facilement m\u00e9morisable (et pertinent). Le moteur de template de Grav utilise les noms de fichiers pour d\u00e9terminer quel template leur appliquer. Par exemple, un blog peut utiliser le nom de fichier standard item.md pour chaque article de blog. Le billet de blog lui-m\u00eame peut se voir attribuer un slug qui a plus de sens, comme grass ou grass-is-green . Les noms de r\u00e9pertoire ont \u00e9galement des num\u00e9ros attribu\u00e9s, ce qui facilite la commande. Vous n'\u00eates pas oblig\u00e9 d'inclure ces chiffres avec des liens relatifs aux slugs. Grav les ignore lors de la cr\u00e9ation du slug, la structure d'URL de votre site est donc plus propre. Voici quelques exemples de liens slug-relatif. Dans cet exemple, nous montons d'un r\u00e9pertoire et chargeons la page par d\u00e9faut situ\u00e9e dans le r\u00e9pertoire pages/01.blue/02.water/item.md depuis pages/01.blue/01.sky/item.md . Le fichier, item.md , n'a pas de slug assign\u00e9, donc Grav utilise le nom du r\u00e9pertoire. [link](../water) Cet exemple suivant fait une chose tr\u00e8s similaire, reliant les pages/ 01.blue/01.sky/item.md aux pages/02.green/02.tree/item.md , mais lors du chargement du fichier item.md , un slug a \u00e9t\u00e9 affect\u00e9 au dossier de tree-is-green . [link](../../green/tree-is-green) Le slug plac\u00e9 dans l'en-t\u00eate de item.md remplace le slug green du nom de dossier par d\u00e9faut. R\u00e9pertoire relatif Les liens relatifs au r\u00e9pertoire utilisent des destinations d\u00e9finies par rapport \u00e0 la page actuelle. Cela peut \u00eatre aussi simple que de cr\u00e9er un lien vers un autre fichier dans le r\u00e9pertoire actuel, tel qu'un fichier image, ou aussi complexe que de remonter plusieurs niveaux de r\u00e9pertoire, puis de revenir au dossier/fichier sp\u00e9cifique que vous devez afficher. Avec des liens relatifs, l'emplacement du fichier source est tout aussi important que celui de la destination. Si l'un ou l'autre des fichiers du mixage est d\u00e9plac\u00e9, en modifiant le chemin entre eux, le lien peut \u00eatre rompu. L'avantage de ce type de structure de liaison est que vous pouvez facilement basculer entre un serveur de d\u00e9veloppement local et un serveur de production avec un nom de domaine diff\u00e9rent et tant que la structure de fichiers reste coh\u00e9rente, les liens devraient fonctionner sans probl\u00e8me. Un lien de fichier pointe vers un fichier particulier par son nom, plut\u00f4t que par son r\u00e9pertoire ou son slug. Si vous cr\u00e9iez un lien de pages/01.blue/01.sky/item.md vers /pages/02.green/01.grass/item.md , vous utiliseriez la commande suivante. [link](../../02.green/01.grass/item.md) Ce lien monte de deux dossiers, comme indiqu\u00e9 par ../../ , puis descend de deux dossiers, pointant directement vers item.md comme destination. Parfois, vous souhaitez simplement diriger l'utilisateur vers un seul r\u00e9pertoire, en chargeant la page par d\u00e9faut. Puisqu'un fichier exact n'est pas indiqu\u00e9, Grav est charg\u00e9 de choisir le bon \u00e0 charger. Pour un site Grav bien organis\u00e9, cela ne devrait pas poser de probl\u00e8me. Dans cet exemple, nous allons lier les pages/01.blue/01.sky/item.md \u00e0 / pages/02.green/ qui chargerait le fichier color.md par d\u00e9faut. [link](../../02.green) Si vous souhaitez cr\u00e9er un lien vers un r\u00e9pertoire deux \u00e9tapes plus haut, vous pouvez le faire en utilisant ce processus. L'exemple suivant ressemble beaucoup au lien de fichier que nous avons d\u00e9montr\u00e9 pr\u00e9c\u00e9demment. Au lieu de cr\u00e9er un lien direct vers le fichier, nous lions vers son r\u00e9pertoire, qui devrait de toute fa\u00e7on charger le fichier que nous voulons car c'est le fichier par d\u00e9faut. Si vous cr\u00e9ez un lien de pages/01.blue/01.sky/item.md vers /pages/02.green/01.grass/ vous utiliserez la commande suivante. [link](../../02.green/01.grass) Absolu Les liens absolus sont similaires aux liens relatifs, mais sont relatifs \u00e0 la racine du site. Dans Grav , ceci est g\u00e9n\u00e9ralement bas\u00e9 dans votre r\u00e9pertoire /user/pages/ . Ce type de lien peut se faire de deux mani\u00e8res diff\u00e9rentes. Vous pouvez le faire de la m\u00eame mani\u00e8re que le style Slug Relatif qui utilise le slug ou le nom du r\u00e9pertoire dans le chemin pour plus de simplicit\u00e9. Cette m\u00e9thode supprime les probl\u00e8mes potentiels de changements de commande ult\u00e9rieurs (changement du num\u00e9ro au d\u00e9but du nom du dossier) rompant le lien. Ce serait la m\u00e9thode de liaison absolue la plus couramment utilis\u00e9e. Dans un lien absolu, le lien s'ouvre avec un / . Voici un exemple de lien absolu fait vers pages/01.blue/01.sky/item.md dans le style Slug . [link](/blue/sky) La deuxi\u00e8me m\u00e9thode est fa\u00e7onn\u00e9e d'apr\u00e8s le style Directory Relative d\u00e9crit pr\u00e9c\u00e9demment. Cette m\u00e9thode laisse des \u00e9l\u00e9ments tels que les num\u00e9ros de classement au d\u00e9but des noms de r\u00e9pertoire. Bien que cela ajoute le potentiel d'un lien rompu lorsque le contenu est r\u00e9organis\u00e9, il est plus fiable lorsqu'il est utilis\u00e9 avec des services comme Github o\u00f9 les liens de contenu ne b\u00e9n\u00e9ficient pas de la flexibilit\u00e9 de Grav. Voici un exemple de lien absolu fait vers pages/01.blue/01.sky/item.md en utilisant ce style. [link](/01.blue/01.sky) Distants Les liens distants vous permettent de vous connecter directement \u00e0 pratiquement n'importe quel fichier ou document via son URL. Cela ne doit pas n\u00e9cessairement inclure le contenu de votre propre site, mais c'est possible. Voici un exemple de lien vers la page d'accueil de Google. [link](http://www.google.com) Vous pouvez cr\u00e9er un lien vers pratiquement n'importe quelle URL directe, y compris les liens HTTPS s\u00e9curis\u00e9s. Par exemple: [link](https://github.com) Attributs de liens Une nouvelle fonctionnalit\u00e9 int\u00e9ressante dont vous pouvez profiter consiste \u00e0 fournir des attributs de lien directement via la syntaxe de d\u00e9marquage. Cela vous permet d'ajouter facilement des attributs HTML class , id , rel et target sans avoir besoin de Markdown Extra . Voici quelques exemples : Classe/Classes d'Attributs [Big Button](../some-page?classes=button,big) qui se traduira par un code HTML similaire \u00e0 : <a href=\"/your/pages/some-page\" class=\"button,big\">Big Button</a> ID Attribut [Unique Button](../some-page?id=important-button) qui se traduira par un code HTML similaire \u00e0 : <a href=\"/your/pages/some-page\" id=\"important-button\">Unique Button</a> Rel Attribut [NoFollow Link](../some-page?rel=nofollow) qui se traduira par un code HTML similaire \u00e0 : <a href=\"/your/pages/some-page\" rel=\"nofollow\">NoFollow Link</a> Target Attribut [Link in new Tab](../some-page?target=_blank) qui se traduira par un code HTML similaire \u00e0 : <a href=\"/your/pages/some-page\" target=\"_blank\">Link in new Tab</a> Combinaisons d'Attributs [Combinaisons d'Attributs](../some-page?target=_blank&classes=button) qui se traduira par un code HTML similaire \u00e0 : <a href=\"/your/pages/some-page\" target=\"_blank\" class=\"button\">Combinations of Attributes</a> Combinaisons d'Attributs avec ancres [Element Ancre](../some-page?target=_blank&classes=button#element-id) qui se traduira par un code HTML similaire \u00e0 : <a href=\"/your/pages/some-page#element-id\" target=\"_blank\" class=\"button\">Element Anchor</a> Liens d'ancrage dans la m\u00eame page [Element Ancre](?classes=button#element-id) qui se traduira par un code HTML similaire \u00e0 : <a href=\"#element-id\" class=\"button\"> Notez que l'ancre doit venir apr\u00e8s la requ\u00eate, comme indiqu\u00e9 dans le probl\u00e8me 1324 Transmission d'un attribut non pris en charge [Pass-through of 'cat' attribute](../some-page?classes=underline&cat=black) qui se traduira par un code HTML similaire \u00e0 : <a href=\"/your/pages/some-page?cat=black\" class=\"underline\">Pass-through of 'cat' attribute</a> Ignorer tous les Attribus [Ignorer tous les Attribus](../some-page?classes=underline&rel=nofollow&noprocess) qui se traduira par un code HTML similaire \u00e0 : <a href=\"/your/pages/some-page?rel=nofollow&classes=underline\">Skip All attributes</a> Ignorer Certains Attribus [Ignorer Certains Attribus](../some-page?id=myvariable&classes=underline&target=_blank&noprocess=id,classes) qui se traduira par un code HTML similaire \u00e0 : <a href=\"/your/pages/some-page?id=myvariable&classes=underline\" target=\"_blank\">Skip Certain attributes</a> Ceci est utile lorsque vous essayez d'ignorer un ou plusieurs attributs sp\u00e9cifiques sans affecter les autres.","title":"Liaison de pages"},{"location":"liaison-pages/#liaison-de-pages","text":"Grav propose une vari\u00e9t\u00e9 d'options de liaison flexibles qui vous permettent de cr\u00e9er un lien d'une page \u00e0 une autre, et m\u00eame \u00e0 des pages distantes. Si vous avez d\u00e9j\u00e0 li\u00e9 des fichiers \u00e0 l'aide de HTML ou travaill\u00e9 avec un syst\u00e8me de fichiers \u00e0 l'aide d'une ligne de commande, cela devrait \u00eatre tr\u00e8s facile \u00e0 comprendre. Nous allons passer \u00e0 quelques exemples simples en utilisant ce mod\u00e8le tr\u00e8s basique et r\u00e9duit de ce \u00e0 quoi pourrait ressembler le r\u00e9pertoire Pages d'un site Grav. En utilisant cette structure de r\u00e9pertoires comme exemple, nous examinerons les diff\u00e9rents types de liens que vous pouvez utiliser dans votre contenu. Pour commencer, voici un bref aper\u00e7u de certains des composants communs d'un lien Grav et de ce qu'ils signifient. [Contenu li\u00e9](../chemin/slug/page) CHAINE DESCRIPTION [] Le crochet est utilis\u00e9 pour envelopper le texte ou le contenu alternatif qui devient li\u00e9. En HTML, ce serait le contenu plac\u00e9 entre <a href=\"\"> et </a> . () La parenth\u00e8se est utilis\u00e9e pour entourer le lien lui-m\u00eame. Ceci est plac\u00e9 directement apr\u00e8s le crochet. ../ Lorsqu'il est utilis\u00e9 dans le lien, il indique un d\u00e9placement vers le haut d'un r\u00e9pertoire.","title":"Liaison de pages"},{"location":"maj-grav/","text":"Mise \u00e0 jour de Grav & Plugins La m\u00e9thode pr\u00e9f\u00e9r\u00e9e pour maintenir Grav, les plugins et les th\u00e8mes \u00e0 jour est d'utiliser le gestionnaire de paquets Grav (GPM) . Des informations compl\u00e8tes peuvent \u00eatre trouv\u00e9es dans la documentation Grav GPM . Nous avons \u00e9galement GPM int\u00e9gr\u00e9 dans notre plugin du panneau d'administration qui v\u00e9rifiera, demandera et installera automatiquement toutes les mises \u00e0 jour. Quelle version ai-je ? Il existe plusieurs fa\u00e7ons de savoir quelle version de Grav et des plugins le site utilise : Panneau d'administration : La version de Grav est r\u00e9pertori\u00e9e dans le pied de page de n'importe quelle page. Les versions de plugins et de th\u00e8mes peuvent \u00eatre trouv\u00e9es dans leurs propres sections. CLI : Ex\u00e9cutez la commande bin/gpm version grav . Pour obtenir la liste des versions de th\u00e8mes et de plugins, vous pouvez les r\u00e9pertorier par leurs noms. Syst\u00e8me de fichiers : Le moyen le plus simple de voir la version est de rechercher le fichier CHANGELOG.md \u00e0 la racine de l'installation de Grav. Il en va de m\u00eame pour les plugins et les th\u00e8mes, ils peuvent g\u00e9n\u00e9ralement \u00eatre trouv\u00e9s dans les dossiers user/plugins et user/themes . Mise \u00e0 niveau depuis Grav 1.5 ou une version ant\u00e9rieure La mise \u00e0 jour d'une ancienne version de Grav peut n\u00e9cessiter des pr\u00e9parations et du travail suppl\u00e9mentaires en raison des exigences minimales accrues et des incompatibilit\u00e9s potentielles. La marche \u00e0 suivre est la suivante : Copiez le site sur un serveur prenant en charge PHP 7.3 et le support CLI . Mettre \u00e0 niveau manuellement vers Grav 1.6.31 . Mettre \u00e0 niveau vers la derni\u00e8re version. Un guide d\u00e9taill\u00e9 Mise \u00e0 niveau depuis Grav <1.6 devrait vous aider dans le processus. Mise \u00e0 niveau vers la version suivante Pour la mise \u00e0 niveau vers la version suivante, il existe des guides sp\u00e9ciaux pour vous aider \u00e0 vous assurer que tout fonctionne toujours apr\u00e8s la mise \u00e0 niveau. Mise \u00e0 niveau vers Grav 1.7 Mise \u00e0 niveau vers Grav 1.6 REMARQUE : Il est recommand\u00e9 de lire les guides de mise \u00e0 niveau avant d'installer la prochaine version de Grav. Mises \u00e0 jour Grav CMS La m\u00e9thode pr\u00e9f\u00e9r\u00e9e pour mettre \u00e0 jour Grav consiste \u00e0 utiliser le gestionnaire de packages Grav (GPM) . Tout ce que vous avez \u00e0 faire est de naviguer jusqu'\u00e0 la racine de votre site Grav et de taper : $ | bin/gpm selfupgrade -f ASTUCE : Vous trouverez plus d'informations sur la commande dans Commande GPM > Mise \u00e0 jour automatique Mises \u00e0 jour des plugins et des th\u00e8mes Les plugins et les th\u00e8mes peuvent \u00eatre tenus \u00e0 jour en ex\u00e9cutant la commande suivante \u00e0 partir de la racine de votre site Grav : $ | bin/gpm update ASTUCE : Vous trouverez plus d'informations sur la commande dans Commande GPM > Mettre \u00e0 jour .","title":"Mise \u00e0 jour"},{"location":"media/","text":"M\u00e9dias Lors de la cr\u00e9ation de contenu dans Grav , vous devez souvent afficher diff\u00e9rents types de m\u00e9dias tels que des images , des vid\u00e9os et divers autres fichiers . Ces fichiers sont automatiquement trouv\u00e9s et trait\u00e9s par Grav et sont mis \u00e0 disposition pour \u00eatre utilis\u00e9s par n'importe quelle page. Ceci est particuli\u00e8rement pratique car vous pouvez ensuite utiliser la fonctionnalit\u00e9 int\u00e9gr\u00e9e de la page pour exploiter les vignettes, acc\u00e9der aux m\u00e9tadonn\u00e9es et modifier les m\u00e9dias de mani\u00e8re dynamique (par exemple, redimensionner les images, d\u00e9finir la taille d'affichage des vid\u00e9os, etc.) selon vos besoins. Grav utilise un syst\u00e8me de mise en cache intelligent qui cr\u00e9e automatiquement des copies en cache des m\u00e9dias g\u00e9n\u00e9r\u00e9s dynamiquement si n\u00e9cessaire. De cette fa\u00e7on, toutes les requ\u00eates ult\u00e9rieures peuvent utiliser la version mise en cache au lieu d'avoir \u00e0 g\u00e9n\u00e9rer \u00e0 nouveau le m\u00e9dia. Fichiers multim\u00e9dia pris en charge Les types de fichiers multim\u00e9dias suivants sont pris en charge nativement par Grav. Une prise en charge suppl\u00e9mentaire des fichiers multim\u00e9dias et des int\u00e9grations de streaming peut \u00eatre ajout\u00e9e via des plugins. Type de m\u00e9dia Type de fichier Image jpg, jpeg, png Audio mp3, wav, wma, ogg, m4a, aiff, aif Image anim\u00e9e gif Image vectoris\u00e9e svg Vid\u00e9o mp4, mov, m4v, swf, flv, webm, ogv Donn\u00e9es / Informations txt, doc, docx, html, htm, pdf, zip, gz, 7z, tar, css, js, json, xml, xls, xlt, xlm, xlsm, xld, xla, xlc, xlw, xll, ppt , pps, rtf, bmp, tiff, mpeg, mpg, mpe, avi, wmv Une liste compl\u00e8te des types mime pris en charge se trouve dans le fichier system/config/media.yaml . S'il existe un type mime qui n'est pas actuellement pris en charge, vous pouvez simplement cr\u00e9er votre propre user/config/media.yaml et l'y ajouter. Assurez-vous simplement de suivre le m\u00eame format que le fichier system d'origine. L'approche la plus simple consiste \u00e0 copier l'int\u00e9gralit\u00e9 du fichier d'origine et \u00e0 apporter vos modifications. O\u00f9 placer vos fichiers multim\u00e9dias Habituellement, vous utiliserez un fichier multim\u00e9dia dans une page, il vous suffit donc de placer le fichier dans le dossier de la page, et vous pouvez le r\u00e9f\u00e9rencer dans le Markdown de la page, par exemple : ![my image](image.jpg) Si vous souhaitez mettre toutes vos images dans un seul dossier, vous pouvez les mettre dans un dossier /user/pages/images . De cette fa\u00e7on, dans Twig, vous pouvez les joindre via : {% set my_image = page.find('/images').media['my-image.jpg'] %} et vous pouvez \u00e9galement les trouver facilement via markdown et effectuer des op\u00e9rations dessus : ![my image](/images/my-image.jpg?cropResize=300,300) Alternativement, vous pouvez les mettre dans votre th\u00e8me, car cela est facilement accessible via des r\u00e9f\u00e9rences CSS ou \u00e0 partir d'un fichier Markdown en utilisant le flux theme:// : ![my image](theme://images/theme-image.jpg) Une autre option est user/images , o\u00f9 vous pouvez utiliser le flux image:// pour y acc\u00e9der : ![my image](image://my-image.jpg) Vous pouvez en fait utiliser n'importe quel flux, y compris n'importe quel dossier \u00e0 l'int\u00e9rieur de user/ via le flux user:// : ![my image](user://themes/mytheme/images/my-image.jpg) Vous pouvez \u00e9galement faire ce m\u00eame genre de choses en utilisant l'objet Twig Media : {{ media['user://themes/mytheme/images/my-image.jpg'].html()|raw }} Grav a un dossier /images . Ne placez pas vos propres images dans ce dossier, car il h\u00e9berge des images en cache g\u00e9n\u00e9r\u00e9es automatiquement par Grav. Vous pouvez \u00e9galement placer tous les fichiers multim\u00e9dias dans leur propre dossier, afin qu'ils soient tous accessibles en une seule fois. Par exemple, vous pouvez conserver tous vos fichiers MP3 dans un dossier user/pages/mp3s (non visible) et mettre le nom du fichier MP3 associ\u00e9 \u00e0 une page particuli\u00e8re dans un champ d'en-t\u00eate appel\u00e9 thistrack . Si vous souhaitez ensuite acc\u00e9der au fichier d'une page particuli\u00e8re et le lire \u00e0 l'aide de l'\u00e9l\u00e9ment audio HTML5, vous aurez besoin d'un code comme celui-ci : 1 | <audio controls> 2 | <source src=\"{{ page.find('mp3s').media[page.header.thistrack~'.mp3']|e }}\"> 3 | </audio> Modes d'affichage Grav fournit quelques modes d'affichage diff\u00e9rents pour chaque type d'objet multim\u00e9dia. MODE EXPLICATION source Repr\u00e9sentation visuelle du m\u00e9dia lui-m\u00eame, c'est-\u00e0-dire l'image, la vid\u00e9o ou le fichier r\u00e9el text Repr\u00e9sentation textuelle du m\u00e9dia vignette La vignette de cet objet multim\u00e9dia Les m\u00e9dias de type Donn\u00e9es/Informations ne prennent pas en charge le mode source , ils passeront par d\u00e9faut en mode text si un autre mode n'est pas explicitement choisi. Emplacement de la vignette Il y a trois endroits o\u00f9 Grav cherchera votre vignette. Dans le m\u00eame dossier que votre fichier multim\u00e9dia : [media-name].[media-extension].thumb.[thumb-extension] o\u00f9 media-name et media-extension sont respectivement le nom et l'extension du fichier multim\u00e9dia d'origine et la thumb-extension est toute extension prise en charge par le type de m\u00e9dia image . Les exemples sont my_video.mp4.thumb.jpg et my-image.jpg.thumb.png Pour les images uniquement ! L'image elle-m\u00eame sera utilis\u00e9e comme vignette. Votre dossier utilisateur : user/images/media/thumb-[media-extension].png o\u00f9 media-extension est l'extension du fichier multim\u00e9dia d'origine. Les exemples sont thumb-mp4.png et thumb-jpg.jpg . Le dossier syst\u00e8me : system/images/media/thumb-[media-extension].png o\u00f9 media-extension est l'extension du fichier multim\u00e9dia d'origine. Les vignettes dans les dossiers syst\u00e8me sont pr\u00e9-fournies par Grav . Vous pouvez \u00e9galement s\u00e9lectionner manuellement la vignette souhait\u00e9e avec les actions expliqu\u00e9es ci-dessous. Liens et Lightbox Les modes d'affichage ci-dessus peuvent \u00e9galement \u00eatre utilis\u00e9s en combinaison avec des liens et des lightboxes, qui sont expliqu\u00e9s plus en d\u00e9tail plus tard. Il est toutefois important de noter : Grav ne fournit pas de fonctionnalit\u00e9 lightbox pr\u00eate \u00e0 l'emploi, vous avez besoin d'un plugin pour cela. Vous pouvez utiliser le plugin Feather Light Grav plugin pour faire \u00e7\u00e0. Lorsque vous utilisez la fonctionnalit\u00e9 multim\u00e9dia de Grav pour rendre une lightbox, tout ce que fait Grav est de g\u00e9n\u00e9rer une balise d'ancrage qui a certains attributs \u00e0 lire par le plugin lightbox. Si vous souhaitez utiliser une biblioth\u00e8que lightbox qui ne se trouve pas dans notre r\u00e9f\u00e9rentiel de plugins ou si vous souhaitez cr\u00e9er votre propre plugin, vous pouvez utiliser le tableau ci-dessous comme r\u00e9f\u00e9rence. ATTRIBUT EXPLICATION rel Un simple indicateur qu'il ne s'agit pas d'un lien r\u00e9gulier, mais d'un lien lightbox. La valeur sera toujours lightbox . href Une URL vers l'objet multim\u00e9dia lui-m\u00eame. data-width La largeur demand\u00e9e par l'utilisateur pour cette lightbox. data-height La hauteur demand\u00e9e par l'utilisateur pour cette lightbox. data-srcset Dans le cas d'un m\u00e9dia image, ceci contient la cha\u00eene srcset . Plus d'informations Actions Grav utilise un mod\u00e8le de construction lors de la gestion des m\u00e9dias, vous pouvez donc effectuer plusieurs actions sur un support particulier. Certaines actions sont disponibles pour chaque type de support tandis que d'autres sont sp\u00e9cifiques au support. G\u00e9n\u00e9ral Ces actions sont disponibles pour tous les types de m\u00e9dias. url Cette m\u00e9thode est uniquement destin\u00e9e \u00e0 \u00eatre utilis\u00e9e dans les templates Twig , d'o\u00f9 l'absence de syntaxe Markdown. Cela renvoie le chemin d'URL brut vers le m\u00e9dia. Twig {{ page.media['sample-image.jpg'].url|e }} HTML Code /images/a/f/2/8/f/af28f2ad724f1e05248ac8dd518b2a5789c6cd41-sample-image.jpg html Dans Markdown, cette m\u00e9thode est implicitement appel\u00e9e lors de l'utilisation de la syntaxe ![] . L'action html g\u00e9n\u00e9rera une balise HTML valide pour le m\u00e9dia en fonction du mode d'affichage actuel. Markdown ![Some ALT text](sample-image.jpg?classes=myclass \"My title\") Twig {{ page.media['sample-image.jpg'].html('My title', 'Some ALT text', 'myclass')|raw }} HTML Code <img title=\"My title\" alt=\"Some ALT text\" class=\"myclass\" src=\"/images/a/f/2/8/f/af28f2ad724f1e05248ac8dd518b2a5789c6cd41 -sample-image.jpg\" /> affichage Utilisez cette action pour basculer entre les diff\u00e9rents modes d'affichage fournis par Grav. Une fois que vous avez chang\u00e9 de mode d'affichage, toutes les actions pr\u00e9c\u00e9dentes seront r\u00e9initialis\u00e9es. Les exceptions \u00e0 cette r\u00e8gle sont les actions lightbox et link et toutes les actions qui ont \u00e9t\u00e9 utilis\u00e9es avant ces deux actions. Par exemple, la vignette qui r\u00e9sulte de l'appel de page.media['sample-image.jpg'].sepia().display('thumbnail').html() n'aura pas l'action sepia() appliqu\u00e9e, mais page.media ['sample-image.jpg'].display('thumbnail').sepia().html() le fera. Une fois que vous passez en mode vignette, vous manipulez une image. Cela signifie que m\u00eame si votre m\u00e9dia actuel est une vid\u00e9o, vous pouvez utiliser toutes les actions de type image sur la vignette. lien Transformez votre objet m\u00e9dia en lien. Toutes les actions que vous appelez avant link() seront appliqu\u00e9es \u00e0 la cible du lien, tandis que toutes les actions appel\u00e9es apr\u00e8s s'appliqueront \u00e0 ce qui est affich\u00e9 sur votre page. Apr\u00e8s avoir appel\u00e9 link() , Grav basculera automatiquement le mode d'affichage sur vignette . L'exemple suivant affiche un lien textuel (display('text')) vers une version s\u00e9pia du fichier sample-image.jpg : Markdown ![Image link](sample-image.jpg?sepia&link&display=text) Twig {{ page.media['sample-image.jpg'].sepia().link(). display('text').html('Image link')|raw }} HTML Code <a href=\"/images/3/7/7/1/c/3771c3fabb6d7bc0035dd119281718f9143c4653-sample -image.jpg\">><img title=\"Image link\" alt=\"\" src=\"/images/a/f/2/8/ faf28f2ad724f1e05248ac8dd518b2a5789c6cd41-sample-image.jpg\" /> Cache uniquement Grav peut \u00eatre configur\u00e9 pour mettre en cache tous les fichiers image, cela peut augmenter la vitesse \u00e0 laquelle les fichiers sont servis. Cependant, les images passeront par le syst\u00e8me de manipulation d'images Grav, ce qui peut entra\u00eener une taille de fichier consid\u00e9rablement plus grande pour les images qui ont d\u00e9j\u00e0 \u00e9t\u00e9 optimis\u00e9es avant Grav. La manipulation d'image peut \u00eatre contourn\u00e9e. Activer cache_all dans system/config/system.yaml . images: default_image_quality: 85 cache_all: false D\u00e9sactivez la manipulation d'image avec l'option cache . Markdown ![]\\(sample-image.jpg?cache) Twig {{ page.media['sample-image.jpg'].cache.html()|raw }} HTML Code <img alt=\"\" src=\"/images/a/f/2/8/f/af28f2ad724f1e05248ac8dd518b2a5789c6cd41 -sample-image.jpg\" /> lightbox L'action lightbox est essentiellement la m\u00eame que l'action lien mais avec quelques extras. Comme expliqu\u00e9 ci-dessus (Liens et lightboxes), l'action lightbox ne fera rien de plus que de cr\u00e9er un lien avec des attributs suppl\u00e9mentaires. Elle diff\u00e8re de l'action de lien en ce qu'elle ajoute un attribut rel=\"lightbox\" et accepte un attribut width et height . Si possible (actuellement uniquement dans le cas des images), Grav redimensionnera votre m\u00e9dia \u00e0 la largeur et \u00e0 la hauteur demand\u00e9es. Sinon, il ajoutera simplement un attribut data-width et data-height au lien. Markdown ![Sample Image](sample-image.jpg?lightbox=600,400&resize=200,200) Twig {{ page.media['sample-image.jpg'].lightbox(600,400).resize(200,200).html ('Sample Image')|raw }} HTML Code <a rel=\"lightbox\" data-width=\"600\" data-height=\"400\" href=\"/images/b/5/e/b/3/b5eb31744b96349b1a711697692b897624202cb1-sample-image.jpg\"> <img title=\"Sample Image\" alt=\"\" src=\"/images/4/5/5/e/4/455e41587c2cd25f34cfdccd8ab5078707aabe6b-sample-image.jpg\" /></a> R\u00e9sultat : miniature Choisissez manuellement la vignette que Grav doit utiliser. Vous pouvez choisir entre page et d\u00e9fault pour tout type de m\u00e9dia ainsi que m\u00e9dia pour le m\u00e9dia image si vous souhaitez utiliser l'objet m\u00e9dia lui-m\u00eame comme vignette. Markdown ![Sample Image](sample-image.jpg?thumbnail=default&display=thumbnail) Twig {{ page.media['sample-image.jpg'].thumbnail('default').display('thumbnail') .html('Sample Image')|raw }} HTML Code <img title=\"Sample Image\" alt=\"\" src=\"/system/images/media/thumb-jpg.png\" /> R\u00e9sultat : attribut Cela ajoute un attribut HTML suppl\u00e9mentaire \u00e0 la sortie. Markdown ![Sample Image](sample-image.jpg?thumbnail=default&display=thumbnail) Twig {{ page.media['sample-image.jpg'].thumbnail('default').display('thumbnail') .html('Sample Image')|raw }} HTML Code <img title=\"Sample Image\" alt=\"\" src=\"/system/images/media/thumb-jpg.png\" /> Actions sur les images redimensionner Le redimensionnement fait exactement ce que vous attendez de lui. resize vous permet de cr\u00e9er une nouvelle image bas\u00e9e sur width (la largeur) et height (la hauteur). Le rapport d'aspect est conserv\u00e9 et la nouvelle image contiendra des zones vides dans la couleur de la couleur d'arri\u00e8re-plan facultative fournie sous forme de hex value (valeur hexad\u00e9cimale), par ex. 0xffffff . Le param\u00e8tre d'arri\u00e8re-plan est facultatif et, s'il n'est pas fourni, il sera par d\u00e9faut transparent si l'image est au format PNG ou blanc s'il s'agit d'un JPEG. Markdown ![Sample Image](sample-image.jpg?resize=400,200) Twig {{ page.media['sample-image.jpg'].resize(400, 200).html()|raw }} R\u00e9sultat : forcer le redimensionnement Redimensionne l'image \u00e0 la largeur widht et \u00e0 la hauteur height fournies. forceResize ne respectera pas le format d'image d'origine et \u00e9tirera l'image selon les besoins pour s'adapter \u00e0 la nouvelle taille de l'image. Markdown ![Sample Image](sample-image.jpg?forceResize=200,300) Twig {{ page.media['sample-image.jpg'].forceResize(200, 300).html()|raw }} R\u00e9sultat : cropResize cropResize redimensionne une image \u00e0 une taille plus petite ou plus grande en fonction de la largeur widht et de la hauteur height . Le rapport d'aspect est conserv\u00e9 et la nouvelle image sera redimensionn\u00e9e pour s'adapter \u00e0 la bo\u00eete englobante comme d\u00e9crit par la largeur widht et la hauteur height fournies. En d'autres termes, toute zone d'arri\u00e8re-plan que vous verriez dans un resize normal est recadr\u00e9e. Par exemple, si vous avez une image de 640 x 480 et que vous effectuez une action cropResize(100, 100) dessus, vous obtiendrez une image de 100 x 75 . Markdown ![Sample Image](sample-image.jpg?cropResize=300,300) Twig {{ page.media['sample-image.jpg'].cropResize(300, 300).html()|raw }} R\u00e9sultat : crop crop ne redimensionnera pas du tout l'image, il recadrera simplement l'image d'origine de sorte que seule la partie de la bo\u00eete englobante telle que d\u00e9crite par la largeur widht et la hauteur height provenant de l'emplacement x et y soit utilis\u00e9e pour cr\u00e9er la nouvelle image. Par exemple, une image de 640 x 480 sur laquelle l'action de recadrage cro (0, 0, 400, 100) est appliqu\u00e9e obtiendra simplement la largeur et la hauteur recadr\u00e9es de sorte que l'image r\u00e9sultante soit une image d'une largeur de 400 et une hauteur de 100 provenait du coin sup\u00e9rieur gauche comme d\u00e9crit par 0, 0 . Markdown ![Sample Image](sample-image.jpg?crop=100,100,300,200) Twig {{ page.media['sample-image.jpg'].crop(100,100,300,200).html()|raw }} R\u00e9sultat : cropZoom Semblable \u00e0 cropResize , cropZoom prend \u00e9galement une largeur width et une hauteur hright mais redimensionne et recadre l'image pour s'assurer que l'image r\u00e9sultante a la taille exacte que vous avez demand\u00e9e. Le rapport d'aspect est conserv\u00e9 mais certaines parties de l'image peuvent \u00eatre recadr\u00e9es, mais l'image r\u00e9sultante est centr\u00e9e. La principale diff\u00e9rence entre cropResize et cropZoom est que dans cropResize, l'image est redimensionn\u00e9e en conservant les proportions de sorte que l'image enti\u00e8re soit affich\u00e9e, et tout espace suppl\u00e9mentaire est consid\u00e9r\u00e9 comme un arri\u00e8re-plan. La principale diff\u00e9rence entre cropResize et cropZoom est que dans cropResize, l'image est redimensionn\u00e9e en conservant les proportions de sorte que l'image enti\u00e8re soit affich\u00e9e, et tout espace suppl\u00e9mentaire est consid\u00e9r\u00e9 comme un arri\u00e8re-plan. Avec cropZoom , l'image est redimensionn\u00e9e de sorte qu'il n'y ait pas d'arri\u00e8re-plan visible, et la zone d'image suppl\u00e9mentaire de l'image en dehors de la nouvelle taille d'image est recadr\u00e9e. Par exemple, si vous avez une image de 640 x 480 et que vous effectuez une action cropZoom(400, 100) , l'image r\u00e9sultante sera redimensionn\u00e9e \u00e0 400 x 300 , puis la hauteur est recadr\u00e9e, ce qui donne une image de 400 x 100 . Markdown ![Sample Image]\\(sample-image.jpg?cropZoom=600,200) Twig {{ page.media['sample-image.jpg'].cropZoom(600,200).html()\\|raw }} Les personnes familiaris\u00e9es avec l'utilisation de zoomCrop \u00e0 cette fin constateront que cela fonctionne \u00e9galement dans Grav. R\u00e9sultat : qualit\u00e9 Permet dynamiquement de d\u00e9finir une valeur value de pourcentage de compression pour l'image entre 0 et 100 . Un nombre inf\u00e9rieur signifie une qualit\u00e9 moindre, o\u00f9 100 signifie une qualit\u00e9 maximale. Markdown ![Sample Image]\\(sample-image.jpg?cropZoom=300,200&quality=25) Twig {{ page.media['sample-image.jpg'].cropZoom(300,200).quality(25).html()|raw }} R\u00e9sultat : n\u00e9gatif Applique un filtre n\u00e9gatif \u00e0 l'image o\u00f9 les couleurs sont invers\u00e9es. Markdown ![Sample Image](sample-image.jpg?cropZoom=300,200&negate) Twig {{ page.media['sample-image.jpg'].cropZoom(300,200).negate.html()|raw }} R\u00e9sultat : luminosit\u00e9 Applique un filtre de luminosit\u00e9 \u00e0 l'image avec une valeur value comprise entre -255 et +255 . Des nombres n\u00e9gatifs plus grands rendront l'image plus sombre, tandis que des nombres positifs plus grands rendront l'image plus lumineuse. Markdown ![Sample Image](sample-image.jpg?cropZoom=300,200&brightness=-100) Twig {{ page.media['sample-image.jpg'].cropZoom(300,200).brightness(-100) .html()|raw }} R\u00e9sultat : contraste Ceci applique un filtre de contraste \u00e0 l'image avec une valeur value de -100 \u00e0 +100 . Des nombres n\u00e9gatifs plus grands augmenteront le contraste, tandis que des nombres positifs plus grands r\u00e9duiront le contraste. Markdown ![Sample Image](sample-image.jpg?cropZoom=300,200&contrast=-50) Twig {{ page.media['sample-image.jpg'].cropZoom(300,200).contrast(-50).html()|raw }} R\u00e9sultat : niveau de gris Cela traite l'image avec un filtre en niveaux de gris . Markdown ![Sample Image](sample-image.jpg?cropZoom=300,200&grayscale) Twig {{ page.media['sample-image.jpg'].cropZoom(300,200).grayscale.html()|raw }} R\u00e9sultat : gaufrer Cela traite l'image avec un filtre de gaufrage . Markdown ![Sample Image](sample-image.jpg?cropZoom=300,200&emboss) Twig {{ page.media['sample-image.jpg'].cropZoom(300,200).emboss.html()|raw }} R\u00e9sultat : lisser Cela applique un filtre de lissage \u00e0 l'image en fonction du r\u00e9glage de la valeur value de lissage de -10 \u00e0 10 . Markdown ![Sample Image](sample-image.jpg?cropZoom=300,200&smooth=5) Twig {{ page.media['sample-image.jpg'].cropZoom(300,200).smooth(5).html()|raw }} R\u00e9sultat : bordure Cela applique un filtre de bordure sur l'image. Markdown ![Sample Image](sample-image.jpg?cropZoom=300,200&sharp) Twig {{ page.media['sample-image.jpg'].cropZoom(300,200).sharp.html()|raw }} R\u00e9sultat : contours Cela applique un filtre de contours sur l'image. Markdown ![Sample Image](sample-image.jpg?cropZoom=300,200&edge) Twig {{ page.media['sample-image.jpg'].cropZoom(300,200).edge.html()|raw }} R\u00e9sultat : coloriser Vous pouvez coloriser l'image en ajustant les valeurs de rouge red , de vert green et de bleu blue de l'image de -255 \u00e0 +255 pour chaque couleur. Markdown ![Sample Image](sample-image.jpg?cropZoom=300,200&colorize=100,-100,40) Twig {{ page.media['sample-image.jpg'].cropZoom(300,200).colorize(100,-100,40 html()|raw }} R\u00e9sultat : s\u00e9pia Cela applique un filtre s\u00e9pia sur l'image pour produire un look vintage. Markdown ![Sample Image](sample-image.jpg?cropZoom=300,200&sepia) Twig {{ page.media['sample-image.jpg'].cropZoom(300,200).sepia.html()|raw }} R\u00e9sultat : flou gaussien Brouille l'image en d\u00e9finissant la fr\u00e9quence \u00e0 laquelle le filtre de flou est appliqu\u00e9 \u00e0 l'image. La valeur par d\u00e9faut est 1 fois. Markdown ![Sample Image](sample-image.jpg?gaussianBlur=3) Twig {{ page.media['sample-image.jpg'].gaussianBlur(3).html()|raw }} R\u00e9sultat : tourner Fait pivoter l'image d'un angle angle en degr\u00e9s dans le sens inverse des aiguilles d'une montre, les valeurs n\u00e9gatives tournent dans le sens des aiguilles d'une montre. Markdown ![Sample Image](sample-image.jpg?cropZoom=300,200&rotate=-90) Twig {{ page.media['sample-image.jpg'].cropZoom(300,200).rotate(-90).html()|raw }} R\u00e9sultat : retourner Retourne l'image dans les directions donn\u00e9es. Les deux param\u00e8tres peuvent \u00eatre 0|1 . Les deux 0 \u00e9quivaut \u00e0 aucun retournement dans les deux sens. Markdown ![Sample Image](sample-image.jpg?cropZoom=300,200&flip=0,1) Twig {{ page.media['sample-image.jpg'].cropZoom(300,200).flip(0,1).html()|raw }} R\u00e9sultat : fixOrientation Corrige l'orientation de l'image lors de la rotation via les donn\u00e9es EXIF \u200b\u200b(s'applique aux images jpeg prises avec des t\u00e9l\u00e9phones et des appareils photo). Markdown ![Sample Image](sample-image.jpg?fixOrientation) Twig {{ page.media['sample-image.jpg'].fixOrientation().html()|raw }} Chargement L'attribution du chargement aux images permet aux auteurs de contr\u00f4ler le moment o\u00f9 le navigateur doit commencer \u00e0 charger la ressource. La valeur de l'attribut de chargement peut \u00eatre auto (par d\u00e9faut), lazy , eager . La valeur peut \u00eatre d\u00e9finie dans system.images.defaults.loading comme valeur par d\u00e9faut, ou par image md avec ?loading=lazy Lorsque la valeur auto est choisie, aucun loading attribut de chargement n'est ajout\u00e9 et le navigateur d\u00e9terminera la strat\u00e9gie \u00e0 utiliser. Markdown ![Sample Image](sample-image.jpg?loading=lazy) Twig {# Using default value as defined in 'config.system.images.defaults.loading' #} {{ page.media['sample-image.jpg'].loading.html('Sample Image')|raw }} {# Using explicit value #} {{ page.media['sample-image.jpg'].loading('lazy').html('Sample Image')|raw }} HTML Code <img loading=\"lazy\" title=\"Sample Image\" src=\"/images/e/f/1/0/5/ ef10554cd3a99f2e65136e79dce170d4f8a7a1b9-sample-image.jpg\" /> Actions anim\u00e9es / vectoris\u00e9es redimensionner \u00c9tant donn\u00e9 que PHP ne peut pas g\u00e9rer le redimensionnement dynamique de ces types de m\u00e9dias, l'action de redimensionnement s'assurera uniquement qu'un attribut width et height ou data-width et data-height est d\u00e9fini sur votre balise <img> / <video> ou <a> respectivement. Cela signifie que votre image ou vid\u00e9o sera affich\u00e9e dans la taille demand\u00e9e, mais l'image ou le fichier vid\u00e9o r\u00e9el ne sera en aucun cas converti. Markdown ![Sample Trailer](sample-trailer.mov?resize=400,200) Twig {{ page.media['sample-trailer.mov'].resize(400, 200).html('Sample Trailer')|raw }}} HTML Code <video controls=\"1\" style=\"width: 400px;height: 200px;\" title=\"Sample Trailer\" alt=\"\"><source src=\"/user/pages/02.content/07.media/sample-trailer.mov? loading=auto\">Your browser does not support the video tag.<video> exemples Quelques exemples de ceci : Image Vectorielle ![Sample Vector](img/sample-vector.svg?resize=300,300) Image Anim\u00e9e ![Animated Gif](img/sample-animated.gif?resize=300,300) Vid\u00e9o ![Sample Trailer](sample-trailer.mov?resize=400,200) Your browser does not support the video tag. Actions audio Le m\u00e9dia audio affichera un lien audio HTML5 : Markdown ![Hal 9000: I'm Sorry Dave](hal9000.mp3) Twig {{ page.media['hal9000.mp3'].html()|raw }} R\u00e9sultat : Your browser does not support the audio tag. controls Permet de d\u00e9finir ou de supprimer explicitement les contr\u00f4les HTML5 par d\u00e9faut. Passer 0 masque les commandes du navigateur pour la lecture, le volume, etc. Markdown ![Hal 9000: I'm Sorry Dave](hal9000.mp3?controls=0) Twig {{ page.media['hal9000.mp3'].controls(0)|raw }} HTML Code <audio alt=\"\"><source src=\"/user/pages/02.content/07.media/hal9000.mp3? loading=auto\">Your browser does not support the audio tag.</audio> pr\u00e9chargement Permet de d\u00e9finir la propri\u00e9t\u00e9 de pr\u00e9chargement preload , qui est par d\u00e9faut sur auto . Les param\u00e8tres autoris\u00e9s sont auto , metadata et none . Si elle n'est pas d\u00e9finie, sa valeur par d\u00e9faut est fix\u00e9e par le navigateur (c'est-\u00e0-dire que chaque navigateur peut avoir sa propre valeur par d\u00e9faut). La sp\u00e9cification conseille de la d\u00e9finir sur les m\u00e9tadonn\u00e9es metadata . L'attribut preload est ignor\u00e9 si la lecture autoplay est pr\u00e9sente. Markdown ![Hal 9000: I'm Sorry Dave](hal9000.mp3?preload=metadata) Twig {{ page.media['hal9000.mp3'].preload('metadata')|raw }} lecture automatique Permet de d\u00e9finir si l'audio sera lu autoplay lors du chargement de la page. La valeur par d\u00e9faut est false par omission si elle n'est pas d\u00e9finie. Si autoplay et preload sont tous les deux pr\u00e9sents sur un \u00e9l\u00e9ment audio donn\u00e9, preload sera ignor\u00e9. Markdown ![Hal 9000: I'm Sorry Dave](hal9000.mp3?autoplay=1) Twig {{ page.media['hal9000.mp3'].autoplay(1)|raw }} contr\u00f4le de liste Permet de d\u00e9finir la propri\u00e9t\u00e9 controlsList , qui prend une ou plusieurs des trois valeurs possibles : nodownload , nofullscreen et noremoteplayback . Si vous d\u00e9finissez plus d'un param\u00e8tre dans Markdown, s\u00e9parez-les par un tiret ( - ). Ceux-ci seront remplac\u00e9s par des espaces dans le HTML de sortie. Markdown ![Hal 9000: I'm Sorry Dave](hal9000.mp3?controlsList= nodownload-nofullscreen-noremoteplayback) Twig {{ page.media['hal9000.mp3'].controlsList('nodownload nofullscreen noremoteplayback')|raw }} sourdine Permet de d\u00e9finir si le son est coup\u00e9 muted lors du chargement. La valeur par d\u00e9faut est false par omission si elle n'est pas d\u00e9finie. Markdown ![Hal 9000: I'm Sorry Dave](hal9000.mp3?muted=1) Twig {{ page.media['hal9000.mp3'].muted(1)|raw }} boucle Permet de d\u00e9finir si l'audio sera en boucle loop lors de la lecture jusqu'\u00e0 la fin. La valeur par d\u00e9faut est false par omission si elle n'est pas d\u00e9finie. Markdown ![Hal 9000: I'm Sorry Dave](hal9000.mp3?loop=1) Twig {{ page.media['hal9000.mp3'].loop(1)|raw }} Actions sur fichiers Grav ne fournit aucune action personnalis\u00e9e sur les fichiers pour le moment et il n'est pas pr\u00e9vu d'en ajouter. Si vous pensez \u00e0 quelque chose, veuillez nous contacter. Markdown [View Text File](acronyms.txt) Twig <a href=\"{{ page.media['acronyms.txt'].url()|raw }}\"> View Text File</a> R\u00e9sultat: Afficher le fichier texte Combinaisons Comme vous pouvez le voir : Grav fournit de puissantes fonctionnalit\u00e9s de manipulation d'images qui facilitent vraiment le travail avec elles ! Cette v\u00e9ritable puissance est visible lorsque vous combinez plusieurs effets et produisez des manipulations d'images dynamiques tr\u00e8s sophistiqu\u00e9es. Par exemple, ceci est tout \u00e0 fait valable : Markdown ![Sample Image](sampleimage.jpgnegate&lightbox&cropZoom=200,200) Twig {{ page.media['sample-image.jpg'] .negate.lightbox.cropZoom(200,200)|raw }} R\u00e9sultat: R\u00e9initialiser plusieurs appels \u00e0 la m\u00eame image Lorsque vous acc\u00e9dez plusieurs fois \u00e0 la m\u00eame image dans une m\u00eame page, les actions que vous avez fournies \u00e0 l'image ne sont pas r\u00e9initialis\u00e9es par d\u00e9faut. Ainsi, si vous redimensionnez une image et affichez le code HTML, puis plus tard dans la m\u00eame page, affichez simplement l'URL de l'image, vous obtiendrez \u00e9galement l'URL de l'image redimensionn\u00e9e. Vous vous attendiez probablement \u00e0 l'URL de l'image d'origine. Pour lutter contre cela, vous pouvez r\u00e9initialiser les actions sur les images en passant false \u00e0 la m\u00e9thode url() : {% for item in page.header.gallery %} {% set image = page.media[item.src].cropZoom(800, 600).quality(70) %} <a href=\"{{ image.url(false)|e }}\"> <img src=\"{{ image.url|e }}\" alt=\"{{ item.alt|e }}\" title=\"{{ item.title|e }}\" /> </a> {% endfor %} Images r\u00e9actives \u00c9crans \u00e0 haute densit\u00e9 Grav a un support int\u00e9gr\u00e9 pour les images r\u00e9actives pour les \u00e9crans \u00e0 haute densit\u00e9 (par exemple, les \u00e9crans Retina ). Grav accomplit cela en impl\u00e9mentant srcset \u00e0 partir de la proposition HTML de l'\u00e9l\u00e9ment Picture . Un bon article \u00e0 lire si vous voulez mieux comprendre cela est ce billet de blog d'Eric Portis . Grav d\u00e9finit l'argument sizes tailles mentionn\u00e9 dans les messages ci-dessus sur la largeur totale de la fen\u00eatre par d\u00e9faut. Utilisez l'action sizes tailles pr\u00e9sent\u00e9e ci-dessous pour choisir vous-m\u00eame. Pour commencer \u00e0 utiliser des images r\u00e9actives, il vous suffit d'ajouter des images de densit\u00e9 sup\u00e9rieure \u00e0 vos pages en ajoutant un suffixe au nom du fichier. Si vous ne fournissez que des images de densit\u00e9 plus \u00e9lev\u00e9e, Grav g\u00e9n\u00e9rera automatiquement des versions de qualit\u00e9 inf\u00e9rieure pour vous. Le nommage fonctionne comme suit : [image-name]@[density-ratio]x.[image-extension] , donc par exemple en ajoutant sample-image@3x.jpg \u00e0 votre page, Grav cr\u00e9era une version 2x et un 1x (taille normale) par d\u00e9faut. Ces fichiers g\u00e9n\u00e9r\u00e9s par Grav seront stock\u00e9s dans images/ du dossier cache, pas dans votre dossier page. Supposons que vous ayez un fichier appel\u00e9 retina@2x.jpg , vous feriez en fait r\u00e9f\u00e9rence \u00e0 cela dans vos liens comme retina.jpg , puis Grav ne trouvera pas cette image et commencera \u00e0 rechercher les tailles d'image retrina. Il trouvera retina@2x.jpg puis r\u00e9alisera qu'il doit cr\u00e9er une variante @1x et afficher la sortie srcset appropri\u00e9e : Markdown ![Retina Image](retina.jpg?sizes=80vw) Twig {{ page.media['retina.jpg'].sizes('80vw').html()|raw }} HTML Code <img alt=\"Retina Image\" src=\"/images/3/7/f/0/c/37f0ca845b3eb054374d6a1ac2e36e13c59e14f8 -retina.jpg\" srcset=\"/images/b/a/c/1/9/bac199ed46f9188dafad759760afd27da935e564 -retina2x.jpg 2880w, /images/3/7/f/0/c/37f0ca845b3eb054374d6a1ac2e36e13c59e14f8 -retina.jpg 1440w\" sizes=\"80vw\"> R\u00e9sultat : En fonction de votre affichage et de l'impl\u00e9mentation de votre navigateur et de la prise en charge de srcset , vous ne verrez peut-\u00eatre jamais de diff\u00e9rence. Nous avons inclus le balisage HTML dans le troisi\u00e8me onglet afin que vous puissiez voir ce qui se passe derri\u00e8re les \u00e9crans. Tailles avec media queries Grav prend \u00e9galement en charge les requ\u00eates multim\u00e9dias dans l'attribut sizes tailles, vous permettant d'utiliser diff\u00e9rentes largeurs en fonction de la taille de l'\u00e9cran de l'appareil. Contrairement \u00e0 la premi\u00e8re m\u00e9thode, vous n'avez pas besoin de cr\u00e9er plusieurs images ; elles seront cr\u00e9\u00e9es automatiquement. L'image de secours est l'image actuelle, donc un navigateur sans prise en charge de srcset affichera l'image d'origine. Markdown ![Retina Image](retina.jpg?sizes=%28max-width%3A26em%29+100vw%2C+50vw) Twig {{ page.media['retina.jpg'].sizes('(max-width:26em) 100vw, 50vw').html('Retina Image')|raw }} HTML Code <img alt=\"Retina Image\" src=\"/images/3/7/f/0/c/37f0ca845b3eb054374d6a1ac2e36e13c59e14f8 -retina.jpg\" srcset=\"/images/b/a/c/1/9/bac199ed46f9188dafad759760afd27da935e564 -retina2x.jpg 2880w, /images/3/7/f/0/c/37f0ca845b3eb054374d6a1ac2e36e13c59e14f8 -retina.jpg 1440w\" sizes=\"(max-width:26em)+100vw\"> R\u00e9sultat : En fonction de votre affichage et de l'impl\u00e9mentation de votre navigateur et de la prise en charge de wsrcset , vous ne verrez peut-\u00eatre jamais de diff\u00e9rence. Nous avons inclus le balisage HTML dans le quatri\u00e8me onglet afin que vous puissiez voir ce qui se passe derri\u00e8re les \u00e9crans. Tailles avec media queries utilisant des d\u00e9riv\u00e9es Tailles avec media queries utilisant des d\u00e9riv\u00e9es Si vous souhaitez personnaliser les tailles des fichiers cr\u00e9\u00e9s automatiquement, vous pouvez utiliser la m\u00e9thode derivatives() (comme indiqu\u00e9 ci-dessous). Le premier param\u00e8tre est la largeur de la plus petite des images g\u00e9n\u00e9r\u00e9es. La seconde est la largeur maximale des images g\u00e9n\u00e9r\u00e9es. Le troisi\u00e8me, et seul param\u00e8tre facultatif, dicte les intervalles avec lesquels g\u00e9n\u00e9rer les photos (la valeur par d\u00e9faut est 200). Par exemple, si vous d\u00e9finissez le premier param\u00e8tre sur 320 et le troisi\u00e8me sur 100 , Grav g\u00e9n\u00e9rera une image pour 320, 420, 520, 620, et ainsi de suite jusqu'\u00e0 ce qu'il atteigne son maximum d\u00e9fini. Dans notre exemple, nous avons d\u00e9fini le maximum sur 1600 . Cela se traduira par des incr\u00e9ments de 300 de 320 \u00e0 1520 , car 1620 serait au-dessus du seuil. Pour le moment, cela ne fonctionne pas \u00e0 l'int\u00e9rieur de Markdown, uniquement dans vos fichiers twig . Markdown ![Retina Image](retina.jpg?derivatives=320,1600,300 &sizes=%28max-width%3A26em%29+100vw%2C+50vw) Twig {{ page.media['retina.jpg'].derivatives(320,1600,300) .sizes('(max-width:26em) 100vw, 50vw').html()|raw }} HTML Code <img alt=\"Retina Image\" src=\"/images/3/7/f/0/c/37f0ca845b3eb054374d6a1ac2e36e13c59e14f8-retina.jpg\" srcset=\"/images/b/a/c/1/9/bac199ed46f9188dafad759760afd27da935e564-retina2x.jpg 2880w, /images/d/c/e/f/7/dcef77ec0cc8efd0a66851a7750b530d8bfe093a-retina320w.jpg 320w, /images/1/5/d/a/1/15da17d9989ac18738474b1fab5ff6104b96be41-retina620w.jpg 620w, /images/e/c/e/3/f/ece3fa30474b851808a485197b481d202d8f3811-retina920w.jpg920w, /images/3/8/8/2/4/3882463d358fc22a189380da7b7d14db2a5b260a-retina1220w.jpg 1220w, /images/6/0/5/0/e/6050e7409d6040b3737b6562cdec89854cac3f9a-retina1520w.jpg 1520w, /images/3/7/f/0/c/37f0ca845b3eb054374d6a1ac2e36e13c59e14f8-retina.jpg 1440w\" sizes=\"(max-width:26em)+100vw\"> R\u00e9sultat : En fonction de votre affichage et de l'impl\u00e9mentation de votre navigateur et de la prise en charge de srcset , vous ne verrez peut-\u00eatre jamais de diff\u00e9rence. Nous avons inclus le balisage HTML dans le quatri\u00e8me onglet afin que vous puissiez voir ce qui se passe derri\u00e8re les \u00e9crans. D\u00e9finition manuelle de la taille Au lieu de laisser Grav g\u00e9n\u00e9rer les tailles par \u00e9tapes r\u00e9guli\u00e8res entre des limites donn\u00e9es, vous pouvez d\u00e9finir manuellement les tailles que Grav doit g\u00e9n\u00e9rer : ![Image r\u00e9tine](retina.jpg?derivatives=[360,720,1200]) Cela g\u00e9n\u00e9rera des versions r\u00e9duites de l'image retina.jpg en trois largeurs : 360, 720 et 1200px. M\u00e9tafichiers Chaque m\u00e9dia que vous r\u00e9f\u00e9rencez dans Grav, par ex. image1.jpg , sample-trailer.mov ou m\u00eame archive.zip a la possibilit\u00e9 d'avoir des variables d\u00e9finies ou m\u00eame remplac\u00e9es via un m\u00e9tafichier . Ces fichiers prennent le format <filename>.meta.yaml . Par exemple, pour une image avec le nom de fichier image1.jpg , vous pouvez cr\u00e9er un m\u00e9tafichier appel\u00e9 image1.jpg.meta.yaml . Vous pouvez ajouter \u00e0 peu pr\u00e8s n'importe quel param\u00e8tre ou \u00e9l\u00e9ment de m\u00e9tadonn\u00e9es en utilisant cette m\u00e9thode. Le contenu de ce fichier doit \u00eatre en syntaxe YAML, un exemple pourrait \u00eatre : image: filters: default: - [cropResize, 300, 300] - sharp alt_text: My Alt Text Si vous utilisez cette m\u00e9thode pour ajouter un style sp\u00e9cifique \u00e0 un fichier ou des balises META pour un seul fichier, vous souhaiterez placer le fichier YAML dans le m\u00eame dossier que le fichier r\u00e9f\u00e9renc\u00e9. Cela garantira que le fichier est extrait avec les donn\u00e9es YAML. C'est un moyen pratique de d\u00e9finir m\u00eame des m\u00e9tadonn\u00e9es sp\u00e9cifiques \u00e0 un fichier, car vous ne pouvez pas le faire \u00e0 partir de la page elle-m\u00eame. Supposons que vous souhaitiez simplement extraire la valeur alt_text r\u00e9pertori\u00e9e pour le fichier image sample-image.jpg . Vous cr\u00e9erez ensuite un fichier appel\u00e9 sample-image.jpg.meta.yaml et le placerez dans le dossier avec le fichier image r\u00e9f\u00e9renc\u00e9. Ensuite, ins\u00e9rez les donn\u00e9es utilis\u00e9es dans l'exemple ci-dessus et enregistrez ce fichier YAML. Dans le fichier Markdown de la page, vous pouvez afficher ces donn\u00e9es en utilisant la ligne suivante : {{ page.media['sample-image.jpg'].meta.alt_text|e }} Cela affichera l'exemple de phrase My Alt Text au lieu de l'image. Ceci n'est qu'un exemple de base. Vous pouvez utiliser cette m\u00e9thode pour un certain nombre de choses, y compris la cr\u00e9ation d'une galerie avec plusieurs points de donn\u00e9es uniques que vous souhaitez r\u00e9f\u00e9rencer pour chaque image. Vos images, par essence, ont un ensemble de donn\u00e9es uniques qui peuvent \u00eatre facilement r\u00e9f\u00e9renc\u00e9es et extraites selon les besoins. Options vid\u00e9o Les options de contr\u00f4le vid\u00e9o en ligne sont une autre fonctionnalit\u00e9 int\u00e9gr\u00e9e \u00e0 Grav. Ces options, ajout\u00e9es en ligne avec le nom du fichier, vous permettent de d\u00e9terminer les param\u00e8tres de lecture autoplay automatique, de contr\u00f4le controls et de boucle loop d'une vid\u00e9o int\u00e9gr\u00e9e. Voici un exemple: ![video.mov]\\(video.mov?loop=1&controls=0&autoplay=1&muet) Les options sont les suivantes : Attribut Explications autoplay Active ( 1 ) ou d\u00e9sactive ( 0 ) la lecture automatique de la vid\u00e9o lors du chargement de la page. controls Active ( 1 ) ou d\u00e9sactive ( 0 ) les contr\u00f4les multim\u00e9dias pour la vid\u00e9o int\u00e9gr\u00e9e. loop Active ( 1 ) ou d\u00e9sactive ( 0 ) la boucle automatique pour la vid\u00e9o, en la rejouant \u00e0 la fin. muted Coupe le son de la vid\u00e9o et autorise g\u00e9n\u00e9ralement sa lecture automatique.","title":"M\u00e9dia"},{"location":"media/#resultat","text":"","title":"R\u00e9sultat :"},{"location":"media/#resultat_1","text":"","title":"R\u00e9sultat :"},{"location":"media/#resultat_2","text":"","title":"R\u00e9sultat :"},{"location":"media/#resultat_3","text":"","title":"R\u00e9sultat :"},{"location":"media/#resultat_4","text":"","title":"R\u00e9sultat :"},{"location":"media/#resultat_5","text":"","title":"R\u00e9sultat :"},{"location":"media/#resultat_6","text":"","title":"R\u00e9sultat :"},{"location":"media/#resultat_7","text":"","title":"R\u00e9sultat :"},{"location":"media/#resultat_8","text":"","title":"R\u00e9sultat :"},{"location":"media/#resultat_9","text":"","title":"R\u00e9sultat :"},{"location":"media/#resultat_10","text":"","title":"R\u00e9sultat :"},{"location":"media/#resultat_11","text":"","title":"R\u00e9sultat :"},{"location":"media/#resultat_12","text":"","title":"R\u00e9sultat :"},{"location":"media/#resultat_13","text":"","title":"R\u00e9sultat :"},{"location":"media/#resultat_14","text":"","title":"R\u00e9sultat :"},{"location":"media/#resultat_15","text":"","title":"R\u00e9sultat :"},{"location":"media/#resultat_16","text":"","title":"R\u00e9sultat :"},{"location":"media/#resultat_17","text":"","title":"R\u00e9sultat :"},{"location":"media/#resultat_18","text":"","title":"R\u00e9sultat :"},{"location":"media/#resultat_19","text":"","title":"R\u00e9sultat :"},{"location":"media/#resultat_20","text":"","title":"R\u00e9sultat :"},{"location":"media/#resultat_21","text":"Your browser does not support the audio tag.","title":"R\u00e9sultat :"},{"location":"media/#resultat_22","text":"Afficher le fichier texte","title":"R\u00e9sultat:"},{"location":"media/#resultat_23","text":"","title":"R\u00e9sultat:"},{"location":"media/#resultat_24","text":"En fonction de votre affichage et de l'impl\u00e9mentation de votre navigateur et de la prise en charge de srcset , vous ne verrez peut-\u00eatre jamais de diff\u00e9rence. Nous avons inclus le balisage HTML dans le troisi\u00e8me onglet afin que vous puissiez voir ce qui se passe derri\u00e8re les \u00e9crans.","title":"R\u00e9sultat :"},{"location":"media/#resultat_25","text":"En fonction de votre affichage et de l'impl\u00e9mentation de votre navigateur et de la prise en charge de wsrcset , vous ne verrez peut-\u00eatre jamais de diff\u00e9rence. Nous avons inclus le balisage HTML dans le quatri\u00e8me onglet afin que vous puissiez voir ce qui se passe derri\u00e8re les \u00e9crans. Tailles avec media queries utilisant des d\u00e9riv\u00e9es","title":"R\u00e9sultat :"},{"location":"media/#resultat_26","text":"En fonction de votre affichage et de l'impl\u00e9mentation de votre navigateur et de la prise en charge de srcset , vous ne verrez peut-\u00eatre jamais de diff\u00e9rence. Nous avons inclus le balisage HTML dans le quatri\u00e8me onglet afin que vous puissiez voir ce qui se passe derri\u00e8re les \u00e9crans.","title":"R\u00e9sultat :"},{"location":"mentions-legales/","text":"Avant-propos Je suis un particulier, ce site est enti\u00e8rement gratuit et destin\u00e9 au partage. Diffuser mes coordonn\u00e9es personnelles ne sert \u00e0 rien ni \u00e0 personne. H\u00e9bergement LWS (www.lws.fr \u2013 Ligne Web Services) S.A.R.L au capital de 500 000 Euros 10, RUE PENTHIEVRE 75008 PARIS FRANCE RCS Paris B 851 993 683 00024 APE 6311Z TVA intra: FR21 851 993 683 SIRET 85199368300024 Cookies Ici il n'y a rien \u00e0 vendre et pas de publicit\u00e9. Aucune information personnelle n'est collect\u00e9e par le pr\u00e9sent site. Il peut cependant utiliser des cookies uniquement techniques. Cela ne n\u00e9cessite pas d'en informer le visiteur ni de lui offrir le choix potentiel au refus de ces cookies. Des informations compl\u00e9mentaires sur ces sujets peuvent \u00eatre consult\u00e9es sur ces deux pages de la CNIL : concernant les donn\u00e9es personnelles ; sur les traceurs . Propri\u00e9t\u00e9 intellectuelle Les images, illustrations, photographies, textes ou tous autres supports pouvant appartenir \u00e0 des tiers sont sourc\u00e9s ou cr\u00e9dit\u00e9s. Sauf indications contraires, ces \u00e9l\u00e9ments restent la propri\u00e9t\u00e9 de leur(s) auteur(s) respectifs ainsi que les marques et/ou logos mentionn\u00e9s sur le site.","title":"Mentions legales"},{"location":"mentions-legales/#avant-propos","text":"Je suis un particulier, ce site est enti\u00e8rement gratuit et destin\u00e9 au partage. Diffuser mes coordonn\u00e9es personnelles ne sert \u00e0 rien ni \u00e0 personne.","title":"Avant-propos"},{"location":"mentions-legales/#hebergement","text":"LWS (www.lws.fr \u2013 Ligne Web Services) S.A.R.L au capital de 500 000 Euros 10, RUE PENTHIEVRE 75008 PARIS FRANCE RCS Paris B 851 993 683 00024 APE 6311Z TVA intra: FR21 851 993 683 SIRET 85199368300024","title":"H\u00e9bergement"},{"location":"mentions-legales/#cookies","text":"Ici il n'y a rien \u00e0 vendre et pas de publicit\u00e9. Aucune information personnelle n'est collect\u00e9e par le pr\u00e9sent site. Il peut cependant utiliser des cookies uniquement techniques. Cela ne n\u00e9cessite pas d'en informer le visiteur ni de lui offrir le choix potentiel au refus de ces cookies. Des informations compl\u00e9mentaires sur ces sujets peuvent \u00eatre consult\u00e9es sur ces deux pages de la CNIL : concernant les donn\u00e9es personnelles ; sur les traceurs .","title":"Cookies"},{"location":"mentions-legales/#propriete-intellectuelle","text":"Les images, illustrations, photographies, textes ou tous autres supports pouvant appartenir \u00e0 des tiers sont sourc\u00e9s ou cr\u00e9dit\u00e9s. Sauf indications contraires, ces \u00e9l\u00e9ments restent la propri\u00e9t\u00e9 de leur(s) auteur(s) respectifs ainsi que les marques et/ou logos mentionn\u00e9s sur le site.","title":"Propri\u00e9t\u00e9 intellectuelle"},{"location":"migrer/","text":"Migrer de Drupal 7 vers Grav Conditions. PHP v7.1 ou sup\u00e9rieur pour les d\u00e9pendances composer. Drush Site de travail Drupal 7 \u00e0 partir duquel le contenu sera export\u00e9. Acc\u00e8s R/W \u00e0 public:// ainsi qu'au dossier des modules utilisateurs sur le site Drupal (typiquement sites/all/modules/contrib) . Installation. T\u00e9l\u00e9chargez et d\u00e9placez le plugin grav_export dans le dossier sites/all/modules/contrib de votre Drupal. Ex\u00e9cutez composer install dans le dossier grav_export pour installer les d\u00e9pendances. Activez le module grav_export via drush en grav_export -y ou l'interface graphique d'administration. Ex\u00e9cutez drush grav_export_all , ou son alias drush gravea , pour exporter tous les \u00e9l\u00e9ments. Voir les autres options ci-dessous. Les fichiers export\u00e9s se trouvent dans [DRUPAL_ROOT]/sites/default/files/grav_export/EXPORT Le plugin Grav https://github.com/david-szabo97/grav-plugin-admin-addon-user-manager est recommand\u00e9 pour afficher et g\u00e9rer les utilisateurs. Suivez les \u00e9tapes ci-dessous pour importer les donn\u00e9es dans Grav. Exporter des utilisateurs depuis Drupal. Commande : drush grav_export_users ou drush graveu g\u00e9n\u00e9rera des fichiers de compte utilisateur Grav. R\u00e9sultats : Comptes d'utilisateurs dans le dossier d'exportation sous EXPORT/accounts/ . Les noms d'utilisateur seront remplis d'un minimum de 3 caract\u00e8res, maximum de 16. Si un nom d'utilisateur est tronqu\u00e9 ou rempli, le nom d'utilisateur aura \u00e9galement l'uid Drupal pour \u00e9viter les collisions. Les mots de passe de chaque compte sont g\u00e9n\u00e9r\u00e9s de mani\u00e8re al\u00e9atoire et n'ont aucun lien avec le compte Drupal respectif. Le mot de passe passe automatiquement \u00e0 un hashed_password une fois que le compte s'authentifie pour la premi\u00e8re fois. Importer des utilisateurs dans Grav. Copiez le dossier EXPORT/accounts dans votre r\u00e9pertoire user (par exemple, les fichiers username.yaml doivent \u00eatre plac\u00e9s dans user/accounts ). Exportation des r\u00f4les d'utilisateur depuis Drupal. Commande : drush grav_export_roles ou drush graver g\u00e9n\u00e9rera un fichier Grav groups.yaml. R\u00e9sultats : Les r\u00f4les d'utilisateur Drupal sont export\u00e9s en tant que groupes Grav dans un fichier groups.yaml dans config/groups.yaml . Quelques notes sur l'exportation de r\u00f4le : *Chaque r\u00f4le Drupal est converti en groupe Grav drupal_<ROLE_WITH_UNDERSCORES> (par exemple, authentificated user devient drupal_authenticated_user ). * Le groupe drupal_administrator re\u00e7oit un acc\u00e8s admin.super ainsi qu'un acc\u00e8s admin.login . * Le groupe drupal_authenticated_user re\u00e7oit l'acc\u00e8s admin.login . * Tous les comptes re\u00e7oivent le groupe \"drupal_authenticated_user\". * Les utilisateurs Drupal avec des r\u00f4les d'administrateur re\u00e7oivent le groupe drupal_administrator . Importation des r\u00f4les d'utilisateur Copiez le dossier EXPORT/confi g dans users/config . Exportation de types de contenu depuis Drupal. Commande : drush grav_export_content_types ou drush gravect g\u00e9n\u00e9rera des plans Grav et des fichiers html.twig. R\u00e9sultats : Pour chaque type de champ d\u00e9fini, drush gravect tentera de cr\u00e9er un plan compatible et un fichier html.twig correspondant pour chaque type de contenu Drupal. Les fichiers seront export\u00e9s vers EXPORT/themes/drupal_export/blueprints et EXPORT/themes/drupal_export/templates respectivement. Limites connues. Champ \"nombre_entier\" La cardinalit\u00e9 dans de nombreux champs Grav ne prend en charge qu'une seule valeur. Seule la premi\u00e8re entr\u00e9e Drupal est export\u00e9e. Champ \"champ d'adresse\" Grav n'a aucun concept de champ d'adresse. Les donn\u00e9es de champ Drupal sont export\u00e9es sous forme de type de formulaire array . Importation de types de contenu dans Grav. Copiez les dossiers EXPORT/themes/drupal_export/blueprints et XPORT/themes/drupal_export/templates dans le th\u00e8me actif dans Grav. Le plugin d'administration devrait maintenant fournir des options suppl\u00e9mentaires pour chaque type de contenu et les champs associ\u00e9s. Remarque : Lorsque le contenu des champs est ajout\u00e9 aux en-t\u00eates de page Grav, l'affichage de ces champs n'est pas export\u00e9 depuis Drupal. Le fichier html.twig devra \u00eatre modifi\u00e9 afin d'afficher tous les champs suppl\u00e9mentaires (en plus du contenu du corps principal). Exporter des n\u0153uds depuis Drupal. Commande : drush grav_export_nodes ou drush graven g\u00e9n\u00e9rera des utilisateurs et des groupes Grav. R\u00e9sultats R\u00e9sultats : Chaque n\u0153ud est export\u00e9 vers sa propre structure de dossiers sous EXPORT/pages , en fonction de l'alias d'URL et du type de contenu de Drupal (c'est-\u00e0-dire pages/content/my_first_page/page.yaml ou pages/content/cool_article/article.yaml ). Les donn\u00e9es de champ Drupal sont stock\u00e9es dans l'en-t\u00eate de la page. Les fichiers sont stock\u00e9s dans EXPORT/data/files/ , suivant un mod\u00e8le de stockage de type Drupal. Dans la sortie drush, des termes de taxonomie suppl\u00e9mentaires peuvent \u00eatre produits. Copiez-les dans le fichier user/config/site.yaml de Grav sous la cl\u00e9 de taxonomie. Importation de n\u0153uds dans des pages Grav. Copiez les dossiers EXPORT/data et EXPORT/pages dans le r\u00e9pertoire `user dans Grav.","title":"Migrer de Drupal 7 vers Grav"},{"location":"multi-langue/","text":"Multi-langue Le support multilingue dans Grav est le r\u00e9sultat direct d'une excellente discussion communautaire sur le sujet. Nous allons maintenant les d\u00e9composer et fournir des exemples sur la fa\u00e7on dont vous pouvez configurer votre site Grav avec plusieurs langues. Langue unique diff\u00e9rente de l'anglais Si vous n'utilisez qu'une seule langue, activez les traductions et ajoutez votre code de langue dans le fichier user/config/system.yaml : languages: supported: - fr ou dans la configuration du syst\u00e8me dans l'Admin : Cela garantira que Grav utilise les cha\u00eenes de langue correctes dans le frontend. De plus, si le th\u00e8me le prend en charge, il ajoutera votre code de langue \u00e0 la balise HTML. Bases multilingues Comme vous devriez d\u00e9j\u00e0 savoir comment Grav utilise les fichiers Markdown dans les dossiers pour d\u00e9finir la structure architecturale ainsi que pour d\u00e9finir les options de page importantes ainsi que le contenu, nous n'aborderons pas directement ces m\u00e9canismes. Cependant, sachez que par d\u00e9faut, Grav recherche un seul fichier .md dans un dossier pour repr\u00e9senter la page. Si vous n'\u00eates pas s\u00fbr d'\u00eatre suffisamment familiaris\u00e9 avec ce principe, veuillez vous r\u00e9f\u00e9rer \u00e0 la section Tutoriel de Base avant de continuer. Avec la prise en charge multilingue activ\u00e9e, Grav recherchera le fichier bas\u00e9 sur la langue appropri\u00e9e, par exemple default.en.md ou default.fr.md . Configuration de la langue Pour que Grav fasse cela, vous devez d'abord configurer une configuration de langage de base dans votre fichier user/config/system.yaml (avec des commentaires pour une meilleure lisibilit\u00e9) : languages: supported: # Supported languages: - en # English language - fr # French language default_lang: en # Set default language to English include_default_lang: true # If true, use /en/path instead of /path for default English language. include_default_lang_file_extension: true # If true, use .en.md file extension instead of .md for default langauge. content_fallback: en: ['en'] # No fallback for English. fr: ['fr', 'en'] # French falls back to English version of the page. En fournissant un bloc langages avec une liste des langues supported prises en charge, vous avez effectivement activ\u00e9 la prise en charge multilingue dans Grav. Dans cet exemple, vous pouvez voir que deux langues prises en charge ont \u00e9t\u00e9 d\u00e9crites ( en et fr ). Ceux-ci vous permettront de prendre en charge les langues Anglaise et Fran\u00e7aise . Si aucune langue n'est explicitement demand\u00e9e (via l'URL ou par code), Grav utilisera l'ordre des langues fournies pour s\u00e9lectionner la bonne langue. Ainsi, dans l'exemple ci-dessus, la langue par d\u00e9faut est en ou Anglais. Si vous aviez fr en premier, le Fran\u00e7ais serait la langue par d\u00e9faut. Par d\u00e9faut, toutes les langues reviennent \u00e0 la langue par d\u00e9faut. Si vous ne voulez pas faire cela, vous pouvez ignorer les replis de langue en utilisant content_fallback , o\u00f9 la clef est la langue et la valeur, un tableau de langues. Vous pouvez bien s\u00fbr fournir autant de langues que vous le souhaitez et vous pouvez m\u00eame utiliser des codes de type de param\u00e8tres r\u00e9gionaux tels que en-GB , en-US et fr-FR . Si vous utilisez cette d\u00e9nomination bas\u00e9e sur les param\u00e8tres r\u00e9gionaux, vous devrez remplacer tous les codes de langue abr\u00e9g\u00e9s par les versions locales. Pages multilingues Par d\u00e9faut dans Grav, chaque page est repr\u00e9sent\u00e9e par un fichier de d\u00e9marquage, par exemple default.md . Lorsque vous activez la prise en charge multilingue, Grav recherchera le fichier Markdown nomm\u00e9 de mani\u00e8re appropri\u00e9e. Par exemple, comme l'anglais est notre langue par d\u00e9faut, il cherchera d'abord default.en.md . Si ce fichier n'est pas trouv\u00e9, il reviendra \u00e0 la valeur par d\u00e9faut de Grav et recherchera default.md pour fournir des informations \u00e0 la page. Ce comportement par d\u00e9faut a chang\u00e9 dans Grav 1.7 . Dans le pass\u00e9, Grav affichait une page Anglaise inexistante en Fran\u00e7ais, maintenant toutes les langues retombent uniquement sur la langue par d\u00e9faut si elles ne sont pas sp\u00e9cifi\u00e9es autrement dans content_fallback . Ainsi, si la page est introuvable dans les langues de secours, la page d'erreur 404 s'affiche \u00e0 la place. Si nous avions le plus basique des sites Grav, avec un seul fichier 01.home/default.md , nous pourrions commencer par renommer default.md en default.en.md , et son contenu pourrait ressembler \u00e0 ceci : --- title: Homepage --- This is my Grav-powered homepage! Ensuite vous pourriez cr\u00e9er une nouvelle page situ\u00e9e dans le m\u00eame dossier 01.home/ appel\u00e9 default.fr.md avec le contenu : --- titre : Page d'accueil --- Ceci est ma page d'accueil g\u00e9n\u00e9r\u00e9e par Grav ! Vous avez maintenant d\u00e9fini deux pages pour votre page d'accueil actuelle en plusieurs langues. Si vous convertissez un site existant pour utiliser plusieurs langues, vous pouvez \u00e9galement d\u00e9finir include_default_lang_file_extension : false pour continuer \u00e0 utiliser l'extension de fichier .md ordinaire pour votre langue principale. Lire la suite.... Langue active via URL Comme l'Anglais est la langue par d\u00e9faut, si vous deviez pointer votre navigateur sans sp\u00e9cifier de langue, vous obtiendriez le contenu tel que d\u00e9crit dans le fichier default.en.md , mais vous pourriez \u00e9galement demander explicitement l'anglais en pointant votre navigateur vers http://yoursite.com/en Pour acc\u00e9der \u00e0 la version fran\u00e7aise, vous utiliserez bien s\u00fbr http://yoursite.com/fr Si vous pr\u00e9f\u00e9rez ne pas utiliser le pr\u00e9fixe de langue pour la langue par d\u00e9faut, d\u00e9finissez include_default_lang : false . Lire la suite... Langue active via le navigateur La plupart des navigateurs vous permettent de configurer les langues dans lesquelles vous pr\u00e9f\u00e9rez voir le contenu. Grav a la capacit\u00e9 de lire ces valeurs http_accept_language et de les comparer aux langues actuellement prises en charge pour le site, et si aucune langue sp\u00e9cifique n'a \u00e9t\u00e9 d\u00e9tect\u00e9e, vous montrer le contenu dans votre langue pr\u00e9f\u00e9r\u00e9e. Pour que cela fonctionne, vous devez activer l'option dans votre fichier user/system.yaml dans la section languages \u200b\u200b: : languages: http_accept_language: true Langage actif bas\u00e9 sur la session Si vous souhaitez m\u00e9moriser la langue active ind\u00e9pendamment de l'URL, vous pouvez activer le stockage bas\u00e9 sur la session de la langue active. Pour l'activer, vous devez vous assurer que vous avez session : enabled : true dans le fichier system.yaml . Ensuite, vous devez activer le param\u00e8tre de langue : languages: session_store_active: true Cela stockera alors la langue active dans la session. D\u00e9finir les param\u00e8tres r\u00e9gionaux sur la langue active Le param\u00e8tre bool\u00e9en d\u00e9finira la m\u00e9thode PHP setlocale() qui contr\u00f4le des \u00e9l\u00e9ments tels que les valeurs mon\u00e9taires, les dates, les comparaisons de cha\u00eenes, les classifications de caract\u00e8res et d'autres param\u00e8tres sp\u00e9cifiques aux param\u00e8tres r\u00e9gionaux sur celui de la langue active. La valeur par d\u00e9faut est false , puis elle utilisera les param\u00e8tres r\u00e9gionaux du syst\u00e8me. Si vous d\u00e9finissez cette valeur sur true , elle remplacera les param\u00e8tres r\u00e9gionaux par la langue active actuelle. languages: override_locale: false Pr\u00e9fixe de langue par d\u00e9faut Par d\u00e9faut, le code de langue par d\u00e9faut est pr\u00e9fix\u00e9 dans toutes les URL. Par exemple, si vous avez un support pour l'Anglais et le Fran\u00e7ais ( en et fr ), et que la valeur par d\u00e9faut est l'Anglais. Une route de page peut ressembler \u00e0 /en/my-page en Anglais et /fr/ma-page en Fran\u00e7ais. Cependant, il est souvent pr\u00e9f\u00e9rable d'avoir la langue par d\u00e9faut sans le pr\u00e9fixe, vous pouvez donc simplement d\u00e9finir cette option sur false et la page en Anglais appara\u00eetra sous la forme /my-page . languages: override_locale: false Extension de fichier par d\u00e9faut Si vous convertissez un site existant pour utiliser plusieurs langues, il peut \u00eatre intimidant de convertir toutes les pages existantes pour utiliser la nouvelle extension de fichier de langue .en.md (si vous utilisez l'Anglais). Dans ce cas, vous pouvez d\u00e9sactiver l'extension de langue sur votre langue d'origine. languages: include_default_lang_file_extension: false Routage multilingue Grav utilise g\u00e9n\u00e9ralement les noms des dossiers pour produire un itin\u00e9raire URL pour une page particuli\u00e8re. Cela permet \u00e0 l'architecture du site d'\u00eatre facilement comprise et mise en \u0153uvre sous la forme d'un ensemble de dossiers imbriqu\u00e9s. Cependant, avec un site multilingue, vous souhaiterez peut-\u00eatre utiliser une URL qui a plus de sens dans cette langue particuli\u00e8re. Si nous avions la structure de dossiers suivante : - 01.animals - 01.mammals - 01.bats - 02.bears - 03.foxes - 04.cats - 02.reptiles - 03.birds - 04.insets - 05.aquatic Cela produirait des URL telles que http://yoursite.com/animals/mammals/bears . C'est parfait pour un site en Anglais, mais si vous souhaitez avoir une version fran\u00e7aise, vous pr\u00e9f\u00e9reriez qu'elle soit traduite de mani\u00e8re appropri\u00e9e. Le moyen le plus simple d'y parvenir est d'ajouter un slug personnalis\u00e9 pour chacun des fichiers de page fr.md . par exemple, la page des mammif\u00e8res pourrait ressembler \u00e0 : --- title: Mammif\u00e8res slug: mammiferes --- Les mammif\u00e8res (classe des Mammalia) forment un taxon inclus dans les vert\u00e9br\u00e9s, traditionnellement une classe, d\u00e9finie d\u00e8s la classification de Linn\u00e9. Ce taxon est consid\u00e9r\u00e9 comme monophyl\u00e9tique... Ceci combin\u00e9 avec les slug-overrides appropri\u00e9s dans les autres fichiers devrait aboutir \u00e0 une URL de http://yoursite.com/animaux/mammiferes/ours qui ressemble beaucoup plus au Fran\u00e7ais ! Une autre option consiste \u00e0 utiliser la prise en charge des routes au niveau de la page et \u00e0 fournir un alias de route complet pour la page. Page d'accueil bas\u00e9e sur la langue Si vous remplacez la route/slug pour la page d'accueil, Grav ne pourra pas trouver la page d'accueil telle que d\u00e9finie par votre option home.alias dans votre system.yaml . Il recherchera /homepage et votre page d'accueil Fran\u00e7aise pourrait avoir un itin\u00e9raire de /page-d-accueil . Afin de prendre en charge les pages d'accueil multilingues, Grav a une nouvelle option qui peut \u00eatre utilis\u00e9e \u00e0 la place de home.alias et qui est simple home.aliases et cela pourrait ressembler \u00e0 ceci : home: aliases: en: /homepage fr: /page-d-accueil De cette fa\u00e7on, Grav sait comment vous diriger vers la page d'accueil si la langue active est l'Anglais ou le Fran\u00e7ais. Mod\u00e8les Twig bas\u00e9s sur la langue Par d\u00e9faut, Grav utilise le nom de fichier Markdown pour d\u00e9terminer le mod\u00e8le Twig \u00e0 utiliser pour le rendu. Cela fonctionne avec plusieurs langues de la m\u00eame mani\u00e8re. Par exemple, default.fr.md recherchera un fichier Twig appel\u00e9 default.html.twig dans les chemins de mod\u00e8le Twig appropri\u00e9s du th\u00e8me actuel et de tous les plugins qui enregistrent les chemins de mod\u00e8le Twig. Avec le multi-langue, Grav ajoute \u00e9galement la langue active actuelle \u00e0 la structure du chemin. Cela signifie que si vous avez besoin d'un fichier Twig sp\u00e9cifique \u00e0 une langue, vous pouvez simplement les placer dans un dossier de langue de niveau racine. Par exemple, si votre th\u00e8me actuel utilise un mod\u00e8le situ\u00e9 dans templates /default.html.twig , vous pouvez cr\u00e9er un dossier templates/fr/ et y placer votre fichier Twig sp\u00e9cifique au fran\u00e7ais : templates/fr/default.html.twig . Une autre option qui n\u00e9cessite une configuration manuelle consiste \u00e0 remplacer le param\u00e8tre template: dans les en-t\u00eates de page. Par example: template: default.fr Cela recherchera un mod\u00e8le situ\u00e9 \u00e0 templates/default.fr.html.twig . Cela vous offre deux options pour fournir des remplacements Twig sp\u00e9cifiques \u00e0 la langue. Si aucun mod\u00e8le Twig sp\u00e9cifique \u00e0 la langue n'est fourni, celui par d\u00e9faut sera utilis\u00e9. Traduction via Twig La fa\u00e7on la plus simple d'utiliser ces cha\u00eenes de traduction dans vos mod\u00e8les Twig consiste \u00e0 utiliser le filtre Twig |t . Vous pouvez \u00e9galement utiliser la fonction Twig t() , mais franchement, le filtre est plus propre et fait la m\u00eame chose : <h1 id=\"site-name\">{{ \"SITE_NAME\"|t|e }}</h1> <section id=\"header\"> <h2>{{ \"HEADER.MAIN_TEXT\"|t|e }}</h2> <h3>{{ \"HEADER.SUB_TEXT\"|t|e }}</h3> </section> En utilisant la fonction Twig t() , la solution est similaire : <h1 id=\"site-name\">{{ t(\"SITE_NAME\")|e }}</h1> <section id=\"header\"> <h2>{{ t(\"HEADER.MAIN_TEXT\")|e }}</h2> <h3>{{ t(\"HEADER.SUB_TEXT\")|e }}</h3> </section> Un autre nouveau filtre/fonction Twig vous permet de traduire \u00e0 partir d'un tableau. Ceci est particuli\u00e8rement utile si vous avez une liste de valeurs telles que les mois de l'ann\u00e9e ou les jours de la semaine. Par exemple, disons que vous avez cette traduction : en: GRAV: MONTHS_OF_THE_YEAR: [January, February, March, April, May, June, July, August, September, October, November, December] Vous pouvez obtenir la traduction appropri\u00e9e pour le mois d'un article avec ce qui suit : {{ 'GRAV.MONTHS_OF_THE_YEAR'|ta(post.date|date('n') - 1e }} Vous pouvez \u00e9galement l'utiliser comme fonction Twig avec ta() . Traductions avec variables Vous pouvez \u00e9galement utiliser des variables dans vos traductions Twig en utilisant la syntaxe sprintf de PHP : SIMPLE_TEXT: There are %d monkeys in the %s Et puis vous pouvez remplir ces variables avec le Twig : {{ \"SIMPLE_TEXT\"|t(12, \"London Zoo\")|e }} aboutissant \u00e0 la traduction : There are 12 monkeys in the London Zoo Traductions complexes Parfois, il est n\u00e9cessaire d'effectuer des traductions complexes avec remplacement dans des langues sp\u00e9cifiques. Vous pouvez utiliser toute la puissance de la m\u00e9thode translate( ) des objets langage avec le filtre/fonction tl . Par exemple: {{ [\"SIMPLE_TEXT\", 12, 'London Zoo']|tl(['fr'])|e }} Traduira la cha\u00eene SIMPLE_TEXT et remplacera les espaces r\u00e9serv\u00e9s par 12 et London Zoo respectivement. Il existe \u00e9galement un tableau transmis avec des traductions de langue \u00e0 essayer dans l'ordre premier trouv\u00e9, premier utilis\u00e9. Cela affichera le r\u00e9sultat en fran\u00e7ais : Il y a 12 singes dans le Zoo de Londres Traductions PHP En plus du filtre et des fonctions Twig, vous pouvez utiliser la m\u00eame approche dans votre plugin Grav : $translation = $this->grav['language']->translate(['HEADER.MAIN_TEXT']); Vous pouvez \u00e9galement sp\u00e9cifier une langue : $translation = $this->grav['language']->translate(['HEADER.MAIN_TEXT'], 'fr'); Pour traduire un \u00e9l\u00e9ment sp\u00e9cifique dans un tableau, utilisez : $translation = $this->grav['language']->translateArray('GRAV.MONTHS_OF_THE_YEAR', 3); Traductions de plugins et de th\u00e8mes Vous pouvez \u00e9galement fournir vos propres traductions dans les plugins et les th\u00e8mes. Cela se fait en cr\u00e9ant un fichier languages.yaml \u00e0 la racine de votre plugin ou th\u00e8me (par exemple /user/plugins/error/languages.yaml , ou user/themes/antimatter/languages.yaml ), et doit contenir toutes les langues prises en charge pr\u00e9fix\u00e9 par le code de langue ou de param\u00e8tres r\u00e9gionaux : en: PLUGIN_ERROR: TITLE: Error Plugin DESCRIPTION: The error plugin provides a simple mechanism for handling error pages within Grav. fr: PLUGIN_ERROR: TITLE: Plugin d'Erreur DESCRIPTION: Le plugin d'erreur fournit un m\u00e9canisme simple de manipulation des pages d'erreur au sein de Grav. La convention pour les plugins est d'utiliser PLUGIN_PLUGINNAME. comme pr\u00e9fixe pour toutes les cha\u00eenes de langue, pour \u00e9viter tout conflit de nom. Les th\u00e8mes sont moins susceptibles d'introduire des conflits de cha\u00eenes de langue, mais c'est une bonne id\u00e9e de pr\u00e9fixer les cha\u00eenes ajout\u00e9es dans les th\u00e8mes avec THEME_THEMENAME . Remplacement de traduction Si vous souhaitez remplacer une traduction particuli\u00e8re, placez simplement la paire cl\u00e9/valeur modifi\u00e9e dans un fichier de langue appropri\u00e9 dans votre dossier user/languages/ . Par exemple, un fichier appel\u00e9 user/languages/en.yaml pourrait contenir : PLUGIN_ERROR: TITLE: My Error Plugin Cela garantira que vous pouvez toujours remplacer une cha\u00eene de traduction sans d\u00e9ranger les plugins ou les th\u00e8mes eux-m\u00eames, et \u00e9vitera \u00e9galement d'\u00e9craser une traduction personnalis\u00e9e lors de leur mise \u00e0 jour. Avanc\u00e9 Gestion de la langue bas\u00e9e sur l'environnement Vous pouvez tirer parti de la configuration de l'environnement de Grav pour acheminer automatiquement les utilisateurs vers la version correcte de votre site en fonction de l'URL. Par exemple, si vous aviez une URL telle que http://french.monsite.com\u00e8 qui \u00e9tait un alias pour votre http://www.monsite.com` standard, vous pourriez configurer une configuration d'environnement : /user/french.monsite.com/config/system.yaml languages: supported: - fr - en Ceci utilise un ordre de langue invers\u00e9 donc la langue par d\u00e9faut est maintenant fr donc la langue fran\u00e7aise s'affichera par d\u00e9faut. Routes d'alias de langue \u00c9tant donn\u00e9 que chaque page peut avoir son propre itin\u00e9raire personnalis\u00e9, il serait difficile de basculer entre diff\u00e9rentes versions linguistiques de la m\u00eame page. Cependant, il existe une nouvelle m\u00e9thode Page.rawRoute() sur l'objet Page qui obtiendra le m\u00eame itin\u00e9raire brut pour l'une des diff\u00e9rentes traductions linguistiques d'une m\u00eame page. Tout ce que vous auriez \u00e0 faire est de mettre le code lang devant pour obtenir le bon chemin vers une version linguistique sp\u00e9cifique d'une page. Par exemple, supposons que vous \u00eates sur une page en anglais avec une route personnalis\u00e9e : /my-custom-english-page La page fran\u00e7aise a la route personnalis\u00e9e de : /ma-page-francaise-personnalisee Vous pourriez obtenir la page brute de la page anglaise et cela pourrait \u00eatre : /blog/custom/my-page Ensuite, ajoutez simplement la langue que vous voulez et c'est votre nouvelle URL ; /fr/blog/custom/ma-page Cela r\u00e9cup\u00e9rera la m\u00eame page que /ma-page-francaise-personnalisee . Assistance \u00e0 la traduction Grav fournit un m\u00e9canisme simple mais puissant pour fournir des traductions dans Twig et \u00e9galement via PHP pour une utilisation dans les th\u00e8mes et les plugins. Ceci est activ\u00e9 par d\u00e9faut et utilisera la langue en si aucune langue n'est d\u00e9finie. Pour activer ou d\u00e9sactiver manuellement les traductions, il existe un param\u00e8tre dans votre system.yaml : languages: translations: true Les traductions utilisent la m\u00eame liste de langues que celle d\u00e9finie par languages: supported: dans votre system.yaml . Le syst\u00e8me de traduction fonctionne de mani\u00e8re similaire \u00e0 la configuration Grav et il existe plusieurs endroits et fa\u00e7ons de fournir des traductions. Le premier endroit o\u00f9 Grav recherche les fichiers de traduction est dans le dossier system/languages . Les fichiers doivent \u00eatre cr\u00e9\u00e9s au format : en.yaml , fr.yaml , etc. Chaque fichier yaml doit contenir un tableau ou des tableaux imbriqu\u00e9s de paires cl\u00e9/valeur : SITE_NAME: My Blog Site HEADER: MAIN_TEXT: Welcome to my new blog site SUB_TEXT: Check back daily for the latest news Pour faciliter l'identification, Grav pr\u00e9f\u00e8re l'utilisation de cha\u00eenes de langue en majuscules, car cela aide \u00e0 d\u00e9terminer les cha\u00eenes non traduites et les rend \u00e9galement plus claires lorsqu'elles sont utilis\u00e9es dans les mod\u00e8les Twig. Grav a la capacit\u00e9 de parcourir les langues prises en charge pour trouver une traduction si aucune pour la langue active n'est trouv\u00e9e. Ceci est activ\u00e9 par d\u00e9faut mais peut \u00eatre d\u00e9sactiv\u00e9 via l'option translations_fallback : languages: translations_fallback: true Aidez Grav \u00e0 atteindre une communaut\u00e9 d'utilisateurs plus large en fournissant des traductions dans votre langue . Nous utilisons la plateforme de traduction Crowdin pour faciliter la traduction des plugins Grav Core et Grav Admin . Enregistrez-vous et commencez \u00e0 traduire d\u00e8s aujourd'hui ! S\u00e9lecteur de langue Vous pouvez t\u00e9l\u00e9charger un simple plugin Language Switching via le plugin Admin, ou via le GPM avec : bin/gpm install langswitcher La documentation pour la configuration et la mise en \u0153uvre se trouve sur GitHub . Configuration avec des domaines sp\u00e9cifiques \u00e0 une langue Configurez votre site avec la gestion des langues bas\u00e9e sur l'environnement pour attribuer des langues par d\u00e9faut (la premi\u00e8re langue) aux domaines. Assurez-vous que l'option pages.redirect_default_route: true est d\u00e9fini sur true dans votre system.yaml . Ajoutez ce qui suit \u00e0 votre fichier .htaccess et adaptez les slugs de langage et les noms de domaine \u00e0 vos besoins : # http://www.cheat-sheets.org/saved-copy/mod_rewrite_cheat_sheet.pdf # http://www.workingwith.me.uk/articles/scripting/mod_rewrite # handle top level e.g. http://grav-site.com/de RewriteRule ^en/?$ \"http://grav-site.com\" [R=302,L] RewriteRule ^de/?$ \"http://grav-site.de\" [R=302,L] # handle sub pages, exclude admin path RewriteCond %{REQUEST_URI} !(admin) [NC] RewriteRule ^en/(.*)$ \"http://grav-site.com/$1\" [R=302,L] RewriteCond %{REQUEST_URI} !(admin) [NC] RewriteRule ^de/(.*)$ \"http://grav-site.de/$1\" [R=302,L] Si vous savez comment simplifier les r\u00e8gles de r\u00e9\u00e9criture, veuillez modifier cette page sur GitHub en cliquant sur le lien Edit en haut de la page. Assurez-vous d'ajouter ces r\u00e8gles avant les r\u00e8gles par d\u00e9faut fournies avec Grav CMS. Logique de langage dans les mod\u00e8les Twig Il est souvent n\u00e9cessaire d'acc\u00e9der \u00e0 l'\u00e9tat et \u00e0 la logique de la langue \u00e0 partir des mod\u00e8les Twig. Par exemple, si vous avez besoin d'acc\u00e9der \u00e0 un certain fichier image qui est diff\u00e9rent pour une langue particuli\u00e8re et qui porte un nom diff\u00e9rent ( myimage.en.jpg et myimage.fr.jpg ). Pour afficher la version correcte de l'image, vous devez conna\u00eetre la langue active actuelle. Ceci est possible dans Grav en acc\u00e9dant \u00e0 l'objet Language via l'objet Grav et en appelant la m\u00e9thode appropri\u00e9e. Dans l'exemple ci-dessus, cela pourrait \u00eatre r\u00e9alis\u00e9 avec le code Twig suivant : {{ page.media.images['myimage.'~grav.language.getActive~'.jpg'].html()|raw }} L'appel getActive dans Twig appelle effectivement Language->getActive() pour renvoyer le code de langue actif actuel. Voici quelques m\u00e9thodes linguistiques utiles : getLanguages() - Renvoie un tableau de toutes les langues prises en charge getLanguage() - Renvoie l'actif actuel, sinon renvoie la langue par d\u00e9faut getActive() - Renvoie la langue active actuelle getDefault() - Renvoie la (premi\u00e8re) langue par d\u00e9faut Pour une liste compl\u00e8te des m\u00e9thodes disponibles, vous pouvez regarder dans le fichier /system/src/Grav/Common/Language/Language.php .","title":"Multi langue"},{"location":"obtenir-aide/","text":"Obtenir de l'aide Bien que nous ayons fait de notre mieux pour couvrir autant de sujets possible dans la documentation, il est in\u00e9vitable qu'il y ait des questions sur Grav auxquelles nous n'avons pas r\u00e9pondu. Nous voulons \u00eatre aussi accessibles que possible, nous avons donc plusieurs m\u00e9thodes pour obtenir de l'aide directement des d\u00e9veloppeurs : Forum Nous avons une nouvelle solution de forum en temps r\u00e9el utilisant la plateforme Discord pour fournir un moyen simple d'obtenir rapidement des r\u00e9ponses \u00e0 vos questions sur Grav. Twitter Nous vous recommandons vivement de nous suivre sur Twitter , car il nous permet de contacter en temps r\u00e9el nos abonn\u00e9s et de les informer des actualit\u00e9s et des \u00e9v\u00e9nements li\u00e9s au d\u00e9veloppement de Grav. Blog Grav Vous pouvez participer \u00e0 une discussion sur l'un des sujets que nous publions sur le blog Grav Development via les commentaires. Nous publierons toutes les principales nouvelles et informations sur notre blog, ainsi que des articles utiles sur le d\u00e9veloppement en g\u00e9n\u00e9ral. Nous pr\u00e9voyons \u00e9galement de partager des tutoriels et des conseils sur la fa\u00e7on de tirer le meilleur parti de Grav. Probl\u00e8mes li\u00e9s \u00e0 GitHub Si vous trouvez un bogue, avez une question g\u00e9n\u00e9rale ou m\u00eame si vous souhaitez contribuer au projet Grav dans son ensemble, vous pouvez utiliser le tracker Grav GitHub Issues . Nous sommes tr\u00e8s diligents pour r\u00e9pondre aux probl\u00e8mes publi\u00e9s ici, et cela peut fournir un moyen utile d'entamer une conversation avec nous. Si vous rencontrez un probl\u00e8me sp\u00e9cifique avec l'un de nos plugins, th\u00e8mes ou squelettes, vous pouvez \u00e9galement soumettre un probl\u00e8me sur ce r\u00e9f\u00e9rentiel. Chatter sur Discord Vous pouvez discuter avec nous en direct sur Discord . Nous sommes r\u00e9cemment pass\u00e9s de Slack \u00e0 Discord pour notre plateforme de chat communautaire, et maintenant nous nous y trouvons. Alors rejoignez-nous et impliquez-vous dans la communaut\u00e9 grandissante de Grav !","title":"Obtenir de l'aide"},{"location":"paas-hebergement-azure/","text":"Microsoft Azure Microsoft Azure est une plate-forme de cloud computing de niveau entreprise, ouverte et flexible. Il existe plusieurs fa\u00e7ons de d\u00e9ployer Grav dans Azure, mais ce didacticiel vous guidera \u00e0 l'aide de l'application Web Azure (PaaS). Choses dont vous aurez besoin. Un compte Azure Compte Github Une copie de Grav Inscription sur Azure. Commencez par cr\u00e9er un compte sur Azure, vous aurez acc\u00e8s \u00e0 des services gratuits plus 150 \u00a3 (Royaume-Uni) de cr\u00e9dit \u00e0 utiliser pendant les 30 premiers jours. Inscription sur GitHub. Si vous n'avez pas de compte GitHub, veuillez en cr\u00e9er un , le plan gratuit est suffisant. Cloner le code source. Vous avez besoin d'une copie de Grav pour suivre ce tutoriel, je sugg\u00e9rerais de t\u00e9l\u00e9charger les fichiers Grav et Admin Plugin de base, et de cr\u00e9er un r\u00e9f\u00e9rentiel Github avec ces fichiers Vous devriez maintenant disposer de tous les composants n\u00e9cessaires pour d\u00e9ployer une copie de travail de Grav dans Azure. Fichier Web.Config. En plus du code Grav, vous avez besoin d'un fichier web.config. Le fichier web.config est un fichier XML qui se trouve dans le dossier racine de l'application Web et contient g\u00e9n\u00e9ralement les principaux param\u00e8tres et la configuration de l'application Web. Un exemple de fichier web.config est disponible sur le site. Ce fichier web.config couvre ce que l'application Web doit faire avec des formats de fichiers tels que .woff et .woff2, qui font d\u00e9sormais partie des derniers packs Font Awesome . Grav a \u00e9galement inclus des exemples de fichiers web.config dans leurs fichiers source, vous pouvez les trouver dans le dossier webserver-configs. Une fois que vous avez configur\u00e9 votre web.config, vous devez le t\u00e9l\u00e9charger sur votre r\u00e9f\u00e9rentiel Grav GitHub, il doit \u00eatre au niveau racine. Installation et ex\u00e9cution de Grav sur Azure. Configuration de votre application Web. La premi\u00e8re \u00e9tape consiste \u00e0 vous connecter au portail Azure , cliquez sur Cr\u00e9er une ressource dans le menu de gauche. Recherchez l'application Web et s\u00e9lectionnez le service Un nouveau panneau s'ouvrira, d\u00e9crivant le service Web App. Au bas de la page, vous trouverez un bouton de cr\u00e9ation, lorsque vous initiez qu'une autre lame s'ouvrira. Plusieurs questions vous seront pos\u00e9es. Le nom de l'application fera partie de l'URL publique que votre site Web aura lors de sa premi\u00e8re cr\u00e9ation, L'abonnement est le plan dans lequel votre application Web sera h\u00e9berg\u00e9e et d'o\u00f9 proviendra le paiement du service Un groupe de ressources au sein d'Azure est un moyen de regrouper logiquement vos services, le nom de ce groupe est priv\u00e9 et vous seul le verrez Une application Web Azure peut s'ex\u00e9cuter sur une plateforme Windows, Linux ou Docker. Pour Grav s\u00e9lectionnez Windows Le plan de service d'application/l'emplacement d\u00e9termine le centre de donn\u00e9es dans lequel votre application Web r\u00e9sidera dans Azure et le co\u00fbt de celui-ci Application Insights est le service sur Azure qui peut vous aider \u00e0 surveiller les probl\u00e8mes de votre application Web et \u00e0 comprendre comment vos utilisateurs finaux interagissent avec elle. Ma recommandation concernant le plan App Service serait de s\u00e9lectionner le plan Dev/Test F1 \u00e0 des fins de test. Le plan a quelques limitations mais il vous donnera la possibilit\u00e9 de d\u00e9ployer votre premier site Grav sur Azure sans encourir de frais. En termes d'emplacement, je choisirais celui qui est proche de votre emplacement. Dans cet exemple \u00e9galement, j'\u00e9viterais de d\u00e9ployer Application Insights car il doit \u00eatre cod\u00e9 pour s'int\u00e9grer \u00e0 Grav. Votre application Web devrait se d\u00e9ployer en quelques minutes. Installer Composer. Composer est un gestionnaire de d\u00e9pendances pour PHP. Composer g\u00e9rera les d\u00e9pendances dont vous avez besoin projet par projet, ce qui signifie que Composer int\u00e9grera toutes les biblioth\u00e8ques, d\u00e9pendances et d\u00e9pendances requises pour votre application. Comme Grav est une application PHP, nous devons nous assurer que Composer est install\u00e9 sur l'application Web pour que Grav fonctionne correctement. Pour ce faire, suivez ces \u00e9tapes : - Ouvrez votre application Web - Cliquez sur le param\u00e8tre Extensions - Cliquez sur Ajouter - S\u00e9lectionnez Composer - Cliquez sur OK Une fois Composer install\u00e9 sur votre application Web, vous \u00eates maintenant pr\u00eat \u00e0 d\u00e9ployer votre code. D\u00e9ploiement de votre code. Maintenant que votre application Web est op\u00e9rationnelle et que vous avez le code, il est temps de la d\u00e9ployer. Pour ce faire, ouvrez l'application Web dans le portail Azure. Acc\u00e9dez au panneau Options de d\u00e9ploiement S\u00e9lectionnez GitHub comme source Il vous sera demand\u00e9 des informations d'identification pour votre compte GitHub, puis des options sur le r\u00e9f\u00e9rentiel et la branche \u00e0 extraire, s\u00e9lectionnez les options qui vous conviennent. Azure va maintenant commencer \u00e0 extraire votre code de GitHub, dans quelques minutes, votre site devrait \u00eatre en ligne Informations Compl\u00e9mentaires. Domaine personnalis\u00e9. Si vous souhaitez utiliser votre propre URL de site Web, veuillez suivre la documentation officielle. Toujours activ\u00e9. Par d\u00e9faut, toutes les applications Web Azure sont d\u00e9charg\u00e9es si elles sont inactives pendant un certain temps. Il s'agit d'aider \u00e0 pr\u00e9server les ressources. Si vous avez s\u00e9lectionn\u00e9 un plan de base ou standard, vous pouvez activer le mode Always On , qui gardera l'application charg\u00e9e tout le temps. Le param\u00e8tre Toujours activ\u00e9 se trouve dans le panneau Param\u00e8tres d'application de votre application Web. Quotas. Si vous avez s\u00e9lectionn\u00e9 l'un des plans d'application Web gratuite ou partag\u00e9e pour votre d\u00e9ploiement, vous serez limit\u00e9 en ce qui concerne l'espace de stockage et les ressources de calcul que vous pouvez utiliser. Pour surveiller ces param\u00e8tres, vous devez surveiller le panneau Quotas.","title":"Microsoft Azure"},{"location":"paas-hebergement-cloudways/","text":"Cloudways - Cloud g\u00e9r\u00e9 pour l'h\u00e9bergement PHP Cloudways est une plate-forme cloud g\u00e9r\u00e9e pour les applications Web bas\u00e9es sur PHP. Sur Cloudways, vous pouvez choisir votre serveur parmi quatre fournisseurs de cloud : DigitalOcean, Vultr, Google Cloud Engine (GCE) et Amazon Web Services (AWS) pour y ex\u00e9cuter votre travail PHP. Il permet \u00e0 l'utilisateur de lancer des serveurs cloud en quelques minutes pour le d\u00e9veloppement d'applications PHP. La gestion des serveurs cloud est le travail de Cloudways ; vous n'\u00eates responsable que de votre application Grav CMS. R\u00e9cemment, Cloudways a interview\u00e9 l'un des principaux d\u00e9veloppeurs de Grav CMS Andy Miller . S'inscrire sur Cloudways. Tout d''abord cr\u00e9er un compte sur Cloudways en utilisant votre compte GitHub. Si vous ne souhaitez pas utiliser vos informations d'identification Grav CMS, vous pouvez cr\u00e9er un compte en utilisant une adresse e-mail. Apr\u00e8s vous \u00eatre inscrit sur Cloudways et avoir lanc\u00e9 une application PHP Stack, suivez ces \u00e9tapes pour installer et ex\u00e9cuter Grav CMS sur votre serveur cloud : Installer et ex\u00e9cuter Grav sur Cloudways. Connectez-vous au terminal SSH et acc\u00e9dez au dossier public_html de votre application. $ | cd applications/<foldername>/public_html/ Acc\u00e9dez \u00e0 la page de t\u00e9l\u00e9chargement de Grav CMS et copiez le lien de t\u00e9l\u00e9chargement. Maintenant, allez dans le terminal et t\u00e9l\u00e9chargez-le en utilisant la commande suivante $ | wget https://github.com/getgrav/grav/releases/download/1.7.28/grav-admin-v1.7.28.zip Apr\u00e8s l'avoir t\u00e9l\u00e9charg\u00e9, d\u00e9compressez le fichier. $ | unzip grav-admin-v1.7.28.zip C'est \u00e7a! Grav CMS est pr\u00eat \u00e0 \u00eatre utilis\u00e9 sur la plate-forme d'h\u00e9bergement PHP Cloudways. Dirigez-vous vers l'URL de votre Application Staging et ajoutez /grav-admin \u00e0 la fin de l'URL. Maintenance et mise \u00e0 jour de Grav sur Cloudways. De temps en temps, vous pouvez rencontrer des probl\u00e8mes avec Grav sur Cloudways en raison de leur structure d'autorisations inhabituelle. Pour r\u00e9initialiser les autorisations de vos fichiers, connectez-vous \u00e0 votre compte Cloudways, acc\u00e9dez \u00e0 votre application, acc\u00e9dez aux param\u00e8tres de l'application et cliquez sur R\u00e9initialiser l'autorisation . Cela peut r\u00e9soudre tous les probl\u00e8mes d'autorisations de fichiers li\u00e9s \u00e0 la mise en cache, \u00e0 la connexion, aux mises \u00e0 jour ou aux sauvegardes.","title":"Cloudways"},{"location":"paas-hebergement-dokku/","text":"Dokku Dokku est un \"mini-Heroku\" auto-h\u00e9berg\u00e9 bas\u00e9 sur Docker que vous pouvez ex\u00e9cuter sur n'importe quelle machine virtuelle (VM), locale ou distante. Les principaux avantages de son utilisation seraient : Possibilit\u00e9 d'utiliser les packs de construction Heroku, les Procfiles et d'autres \u00e9l\u00e9ments architecturaux Possibilit\u00e9 d'utiliser les fichiers de composition Docker Auto-h\u00e9berg\u00e9, ce qui vous permet de contr\u00f4ler le co\u00fbt des machines virtuelles ou de les ex\u00e9cuter localement sans frais Utiliser Git comme m\u00e9canisme de d\u00e9ploiement Certificats SSL gratuits via le m\u00e9canisme Let's Encrypt int\u00e9gr\u00e9 Ex\u00e9cutez plusieurs sites Grav sur une seule machine virtuelle avec Dokku La premi\u00e8re \u00e9tape consiste \u00e0 l'installer dans une nouvelle machine virtuelle, en ex\u00e9cutant l'une de ces distributions de syst\u00e8me d'exploitation : Ubuntu x64 - Toute version actuellement prise en charge Debian 8.2+ x64 CentOS 7 x64 (exp\u00e9rimental) Arch Linux x64 (exp\u00e9rimental) Pour installer la derni\u00e8re version stable, connectez-vous via Secure Shell (SSH) \u00e0 votre VM et ex\u00e9cutez les commandes suivantes en tant qu'utilisateur ayant acc\u00e8s \u00e0 root (sudo) : $ | wget https://raw.githubusercontent.com/dokku/dokku/v0.17.9/bootstrap.sh $ | sudo DOKKU_TAG=v0.17.9 bash bootstrap.sh Une fois le script d'installation termin\u00e9, vous devez acc\u00e9der \u00e0 l'adresse IP ou au nom de domaine de votre machine virtuelle dans un navigateur Web pour terminer l'installation. L'\u00e9cran vous demandera : Une cl\u00e9 SSH publique - Elle est utilis\u00e9e comme jeton d'authentification pour les d\u00e9ploiements (comme le fait Github ou Gitlab) Astuce de pro : si vous utilisez Vultr ou Digital Ocean , vous pouvez ajouter la cl\u00e9 SSH \u00e0 la VM \u00e0 partir du tableau de bord et elle sera automatiquement ajout\u00e9e par Dokku. Nom d'h\u00f4te - doit correspondre au nom d'h\u00f4te de la VM Choisissez entre l'option d'utiliser la d\u00e9nomination de l'h\u00f4te virtuel ou les sous-dossiers pour les applications Le nommage de l'h\u00f4te virtuel est g\u00e9n\u00e9ralement pr\u00e9f\u00e9r\u00e9, mais vous pouvez utiliser l'un ou l'autre. Si vous suivez le chemin de d\u00e9nomination de l'h\u00f4te virtuel, vous devez ajouter un domaine ou un sous-domaine \u00e0 votre machine virtuelle, via un fournisseur de service de nom de domaine comme Cloudflare et \u00e9galement ajouter un sous-domaine g\u00e9n\u00e9rique de ce domaine ou sous-domaine. Pour plus de simplicit\u00e9, vous pouvez utiliser la structure de sous-dossiers et l'adresse IP de la VM comme nom d'h\u00f4te Une fois l'installation termin\u00e9e, dans le terminal de votre VM, cr\u00e9ez une nouvelle application pour votre site Web Grav : $ | dokku apps:create my-grav-site Revenons maintenant \u00e0 votre ordinateur local. Consultez l'exemple PHP \"Getting Started\" fourni par Heroku avec Git, dans la racine Web de votre machine locale, afin que vous puissiez tester le site localement avant de le d\u00e9ployer. $ | git clone https://github.com/heroku/php-getting-started.git your-folder $ | cd your-folder Ajoutez une t\u00e9l\u00e9commande Git \u00e0 votre serveur Dokku en proc\u00e9dant comme suit : $ | git remote add dokku dokku@your-vm-hostname-or-ip:my-grav-site et $ | git push dokku master Apr\u00e8s le d\u00e9ploiement, vous devriez voir une sortie similaire \u00e0 celle-ci (ceci provient d'une application Rails, c'est donc un peu diff\u00e9rent mais fonctionne comme un exemple): $ | Counting objects: 231, done. $ | Delta compression using up to 8 threads. $ | Compressing objects: 100% (162/162), done. $ | Writing objects: 100% (231/231), 36.96 KiB | 0 bytes/s, done. $ | Total 231 (delta 93), reused 147 (delta 53) $ | -----> Cleaning up... $ | -----> Building ruby-getting-started from herokuish... $ | -----> Adding BUILD_ENV to build environment... $ | -----> Ruby app detected $ | -----> Compiling Ruby/Rails $ | -----> Using Ruby version: ruby-2.2.1 $ | -----> Installing dependencies using 1.9.7 $ | Running: bundle install --without development:test --path vendor/bundle --binstubs $ | vendor/bundle/bin -j4 --deployment $ | Fetching gem metadata from https://rubygems.org/........... $ | Fetching version metadata from https://rubygems.org/... $ | Fetching dependency metadata from https://rubygems.org/.. $ | Using rake 10.4.2 $ | $ | ... $ | $ | =====> Application deployed: $ | http://ruby-getting-started.dokku.me \u00c0 la fin de la sortie de d\u00e9ploiement, vous verrez l'URL de votre nouvelle application. Allez-y et visitez-le. Vous devriez maintenant voir l'exemple de projet PHP. Maintenant que tout est d\u00e9fini, vous \u00eates pr\u00eat \u00e0 continuer et \u00e0 ex\u00e9cuter Grav au lieu du site d'exemple. Tout d'abord, supprimez le dossier web/ dans votre dossier de site actuel. Copiez-y les fichiers de votre site Grav, en vous assurant que vous copiez \u00e9galement le fichier cach\u00e9 .htaccess . Remplacez tous les fichiers qui s'y trouvaient d\u00e9j\u00e0. Ouvrez maintenant le Procfile . Il s'agit d'un fichier sp\u00e9cifique \u00e0 Heroku. Changez la ligne en web: vendor/bin/heroku-php-apache2 ./ Vous devez vous assurer que le site fonctionne localement, avant de le t\u00e9l\u00e9charger sur Heroku, juste pour vous assurer qu'il n'y a pas d'erreurs. Validez maintenant dans le r\u00e9f\u00e9rentiel avec : git add . ; git commit -am 'Added Grav' Modifiez ensuite composer.json et ajoutez une commande de post-d\u00e9ploiement \u00e0 la section des scripts : 1 | \"scripts\": { 2 | \"compiler\": [ 3 | \"installation bin/grav\", 4 | \"bin/gpm installer quark -y\" 5 | ] 6 | } et validez-le dans le r\u00e9f\u00e9rentiel avec: $ | git add . ; git commit -am 'Add post deploy bin/grav install' Puis lancez $ | git push dokku master et le site devrait \u00eatre pr\u00eat \u00e0 partir ! En raison de la nature \u00e9ph\u00e9m\u00e8re du syst\u00e8me de fichiers de Dokku, tous les plugins ou th\u00e8mes n\u00e9cessaires doivent \u00eatre ajout\u00e9s \u00e0 composer.json comme ci-dessus et y \u00eatre conserv\u00e9s afin qu'ils soient install\u00e9s chaque fois que le site est pouss\u00e9 vers Heroku. Vous pouvez rendre l'instance Heroku persistante, mais ce n'est pas une bonne id\u00e9e pour faire \u00e9voluer l'application \u00e0 l'avenir. Par exemple, si vous avez besoin du plugin Admin et d'un th\u00e8me, ajoutez-les dans composer : 1 | \"scripts\": { 2 | \"compile\": [ 3 | \"bin/grav install\", 4 | \"bin/gpm install admin -y\", 5 | \"bin/gpm install awesome-theme-name-here -y\" 6 | ] 7 | } Remarque : Un merci sp\u00e9cial \u00e0 l'auteur du guide Heroku, car il a \u00e9t\u00e9 utilis\u00e9 comme base pour celui-ci en raison des similitudes entre Dokku et Heroku.","title":"Dokku"},{"location":"paas-hebergement-fortrabbit/","text":"Fortrabbit - H\u00e9bergement PHP Fortrabbit - s\u00e9curis\u00e9 comme fort knox, rapide comme un lapin - est un service d'h\u00e9bergement cloud g\u00e9r\u00e9 d\u00e9di\u00e9 \u00e0 PHP. Il prend en charge un d\u00e9veloppement PHP moderne avec une infrastructure d'h\u00e9bergement orient\u00e9e micro-services - parfait pour Grav. Fortrabbit est une plate-forme en tant que service, donc un peu diff\u00e9rente de l'h\u00e9bergement traditionnel. S'inscrire. Pour vous inscrire \u00e0 Fortrabbit, il vous suffit de v\u00e9rifier votre adresse e-mail et de configurer un mot de passe. Faites tourner une application. Choisissez un pr\u00e9r\u00e9glage ou configurez vous-m\u00eame les mises \u00e0 l'\u00e9chelle d'un seul composant. Grav - sans plugins - ne n\u00e9cessite pas d'\u00e9normes quantit\u00e9s de RAM. Grav n'a pas besoin d'une base de donn\u00e9es MySQL \u2014 alors d\u00e9s\u00e9lectionnez-la. Commencez avec le plus petit plan et augmentez-le si n\u00e9cessaire. Il existe \u00e9galement un essai gratuit - qui est complet mais limit\u00e9 dans le temps. Votre application sera d\u00e9truite lorsque l'application sera termin\u00e9e. Ensuite, vous pouvez commencer un nouvel essai. Vous pouvez \u00e9galement demander \u00e0 prolonger une p\u00e9riode d'essai. Installer localement. Commencez par t\u00e9l\u00e9charger et d\u00e9compresser le dernier Grav localement. Il d\u00e9compresse dans le sous-dossier grav . Vous pouvez configurer votre localhost pour servir le site grav localement maintenant. D\u00e9ployer sur Fortrabbit. Maintenant, vous pouvez le pousser. Acc\u00e9dez au dossier du projet et configurez-le avec votre t\u00e9l\u00e9commande Git sur Fortrabbit : $ | $ cd grav $ | $ git init . $ | $ git remote add fortrabbit git@deploy.eu2.frbit.com:your-app.git Avant de valider quoi que ce soit, vous devez exclure le dossier vendor/ et le dossier cache/ . Cr\u00e9ez le fichier .gitignore avec le contenu suivant : vendeur cache/* !cache/.gitkeep Vous pouvez maintenant tout ajouter et tout pousser dans votre application : $ | $ git add -A $ | $ git commit -m 'Initial' $ | $ git push -u fortrabbit master Termin\u00e9 : le premier d\u00e9ploiement d\u00e9clenche une installation de Composer \u00e0 distance, ce qui peut prendre quelques minutes. Vous pouvez le regarder se construire dans le flux de sortie Git. Maintenant, votre site Grav est en ligne. Chaque application est livr\u00e9e avec une URL d'application (votre-application.frb.io) que vous pouvez visiter dans le navigateur. R\u00e9p\u00e9tez : cr\u00e9ez votre th\u00e8me et votre contenu localement et poussez-le simplement vers la branche principale de Fortrabbit pour le d\u00e9ployer. Le deuxi\u00e8me d\u00e9ploiement ne prendra que quelques secondes. Lectures compl\u00e9mentaires. Ce ne sont que les bases, visitez le guide d'installation et de r\u00e9glage de Fortrabbit Grav pour en savoir plus sur les th\u00e8mes, les plugins et les bizarreries.","title":"Fortrabbit"},{"location":"paas-hebergement-heroku/","text":"H\u00e9roku Heroku est un h\u00e9bergeur tr\u00e8s connu pour les applications web. Il a un plan gratuit utile \u00e0 des fins de test et des options payantes pour d\u00e9ployer le site Web. Il offre une grande vari\u00e9t\u00e9 d'addons et c'est l'un des PAAS les plus flexibles du march\u00e9. Ils sont compatibles avec PHP, et ils ont un excellent guide \"D\u00e9marrer avec PHP sur Heroku\" \u00e0 https://devcenter.heroku.com/articles/getting-started-with-php#introduction , et ce sera la base du jeu d'instructions. Voyons comment installer Grav sur Heroku. Tout d'abord, inscrivez-vous \u00e0 Heroku. T\u00e9l\u00e9chargez la CLI Heroku , qui est un utilitaire de ligne de commande n\u00e9cessaire pour d\u00e9ployer, cr\u00e9er et d\u00e9ployer votre site. Une fois install\u00e9, tapez $ | heroku login Entrez vos informations d'identification. Maintenant, consultez l'exemple PHP \"Getting Started\" qu'ils fournissent dans votre racine Web locale, afin que vous puissiez tester localement le site avant de le d\u00e9ployer. $ | git clone https://github.com/heroku/php-getting-started.git your-folder $ | cd your-folder D\u00e9ployez maintenant votre application avec $ | heroku create et $ | git push heroku master Assurez-vous qu'au moins une instance de l'application est en cours d'ex\u00e9cution : $ | heroku ps:scale web=1 et ouvrez le site dans le navigateur : $ | heroku open Vous devriez maintenant voir l'exemple de projet PHP. Maintenant que tout est d\u00e9fini, vous \u00eates pr\u00eat \u00e0 continuer et \u00e0 ex\u00e9cuter Grav au lieu du site d'exemple. Tout d'abord, supprimez le dossier web/ dans votre dossier de site actuel. Copiez-y les fichiers de votre site Grav, en vous assurant que vous copiez \u00e9galement le fichier cach\u00e9 .htaccess . Remplacez tous les fichiers qui existaient. Ouvrez maintenant le fichier Profile . Il s'agit d'un fichier sp\u00e9cifique \u00e0 Heroku. Changez la ligne en web: vendor/bin/heroku-php-apache2 ./ Vous devez vous assurer que le site fonctionne localement, avant de le t\u00e9l\u00e9charger sur Heroku, juste pour vous assurer qu'il n'y a pas d'erreurs. Validez maintenant dans le r\u00e9f\u00e9rentiel avec git add . ; git commit -am 'Added Grav' Ensuite, modifiez composer.json et ajoutez la commande de post-d\u00e9ploiement \u00e0 la section des scripts comme dans 1 | \"scripts\": { 2 | \"compiler\": [ 3 | \"installation bin/grav\", 4 | \"bin/gpm installer quark -y\" 5 | ] 6 | } et validez-le dans le r\u00e9f\u00e9rentiel avec $ | git add . ; git commit -am 'Add post deploy bin/grav install' Puis lancez $ | git push heroku master et le site devrait \u00eatre pr\u00eat \u00e0 partir ! En raison de la nature \u00e9ph\u00e9m\u00e8re du syst\u00e8me de fichiers de Heroku, tous les plugins ou th\u00e8mes n\u00e9cessaires doivent \u00eatre ajout\u00e9s \u00e0 composer.json comme ci-dessus et y \u00eatre conserv\u00e9s afin qu'ils soient install\u00e9s chaque fois que le site est envoy\u00e9 \u00e0 Heroku. Par exemple, si vous avez besoin du plugin admin et d'un th\u00e8me, ajoutez-les dans composer comme dans 1 | \"scripts\": { 2 | \"compile\": [ 3 - \"php bin/grav install\", 4 | \"php bin/gpm install admin -y\", 5 | \"php bin/gpm install awesome-theme-name-here -y\" 6 | ] 7 | }","title":"Heroku"},{"location":"pages-collection/","text":"Collections de pages Dans Grav, le type de collection le plus courant est une liste de pages qui peut \u00eatre d\u00e9finie soit dans le frontmatter de la page, soit dans le Twig lui-m\u00eame. La plus courante consiste \u00e0 d\u00e9finir une collection dans le frontmatter. Avec une collection d\u00e9finie, elle est disponible dans le Twig de la page pour en faire ce que vous voulez. En utilisant des m\u00e9thodes de collecte de pages ou en parcourant chaque objet de page et en utilisant les m\u00e9thodes ou propri\u00e9t\u00e9s de page, vous pouvez faire des choses puissantes. Des exemples courants de ceci incluent l'affichage d'une liste d'articles de blog ou l'affichage de sous-pages modulaires pour rendre une conception de page complexe. Collection d'objets Lorsque vous d\u00e9finissez une collection dans l'en-t\u00eate de la page, vous cr\u00e9ez dynamiquement une Collection Grav qui est disponible dans le Twig de la page. Cet Collection d'objets est it\u00e9rable et peut \u00eatre trait\u00e9 comme un tableau qui vous permet de faire des choses telles que : 1 | {{ dump(page.collection[page.path]) }} Exemple de d\u00e9finition de collection Un exemple de collection d\u00e9finie dans le frontmatter de la page : 1 | content: 2 | items: '@self.children' 3 | order: 4 | by: date 5 | dir: desc 6 | limit: 10 7 | pagination: true La valeur content.items dans le frontmatter de la page indique \u00e0 Grav de rassembler une collection d'\u00e9l\u00e9ments et les informations transmises \u00e0 ceci d\u00e9finissent comment la collection doit \u00eatre construite. Cette d\u00e9finition cr\u00e9e une collection pour la page qui se compose de toutes les pages enfants tri\u00e9es par date dans l'ordre d\u00e9croissant avec une pagination affichant 10 \u00e9l\u00e9ments par page. Acc\u00e9der aux collections dans Twig Lorsque cette collection est d\u00e9finie dans le header, Grav cr\u00e9e une collection page.collection \u00e0 laquelle vous pouvez acc\u00e9der dans un template twig avec : 1 | {% for p in page.collection %} 2 | <h2>{{ p.title|e }}</h2> 3 | {{ p.summary|raw }} 4 | {% endfor %} Cela boucle simplement sur les pages de la collection affichant le titre et le r\u00e9sum\u00e9. Vous pouvez \u00e9galement inclure un param\u00e8tre d'ordre pour modifier l'ordre par d\u00e9faut des pages : 1 | {% for p in page.collection.order('folder','asc') %} 2 | <h2>{{ p.title|e }}</h2> 3 | {{ p.summary|raw }} 4 | {% endfor %} En-t\u00eates de collection Pour indiquer \u00e0 Grav qu'une page sp\u00e9cifique doit \u00eatre une page de liste et contenir des pages enfants, il existe un certain nombre de variables qui peuvent \u00eatre utilis\u00e9es : R\u00e9sum\u00e9 des options de collection CHAINE R\u00c9SULTAT '@root.pages' R\u00e9cup\u00e8re les pages de niveau sup\u00e9rieur. '@root.descendants' R\u00e9cup\u00e8re toutes les pages du site. '@root.all' R\u00e9cup\u00e8re toutes les pages et modules du site. '@self.page' Obtenir une collection avec uniquement la page actuelle. '@self.parent' R\u00e9cup\u00e8re une collection avec uniquement le parent de la page actuelle. '@self.siblings' Obtenir les fr\u00e8res et s\u0153urs de la page actuelle. '@self.children' R\u00e9cup\u00e8re les enfants de la page actuelle. '@self.modules' R\u00e9cup\u00e8re les modules de la page en cours. '@self.all' R\u00e9cup\u00e8re \u00e0 la fois les enfants et les modules de la page actuelle. '@self.descendants' Parcourir tous les enfants de la page en cours. '@page.page': '/fruit' Obtenir une collection avec uniquement la page /fruit . '@page.parent': '/fruit' R\u00e9cup\u00e8re une collection avec uniquement le parent de la page /fruit . '@page.siblings' : '/fruit' R\u00e9cup\u00e8re les fr\u00e8res et s\u0153urs de la page /fruit . '@page.children': '/fruit' R\u00e9cup\u00e8re les enfants de la page /fruit . '@page.modules' : '/fruit' R\u00e9cup\u00e8re les modules de la page /fruit . '@page.all': '/fruit' R\u00e9cup\u00e8re \u00e0 la fois les enfants et les modules de la page /fruit . '@page.descendants': '/fruit' Obtenir et parcourir tous les enfants de la page /fruit . '@taxonomy.tag' : taxonomie de la photographie avec tag= photography . '@taxonomy' : {tag: birds, category: blog}' taxonomie avec tag= birds && category= blog . Ce document d\u00e9crit l'utilisation de @page , @taxonomy.category , etc., mais un format alternatif plus s\u00fbr pour YAML est page@ , taxonomy@.category . Toutes les commandes @ peuvent \u00eatre \u00e9crites au format pr\u00e9fixe ou postfixe. Les options de collection ont \u00e9t\u00e9 am\u00e9lior\u00e9es et modifi\u00e9es depuis Grav 1.6. Les anciennes versions fonctionneront toujours, mais leur utilisation n'est pas recommand\u00e9e. Nous allons les couvrir plus en d\u00e9tail. Root Collections @root.pages - Pages de niveau sup\u00e9rieur Cela peut \u00eatre utilis\u00e9 pour r\u00e9cup\u00e9rer les pages publi\u00e9es de niveau sup\u00e9rieur/racine d'un site. Particuli\u00e8rement utile pour r\u00e9cup\u00e9rer les \u00e9l\u00e9ments qui composent la navigation principale par exemple : 1 | content: 2 | items: '@root.pages' Un alias de '@root.children' est \u00e9galement valide. L'utilisation de '@root' est obsol\u00e8te car sa signification peut changer \u00e0 l'avenir. @root.descendants - Toutes les pages Cela permettra d'obtenir efficacement chaque page de votre site car il navigue de mani\u00e8re r\u00e9cursive \u00e0 travers tous les enfants de la page racine vers le bas, et construit une collection de toutes les pages publi\u00e9es d'un site : 1 | content: 2 | items: '@root.descendants' @root.all - Toutes les pages et modules Cela fera la m\u00eame chose que ci-dessus, mais cela inclut toutes les pages et modules publi\u00e9s du site. 1 | content: 2 | items: '@root.all' Self-collections @self.page - Page actuelle uniquement Cela renverra une collection contenant uniquement la page actuelle. 1 | content: 2 | items: '@self.page' Un alias de '@self.self' est \u00e9galement valide. Une collection vide sera renvoy\u00e9e si la page n'a pas \u00e9t\u00e9 publi\u00e9e. @self.parent - La page parent de la page actuelle Il s'agit d'une collection de cas particuliers car elle renverra toujours uniquement le parent de la page actuelle : 1 | content: 2 | items: '@self.parent' Une collection vide sera retourn\u00e9e si la page est au niveau sup\u00e9rieur. @self.siblings - Fr\u00e8res et s\u0153urs de la page actuelle Cette collection collectera toutes les pages publi\u00e9es au m\u00eame niveau de la page courante, \u00e0 l'exclusion de la page courante : 1 | content: 2 | items: '@self.siblings' @self.children - Enfants de la page actuelle Ceci est utilis\u00e9 pour lister les enfants publi\u00e9s de la page actuelle : 1 | content: 2 | items: '@self.children' Un alias de '@self.pages' est \u00e9galement valide. L'utilisation de '@self' est obsol\u00e8te car sa signification peut changer \u00e0 l'avenir. @self.modules - Modules de la page courante Cette m\u00e9thode r\u00e9cup\u00e8re uniquement les modules publi\u00e9s de la page en cours ( _features , _showcase , etc.) : 1 | content: 2 | items: '@self.modules' L'utilisation de l'alias @self.modular est obsol\u00e8te. @self.all - Enfants et modules de la page actuelle Cette m\u00e9thode r\u00e9cup\u00e8re uniquement les enfants et modules publi\u00e9s de la page actuelle : 1 | content: 2 | items: '@self.all' @self.descendants - Enfants + tous les descendants de la page actuelle Semblable \u00e0 .children , la collection .descendants r\u00e9cup\u00e9rera tous les enfants publi\u00e9s mais continuera \u00e0 parcourir tous leurs enfants : 1 | content: 2 | items: '@self.descendants' Collections de pages @page.page - Collection de la page sp\u00e9cifique uniquement Cette collection prend une route slug d'une page comme argument et renverra la collection contenant cette page (s'il s'agit d'une page publi\u00e9e ): 1 | content: 2 | items: 3 | '@page.page': '/blog' Un alias de '@page.self' : '/blog' est \u00e9galement valide. Une collection vide sera renvoy\u00e9e si la page n'a pas \u00e9t\u00e9 publi\u00e9e. @page.parent - La page parent d'une page sp\u00e9cifique Il s'agit d'une collection de cas particuliers car elle renverra toujours uniquement le parent de la page actuelle : 1 | content: 2 | items: 3 | '@page.parent': '/blog' @ Une collection vide sera retourn\u00e9e si la page est au niveau sup\u00e9rieur. @page.siblings - Fr\u00e8res et s\u0153urs d'une page sp\u00e9cifique Cette collection collectera toutes les pages publi\u00e9es au m\u00eame niveau de la page, \u00e0 l'exclusion de la page elle-m\u00eame : 1 | content: 2 | items: 3 | '@page.siblings': '/blog' @page.children - Enfants d'une page sp\u00e9cifique Cette collection prend une route slug d'une page comme argument et renverra tous les enfants publi\u00e9s de cette page : 1 | content: 2 | items: 3 | '@page.children': '/blog' Un alias de '@page.pages' : '/blog' est \u00e9galement valide. Utilisation de '@page' : '/blog' est obsol\u00e8te car sa signification peut changer \u00e0 l'avenir. @page.modules - Modules d'une page sp\u00e9cifique Cette collection prend une route slug d'une page comme argument et renverra tous les modules publi\u00e9s de cette page : 1 | content: 2 | items: 3 | '@page.modules': '/blog' Utiliser l'alias de '@page.modular' : '/blog' est obsol\u00e8te. @self.all - Enfants et modules d'une page sp\u00e9cifique Cette m\u00e9thode r\u00e9cup\u00e8re uniquement les enfants et modules publi\u00e9s de la page sp\u00e9cifique : 1 | content: 2 | items: 3 | '@page.all': '/blog' @page.descendants - Collection d'enfants + tous les descendants d'une page sp\u00e9cifique Cette collection prend une route slug d'une page comme argument et renverra tous les enfants publi\u00e9s et tous leurs descendants de cette page : 1 | content: 2 | items: 3 | '@page.descendants': '/blog' Collections de taxonomie 1 | content: 2 | items: 3 | '@taxonomy.tag': foo En utilisant l'option @taxonomy , vous pouvez utiliser la puissante fonctionnalit\u00e9 de taxonomie de Grav. C'est l\u00e0 que la variable taxonomy dans le fichier de configuration du site entre en jeu. Il doit y avoir une d\u00e9finition pour la taxonomie d\u00e9finie dans ce fichier de configuration pour que Grav interpr\u00e8te une r\u00e9f\u00e9rence de page comme valide. En d\u00e9finissant @taxonomy.tag:foo , Grav trouvera toutes les pages publi\u00e9es dans le dossier /user/pages qui ont elles-m\u00eames d\u00e9fini tag:foo dans leur variable de taxonomie : 1 | content: 2 | items: 3 | '@taxonomy.tag': [foo, bar] La variable content.items peut prendre un tableau de taxonomies et rassemblera toutes les pages qui satisfont \u00e0 ces r\u00e8gles. Les pages publi\u00e9es contenant \u00e0 la fois des balises foo et bar seront collect\u00e9es. Le chapitre Taxonomie couvrira ce concept plus en d\u00e9tail. Si vous souhaitez placer plusieurs variables en ligne, vous devrez s\u00e9parer les sous-variables de leurs parents avec des crochets {} . Vous pouvez ensuite s\u00e9parer les variables individuelles \u00e0 ce niveau par une virgule. Par exemple : '@taxonomy' : {category : [blog, feature], tag : [foo, bar]} . Dans cet exemple, les sous-variables category et tag sont plac\u00e9es sous @taxonomy dans la hi\u00e9rarchie, chacune avec des valeurs r\u00e9pertori\u00e9es plac\u00e9es entre crochets [] . Les pages doivent r\u00e9pondre \u00e0 toutes ces exigences pour \u00eatre trouv\u00e9es. Si vous avez plusieurs variables \u00e0 d\u00e9finir dans un seul parent, vous pouvez le faire en utilisant la m\u00e9thode en ligne, mais pour plus de simplicit\u00e9, nous vous recommandons d'utiliser la m\u00e9thode standard. Voici un exemple: 1 | content: 2 | items: 3 | '@taxonomy': 4 | category: [blog, featured] 5 | tag: [foo, bar] Chaque niveau de la hi\u00e9rarchie ajoute deux espaces avant la variable. YAML vous permettra d'utiliser autant d'espaces que vous le souhaitez ici, mais deux sont une pratique courante. Dans l'exemple ci-dessus, les variables category et tag sont d\u00e9finies sous @taxonomy . Les collections de pages seront automatiquement filtr\u00e9es par taxonomie lorsqu'une a \u00e9t\u00e9 d\u00e9finie dans l'URL (par exemple, /archive/category:news). Cela vous permet de cr\u00e9er un seul mod\u00e8le d'archive de blog mais de filtrer la collection de mani\u00e8re dynamique \u00e0 l'aide de l'URL. Si votre collection de pages doit ignorer la taxonomie d\u00e9finie dans l'URL, utilisez l'indicateur url_taxonomy_filters:false pour d\u00e9sactiver cette fonctionnalit\u00e9. Collections complexes Vous pouvez \u00e9galement fournir plusieurs d\u00e9finitions de collection complexes et la collection r\u00e9sultante sera la somme de toutes les pages trouv\u00e9es \u00e0 partir de chacune des d\u00e9finitions de collection. Par exemple: 1 | content: 2 | items: 3 | - '@self.children' 4 | - '@taxonomy': 5 | category: [blog, featured] En outre, vous pouvez filtrer la collection \u00e0 l'aide de filter : type : value . Le type peut \u00eatre l'un des suivants : published , visible , page , module , routable . Celles-ci correspondent aux m\u00e9thodes sp\u00e9cifiques \u00e0 la collection , et vous pouvez en utiliser plusieurs pour filtrer votre collection. Ils sont tous true ou false . De plus, il existe un type qui prend un seul nom de mod\u00e8le, un types qui prent un tableau de noms de mod\u00e8les et access qui prend un tableau de niveaux d'acc\u00e8s. Par exemple: 1 | content: 2 | items: '@self.siblings' 3 | filter: 4 | visible: true 5 | type: 'blog' 6 | access: ['site.login'] Le type peut aussi \u00eatre n\u00e9gatif : non-published , non-visible , non-page (=module), non-module (=page) et non-routable , mais il est pr\u00e9f\u00e9rable d'utiliser la version positive avec la valeur false . 1 | content: 2 | items: '@self.children' 3 | filter: 4 | published: false Les filtres de collecte ont \u00e9t\u00e9 simplifi\u00e9s depuis Grav 1.6. Les anciennes variantes modular et non-modular fonctionneront toujours, mais leur utilisation n'est pas recommand\u00e9e. Utilisez module et page \u00e0 la place. Options de commande 1 | content: 2 | order: 3 | by: date 4 | dir: desc 5 | limit: 5 6 | pagination: true L'ordre des sous-pages suit les m\u00eames r\u00e8gles que l'ordre des dossiers, les options disponibles sont : COMMANDE D\u00c9TAILS default L'ordre est bas\u00e9 sur le syst\u00e8me de fichiers, c'est-\u00e0-dire 01.home avant 02.advark . title L'ordre est bas\u00e9 sur le titre tel que d\u00e9fini dans chaque page. basename L'ordre est bas\u00e9 sur le nom alphab\u00e9tique du dossier apr\u00e8s qu'il a \u00e9t\u00e9 trait\u00e9 par la fonction PHP basename() . date L'ordre est bas\u00e9 sur la date telle que d\u00e9finie dans chaque page. modified L'ordre est bas\u00e9 sur l'horodatage modifi\u00e9 de la page. folder L'ordre est bas\u00e9 sur le nom du dossier avec tout pr\u00e9fixe num\u00e9rique, c'est-\u00e0-dire 01 ., supprim\u00e9. header.x L'ordre est bas\u00e9 sur n'importe quel champ d'en-t\u00eate de page. c'est-\u00e0-dire header.taxonomy.year . Une valeur par d\u00e9faut peut \u00e9galement \u00eatre ajout\u00e9e via un tube. c'est-\u00e0-dire header.taxonomy.year|2015 . random La commande est al\u00e9atoire. custom La commande est bas\u00e9e sur la variable content.order.custom . manual La commande est bas\u00e9e sur la variable order_manual . D\u00c9PRECI\u00c9 sort_flag Permet de remplacer les drapeaux de tri pour le classement par en-t\u00eate de page ou par d\u00e9faut. Si l'extension PHP intl est charg\u00e9e, seuls ces drapeaux sont disponibles. Sinon, vous pouvez utiliser les indicateurs de tri standard PHP. La variable content.order.dir contr\u00f4le la direction dans laquelle le classement doit \u00eatre dans des valeurs admises. Les valeurs valides sont desc ou asc . 1 | content: 2 | order: 3 | by: default 4 | custom: 5 | - _showcase 6 | - _highlights 7 | - _callout 8 | - _features 9 | limit: 5 10 | pagination: true Dans la configuration ci-dessus, vous pouvez voir que content.order.custom d\u00e9finit une commande manuelle personnalis\u00e9e pour s'assurer que la page est construite avec showcase en premier, la section highlights en second, etc. Veuillez noter que si une page n'est pas sp\u00e9cifi\u00e9e dans la liste de commande personnalis\u00e9e , puis Grav se rabat sur le content.order.by pour les pages non sp\u00e9cifi\u00e9es. Si une page a un slug personnalis\u00e9, vous devez utiliser ce slug dans la liste content.order.custom . Le content.pagination est un simple indicateur bool\u00e9en \u00e0 utiliser par les plugins, etc. pour savoir si la pagination doit \u00eatre initialis\u00e9e pour cette collection, content.limit est le nombre d'\u00e9l\u00e9ments affich\u00e9s par page lorsque la pagination est activ\u00e9e. Plage de dates Il est \u00e9galement possible de filtrer les pages par plage de dates : 1 | content: 2 | items: '@self.children' 3 | dateRange: 4 | start: 1/1/2014 5 | end: 1/1/2015 Vous pouvez utiliser n'importe quel format de date de cha\u00eene pris en charge par strtotime() tel que -6 semaines ou lundi dernier ainsi que des dates plus traditionnelles telles que 23/01/2014 ou 23 janvier 2014 . Le dateRange filtrera toutes les pages qui ont une date en dehors la plage de dates fournie. Les dates de d\u00e9but et de fin sont facultatives, mais au moins une doit \u00eatre fournie. Collections multiples Lorsque vous cr\u00e9ez une collection avec du content : items: dans votre YAML, vous d\u00e9finissez une seule collection bas\u00e9e sur plusieurs conditions. Cependant, Grav vous permet de cr\u00e9er un ensemble arbitraire de collections par page, il vous suffit d'en cr\u00e9er une autre : 1 | content: 2 | items: '@self.children' 3 | order: 4 | by: date 5 | dir: desc 6 | limit: 10 7 | pagination: true 8 | 9 | fruit: 10 | items: 11 | '@taxonomy.tag': [fruit] Cela configure 2 collections pour cette page, la premi\u00e8re utilise content de la collection par d\u00e9faut, mais la seconde d\u00e9finit une collection bas\u00e9e sur la taxonomie appel\u00e9e fruit . Pour acc\u00e9der \u00e0 ces deux collections via Twig vous pouvez utiliser la syntaxe suivante : 1 | {% set default_collection = page.collection %} 2 | {% set fruit_collection = page.collection('fruit') %} M\u00e9thodes de collection d'objets Les m\u00e9thodes it\u00e9rables incluent : PROPRI\u00c9T\u00c9S DESCRIPTION Collection::append($items) Ajouter une autre collection ou tableau. Collection::first() R\u00e9cup\u00e8re le premier \u00e9l\u00e9ment de la collection. Collection::last() R\u00e9cup\u00e8re le dernier \u00e9l\u00e9ment de la collection. Collection::random($num) Choisissez $num \u00e9l\u00e9ments al\u00e9atoires de la collection. Collection::reverse() Inverse l'ordre de la collection. Collection::shuffle() Randomise toute la collection. Collection::slice($offset, $length) Coupe la liste. Dispose \u00e9galement de plusieurs m\u00e9thodes utiles sp\u00e9cifiques \u00e0 la collection : PROPRI\u00c9T\u00c9S DESCRIPTION Collection::addPage($page) Vous pouvez ajouter une autre page \u00e0 cette collection. Collection::copy() Cr\u00e9e une copie de la collection courante. Collection::current() Obtient l'\u00e9l\u00e9ment actuel de la collection. Collection::key() Renvoie le slug de l'\u00e9l\u00e9ment courant. Collection::remove($path) Supprime une page sp\u00e9cifique de la collection, ou actuelle si $path = null . Collection::order($by, $dir, $manual) Ordonne la collection actuelle Collection::intersect($collection2) Fusionne deux collections, en conservant les \u00e9l\u00e9ments qui se produisent dans les deux collections (comme une condition \"ET\"). Collection::merge($collection2) Fusionne deux collections, en conservant les \u00e9l\u00e9ments qui se produisent dans l'une ou l'autre des collections (comme une condition \"OU\"). Collection::isFirst($path) D\u00e9termine si la page identifi\u00e9e par path est la premi\u00e8re. Collection::isLast($path) D\u00e9termine si la page identifi\u00e9e par path est la derni\u00e8re. Collection::prevSibling($path) Renvoie la page s\u0153ur pr\u00e9c\u00e9dente si possible. Collection::nextSibling($path) Renvoie la page s\u0153ur suivante si possible. Collection::currentPosition($path) Renvoie l'index courant. Collection::dateRange($startDate, $endDate, $field) Filtre la collection actuelle avec des dates. Collection::visible() Filtre la collection actuelle pour n'inclure que les pages visibles. Collection::nonVisible() Filtre la collection actuelle pour n'inclure que les pages non visibles. Collection::pages() Filtre la collection actuelle pour n'inclure que les pages (et non les modules). Collection::modules() Filtre la collection actuelle pour n'inclure que les modules (et non les pages). Collection::published() Filtre la collection actuelle pour n'inclure que les pages publi\u00e9es. Collection::nonPublished() Filtre la collection actuelle pour n'inclure que les pages non Collection::routable() Filtre la collection actuelle pour n'inclure que les pages routables. Collection::nonRoutable() Filtre la collection actuelle pour n'inclure que les pages non routables. Collection::ofType($type) Filtre la collection actuelle pour n'inclure que les pages o\u00f9 template = $type . Collection::ofOneOfTheseTypes($types) Filtre la collection actuelle pour n'inclure que les pages o\u00f9 le mod\u00e8le est dans le tableau $types . Collection::ofOneOfTheseAccessLevels($levels) Filtre la collection actuelle pour n'inclure que les pages o\u00f9 l'acc\u00e8s \u00e0 la page se trouve dans le tableau de $levels . Les m\u00e9thodes suivantes ont \u00e9t\u00e9 d\u00e9pr\u00e9ci\u00e9es dans Grav 1.7 : Collection::modular() et Collection::nonModular() . Utilisez Collection::modules() et Collection::pages() respectivement. Voici un exemple tir\u00e9 du th\u00e8me Learn2 docs.html.twig qui d\u00e9finit une collection bas\u00e9e sur la taxonomie (et \u00e9ventuellement des balises si elles existent) et utilise les m\u00e9thodes Collection::isFirst et Collection::isLast pour ajouter conditionnellement la navigation de page : 1 | {% set tags = page.taxonomy.tag %} 2 | {% if tags %} 3 | {% set progress = page.collection({'items':{'@taxonomy':{'category': 'docs', 'tag': tags}},'order': {'by': 'default', 'dir': 'asc'}}) %} 4 | {% else %} 5 | {% set progress = page.collection({'items':{'@taxonomy':{'category': 'docs'}},'order': {'by': 'default', 'dir': 'asc'}}) %} 6 | {% endif %} 7 | 8 | {% block navigation %} 9 | <div id=\"navigation\"> 10 | {% if not progress.isFirst(page.path) %} 11 | <a class=\"nav nav-prev\" href=\"{{ progress.nextSibling(page.path).url|e }}\"> <i class=\"fa fa-chevron-left\"></i></a> 12 | {% endif %} 13 | 14 | {% if not progress.isLast(page.path) %} 15 | <a class=\"nav nav-next\" href=\"{{ progress.prevSibling(page.path).url|e }}\"><i class=\"fa fa-chevron-right\"></i></a> 16 | {% endif %} 17 | </div> 18 | {% endblock %} nextSibling() est en haut de la liste et prevSibling( ) en bas de la liste, voici comment cela fonctionne : En supposant que vous ayez les pages : 1 | Projet A 2 | Projet B 3 | Projet C Vous \u00eates sur le projet A, la page pr\u00e9c\u00e9dente est le projet B. Si vous \u00eates sur le projet B, la page pr\u00e9c\u00e9dente est le projet C et la suivante est le projet A. Collections programmatiques Vous pouvez prendre le contr\u00f4le total des collections directement depuis PHP dans les plugins Grav, les th\u00e8mes ou m\u00eame depuis Twig. Il s'agit d'une approche plus cod\u00e9e en dur par rapport \u00e0 leur d\u00e9finition dans le frontmatter de votre page, mais elle permet \u00e9galement une logique de collecte plus complexe et flexible. Collections PHP Vous pouvez effectuer une collection logique avanc\u00e9e avec PHP, par exemple : 1 | $collection = new Collection($pages); 2 | $collection->setParams(['taxonomies' => ['tag' => ['dog', 'cat']]])->dateRange('01/01/2016', '12/31/2016')->published()->ofType('blog-item')->order('date', 'desc'); 3 | 4 | $titles = []; 5 | 6 | foreach ($collection as $page) { 7 | $titles[] = $page->title(); 8 | } La fonction order() peut \u00e9galement, en plus des param\u00e8tres by et dir , prendre un param\u00e8tre manual et sort_flags . Ceux-ci sont document\u00e9s ci-dessus . Vous pouvez \u00e9galement utiliser la m\u00eame m\u00e9thode \u00e9value() que celle utilis\u00e9e par les collections de pages bas\u00e9es sur le frontmatter : 1 | $page = Grav::instance()['page']; 2 | $collection = $page->evaluate(['@page.children' => '/blog', '@taxonomy.tag' => 'photography']); 3 | $ordered_collection = $collection->order('date', 'desc'); Et un autre exemple de commande personnalis\u00e9e serait : 1 | $collection_command\u00e9e = $collection->commande('header.price','asc',null,SORT_NUMERIC); Vous pouvez \u00e9galement faire la m\u00eame chose directement dans Twig Templates : 1 | {% set collection = page.evaluate([{'@page.children':'/blog', '@taxonomy.tag':'photography'}]) %} 2 | {% set order_collection = collection.order('date','desc') %} Collections avanc\u00e9es Par d\u00e9faut, lorsque vous appelez page.collection() dans le Twig d'une page qui a une collection d\u00e9finie dans l'en-t\u00eate, Grav recherche une collection appel\u00e9e content . Cela permet de d\u00e9finir plusieurs collections , mais vous pouvez m\u00eame aller plus loin. Si vous avez besoin de g\u00e9n\u00e9rer par programmation une collection, vous pouvez le faire en appelant page.collection() et en transmettant un tableau au m\u00eame format que la d\u00e9finition de collection d'en-t\u00eate de page. Par exemple: 1 | {% set options = { items: {'@page.children': '/my/pages'}, 'limit': 5, 'order': {'by': 'date', 'dir': 'desc'}, 'pagination': true } %} 2 | {% set my_collection = page.collection(options) %} 3 | 4 | <ul> 5 | {% for p in my_collection %} 6 | <li>{{ p.title|e }}</li> 7 | {% endfor %} 8 | </ul> G\u00e9n\u00e9ration du menu pour l'ensemble du site (vous devez d\u00e9finir la propri\u00e9t\u00e9 du menu dans le frontmatter de la page) : 1 | --- 2 | titre : Home 3 | Menu : Home 4 | --- 1 | {% set options = { items: {'@root.descendants':''}, 'order': {'by': 'folder', 'dir': 'asc'}} %} 2 | {% set my_collection = page.collection(options) %} 3 | 4 | {% for p in my_collection %} 5 | {% if p.header.menu %} 6 | <ul> 7 | {% if page.slug == p.slug %} 8 | <li class=\"{{ p.slug|e }} active\"><span>{{ p.menu|e }}</span></li> 9 | {% else %} 10 | <li class=\"{{ p.slug|e }}\"><a href=\"{{ p.url|e }}\">{{ p.menu|e }}</a></li> 11 | {% endif %} 12 | </ul> 13 | {% endif %} 14 | {% endfor %} Pagination avec les collections avanc\u00e9es Une question courante que nous entendons est de savoir comment activer la pagination pour les collections personnalis\u00e9es. Pagination est un plugin qui peut \u00eatre install\u00e9 via GPM avec le nom pagination . Une fois install\u00e9, il fonctionne \"pr\u00eat \u00e0 l'emploi\" avec les collections configur\u00e9es par page, mais ne sait rien des collections personnalis\u00e9es cr\u00e9\u00e9es dans Twig. Pour faciliter ce processus, la pagination est livr\u00e9e avec sa propre fonction Twig appel\u00e9e paginate() qui fournira la fonctionnalit\u00e9 de pagination dont nous avons besoin. Apr\u00e8s avoir transmis la collection et la limite \u00e0 la fonction paginate() , nous devons \u00e9galement transmettre les informations de pagination directement au mod\u00e8le partials/pagination.html.twig pour un rendu correct. 1 | {% set options = { items: {'@root.descendants':''}, 'order': {'by': 'folder', 'dir': 'asc'}} %} 2 | {% set my_collection = page.collection(options) %} 3 | {% do paginate( my_collection, 5 ) %} 4 | 5 | {% for p in my_collection %} 6 | <ul> 7 | {% if page.slug == p.slug %} 8 | <li class=\"{{ p.slug|e }} active\"><span>{{ p.menu|e }}</span></li> 9 | {% else %} 10 | <li class=\"{{ p.slug|e }}\"><a href=\"{{ p.url|e }}\">{{ p.menu|e }}</a></li> 11 | {% endif %} 12 | </ul> 13 | {% endfor %} 14 | 15 | {% include 'partials/pagination.html.twig' with {'base_url':page.url, 'pagination':my_collection.params.pagination} %} Gestion personnalis\u00e9e des collections avec l'\u00e9v\u00e9nement onCollectionProcessed() Il y a des moments o\u00f9 les options d'\u00e9v\u00e9nement ne suffisent pas. Parfois, lorsque vous souhaitez obtenir une collection, mais que vous manipulez ensuite la collection en fonction de quelque chose de tr\u00e8s personnalis\u00e9. Imaginez si vous voulez, un cas d'utilisation o\u00f9 vous avez ce qui semble \u00eatre une liste de blogs plut\u00f4t standard, mais votre client veut avoir un contr\u00f4le pr\u00e9cis sur ce qui s'affiche dans la liste. Ils veulent avoir une bascule personnalis\u00e9e sur chaque \u00e9l\u00e9ment de blog qui leur permet de le supprimer de la liste, tout en le faisant publier et disponible via un lien direct. Pour ce faire, nous pouvons simplement ajouter une option personnalis\u00e9e display_in_listing : false dans l'en-t\u00eate de page de l'\u00e9l\u00e9ment : 1 | --- 2 | title: 'My Story' 3 | date: '13:34 04/14/2020' 4 | taxonomy: 5 | tag: 6 | - journal 7 | display_in_listing: false 8 | --- 9 | ... Le probl\u00e8me est qu'il n'y a aucun moyen de d\u00e9finir ou d'inclure ce filtre lors de la d\u00e9finition d'une collection dans la page de liste. Il est probablement d\u00e9fini quelque chose comme ceci : 1 | --- 2 | menu: News 3 | title: 'My Blog' 4 | content: 5 | items: 6 | - self@.children 7 | order: 8 | by: date 9 | dir: desc 10 | limit: 8 11 | pagination: true 12 | url_taxonomy_filters: true 13 | --- 14 | ... Ainsi, la collection est simplement d\u00e9finie par la directive self@.children pour obtenir tous les enfants publi\u00e9s de la page en cours. Alors qu'en est-il des pages qui ont le display_in_listing: false d\u00e9fini ? Nous devons faire un travail suppl\u00e9mentaire sur cette collection avant qu'elle ne soit retourn\u00e9e pour nous assurer que nous supprimons tous les \u00e9l\u00e9ments que nous ne voulons pas voir. Pour ce faire, nous pouvons utiliser l'\u00e9v\u00e9nement onCollectionProcessed() dans un plugin personnalis\u00e9. Nous devons ajouter l'\u00e9couteur : 1 | public static function getSubscribedEvents(): array 2 | { 3 | return [ 4 | ['autoload', 100000], 5 | 'onPluginsInitialized' => ['onPluginsInitialized', 0], 6 | 'onCollectionProcessed' => ['onCollectionProcessed', 10] 7 | ]; 8 | } Ensuite, nous devons d\u00e9finir la m\u00e9thode et parcourir les \u00e9l\u00e9ments de la collection, en recherchant toutes les pages avec ce champ display_in_listing : d\u00e9fini, puis le supprimer s'il est false : 1 | /** 2 | * Supprimez n'importe quelle page de la collection avec display_in_listing : false|0 3 | * 4 | * @param Event $event 5 | */ 6 | public function onCollectionProcessed(Event $event): void 7 | { 8 | /** @var Collection $collection */ 9 | $collection = $event['collection']; 10 | 11 | foreach ($collection as $item) { 12 | $display_in_listing = $item->header()->display_in_listing ?? true; 13 | if ((bool) $display_in_listing === false) { 14 | $collection->remove($item->path()); 15 | } 16 | } 17 | 18 | } Maintenant, votre collection contient les bons \u00e9l\u00e9ments, et tous les autres plugins ou mod\u00e8les Twig qui s'appuient sur cette collection verront cette collection modifi\u00e9e afin que des choses comme la pagination fonctionnent comme pr\u00e9vu.","title":"Collection de pages"},{"location":"pages-modulaires/","text":"Pages modulaires Le concept des pages Modulaires est un peu difficile \u00e0 comprendre au d\u00e9but, mais quand vous le saurez, vous verrez \u00e0 quel point elles sont pratiques \u00e0 utiliser. Une Page Modulaire est une collection de pages empil\u00e9es les unes sur les autres pour cr\u00e9er une page unique unifi\u00e9e. Cela vous permet de cr\u00e9er une structure de page complexe en utilisant l'approche des briques de construction LEGO , et qui n'aime pas LEGO ? ! Que sont les pages modulaires et qu'est-ce qu'elles ne sont pas ? Dans Grav, les Pages sont un concept large qui capture presque tous les types de combinaisons d'\u00e9l\u00e9ments que vous pouvez imaginer int\u00e9grer dans un site Web. Il est important de noter que les pages modulaires sont un sous-ensemble de ce concept, mais pas la m\u00eame chose qu'une page ordinaire. Une page normale est assez autonome, dans le sens o\u00f9 Grav la rendra et l'affichera sans d\u00e9pendre d'autres contenus tels que d'autres pages ou pages enfants. Une page modulaire, cependant, n'a pas de pages enfants. Ceci est illustr\u00e9 en imaginant une structure de page simple : Une page r\u00e9guli\u00e8re trouv\u00e9e sur domain.com/books contient des d\u00e9tails sur les livres \u00e0 vendre. Plusieurs pages enfants existent pour cette page, telles que domain.com/books/gullivers-travels et domain.com/books/the-hobbit . Leurs dossiers portent le m\u00eame nom que l'adresse affich\u00e9e par Grav : /pages/books , /pages/books/gullivers-travels et /pages/books/the-hobbit . Cette structure ne fonctionnerait pas dans une page modulaire. Une page modulaire n'a pas de pages enfants dans le m\u00eame sens, mais plut\u00f4t des modules qui constituent les parties de la page. Ainsi, plut\u00f4t que divers livres situ\u00e9s sous la page de niveau sup\u00e9rieur, la page modulaire affiche ses modules sur la m\u00eame page . Les Voyages de Gulliver et Le Hobbit apparaissent tous les deux dans domain.com/books , avec les chemins /pages/books/_gullivers-travels et /pages/books/_the-hobbit . Ainsi, les Pages Modulaires ne sont pas directement compatibles avec les Pages r\u00e9guli\u00e8res et ont leur propre structure. Exemple de structure de dossier En utilisant notre squelette One-Page comme exemple, nous expliquerons plus en d\u00e9tail le fonctionnement des pages modulaires. La Page Modulaire elle-m\u00eame est assembl\u00e9e \u00e0 partir de pages qui existent dans des sous-dossiers trouv\u00e9s sous le dossier principal de la page. Dans le cas de notre squelette One-Page, cette page se trouve dans le dossier 01.home . Dans ce dossier se trouve un seul fichier modular.md qui indique \u00e0 Grav quelles sous-pages extraire pour assembler la page modulaire et dans quel ordre les afficher. Le nom de ce fichier est important car il indique \u00e0 Grav d'utiliser le modular.html. twig -template du th\u00e8me actuel pour rendre la page. Ces sous-pages se trouvent dans des dossiers dont les noms commencent par un trait de soulignement ( _ ). En utilisant un trait de soulignement, vous dites \u00e0 Grav qu'il s'agit de Modules et non de pages autonomes. Par exemple, les dossiers de sous-page peuvent \u00eatre nomm\u00e9s _features ou _showcase . Ces pages ne sont pas routables - elles ne peuvent pas \u00eatre point\u00e9es directement dans un navigateur, et elles ne sont pas visibles - elles n'apparaissent pas dans un menu. Dans le cas de notre squelette One-Page, nous avons cr\u00e9\u00e9 la structure de dossiers illustr\u00e9e ci-dessous. Chaque sous-dossier contient un fichier Markdown qui agit comme une page. Les donn\u00e9es contenues dans ces dossiers de Modules - y compris les fichiers Markdown, les images, etc. - sont ensuite extraites et affich\u00e9es sur la page modulaire. Ceci est accompli en cr\u00e9ant une page principale, en d\u00e9finissant une Collection de Pages dans le FrontMatter YAML de la page principale, puis en it\u00e9rant sur cette collection dans un mod\u00e8le Twig pour g\u00e9n\u00e9rer la page HTML combin\u00e9e. Un th\u00e8me doit d\u00e9j\u00e0 avoir un mod\u00e8le modular.html.twig qui fera cela et est utilis\u00e9 lorsque vous cr\u00e9ez un type de page modulaire. Voici un exemple simple d'un modular.html.twig : {% for module in page.collection() %} {{ module.content|raw }} {% endfor %} Voici un exemple de la page modulaire r\u00e9sultante, mettant en \u00e9vidence les diff\u00e9rents dossiers modulaires utilis\u00e9s. Configuration de la page principale Comme vous pouvez le voir, chaque section extrait le contenu d'un dossier de module diff\u00e9rent. D\u00e9terminer quels dossiers de modules sont utilis\u00e9s et dans quel ordre se produit dans le fichier Markdown principal du dossier parent du module. Voici le contenu du fichier modular.md dans le dossier 01.home . --- title: One Page Demo Site menu: Home onpage_menu: true body_classes: \"modular header-image fullwidth\" content: items: '@self.modular' order: by: default dir: asc custom: - _showcase - _highlights - _callout - _features --- Comme vous pouvez le voir, il n'y a pas de contenu r\u00e9el dans ce fichier. Tout est g\u00e9r\u00e9 dans le YAML FrontMatter dans l'en-t\u00eate. Le titre de la page, l'affectation du menu * et d'autres param\u00e8tres que vous trouveriez dans une page typique se trouvent ici. Le contenu demande \u00e0 Grav de cr\u00e9er le contenu bas\u00e9 sur une collection de pages modulaires, et fournit m\u00eame un ordre manuel personnalis\u00e9 pour leur rendu. Modules Le fichier Markdown de chaque Module peut avoir son propre mod\u00e8le, ses propres param\u00e8tres, etc. \u00c0 toutes fins utiles, il poss\u00e8de la plupart des fonctionnalit\u00e9s et des param\u00e8tres d'une page normale, il n'est tout simplement pas rendu comme tel. Nous recommandons que les param\u00e8tres \u00e0 l'\u00e9chelle de la page, tels que la taxonomie , soient plac\u00e9s dans le fichier Markdown principal qui contr\u00f4le l'ensemble de la page. Les pages modulaires elles-m\u00eames sont g\u00e9r\u00e9es comme des pages normales. Voici un exemple utilisant le fichier text.md dans la page _callout qui appara\u00eet au milieu de la page modulaire. --- title: Homepage Callout image_align: right --- ## Content Unchained Vous n'\u00eates plus <em>_esclave de votre CMS_</em>. Grav ** vous permet ** de cr\u00e9er n'importe quoi \u00e0 partir d'un <code>[simple site d'une page](#)</code>, d'un [`beau blog](#)`, d'un <code> [site produit](#)</code> puissant et riche en fonctionnalit\u00e9s, ou vous pouvez r\u00e9ver d'\u00e0 peu pr\u00e8s n'importe quoi ! Comme vous pouvez le voir, l'en-t\u00eate de la page contient des informations de base que vous pourriez trouver sur une page normale. Il a son propre titre qui peut \u00eatre r\u00e9f\u00e9renc\u00e9 et des options de page personnalis\u00e9es , telles que l'alignement de l'image, peuvent \u00eatre d\u00e9finies ici, comme sur n'importe quelle autre page. Le fichier de mod\u00e8le pour le fichier text.md doit \u00eatre situ\u00e9 dans le dossier /templates/modular - de votre th\u00e8me et doit \u00eatre nomm\u00e9 text.html.twig . Ce fichier, comme tout fichier de mod\u00e8le Twig pour toute autre page, d\u00e9finit les param\u00e8tres, ainsi que les diff\u00e9rences de style entre celui-ci et la page de base. <div class=\"modular-row callout\"> {% set image = page.media.images|first %} {% if image %} {{ image.cropResize(400,400).html('','',' align-'~page.header.image_align)|raw }} {% endif %} {{ content|raw }} </div> G\u00e9n\u00e9ralement, les Pages Modulaires sont tr\u00e8s simples. Vous devez juste vous habituer \u00e0 l'id\u00e9e que chaque section de votre page est d\u00e9finie dans un module qui a son propre dossier sous la page r\u00e9elle. Ils sont affich\u00e9s tous en m\u00eame temps \u00e0 vos visiteurs, mais organis\u00e9s l\u00e9g\u00e8rement diff\u00e9remment des pages ordinaires. N'h\u00e9sitez pas \u00e0 exp\u00e9rimenter et \u00e0 d\u00e9couvrir tout ce que vous pouvez accomplir avec une page modulaire dans Grav.","title":"Pages modulaires"},{"location":"pages/","text":"Pages Dans le vocabulaire de Grav, les Pages sont les \u00e9l\u00e9ments fondamentaux de votre site. Ils vous permettent d'\u00e9crire du contenu et de naviguer dans le syst\u00e8me Grav. La combinaison du contenu et de la navigation garantit que le syst\u00e8me est intuitif \u00e0 utiliser, m\u00eame pour les auteurs de contenu les plus inexp\u00e9riment\u00e9s. Cependant, ce syst\u00e8me, associ\u00e9 \u00e0 de puissantes capacit\u00e9s de taxonomie, reste suffisamment puissant pour g\u00e9rer des exigences de contenu complexes. Grav prend en charge nativement 3 types de page s qui vous permettent de cr\u00e9er une riche s\u00e9lection de contenu Web. Ces types sont : Page standard Une page standard est g\u00e9n\u00e9ralement une page unique telle qu'un article de blog, un formulaire de contact, une page d'erreur , etc. Il s'agit du type de page le plus courant que vous allez cr\u00e9er. Par d\u00e9faut, une page est consid\u00e9r\u00e9e comme une page normale, sauf si vous indiquez le contraire \u00e0 Grav. Lorsque vous t\u00e9l\u00e9chargez et installez le package Core Grav , vous \u00eates accueilli par une page standard. Nous avons couvert la cr\u00e9ation d'une simple page r\u00e9guli\u00e8re dans le tutoriel de base . Page de liste Il s'agit d'une extension d'une page normale. Il s'agit d'une page qui fait r\u00e9f\u00e9rence \u00e0 une collection de pages. L'approche la plus simple pour configurer cela consiste \u00e0 cr\u00e9er des pages enfants sous la page de liste. Un exemple de ceci serait une page de liste de blogs , o\u00f9 vous afficheriez une liste r\u00e9capitulative des articles de blog qui existent en tant que pages enfants. Il existe \u00e9galement des param\u00e8tres de configuration pour contr\u00f4ler l'ordre de la liste ainsi qu'une limite sur le nombre d'\u00e9l\u00e9ments , et si la pagination doit \u00eatre activ\u00e9e ou non. Un exemple de squelette de blog utilisant une page de liste peut \u00eatre trouv\u00e9 dans les t\u00e9l\u00e9chargements Grav . Page modulaire Une Page Modulaire est un type sp\u00e9cial de page de liste car elle construit une seule page \u00e0 partir de ses pages ou modules enfants . Cela permet de cr\u00e9er des mises en page d'une page tr\u00e8s complexes \u00e0 partir de modules. Ceci est accompli en construisant la Page Modulaire \u00e0 partir de plusieurs Modules trouv\u00e9s dans le dossier principal de la page modulaire. Un exemple de squelette de blog utilisant une page de liste peut \u00eatre trouv\u00e9 dans les t\u00e9l\u00e9chargements Grav . Chacun de ces types de pages suit la m\u00eame structure de base, donc avant de pouvoir entrer dans les d\u00e9tails de chaque type, nous devons expliquer comment les pages de Grav sont construites. Un module, parce qu'il est destin\u00e9 \u00e0 faire partie d'une autre page, n'est par nature pas une page \u00e0 laquelle vous pouvez acc\u00e9der directement via une URL. Pour cette raison, toutes les pages de module sont d\u00e9finies par d\u00e9faut comme non routables . Dossiers Toutes les pages de contenu se trouvent dans le dossier /user/pages . Chaque page doit \u00eatre plac\u00e9e dans son propre dossier. Les noms de dossier doivent \u00e9galement \u00eatre des slugs valides. Les slugs sont enti\u00e8rement en minuscules, avec des caract\u00e8res accentu\u00e9s remplac\u00e9s par des lettres de l'alphabet latin et des caract\u00e8res d'espacement remplac\u00e9s par un tiret ou un trait de soulignement, pour \u00e9viter d'\u00eatre encod\u00e9s. Grav comprend que toute valeur enti\u00e8re suivie d'un point sera uniquement destin\u00e9e \u00e0 la commande et est supprim\u00e9e en interne dans le syst\u00e8me. Par exemple, si vous avez un dossier nomm\u00e9 01.home , Grav traitera ce dossier comme home , mais s'assurera qu'avec l'ordre par d\u00e9faut, il vient avant 02.blog . 1 | /user 2 | \u2514\u2500\u2500 /pages 3 | \u251c\u2500\u2500 /01.home 4 | \u2502 \u251c\u2500\u2500 /_header 5 | \u2502 \u251c\u2500\u2500 /_features 6 | \u2502 \u251c\u2500\u2500 /_body 7 | \u251c\u2500\u2500 /02.blog 8 | \u2502 \u251c\u2500\u2500 /blog-item-1 9 | \u2502 \u251c\u2500\u2500 /blog-item-2 10 | \u2502 \u251c\u2500\u2500 /blog-item-3 11 | \u2502 \u251c\u2500\u2500 /blog-item-4 12 | \u2502 \u2514\u2500\u2500 /blog-item-5 13 | \u251c\u2500\u2500 /03.about-us 14 | \u2514\u2500\u2500 /error Votre site doit avoir un point d'entr\u00e9e afin qu'il sache o\u00f9 aller lorsque vous pointez votre navigateur vers la racine de votre site. Par exemple, si vous deviez saisir http://votresite.com dans votre navigateur, Grav attend par d\u00e9faut un alias home/ , mais vous pouvez remplacer l'emplacement de la page d'accueil en modifiant l'option home.alias dans le fichier de configuration de Grav . Les Modules sont identifi\u00e9s par un trait de soulignement (_) avant le nom du dossier. Il s'agit d'un type de dossier sp\u00e9cial destin\u00e9 \u00e0 \u00eatre utilis\u00e9 uniquement avec du contenu modulaire . Ceux-ci ne sont pas routables et ne sont pas visibles dans la navigation. Un exemple de configuration de page modulaire serait un dossier tel que user/pages/01.home . Home est configur\u00e9 comme une page modulaire qui contiendrait une collection de modules et serait construit \u00e0 partir des dossiers _header , _features et _body dans le dossier home. Le nom textuel de chaque dossier est par d\u00e9faut le slug que le syst\u00e8me utilise dans le cadre de l'URL. Par exemple, si vous avez un dossier tel que /user/pages/02.blog , le slug de cette page sera par d\u00e9faut blog et l'URL compl\u00e8te sera http://yoursite.com/blog . Une page d'\u00e9l\u00e9ment de blog, situ\u00e9e dans /user/pages/02.blog/blog-item-5 serait accessible via http://yoursite.com/blog/blog-item-5 . Si aucun num\u00e9ro n'est fourni comme pr\u00e9fixe du nom du dossier, la page est consid\u00e9r\u00e9e comme invisible et n'appara\u00eetra pas dans la navigation. Un exemple de ceci serait la page error dans la structure de dossiers ci-dessus. Cela peut en fait \u00eatre remplac\u00e9 dans la page elle-m\u00eame en d\u00e9finissant le param\u00e8tre visible dans les en-t\u00eates. Commande Lorsqu'il s'agit de collections, plusieurs options sont disponibles pour contr\u00f4ler l'ordre des dossiers. L'option la plus importante est d\u00e9finie dans le content.order.by des param\u00e8tres de configuration de la page. Les options sont : PROPRI\u00c9T\u00c9S DESCRIPTION default L'ordre est bas\u00e9 sur le syst\u00e8me de fichiers, c'est-\u00e0-dire 01.home avant 02.advark . title L'ordre est bas\u00e9 sur le titre tel que d\u00e9fini dans chaque page. basename L'ordre est bas\u00e9 sur le dossier alphab\u00e9tique sans ordre num\u00e9rique. date L'ordre est bas\u00e9 sur la date telle que d\u00e9finie dans chaque page. modified L'ordre est bas\u00e9 sur l'horodatage modifi\u00e9 de la page. folder L'ordre est bas\u00e9 sur le nom du dossier avec tout pr\u00e9fixe num\u00e9rique, c'est-\u00e0-dire 01. , supprim\u00e9. header.x L'ordre est bas\u00e9 sur n'importe quel champ d'en-t\u00eate de page. c'est-\u00e0-dire header.taxonomy.year . Une valeur par d\u00e9faut peut \u00e9galement \u00eatre ajout\u00e9e via un tube. c'est-\u00e0-dire header.taxonomy.year|2015 . manual La commande est bas\u00e9e sur la variable order_manual . random La commande est al\u00e9atoire. Vous pouvez d\u00e9finir sp\u00e9cifiquement une commande manuelle en fournissant une liste d'options au param\u00e8tre de configuration content.order.custom . Cela fonctionnera en conjonction avec content.order.by car il essaie d'abord de trier les pages manuellement, mais toutes les pages non sp\u00e9cifi\u00e9es dans la commande manuelle \u00e9choueront et seront tri\u00e9es selon la commande fournie. Vous pouvez remplacer le comportement par d\u00e9faut pour l'ordre des dossiers et la direction dans laquelle l'ordre se produit en d\u00e9finissant les options pages.order.dir et pages.order.by dans le fichier de configuration du syst\u00e8me Grav . Fichier de page Dans le dossier de page, nous cr\u00e9ons le fichier de page proprement dit. Le nom du fichier doit se terminer par .md pour indiquer qu'il s'agit d'un fichier au format Markdown. Techniquement, c'est Markdown avec YAML FrontMatter, ce qui semble impressionnant mais ce n'est vraiment pas grave du tout. Nous couvrirons les d\u00e9tails de la structure du fichier bient\u00f4t. La chose importante \u00e0 comprendre est que le nom du fichier fait directement r\u00e9f\u00e9rence au nom du fichier mod\u00e8le du th\u00e8me qui sera utilis\u00e9 pour le rendu. Le nom standard du fichier de mod\u00e8le principal est default , le fichier s'appellera donc default.md . Vous pouvez, bien s\u00fbr, nommer votre fichier comme vous le souhaitez, par exemple : document.md , ce qui obligerait Grav \u00e0 rechercher un fichier de mod\u00e8le dans le th\u00e8me correspondant, tel que document.html.twig Twig-template. Ce comportement peut \u00eatre remplac\u00e9 dans la page en d\u00e9finissant le param\u00e8tre de mod\u00e8le dans les en-t\u00eates. Un exemple de fichier de page pourrait ressembler \u00e0 ceci : 1 | --- 2 | titre : Titre de la page 3 | taxonomie : 4 | cat\u00e9gorie : blog 5 | --- 6 | # Titre de la page 7 | 8 | Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque porttitor eu 9 | felis sed ornar\u00e9. Sed a mauris venenatis, pulvinar velit vel, dictum enim. Phasellus 10 | ac rutrum velit. **Nunc lorem** purus, hendrerit sit amet augue aliquet, iaculis 11 | ultricies nisl. Suspendisse tincidunt euismod risus, _quis feugiat_ arcu tincidunt 12 | \u00e9g\u00e8te. Nulla eros mi, commodo vel ipsum vel, aliquet congue odio. Classe aptent taciti 13 | sociosqu ad litora torquent per conubia nostra, per inceptos himenaeos. Pellentesque 14 | velit orci, laoreet et adipiscing eu, interdum quis nibh. Nunc a accumsan purus. Les param\u00e8tres entre la paire de marqueurs --- sont connus sous le nom de FrontMatter YAML et comprennent les param\u00e8tres YAML de base de la page. Dans cet exemple, nous d\u00e9finissons explicitement le titre, ainsi que la taxonomie sur blog afin que nous puissions le filtrer plus tard. Le contenu apr\u00e8s le deuxi\u00e8me --- est le contenu r\u00e9el qui sera compil\u00e9 et rendu au format HTML sur votre site. Ceci est \u00e9crit en Markdown , qui sera trait\u00e9 en d\u00e9tail dans un prochain chapitre. Sachez simplement que les marqueurs # , ** et _ se traduisent respectivement en titre 1 , en gras et en italique . Assurez-vous d'enregistrer vos fichiers .md en tant que fichiers encod\u00e9s en UTF-8 . Cela garantira qu'ils fonctionnent avec des caract\u00e8res sp\u00e9ciaux sp\u00e9cifiques \u00e0 la langue. Taille du r\u00e9sum\u00e9 et s\u00e9parateur Il existe un param\u00e8tre dans le fichier site.yaml qui vous permet de d\u00e9finir une taille par d\u00e9faut (en caract\u00e8res) du r\u00e9sum\u00e9 qui peut \u00eatre utilis\u00e9 via page.summary( ) pour afficher un r\u00e9sum\u00e9 ou un synopsis de la page. Ceci est particuli\u00e8rement utile pour les blogs o\u00f9 vous souhaitez avoir une liste contenant uniquement des informations r\u00e9capitulatives, et non le contenu de la page enti\u00e8re. Par d\u00e9faut, cette valeur est de 300 caract\u00e8res. Vous pouvez remplacer cela dans votre fichier user/config/site.yaml , mais une approche encore plus utile consiste \u00e0 utiliser le s\u00e9parateur de r\u00e9sum\u00e9 manuel \u00e9galement connu sous le nom de d\u00e9limiteur de r\u00e9sum\u00e9 : === . Vous devez vous assurer de le mettre dans votre contenu avec des lignes vides au-dessus et en dessous . Par exemple: 1 | Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod 2 | tempor inciddunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, 3 | quis nostrud exercice ullamco laboris nisi ut aliquip ex ea commodo 4 | consequat. 5 | 6 | === 7 | 8 | Duis aute irure dolor in reprehenderit in voluptate velit esse 9 | cillum dolore eu fugiat nulla pariatur. Sauf sint occaecat cupidatat non 10 | proident, sunt in culpa qui officia deserunt mollit anim id est laborum. Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod 11 | tempor inciddunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, 12 | quis nostrud exercice ullamco laboris nisi ut aliquip ex ea commodo 13 | cons\u00e9quent. Duis aute irure dolor in reprehenderit in voluptate velit esse 14 | cillum dolore eu fugiat nulla pariatur. Sauf sint occaecat cupidatat non 15 | proident, sunt in culpa qui officia deserunt mollit anim id est laborum. Cela utilisera le texte au-dessus du s\u00e9parateur lorsqu'il est r\u00e9f\u00e9renc\u00e9 par page.summary() et le contenu complet de la page lorsqu'il est r\u00e9f\u00e9renc\u00e9 par page.content() . Lors de l'utilisation de page.summary() , le param\u00e8tre de taille du r\u00e9sum\u00e9 sera utilis\u00e9 si le s\u00e9parateur n'est pas trouv\u00e9 dans le contenu de la page. Trouver d'autres pages Grav a une fonctionnalit\u00e9 utile qui vous permet de trouver une autre page et d'effectuer des actions sur cette page. Cela peut \u00eatre accompli avec la m\u00e9thode find() qui prend simplement la route et renvoie un nouvel objet Page. Cela vous permet d'ex\u00e9cuter une grande vari\u00e9t\u00e9 de fonctionnalit\u00e9s \u00e0 partir de n'importe quelle page de votre site Grav. Par exemple, vous pouvez fournir une liste de tous les projets en cours sur une page de d\u00e9tails de projet particuli\u00e8re : 1 | # Tous les projets 2 | <ul> 3 | {% for p in pages.find('/projects').children if p != page %} 4 | <li><a href=\"{{ p.url|e }}\">{{ p.title|e }}</a></li> 5 | {% endfor %} 6 | </ul> Dans les sections suivantes, nous continuerons \u00e0 approfondir les sp\u00e9cificit\u00e9s d'une page et des collections de pages en d\u00e9tail. contentMeta Le r\u00e9f\u00e9rencement des pages et du contenu est simple, mais qu'en est-il du contenu qui n'est pas rendu sur le front-end avec le reste de la page ? Lorsque Grav lit le contenu de la page, il stocke ce contenu dans le cache. Ainsi, la prochaine fois que la page sera rendue, elle n'aura pas \u00e0 lire tout le contenu du fichier .md . G\u00e9n\u00e9ralement, ce contenu est enti\u00e8rement rendu au front-end. Cependant, il existe des cas o\u00f9 il est utile d'avoir des donn\u00e9es suppl\u00e9mentaires stock\u00e9es \u00e0 c\u00f4t\u00e9 de la page dans le cache. C'est l\u00e0 qu'intervient contentMeta() . Nous utilisons ContentMeta dans notre plugin Shortcode pour r\u00e9cup\u00e9rer des sections d'autres pages \u00e0 l'aide de shortcodes. Par example: 1 | <div id=\"author\">{{ page.find('/my/custompage').contentMeta. | shortcodeMeta.shortcode.section.author|e }}</div> Nous l'avons utilis\u00e9 dans Shortcode Core pour stocker les actifs CSS et JS requis par le shortcode sur la page, mais cette fonctionnalit\u00e9 peut \u00eatre utilis\u00e9e pour stocker \u00e0 peu pr\u00e8s n'importe quelle structure de donn\u00e9es dont vous avez besoin.","title":"Pages"},{"location":"panneau-admin-intro/","text":"Introduction Le plug-in du Panneau d'Administration pour Grav est une interface graphique Web (interface utilisateur graphique) qui fournit un moyen pratique de configurer Grav et de cr\u00e9er et de modifier facilement des pages. Cela restera un plugin totalement facultatif, et n'est en aucun cas requis ou n\u00e9cessaire pour utiliser Grav efficacement. En fait, l'interface d'administration offre une vue volontairement limit\u00e9e pour s'assurer qu'elle reste facile \u00e0 utiliser et non \u00e9crasante. Les utilisateurs exp\u00e9riment\u00e9s pr\u00e9f\u00e9reront toujours travailler directement avec les fichiers de configuration. Caract\u00e9ristiques Connexion utilisateur avec hachage automatique du mot de passe Fonctionnalit\u00e9 mot de passe oubli\u00e9 Gestion des utilisateurs connect\u00e9s Mises \u00e0 jour du noyau Grav en un clic Tableau de bord avec l'\u00e9tat de la maintenance, l'activit\u00e9 du site et les derni\u00e8res mises \u00e0 jour des pages Capacit\u00e9 de sauvegarde aliment\u00e9e par Ajax Capacit\u00e9 d'effacement du cache aliment\u00e9e par Ajax Gestion de la configuration du syst\u00e8me Gestion de la configuration du site Modes Normal et Expert qui permettent l'\u00e9dition via des formulaires ou YAML Liste des pages avec filtrage et recherche Cr\u00e9ation, modification, d\u00e9placement, copie et suppression de pages Puissant \u00e9diteur de code de mise en \u00e9vidence de la syntaxe avec aper\u00e7u instantan\u00e9 aliment\u00e9 par Grav Fonctionnalit\u00e9s de l'\u00e9diteur, touches de raccourci, barre d'outils et mode plein \u00e9cran sans distraction T\u00e9l\u00e9chargement par glisser-d\u00e9poser des fichiers multim\u00e9dias de la page, y compris le placement par glisser-d\u00e9poser dans l'\u00e9diteur Mises \u00e0 jour du th\u00e8me et du plugin en un clic Gestionnaire de plugins qui permet de lister et de configurer les plugins install\u00e9s Gestionnaire de th\u00e8mes qui permet de lister et de configurer les th\u00e8mes install\u00e9s Installation aliment\u00e9e par GPM de nouveaux plugins et th\u00e8mes ACL pour l'acc\u00e8s des utilisateurs administrateurs aux fonctionnalit\u00e9s Support Le panneau d'administration est un plugin assez ambitieux avec de nombreuses fonctionnalit\u00e9s qui vous donneront beaucoup de puissance et de flexibilit\u00e9 lors de la cr\u00e9ation de vos sites Grav. Donc, si vous avez des questions, des probl\u00e8mes, des suggestions ou si vous trouvez l'un de ces bogues rares, veuillez utiliser l'un des moyens suivants pour obtenir de l'aide de notre part. Pour le chat en direct , veuillez utiliser le Serveur Discord Chat pour les discussions li\u00e9es au plugin d'administration. Pour les bogues, les fonctionnalit\u00e9s, les am\u00e9liorations , assurez-vous de cr\u00e9er des signalements dans le r\u00e9f\u00e9rentiel GitHub du plugin d'administration . Installation Assurez-vous d'abord que vous utilisez la derni\u00e8re version de Grav, 1.7.28 ou sup\u00e9rieur . Ceci est n\u00e9cessaire pour que le plugin d'administration fonctionne correctement. Recherchez et mettez \u00e0 niveau vers les nouvelles versions de Grav comme celle-ci ( -f force une actualisation de l'index GPM) : $ | bin/gpm version -f $ | bin/gpm selfupgrade Le plugin d'administration n\u00e9cessite en fait l'aide de 3 autres plugins, donc pour que le plugin admin fonctionne, vous devez d'abord installer les plugins login , forms et email . Ceux-ci sont disponibles via GPM, et parce que le plugin a des d\u00e9pendances, il vous suffit de continuer et d'installer le plugin d'administration, et d'accepter lorsque vous \u00eates invit\u00e9 \u00e0 installer les autres : $ | bin/gpm install admin Vous pouvez \u00e9galement installer le plug-in manuellement si vous ne parvenez pas \u00e0 utiliser GPM sur votre syst\u00e8me. Cr\u00e9ation d'un utilisateur Avec la derni\u00e8re version de l'administrateur, vous serez invit\u00e9 \u00e0 cr\u00e9er un compte d'utilisateur administrateur lorsque vous pointez votre navigateur sur votre site. Vous devez terminer cette \u00e9tape pour vous assurer imm\u00e9diatement qu'un utilisateur administrateur valide est sous votre contr\u00f4le. Remplissez simplement le formulaire et cliquez sur le bouton Create user . Les informations utilisateur sont stock\u00e9es dans le dossier user/accounts/ de votre installation Grav. Vous pouvez modifier les valeurs manuellement ou via le plugin Admin lui-m\u00eame. Vous pouvez \u00e9galement cr\u00e9er de nouveaux utilisateurs manuellement ou via la commande CLI bin/plugin login newuser . Plus d'informations sont contenues dans la FAQ Admin. Complexit\u00e9 du nom d'utilisateur et du mot de passe Les mod\u00e8les Regex pour les noms d'utilisateur et les mots de passe sont d\u00e9finis dans system/config/system.yaml . Le mod\u00e8le par d\u00e9faut pour les utilisateurs ( system.username_regex ) ne comprend que des caract\u00e8res minuscules, des chiffres, des tirets et des traits de soulignement. Les noms d'utilisateur doivent comporter entre 3 et 16 caract\u00e8res. Le mod\u00e8le par d\u00e9faut pour les mots de passe ( system.pwd_regex ) est un minimum de huit (8) caract\u00e8res, avec au moins un chiffre, une majuscule et une lettre minuscule. Usage Par d\u00e9faut, vous pouvez acc\u00e9der \u00e0 l'administration en pointant votre navigateur sur http://votresite.com/admin . Vous pouvez simplement vous connecter avec username et le password d\u00e9finis dans le fichier YAML que vous avez configur\u00e9 pr\u00e9c\u00e9demment. Une fois connect\u00e9, votre mot de passe en clair sera supprim\u00e9 et remplac\u00e9 par un mot de passe crypt\u00e9 .","title":"Introduction"},{"location":"permissions/","text":"Autorisations Autorisations des comptes Les autorisations d'utilisateur et de groupe pour la gestion des informations relatives au compte sont : OPTION VALEUR DESCRIPTION Configuration admin.configuration Donne \u00e0 l'utilisateur l'acc\u00e8s \u00e0 la zone de configuration de l'administration. \u293f Accounts Configuration admin.configuration.accounts Donne \u00e0 l'utilisateur l'acc\u00e8s \u00e0 la configuration des comptes qui se trouve dans la zone Comptes de l'administration. Accounts admin.accounts Donne \u00e0 l'utilisateur un acc\u00e8s complet \u00e0 la zone Comptes de l'administration. \u293f Create admin.accounts.create Donne \u00e0 l'utilisateur l'acc\u00e8s pour Cr\u00e9er des comptes d'utilisateurs et des groupes. \u293f Read admin.accounts.read Donne \u00e0 l'utilisateur l'acc\u00e8s pour Lire les comptes et groupes d'utilisateurs. \u293f Update admin.accounts.upodate Donne \u00e0 l'utilisateur l'acc\u00e8s pour Mettre \u00e0 jour des comptes et des groupes d'utilisateurs. \u293f Delete admin.accounts.delete Donne \u00e0 l'utilisateur l'acc\u00e8s pour Supprimer des comptes d'utilisateurs et des groupes. \u293f List admin.accounts.list Donne \u00e0 l'utilisateur l'acc\u00e8s \u00e0 la zone Comptes de l'administration. Les valeurs possibles pour les autorisations sont : OPTION VALEUR DESCRIPTION Allowed true Autorise l'ex\u00e9cution d'une action s'il n'y a pas d'autorisation Refus\u00e9e au m\u00eame niveau. Denied false Emp\u00eache l'ex\u00e9cution de l'action. Si l'utilisateur a d\u00e9fini \u00e0 la fois Autoris\u00e9e et Refus\u00e9e , l'autorisation Refus\u00e9e l'emporte. Not set null Aucun effet, mais agit comme Refus\u00e9 si aucune autre r\u00e8gle ne s'applique. Les autorisations d\u00e9finies sp\u00e9cifiquement pour le compte d'utilisateur ont priorit\u00e9 sur les autorisations de groupe. Si l'autorisation n'a pas \u00e9t\u00e9 d\u00e9finie dans le compte d'utilisateur, la v\u00e9rification d'acc\u00e8s sera effectu\u00e9e pour tous les groupes d'utilisateurs auxquels l'utilisateur appartient. Si l'un des groupes d'utilisateurs a refus\u00e9 l'action, l'utilisateur n'a aucune autorisation pour l'action. Sinon, si l'un des groupes d'utilisateurs a Autoris\u00e9 l'action, l'autorisation sera accord\u00e9e. Si l'autorisation n'a \u00e9t\u00e9 d\u00e9finie dans aucun des groupes de l'utilisateur, l'autorisation de super utilisateur agit comme universellement autoris\u00e9e , sinon refus\u00e9e sera appliqu\u00e9e.","title":"Permissions"},{"location":"personnalisation/","text":"Personnalisation Il existe de nombreuses fa\u00e7ons de personnaliser un th\u00e8me, et Grav ne limite vraiment pas votre cr\u00e9ativit\u00e9 \u00e0 ce sujet. Cependant, il existe plusieurs fonctionnalit\u00e9s et certaines fonctionnalit\u00e9s fournies par Grav pour faciliter ce processus. CSS personnalis\u00e9 Le moyen le plus simple de personnaliser un th\u00e8me consiste \u00e0 fournir votre propre fichier custom.css . Le th\u00e8me par d\u00e9faut de Quark fournit une r\u00e9f\u00e9rence \u00e0 un fichier css/custom.css via Asset Manager . Heureusement, Asset Manager s'en charge pour nous, et si le fichier n'est pas trouv\u00e9, la r\u00e9f\u00e9rence n'est pas ajout\u00e9e au HTML. Cependant, si vous fournissez un fichier appel\u00e9 custom.css dans le dossier css/ de Quark, il sera r\u00e9cup\u00e9r\u00e9 et r\u00e9f\u00e9renc\u00e9. Vous devez juste vous assurer que vous fournissez des \u00e9l\u00e9ments CSS avec suffisamment de sp\u00e9cificit\u00e9 pour remplacer le CSS par d\u00e9faut. Par exemple: SCSS/LESS personnalis\u00e9 1 | body a { 2 | color: #CC0000; 3 | } Cela remplacera la couleur de lien par d\u00e9faut et utilisera une couleur rouge \u00e0 la place. SCSS/LESS personnalis\u00e9 La prochaine \u00e9tape apr\u00e8s avoir fourni un fichier CSS personnalis\u00e9 consiste \u00e0 utiliser un fichier _custom.scss . Quark est \u00e9crit \u00e0 l'aide de SCSS , qui est un pr\u00e9processeur compatible CSS qui vous permet d'\u00e9crire du CSS plus efficacement via l'utilisation de variables, de structures imbriqu\u00e9es, de partiels, d'importations, d'op\u00e9rateurs et de mix-ins . Cela peut sembler un peu intimidant au d\u00e9but, mais vous pouvez utiliser autant ou aussi peu de SCSS que vous le souhaitez, et une fois que vous aurez commenc\u00e9, vous aurez du mal \u00e0 revenir au CSS traditionnel. Promis ! Le th\u00e8me Quark a un dossier scss/ qui contient une vari\u00e9t\u00e9 de fichiers .scss . Ceux-ci doivent \u00eatre compil\u00e9s dans le dossier css-compiled/ . Vous pouvez cr\u00e9er un fichier appel\u00e9 scss/theme/_custom.scss et l'importer dans le fichier theme.scss en bas en utilisant @import 'theme/custom'; . Il y a plusieurs grands avantages \u00e0 mettre votre code dans ce fichier : Les modifications r\u00e9sultantes seront compil\u00e9es dans le fichier css-compiled/theme.min.css avec tous les autres CSS. Vous avez acc\u00e8s \u00e0 toutes les variables et mix-ins disponibles pour l'un des autres SCSS utilis\u00e9s dans le th\u00e8me. Vous avez acc\u00e8s \u00e0 toutes les fonctionnalit\u00e9s et fonctionnalit\u00e9s SCSS standard pour faciliter le d\u00e9veloppement. Un exemple de ce fichier serait : _custom.scss 1 | body { 2 | a { 3 | color: darken($core-accent, 30%); 4 | } 5 | } L'inconv\u00e9nient de cette approche est que ce fichier est \u00e9cras\u00e9 lors de toute mise \u00e0 niveau de th\u00e8me , vous devez donc vous assurer de cr\u00e9er une sauvegarde de tout travail personnalis\u00e9 que vous effectuez. Ce probl\u00e8me est r\u00e9solu en utilisant l'h\u00e9ritage de th\u00e8me comme d\u00e9crit ci-dessous. Wellington SCSS Wellington est un wrapper natif pour libsass disponible pour Linux et MacOS. Il fournit une solution beaucoup plus rapide pour compiler SCSS que le compilateur scss bas\u00e9 sur Ruby par d\u00e9faut. Par plus rapide, nous entendons environ 20 fois plus rapide ! . C'est super facile \u00e0 installer (via brew): $ | brew install wellington Pour en profiter pour compiler un dossier scss dans un css-compiled par css comme dans l'exemple ci-dessus, vous pouvez utiliser ce gist . Wellington est ce que nous utilisons pour tous les th\u00e8mes Team Grav et cela fonctionne tr\u00e8s bien ! H\u00e9ritage du th\u00e8me C'est l'approche pr\u00e9f\u00e9r\u00e9e pour modifier ou personnaliser un th\u00e8me, mais cela n\u00e9cessite un peu plus de configuration. Le concept de base est que vous d\u00e9finissez un th\u00e8me comme le th\u00e8me de base dont vous h\u00e9ritez, et ne fournissez que les \u00e9l\u00e9ments que vous souhaitez modifier et laissez le th\u00e8me de base g\u00e9rer le reste. Le grand avantage de cela est que vous pouvez plus facilement maintenir le th\u00e8me de base \u00e0 jour et \u00e0 jour sans affecter directement votre th\u00e8me h\u00e9rit\u00e9 personnalis\u00e9. Il existe deux mani\u00e8res d'h\u00e9riter d'un th\u00e8me existant : Utilisation de l'interface de ligne de commande (CLI) avec le plug-in DevTools. Manuellement. H\u00e9ritage \u00e0 l'aide de la CLI Comme indiqu\u00e9 dans le didacticiel sur les th\u00e8mes , vous pouvez cr\u00e9er un nouveau th\u00e8me \u00e0 l'aide du plug-in DevTools. Mais vous pouvez aussi h\u00e9riter d'un th\u00e8me existant. La proc\u00e9dure est simple. Installez le plugin DevTools si ce n'est d\u00e9j\u00e0 fait. Suivez ensuite la proc\u00e9dure cr\u00e9er un th\u00e8me de base , mais lorsqu'on vous demande de choisir un type de mod\u00e8le ( Please choose a template type ) , tapez h\u00e9ritage ( inheritance ). Si Quark est le seul th\u00e8me, il sera affich\u00e9 en tant qu'option 0. Tapez donc 0 pour h\u00e9riter de Quark. Votre nouveau th\u00e8me h\u00e9rit\u00e9 sera cr\u00e9\u00e9. Copiez toutes les options du fichier YAML du th\u00e8me dont vous h\u00e9ritez (ou du dossier user/config/themes si vous l'avez personnalis\u00e9) en haut du fichier de configuration YAML nouvellement cr\u00e9\u00e9 de votre th\u00e8me : /user/themes/mytheme/ myth\u00e8me.yaml . Copiez la section \"form\" du fichier /user/themes/quark/blueprints.yaml dans user/themes/mytheme/blueprints.yaml afin d'inclure les \u00e9l\u00e9ments personnalisables du th\u00e8me dans l'admin. (Ou remplacez simplement le fichier et modifiez son contenu.) Modifiez votre th\u00e8me par d\u00e9faut pour utiliser votre nouveau mytheme en \u00e9ditant l'option pages : th\u00e8me : dans votre fichier de configuration user/config/system.yaml : 1 | pages : 2 | th\u00e8me : myth\u00e8me H\u00e9ritage manuel Pour y parvenir, vous devez suivre ces \u00e9tapes : Cr\u00e9ez un nouveau dossier : user/themes/mytheme pour h\u00e9berger votre nouveau th\u00e8me. Copiez le fichier YAML du th\u00e8me du th\u00e8me dont vous h\u00e9ritez (ou du dossier user/config/themes si vous l'avez personnalis\u00e9) dans /user/themes/mytheme/mytheme.yaml et ajoutez le contenu suivant (en rempla\u00e7ant user/themes/quark avec le nom du th\u00e8me dont vous h\u00e9ritez) : 1 | streams: 2 | schemes: 3 | theme: 4 | type: ReadOnlyStream 5 | prefixes: 6 | '': 7 | - user/themes/mytheme 8 | - user/themes/quark Copiez le fichier /user/themes/quark/blueprints.yaml dans /user/themes/mytheme/blueprints.yaml afin d'inclure les \u00e9l\u00e9ments personnalisables du th\u00e8me dans l'admin. Modifiez votre th\u00e8me par d\u00e9faut pour utiliser votre nouveau mytheme en \u00e9ditant l'option pages : th\u00e8me : dans votre fichier de configuration user/config/system.yaml : 1 | pages : 2 | th\u00e8me : myth\u00e8me Cr\u00e9ez un nouveau fichier de classe de th\u00e8me qui peut \u00eatre utilis\u00e9 pour ajouter des fonctionnalit\u00e9s avanc\u00e9es pilot\u00e9es par les \u00e9v\u00e9nements. Cr\u00e9ez un fichier user/themes/mytheme/mytheme.php : 1 | <?php 2 | namespace Grav\\Theme; 3 | 4 | class Mytheme extends Quark 5 | { 6 | // Some new methods, properties etc. 7 | } 8 | ?> Vous avez maintenant cr\u00e9\u00e9 un nouveau th\u00e8me appel\u00e9 mytheme et configur\u00e9 les flux de sorte qu'il regarde d'abord dans le th\u00e8me mytheme , puis essaie quark . Donc, en substance, Quark est le th\u00e8me de base de ce nouveau th\u00e8me. Vous pouvez ensuite fournir uniquement les fichiers dont vous avez besoin, y compris JS , CSS ou m\u00eame des modifications aux fichiers de mod\u00e8le Twig si vous le souhaitez. Utilisation de SCSS Afin de modifier des fichiers SCSS sp\u00e9cifiques, nous devons utiliser une petite configuration pour qu'il sache d'abord regarder dans votre nouvel emplacement mytheme , puis quark ensuite. Cela n\u00e9cessite plusieurs choses. Tout d'abord, vous devez copier le fichier SCSS principal de quark qui contient tous les appels @import pour divers sous-fichiers. Donc, copiez le fichier theme.scss de quark/scss/ vers le dossier mytheme/scss/ . Dans le fichier theme.scss , remplacez le d\u00e9but de toutes les lignes d'importation par @import '../../quark/scss/theme/'; il saura donc utiliser les fichiers du th\u00e8me quark. Ainsi, par exemple, la premi\u00e8re ligne sera @import '../../quark/scss/theme/variables'; . Ajoutez @import 'theme/custom'; tout en bas du fichier theme.scss . L'\u00e9tape suivante consiste \u00e0 cr\u00e9er un fichier situ\u00e9 dans mytheme/scss/theme/_custom.scss . C'est l\u00e0 que vos modifications iront. Copiez les fichiers gulpfile.js et package.json dans le dossier de base du nouveau th\u00e8me. Afin de compiler le nouveau scss pour le mytheme , vous devrez ouvrir un terminal et acc\u00e9der au dossier du th\u00e8me. Quark utilise gulp pour compiler le sass, vous aurez donc besoin de ceux install\u00e9s et du fil pour les d\u00e9pendances. Ex\u00e9cutez npm install -g gulp, yarn install , puis gulp watch . D\u00e9sormais, toutes les modifications apport\u00e9es aux fichiers seront recompil\u00e9es.","title":"Personnalisation"},{"location":"plugin-bases/","text":"Plugin les bases Grav a \u00e9t\u00e9 con\u00e7u pour \u00eatre simple et cibl\u00e9 , ne traitant que des pages. L'id\u00e9e est que Grav lui-m\u00eame est super l\u00e9ger , fournissant juste assez de fonctionnalit\u00e9s pour faire les bases : routage, compilation Markdown vers HTML, cr\u00e9ation de mod\u00e8les Twig et mise en cache. Cependant, nous savions que nous voulions nous assurer que Grav puisse se d\u00e9velopper et fournir des fonctionnalit\u00e9s puissantes en cas de besoin, nous avons donc construit des crochets d'\u00e9v\u00e9nement dans tout le syst\u00e8me afin que tout puisse \u00eatre \u00e9tendu avec des plugins . Puissant ! Tous les objets cl\u00e9s de Grav sont accessibles via un puissant conteneur d'injection de d\u00e9pendances . Avec les crochets d'\u00e9v\u00e9nement de Grav tout au long du cycle de vie, vous pouvez acc\u00e9der \u00e0 tout ce que Grav conna\u00eet et le manipuler selon vos besoins. Avec ce syst\u00e8me, vous avez le contr\u00f4le total pour ajouter autant de fonctionnalit\u00e9s que vous le souhaitez. Les plugins se sont av\u00e9r\u00e9s si faciles \u00e0 \u00e9crire, et si flexibles et puissants, que nous ne pouvons pas arr\u00eater de les cr\u00e9er ! Nous avons d\u00e9j\u00e0 plus de 300 plugins t\u00e9l\u00e9chargeables gratuitement qui font tout, depuis l'affichage d'un plan du site , la fourniture de fils d'Ariane , l'affichage d'archives de blog, un simple moteur de recherche , jusqu'\u00e0 la fourniture d'un panier d'achat enti\u00e8rement fonctionnel aliment\u00e9 par JavaScript ! La meilleure fa\u00e7on d'apprendre ce qui peut \u00eatre fait avec les plugins est de t\u00e9l\u00e9charger certains d'entre eux et de regarder ce qu'ils font et comment ils le font. Dans le prochain chapitre, nous allons cr\u00e9er un plugin simple \u00e0 partir de z\u00e9ro ! Essentiel Tous les plugins sont situ\u00e9s dans votre dossier user/plugins . Avec l'installation de base de Grav, il n'y a que deux plugins fournis : error et problems . Le plugin error est utilis\u00e9 pour g\u00e9rer les erreurs HTTP, comme 404 Page Not Found . Le plugin problems est utile pour les nouvelles installations de Grav car il d\u00e9tecte tout probl\u00e8me avec la configuration de votre h\u00e9bergement, les dossiers manquants ou les autorisations qui pourraient causer des probl\u00e8mes avec Grav. Seul le plugin error est vraiment indispensable au bon fonctionnement. Chaque plugin dans le dossier user/plugins doit avoir un nom unique, et ce nom doit d\u00e9finir \u00e9troitement la fonction du plugin. Veuillez ne pas utiliser d'espaces, de traits de soulignement ou de majuscules dans le nom du plugin. Acc\u00e9der aux valeurs de configuration du plugin via Twig Pour acc\u00e9der aux param\u00e8tres de configuration du plugin via Twig (c'est-\u00e0-dire dans un th\u00e8me), le format g\u00e9n\u00e9ral est : config.plugins.pluginname.pluginproperty Si le nom du plugin contient des tirets, vous devez vous r\u00e9f\u00e9rer \u00e0 ses propri\u00e9t\u00e9s en utilisant : config.plugins['plugin-name'].pluginproperty","title":"Les Bases"},{"location":"plugin-installation/","text":"Installation du plugin Installation ! L'installation d'un plugin peut se faire de trois mani\u00e8res : La m\u00e9thode d'installation GPM (Grav Package Manager) vous permet d'installer rapidement le plugin avec une simple commande de terminal. La m\u00e9thode manuelle vous permet de le faire via un fichier zip. La m\u00e9thode d'administration vous permet de le faire via le plugin d'administration. Le plugin devrait vous permettre de conna\u00eetre le NOM \u00e0 utiliser dans les \u00e9tapes suivantes. Installation GPM (Pr\u00e9f\u00e9r\u00e9e) Pour installer le plugin via le GPM , via le terminal de votre syst\u00e8me (\u00e9galement appel\u00e9 la ligne de commande), acc\u00e9dez \u00e0 la racine de votre installation Grav et entrez : bin/gpm install NAME Cela installera le plugin dans votre r\u00e9pertoire /user/plugins dans Grav. Ses fichiers se trouvent sous user/plugins/NAME . Installation manuelle Pour installer le plugin manuellement, t\u00e9l\u00e9chargez la version zip de ce r\u00e9f\u00e9rentiel et d\u00e9compressez-la sous user/plugins/ . Renommez ensuite le dossier en NAME . Vous devriez maintenant avoir tous les fichiers du plugin sous user/plugins/NAME . REMARQUE : Ce plugin est un composant modulaire pour Grav qui peut n\u00e9cessiter d'autres plugins pour fonctionner, veuillez consulter le fichier user/plugins/NAME/blueprints.yaml pour plus d'informations. Plug-in d'administration Si vous utilisez le plugin Admin et que le plugin est enregistr\u00e9 dans le r\u00e9f\u00e9rentiel Grav, vous pouvez installer le plugin directement en parcourant le menu Plugins et en cliquant sur le bouton Add .","title":"Installation"},{"location":"plugin-tutoriel/","text":"Tutoriel sur les plugins Les plugins sont g\u00e9n\u00e9ralement d\u00e9velopp\u00e9s car il existe une t\u00e2che qui ne peut pas \u00eatre compl\u00e9t\u00e9e avec les fonctionnalit\u00e9s de base de Grav. Dans ce tutoriel, nous allons cr\u00e9er un plugin qui aide Grav \u00e0 fournir une page al\u00e9atoire \u00e0 l'utilisateur. Vous avez probablement vu une fonctionnalit\u00e9 similaire sur les sites de blog comme un moyen de fournir un article de blog al\u00e9atoire lorsque vous cliquez sur un bouton. Puisqu'il existe d\u00e9j\u00e0 un plugin qui effectue ce travail nomm\u00e9 Random , nous appellerons ce plugin de test Randomizer . Cette fonctionnalit\u00e9 n'est pas possible pr\u00eate \u00e0 l'emploi , mais est facilement fournie via un plugin. Comme c'est le cas avec un grand nombre d'aspects de Grav, il n'y a pas de moyen unique de le faire. Au lieu de cela, vous avez de nombreuses options. Nous ne couvrirons qu'une seule approche... Pr\u00e9sentation du plug-in Randomizer Pour notre plugin, nous adopterons l'approche suivante : Activez le plugin si un URI correspond \u00e0 notre \"route de d\u00e9clenchement\" configur\u00e9e. (par exemple /random ) Cr\u00e9ez un filtre afin que seules les taxonomies configur\u00e9es soient dans le pool de pages al\u00e9atoires. (ex. cat\u00e9gorie : blog ) Trouvez une page au hasard dans notre pool filtr\u00e9 et dites \u00e0 Grav de l'utiliser pour le contenu de la page. OK ! Cela semble assez simple, non ? Alors, laissez-nous craquer! \u00c9tape 1 - Installer le plug-in DevTools Les versions pr\u00e9c\u00e9dentes de ce didacticiel n\u00e9cessitaient la cr\u00e9ation manuelle d'un plugin. Tout ce processus peut \u00eatre ignor\u00e9 gr\u00e2ce \u00e0 notre nouveau plugin DevTools . La premi\u00e8re \u00e9tape de la cr\u00e9ation d'un nouveau plugin consiste \u00e0 installer le plugin DevTools . Ceci peut \u00eatre fait de deux fa\u00e7ons. Installer via CLI GPM Naviguez dans la ligne de commande jusqu'\u00e0 la racine de votre installation Grav $ | bin/gpm install devtools Installer via le plugin Admin Une fois connect\u00e9, acc\u00e9dez simplement \u00e0 la section Plugins depuis la barre lat\u00e9rale. Cliquez sur le bouton Add en haut \u00e0 droite. Recherchez DevTools dans la liste et cliquez sur le bouton Install . \u00c9tape 2 - Cr\u00e9er le plugin Randomizer Pour cette prochaine \u00e9tape, vous devez vraiment \u00eatre dans la ligne de commande car les DevTools fournissent quelques commandes CLI pour faciliter le processus de cr\u00e9ation d'un nouveau plugin ! Depuis la racine de votre installation Grav saisissez la commande suivante : $ | bin/plugin devtools new-plugin Ce processus vous posera quelques questions n\u00e9cessaires \u00e0 la cr\u00e9ation du nouveau plugin : $ | bin/plugin devtools new-plugin | Enter Plugin Name: Randomizer | Enter Plugin Description: Sends the user to a random page | Enter Developer Name: Acme Corp | Enter Developer Email: contact@acme.co | | SUCCESS plugin Randomizer -> Created Successfully | | Path: /www/user/plugins/randomizer | | Make sure to run `composer update` to initialize the autoloader \u00c0 ce stade, vous devez ex\u00e9cuter la mise \u00e0 jour de composer update dans le dossier du plug-in nouvellement cr\u00e9\u00e9. La commande DevTools vous indique o\u00f9 ce nouveau plugin a \u00e9t\u00e9 cr\u00e9\u00e9. Ce plugin cr\u00e9\u00e9 est enti\u00e8rement fonctionnel mais n'aura pas automatiquement la logique pour ex\u00e9cuter la fonction que nous souhaitons. Nous devrons le modifier en fonction de nos besoins. \u00c9tape 3 - Bases du plugin Nous avons maintenant cr\u00e9\u00e9 un nouveau plugin qui peut \u00eatre modifi\u00e9 et d\u00e9velopp\u00e9. D\u00e9composons-le et regardons ce qui constitue un plugin. Si vous regardez dans le dossier user/plugins/randomizer vous verrez : . \u251c\u2500\u2500 CHANGELOG.md \u251c\u2500\u2500 LICENSE \u251c\u2500\u2500 README.md \u251c\u2500\u2500 blueprints.yaml \u251c\u2500\u2500 randomizer.php Ceci est un exemple de structure mais certaines choses sont requises : \u00c9l\u00e9ments requis pour fonctionner Ces \u00e9l\u00e9ments sont essentiels et votre plugin ne fonctionnera pas de mani\u00e8re fiable \u00e0 moins que vous ne les incluiez dans votre plugin. blueprints.yaml - Le fichier de configuration utilis\u00e9 par Grav pour obtenir des informations sur votre plugin. Il peut \u00e9galement d\u00e9finir un formulaire que l'administrateur peut afficher lors de l'affichage des d\u00e9tails du plugin. Ce formulaire vous permettra d'enregistrer les param\u00e8tres du plugin. Ce fichier est document\u00e9 dans le chapitre Formulaires . randomizer.php - Ce fichier sera nomm\u00e9 en fonction de votre plugin, mais peut \u00eatre utilis\u00e9 pour h\u00e9berger toute logique dont votre plugin a besoin. Vous pouvez utiliser n'importe quel crochet d'\u00e9v\u00e9nement de plugin pour ex\u00e9cuter la logique \u00e0 peu pr\u00e8s n'importe quel moment du cycle de vie de Grav . randomizer.yaml - Il s'agit de la configuration utilis\u00e9e par le plugin pour d\u00e9finir les options que le plugin pourrait utiliser. Celui-ci doit \u00eatre nomm\u00e9 de la m\u00eame mani\u00e8re que le fichier .php . \u00c9l\u00e9ments requis pour la release Ces \u00e9l\u00e9ments sont n\u00e9cessaires si vous souhaitez publier votre plugin via GPM. CHANGELOG.md - Un fichier qui suit le format Grav Changelog pour montrer les changements dans les versions. LICENCE - un fichier de licence, devrait probablement \u00eatre MIT sauf si vous avez un besoin sp\u00e9cifique pour autre chose. README.md - Un 'Readme' qui devrait contenir toute documentation pour le plugin. Comment l'installer, le configurer et l'utiliser. \u00c9tape 4 - Configuration du plugin Comme nous l'avons d\u00e9crit dans la pr\u00e9sentation du plugin , nous avons besoin de quelques options de configuration pour notre plugin, donc le fichier randomizer.yaml devrait ressembler \u00e0 ceci : 1 | enabled: true 2 | active: true 3 | route: /random 4 | filters: 5 | category: blog Cela nous permet d'avoir plusieurs filtres si nous le souhaitons, mais pour l'instant, nous voulons juste que tout le contenu avec la taxonomie category: blog soit \u00e9ligible pour la s\u00e9lection al\u00e9atoire. Tous les plugins doivent avoir l'option enabled . Si cela est false dans la configuration \u00e0 l'\u00e9chelle du site, votre plugin ne sera jamais initialis\u00e9 par Grav. Tous les plugins ont \u00e9galement l'option active . Si cela est faux dans la configuration \u00e0 l'\u00e9chelle du site, chaque page devra activer votre plugin. Notez que plusieurs plugins prennent \u00e9galement en charge enabled/active dans le frontmatter de la page en utilisant mergeConfig , d\u00e9taill\u00e9 ci-dessous. L'installation par d\u00e9faut de Grav a une taxonomie d\u00e9finie pour la category et le tag par d\u00e9faut. Cette configuration peut \u00eatre modifi\u00e9e dans votre fichier user/config/site.yaml . Bien s\u00fbr, comme pour toutes les autres configurations dans Grav, il est conseill\u00e9 de ne pas toucher \u00e0 cette configuration par d\u00e9faut pour le contr\u00f4le au jour le jour. Au lieu de cela, vous devez cr\u00e9er un remplacement dans un fichier appel\u00e9 /user/config/plugins/randomizer.yaml pour h\u00e9berger tous les param\u00e8tres personnalis\u00e9s. Ce plugin randomizer.yaml fourni est vraiment destin\u00e9 \u00e0 d\u00e9finir des valeurs par d\u00e9faut raisonnables pour votre plugin. \u00c9tape 5 - Structure du plugin de base La structure de classe du plugin de base ressemblera d\u00e9j\u00e0 \u00e0 ceci : 1 | <?php 2 | namespace Grav\\Plugin; 3 | 4 | use Composer\\Autoload\\ClassLoader; 5 | use Grav\\Common\\Plugin; 6 | use RocketTheme\\Toolbox\\Event\\Event; 7 | 8 | /** 9 | * Class RandomizerPlugin 10 | * @package Grav\\Plugin 11 | */ 12 | class RandomizerPlugin extends Plugin 13 | { 14 | /** 15 | * Composer autoload. 16 | * 17 | * @return ClassLoader 18 | */ 19 | public function autoload(): ClassLoader 20 | { 21 | return require __DIR__ . '/vendor/autoload.php'; 22 | } 23 | } Nous devons ajouter quelques instructions use car nous allons utiliser ces classes dans notre plugin, et cela \u00e9conomise de l'espace et rend le code plus lisible si nous n'avons pas \u00e0 mettre l'espace de noms complet pour chaque classe en ligne. Modifiez les instructions use pour qu'elles ressemblent \u00e0 ceci : 1 | use Composer\\Autoload\\ClassLoader; 2 | use Grav\\Common\\Plugin; 3 | use Grav\\Common\\Page\\Collection; 4 | use Grav\\Common\\Uri; 5 | use Grav\\Common\\Taxonomy; Les deux \u00e9l\u00e9ments cl\u00e9s de cette structure de classe sont : Les plugins doivent avoir un namespace Grav\\Plugin en haut du fichier PHP. Les plugins doivent \u00eatre nomm\u00e9s en casse de titre en fonction du nom du plugin avec la cha\u00eene Plugin ajout\u00e9e \u00e0 la fin, et doivent \u00e9tendre Plugin , d'o\u00f9 le nom de classe RandomizerPlugin . \u00c9tape 6 - \u00c9v\u00e9nements auxquels vous \u00eates abonn\u00e9s Grav utilise un syst\u00e8me d'\u00e9v\u00e9nements sophistiqu\u00e9, et pour assurer des performances optimales, tous les plugins sont inspect\u00e9s par Grav pour d\u00e9terminer \u00e0 quels \u00e9v\u00e9nements le plugin est abonn\u00e9. 1 | public static function getSubscribedEvents(): array 2 | { 3 | return [ 4 | 'onPluginsInitialized' => [ 5 | ['autoload', 100000], // TODO: Remove when plugin requires Grav >=1.7 6 | ['onPluginsInitialized', 0] 7 | ] 8 | ]; 9 |} Dans ce plugin, nous allons dire \u00e0 Grav que nous nous abonnons \u00e0 l'\u00e9v\u00e9nement onPluginsInitialized . De cette fa\u00e7on, nous pouvons utiliser cet \u00e9v\u00e9nement (qui est le premier \u00e9v\u00e9nement disponible pour les plugins) pour d\u00e9terminer si nous devons nous abonner \u00e0 d'autres \u00e9v\u00e9nements. Remarque : Le premier \u00e9couteur d'\u00e9v\u00e9nement de chargement autoload n'est n\u00e9cessaire que dans Grav 1.6. Grav 1.7 appelle automatiquement la m\u00e9thode. \u00c9tape 7 - D\u00e9terminez si le plugin doit s'ex\u00e9cuter L'\u00e9tape suivante consiste \u00e0 ajouter une m\u00e9thode \u00e0 notre classe RandomizerPlugin pour g\u00e9rer l'\u00e9v\u00e9nement onPluginsInitialized afin qu'il ne s'active que lorsqu'un utilisateur essaie d'acc\u00e9der \u00e0 la route que nous avons configur\u00e9e dans notre fichier randomizer.yaml . Remplacez la logique actuelle du plug-in \"exemple\" par ce qui suit : 1 | public function onPluginsInitialized(): void 2 | { 3 | // Don't proceed if we are in the admin plugin 4 | if ($this->isAdmin()) { 5 | return; 6 | } 7 | 8 | /** @var Uri $uri */ 9 | $uri = $this->grav['uri']; 10 | $config = $this->config(); 11 | 12 | $route = $config['route'] ?? null; 13 | if ($route && $route == $uri->path()) { 14 | $this->enable([ 15 | 'onPageInitialized' => ['onPageInitialized', 0] 16 | ]); 17 | } 18 | } Tout d'abord, nous obtenons l' objet Uri du conteneur d'injection de d\u00e9pendance . Celui-ci contient toutes les informations sur l'URI actuel, y compris les informations de route. La m\u00e9thode config() fait d\u00e9j\u00e0 partie du Plugin de base, nous pouvons donc simplement l'utiliser pour obtenir la valeur de configuration de notre route configur\u00e9e. Ensuite, nous comparons la route configur\u00e9e au chemin URI actuel. S'ils sont \u00e9gaux, nous indiquons au r\u00e9partiteur que notre plugin \u00e9coutera \u00e9galement un nouvel \u00e9v\u00e9nement : onPageInitialized . En utilisant cette approche, nous nous assurons de ne pas ex\u00e9cuter de code suppl\u00e9mentaire si nous n'en avons pas besoin. Des pratiques comme celles-ci garantiront que votre site fonctionne aussi rapidement que possible. \u00c9tape 8 - Afficher la page al\u00e9atoire La derni\u00e8re \u00e9tape de notre plugin consiste \u00e0 afficher la page au hasard, et nous pouvons le faire en ajoutant la m\u00e9thode suivante : 1 | /** 2 | * Send user to a random page 3 | */ 4 | public function onPageInitialized(): void 5 | { 6 | /** @var Taxonomy $uri */ 7 | $taxonomy_map = $this->grav['taxonomy']; 8 | $config = $this->config(); 9 | 10 | $filters = (array)($config['filters'] ?? []); 11 | $operator = $config['filter_combinator'] ?? 'and'; 12 | 13 | if (count($filters) > 0) { 14 | $collection = new Collection(); 15 | $collection->append($taxonomy_map->findTaxonomy($filters, $operator)->toArray()); 16 | if (count($collection) > 0) { 17 | unset($this->grav['page']); 18 | $this->grav['page'] = $collection->random()->current(); 19 | } 20 | } 21 | } Cette m\u00e9thode est un peu plus compliqu\u00e9e, nous allons donc passer en revue ce qui se passe : Tout d'abord, nous r\u00e9cup\u00e9rons l' objet Taxonomy du conteneur Grav DI et l'affectons \u00e0 une variable $taxonomy_map . Ensuite, nous r\u00e9cup\u00e9rons le tableau de filtres de notre configuration de plugin. Dans notre configuration, il s'agit d'un tableau avec 1 \u00e9l\u00e9ment : ['category' => 'blog']. V\u00e9rifiez que nous avons des filtres, puis cr\u00e9ez une nouvelle Collection dans la variable $collection pour stocker nos pages. Ajoutez toutes les pages qui correspondent au filtre \u00e0 notre variable $collection . Annulez la d\u00e9finition de l'objet de la page actuelle dont Grav a connaissance. D\u00e9finissez la page actuelle sur un \u00e9l\u00e9ment al\u00e9atoire de la collection. \u00c9tape 9 - Nettoyage L'exemple de plugin cr\u00e9\u00e9 avec le plugin DevTool s utilisait un \u00e9v\u00e9nement appel\u00e9 onPageContentRaw() . Cet \u00e9v\u00e9nement n'est pas utilis\u00e9 dans notre nouveau plugin, nous pouvons donc supprimer la fonction enti\u00e8re en toute s\u00e9curit\u00e9. \u00c9tape 10 - Classe finale du plugin Et c'est tout ce qu'il y a \u00e0 faire ! Le plugin est maintenant termin\u00e9. Votre classe de plugin compl\u00e8te devrait ressembler \u00e0 ceci : 1 | <?php 2 | namespace Grav\\Plugin; 3 | 4 | use Composer\\Autoload\\ClassLoader; 5 | use Grav\\Common\\Plugin; 6 | use Grav\\Common\\Page\\Collection; 7 | use Grav\\Common\\Uri; 8 | use Grav\\Common\\Taxonomy; 9 | 10 | /** 11 | * Class RandomizerPlugin 12 | * @package Grav\\Plugin 13 | */ 14 | class RandomizerPlugin extends Plugin 15 | { 16 | /** 17 | * @return array 18 | * 19 | * The getSubscribedEvents() gives the core a list of events 20 | * that the plugin wants to listen to. The key of each 21 | * array section is the event that the plugin listens to 22 | * and the value (in the form of an array) contains the 23 | * callable (or function) as well as the priority. The 24 | * higher the number the higher the priority. 25 | */ 26 | public static function getSubscribedEvents(): array 27 | { 28 | return [ 29 | 'onPluginsInitialized' => [ 30 | ['autoload', 100000], // TODO: Remove when plugin requires Grav >=1.7 31 | ['onPluginsInitialized', 0] 32 | ] 33 | ]; 34 | } 35 | 36 | /** 37 | * Composer autoload. 38 | * 40 | * @return ClassLoader 41 | */ 42 | public function autoload(): ClassLoader 43 | { 44 | return require __DIR__ . '/vendor/autoload.php'; 45 | } 46 | public function onPluginsInitialized(): void 47 | { 48 | // Don't proceed if we are in the admin plugin 49 | if ($this->isAdmin()) { 50 | return; 51 | } 52 | 53 | /** @var Uri $uri */ 54 | $uri = $this->grav['uri']; 55 | $config = $this->config(); 56 | 57 | $route = $config['route'] ?? null; 58 | if ($route && $route == $uri->path()) { 59 | $this->enable([ 60 | 'onPageInitialized' => ['onPageInitialized', 0] 61 | ]); 62 | } 63 | } 64 | 65 | /** 66 | * Send user to a random page 67 | */ 68 | public function onPageInitialized(): void 69 | { 70 | /** @var Taxonomy $uri */ 71 | $taxonomy_map = $this->grav['taxonomy']; 72 | $config = $this->config(); 73 | 74 | $filters = (array)($config['filters'] ?? []); 75 | $operator = $config['filter_combinator'] ?? 'and'; 76 | 77 | if (count($filters) > 0) { 78 | $collection = new Collection(); 79 | $collection->append($taxonomy_map->findTaxonomy($filters, $operator)->toArray()); 80 | if (count($collection) > 0) { 81 | unset($this->grav['page']); 82 | $this->grav['page'] = $collection->random()->current(); 83 | } 84 | } 85 | } 86 | } Si vous avez suivi, vous devriez avoir un plugin Randomizer enti\u00e8rement fonctionnel activ\u00e9 pour votre site. Pointez simplement votre navigateur sur http://votresite.com/random , et vous devriez voir une page au hasard. Vous pouvez \u00e9galement t\u00e9l\u00e9charger le plugin Random original directement depuis la section Plugins Download du site getgrav.org . Fusion du plugin et de la configuration de la page Une technique populaire utilis\u00e9e dans une vari\u00e9t\u00e9 de plugins est le concept de fusion de la configuration du plugin (configuration utilisateur par d\u00e9faut ou remplac\u00e9e) avec la configuration au niveau de la page. Cela signifie que vous pouvez d\u00e9finir une configuration \u00e0 l'\u00e9chelle du site , puis disposer d'une configuration sp\u00e9cifique pour une page donn\u00e9e selon vos besoins. Cela offre beaucoup de puissance et de flexibilit\u00e9 \u00e0 votre plugin. Dans les versions r\u00e9centes de Grav, une m\u00e9thode d'assistance a \u00e9t\u00e9 ajout\u00e9e pour ex\u00e9cuter cette fonctionnalit\u00e9 automatiquement plut\u00f4t que de devoir coder cette logique vous-m\u00eame. Le plugin SmartyPants fournit un bon exemple de cette fonctionnalit\u00e9 en action : 1 | public function onPageContentProcessed(Event $event): void 2 | { 3 | $page = $event['page']; 4 | $config = $this->mergeConfig($page); 5 | 6 | if ($config->get('process_content')) { 7 | $page->setRawContent(\\Michelf\\SmartyPants::defaultTransform( 8 | $page->getRawContent(), 9 | $config->get('options') 10 | )); 11 | } 12 | } Impl\u00e9mentation de la CLI dans votre plugin Les plugins ont \u00e9galement la capacit\u00e9 de s'int\u00e9grer \u00e0 la ligne de commande bin/plugin pour ex\u00e9cuter des t\u00e2ches. Vous pouvez suivre la documentation CLI du plug-in si vous souhaitez impl\u00e9menter une telle fonctionnalit\u00e9.","title":"Tutoriel"},{"location":"prerequis/","text":"Pr\u00e9requis Grav est volontairement con\u00e7u avec peu de pr\u00e9requis. Vous pouvez facilement ex\u00e9cuter Grav sur votre ordinateur local, ainsi que chez 99% des fournisseurs d'h\u00e9bergement Web. Si vous avez un stylo \u00e0 port\u00e9e de main, notez les exigences suivantes du syst\u00e8me Grav : Serveur Web (Apache, Nginx, LiteSpeed, Lightly, IIS, etc.) PHP 7.3.6 ou sup\u00e9rieur hmm... c'est vraiment \u00e7a, (mais veuillez regarder les exigences PHP pour une exp\u00e9rience fluide) ! Grav est construit avec des fichiers texte brut pour votre contenu. Aucune base de donn\u00e9es n'est n\u00e9cessaire. Un cache utilisateur PHP tel que APCu, Memcached ou Redis est fortement recommand\u00e9 pour des performances optimales. Ne vous inqui\u00e9tez pas cependant, ceux-ci font g\u00e9n\u00e9ralement d\u00e9j\u00e0 partie de votre pack d'h\u00e9bergement ! Serveurs Web Grav est si simple et polyvalent que vous n'avez m\u00eame pas besoin d'un serveur Web pour l'ex\u00e9cuter. Vous pouvez l'ex\u00e9cuter directement \u00e0 partir du serveur Web PHP int\u00e9gr\u00e9, tant que vous ex\u00e9cutez PHP 7.3.6 ou une version ult\u00e9rieure. Tester avec les serveurs Web int\u00e9gr\u00e9s est un moyen utile de v\u00e9rifier une installation de Grav et d'effectuer un bref d\u00e9veloppement, mais il n'est pas recommand\u00e9 pour un site en direct ou m\u00eame pour des t\u00e2ches de d\u00e9veloppement avanc\u00e9es. Nous avons d\u00e9crit comment dans notre guide d'Installation . M\u00eame si techniquement vous n'avez pas besoin d'un serveur Web autonome, il est pr\u00e9f\u00e9rable d'en ex\u00e9cuter un, m\u00eame pour le d\u00e9veloppement local. Il existe de nombreuses options int\u00e9ressantes : Mac MacOS 10.14 Mojave est d\u00e9j\u00e0 livr\u00e9 avec le serveur Web Apache et PHP 7.1, alors le travail est fait ! MAMP/MAMP Pro est livr\u00e9 avec Apache, MySQL et bien s\u00fbr PHP. C'est un excellent moyen de mieux contr\u00f4ler la version de PHP que vous utilisez, de configurer des h\u00f4tes virtuels, ainsi que d'autres fonctionnalit\u00e9s utiles telles que la gestion automatique du DNS dynamique. AMPPS est une pile logicielle de Softaculous permettant d'utiliser Apache, PHP, Perl, Python, .. Cela inclut tout ce dont vous avez besoin (et plus) pour le d\u00e9veloppement GRAV. Brew Apache/PHP est une approche alternative qui permet une installation enti\u00e8rement configurable avec diff\u00e9rentes versions de PHP. Windows Laragon , environnement de d\u00e9veloppement universel portable, isol\u00e9, rapide et puissant pour PHP, Node.js, etc. Il est rapide, l\u00e9ger, facile \u00e0 utiliser et \u00e0 \u00e9tendre. XAMPP fournit Apache, PHP et MySQL dans un package simple. EasyPHP fournit un pack d'h\u00e9bergement Web personnel ainsi qu'une version d\u00e9veloppeur plus puissante. MAMP pour Windows est un favori Mac de longue date, mais maintenant disponible pour Windows. IIS avec PHP est un moyen rapide d'ex\u00e9cuter PHP sous Windows. AMPPS est une pile logicielle de Softaculous permettant d'utiliser Apache, PHP, Perl, Python, .. Cela inclut tout ce dont vous avez besoin (et plus) pour le d\u00e9veloppement GRAV. Linux Subsystem est un excellent moyen d'ex\u00e9cuter un environnement de type Linux sous Windows Linux De nombreuses distributions de Linux sont d\u00e9j\u00e0 livr\u00e9es avec Apache et PHP int\u00e9gr\u00e9s. Si ce n'est pas le cas, la distribution fournit g\u00e9n\u00e9ralement un gestionnaire de packages \u00e0 travers lequel vous pouvez les installer sans trop de tracas. Des configurations plus avanc\u00e9es doivent \u00eatre \u00e9tudi\u00e9es \u00e0 l'aide d'un bon moteur de recherche. Pr\u00e9requis pour Apache M\u00eame si la plupart des distributions d'Apache sont livr\u00e9es avec tout le n\u00e9cessaire, par souci d'exhaustivit\u00e9, voici une liste des modules Apache requis : mod_rewrite mod_ssl (si vous souhaitez ex\u00e9cuter Grav sous SSL). mod_mpm_itk_module (si vous souhaitez ex\u00e9cuter Grav sous son propre compte utilisateur). Vous devez \u00e9galement vous assurer que AllowOverride All est d\u00e9fini dans les blocs <Directory> et/ou <VirtualHost> afin que le fichier .htaccess soit trait\u00e9 correctement et que les r\u00e8gles de r\u00e9\u00e9criture prennent effet. Pr\u00e9requis pour IIS Bien qu'IIS soit consid\u00e9r\u00e9 comme un serveur Web pr\u00eat \u00e0 fonctionner et \"pr\u00eat \u00e0 l'emploi\", certaines modifications doivent \u00eatre apport\u00e9es. Pour faire fonctionner Grav sur un serveur IIS, vous devez installer URL Rewrite . Cela peut \u00eatre accompli \u00e0 l'aide de Microsoft Web Platform Installer \u00e0 partir d'IIS. Vous pouvez \u00e9galement installer URL Rewrite en allant sur iis.net . Pr\u00e9requis pour PHP La plupart des fournisseurs d'h\u00e9bergement et m\u00eame les configurations LAMP locales ont PHP pr\u00e9configur\u00e9 avec tout ce dont vous avez besoin pour que Grav fonctionne \"pr\u00eat \u00e0 l'emploi\". Cependant, certaines configurations Windows, et m\u00eame les distributions Linux locales ou sur VPS (je vous laisse regarder Debian !) - sont livr\u00e9es avec une compilation PHP tr\u00e8s minimale. Par cons\u00e9quent, vous devrez peut-\u00eatre installer ou activer ces modules PHP : curl (client pour la gestion des URL utilis\u00e9 par GPM). ctype (utilis\u00e9 par symfony/yaml/Inline). dom (utilis\u00e9 par le fil d'actualit\u00e9 grav/admin). gd (une biblioth\u00e8que graphique utilis\u00e9e pour manipuler des images). json (utilis\u00e9 par Symfony/Composer/GPM). mbstring (prise en charge des cha\u00eenes multioctets). openssl (biblioth\u00e8que de sockets s\u00e9curis\u00e9s utilis\u00e9e par GPM). session (utilis\u00e9 par toolbox). simplexml (utilis\u00e9 par le fil d'actualit\u00e9 grav/admin). xml (prise en charge XML). zip prise en charge de l'extension zip (utilis\u00e9e par GPM). Pour activer le support openssl et (un)zip, vous devrez trouver dans le fichier php.ini de votre distribution Linux des lignes comme : 1 | ;extension=openssl.so 2 | ;extension=zip.so et supprimez le point-virgule initial. Modules optionnels apcu pour des performances de cache accrues. opcache pour des performances PHP accrues. yaml PECL Yaml fournit un traitement yaml natif et peut augmenter consid\u00e9rablement les performances. xdebug utile pour le d\u00e9bogage dans un environnement de d\u00e9veloppement. Autorisations Pour que Grav fonctionne correctement, votre serveur Web doit disposer des autorisations de fichier s appropri\u00e9es pour \u00e9crire les journaux, des caches, etc. Lors de l'utilisation de la CLI (Interface en Ligne de Commande) ou du GPM (Gestionnaire de Package Grav), l'utilisateur ex\u00e9cutant PHP \u00e0 partir de la ligne de commande doit \u00e9galement disposer des autorisations appropri\u00e9es pour modifier les fichiers. Par d\u00e9faut, Grav s'installera, respectivement, avec les autorisations 644 et 755 pour les fichiers et les dossiers. La plupart des fournisseurs d'h\u00e9bergement ont des configurations qui garantissent qu'un serveur Web ex\u00e9cutant PHP vous permettra de cr\u00e9er et de modifier des fichiers dans votre compte d'utilisateur. Cela signifie que Grav est pr\u00eat \u00e0 l'emploi sur la grande majorit\u00e9 des fournisseurs d'h\u00e9bergement. Toutefois, si vous utilisez un serveur d\u00e9di\u00e9 ou m\u00eame votre environnement local, vous devrez peut-\u00eatre ajuster les autorisations pour vous assurer que votre utilisateur et votre serveur Web peuvent modifier les fichiers selon les besoins. Il existe plusieurs approches que vous pouvez adopter. Dans un environnement de d\u00e9veloppement local , vous pouvez g\u00e9n\u00e9ralement configurer votre serveur Web pour qu'il s'ex\u00e9cute sous votre profil utilisateur. Ainsi, le serveur Web vous permettra toujours de cr\u00e9er et de modifier des fichiers. Modifiez les autorisations de groupe sur tous les fichiers et dossiers afin que le groupe du serveur Web ait un acc\u00e8s en \u00e9criture aux fichiers et dossiers tout en conservant les autorisations standard. Cela n\u00e9cessite quelques commandes pour que cela fonctionne. Tout d'abord, v\u00e9rifiez avec quel utilisateur Apache s'ex\u00e9cute en ex\u00e9cutant la commande suivante : $ | ps aux | grep -v root | grep apache | cut -d\\ -f1 | sort | uniq Maintenant, d\u00e9couvrez \u00e0 quel groupe appartient cet utilisateur en ex\u00e9cutant cette commande (remarque : ajustez USERNAME avec le nom d'utilisateur apache que vous avez trouv\u00e9 dans la commande pr\u00e9c\u00e9dente) $ | groups USERNAME (remarque : ajustez GROUP pour qu'il corresponde au groupe sous lequel votre apache s'ex\u00e9cute, trouv\u00e9 dans la commande pr\u00e9c\u00e9dente. [ www-data, apache, nobody, etc.]) : 1 | chgrp -R GROUP . 2 | find . -type f | xargs chmod 664 3 | find ./bin -type f | xargs chmod 775 4 | find . -type d | xargs chmod 775 5 | find . -type d | xargs chmod +s 6 | umask 0002 Si vous avez besoin d'invoquer des autorisations de superutilisateur, vous ex\u00e9cuterez find \u2026 | sudo xargs chmod \u2026 \u00e0 la place. Outils recommand\u00e9s PhpStorm Grav est d\u00e9velopp\u00e9 \u00e0 l'aide de PhpStorm , ce qui en fait le meilleur IDE pour Grav. Cependant, cela ne vient pas comme \u00e7\u00e0. PhpStorm est le mieux adapt\u00e9 aux d\u00e9veloppeurs PHP, y compris les personnes qui \u00e9crivent des plugins Grav compliqu\u00e9s. Il offre une compilation de code automatis\u00e9e pour Grav (il vous suffit d'ajouter Grav et tout plugin que vous utilisez dans les inclusions), et de nombreux autres outils pour aider au d\u00e9veloppement du code. Il prend \u00e9galement en charge le formatage de twig, yaml, html, js, scss et tailwind. \u00c9diteurs de texte Bien que vous puissiez vous en sortir avec le Bloc-notes, Textedit, Vi ou tout autre \u00e9diteur de texte par d\u00e9faut fourni avec votre plateforme, nous vous recommandons d'utiliser un bon \u00e9diteur de texte avec coloration syntaxique pour faciliter les choses. Voici quelques options recommand\u00e9es : Visual Studio Code - Semblable \u00e0 Atom, il est construit \u00e0 l'aide d'Electron, de Node, ainsi que de HTML/CSS. Il est assez l\u00e9ger et dispose de nombreux plugins, dont un tr\u00e8s bon support pour PHP et JavaScript. Il s'agit de l'\u00e9diteur actuellement recommand\u00e9 pour d\u00e9velopper pour Grav. Atom - MacOS/Windows/Linux - Un nouvel \u00e9diteur d\u00e9velopp\u00e9 par Github. C'est gratuit et open source. Il est similaire \u00e0 Sublime, mais n'a pas encore la profondeur des plugins disponibles. SublimeText - MacOS/Windows/Linux - Un \u00e9diteur de d\u00e9veloppeur commercial, mais qui vaut bien le prix. Tr\u00e8s puissant surtout combin\u00e9 avec des plugins tels que Markdown Extended , Pretty YAML et PHP-Twig . Notepad++ - Windows - Un \u00e9diteur gratuit et tr\u00e8s populaire pour Windows. Bluefish - MacOS/Windows/Linux - Un \u00e9diteur de texte open source gratuit destin\u00e9 aux programmeurs et aux d\u00e9veloppeurs Web. Kate - MacOS/Windows/Linux - Un \u00e9diteur de texte et outil de programmation open source l\u00e9ger mais puissant et polyvalent, prenant en charge la surbrillance dans plus de 300 langues (y compris Markdown). \u00c9diteurs Markdown Une autre option si vous travaillez principalement avec la cr\u00e9ation de contenu consiste \u00e0 utiliser un \u00e9diteur Markdown d\u00e9di\u00e9. Ceux-ci sont souvent tr\u00e8s centr\u00e9s sur le contenu et fournissent g\u00e9n\u00e9ralement un aper\u00e7u en direct de votre contenu rendu au format HTML. Il y en a litt\u00e9ralement des centaines, mais certaines bonnes options incluent : MacDown - MacOS - Gratuit, un \u00e9diteur Markdown open source simple et l\u00e9ger. LightPaper - MacOS - 17,99 $, propre, puissant. Notre \u00e9diteur Markdown de choix sur Mac. Obtenez 25 % de r\u00e9duction avec le code de r\u00e9duction : GET_GRAV_25 MarkDrop - MacOS - 5 $, mais super propre et prise en charge Droplr int\u00e9gr\u00e9e. MarkdownPad - Windows - Versions gratuites et Pro. Poss\u00e9de m\u00eame la prise en charge du front-matter YAML. Une excellente solution pour les utilisateurs de Windows. Mark Text - \u00c9diteur Markdown gratuit et open source pour Windows / Linux / MacOS. Client FTP Bien qu'il existe de nombreuses fa\u00e7ons de d\u00e9ployer Grav , il vous suffit fondamentalement de copier votre site local sur votre h\u00e9bergeur. La fa\u00e7on la plus simple de le faire est d'utiliser un client FTP . Il en existe de nombreux, mais certains sont recommand\u00e9s : Transmit - MacOS - Le client FTP/SFTP de facto sur MacOS. Facile \u00e0 utiliser, rapide, synchronisation des dossiers et \u00e0 peu pr\u00e8s tout ce que vous pourriez demander. FileZilla - MacOS/Windows/Linux - Probablement la meilleure option pour les utilisateurs Windows et Linux. Gratuit et tr\u00e8s puissant (mais tr\u00e8s moche sur Mac !). Cyberduck - MacOS/Windows - Une option gratuite d\u00e9cente pour les utilisateurs MacOS et Windows. Pas aussi complet que les autres. ForkLift - MacOS - Une alternative solide \u00e0 Transmit, et l\u00e9g\u00e8rement moins ch\u00e8re au d\u00e9marrage. Git Si vous ex\u00e9cutez le syst\u00e8me de contr\u00f4le de version distribu\u00e9 Git sur vos environnements de d\u00e9veloppement et de serveur, vous pouvez configurer un flux de travail simple via un service Git h\u00e9berg\u00e9 tel que Github ou GitLab . C'est un peu plus de travail \u00e0 configurer, mais cela fournit un flux de travail plus propre et plus robuste qui s'occupe des sauvegardes pour vous. N'essayez ceci que si vous \u00eates \u00e0 l'aise avec Git et ses outils clients. Nous fournissons plus de d\u00e9tails sur l'utilisation de Git dans votre flux de travail ult\u00e9rieurement dans la section D\u00e9ploiement avec Git du chapitre Serveurs Web et h\u00e9bergement .","title":"Pr\u00e9requis"},{"location":"profil/","text":"Profil La page de profil dans l'administrateur vous permet d'afficher et de mettre \u00e0 jour les param\u00e8tres de votre profil individuel. C'est l\u00e0 que votre avatar, votre adresse e-mail, votre nom, votre langue, etc. sont d\u00e9finis. Pour les administrateurs, c'est \u00e9galement l\u00e0 que vous pouvez ajuster les groupes et les niveaux d'autorisation pour les utilisateurs individuels. L'acc\u00e8s \u00e0 la page de profil est simple. Une fois connect\u00e9 \u00e0 l'administrateur, vous pouvez acc\u00e9der \u00e0 votre profil en s\u00e9lectionnant la zone de la barre lat\u00e9rale avec votre image d'avatar et votre nom. Cela vous m\u00e8nera directement \u00e0 votre propre profil. De plus, les administrateurs appr\u00e9cieront la facilit\u00e9 d'acc\u00e9der \u00e0 la page de profil d'un autre utilisateur en ajoutant admin/user/example \u00e0 l'URL de leur site. Remplacement de example par le nom d'utilisateur de l'utilisateur pour lequel il souhaite modifier les informations de profil et/ou les autorisations. Photo de profil La zone Profil de l'administrateur vous donne un aper\u00e7u rapide et styl\u00e9 de votre avatar, de votre nom et de votre titre. Votre avatar est automatiquement g\u00e9n\u00e9r\u00e9 via Gravatar , un service d'avatar mondial qui vous permet de t\u00e9l\u00e9charger une seule image de profil et de l'utiliser sur plusieurs sites et services. Si vous n'avez pas d'image t\u00e9l\u00e9charg\u00e9e sur Gravatar, ou si vous pr\u00e9f\u00e9rez utiliser une image de votre choix, vous pouvez t\u00e9l\u00e9charger une image ici en faisant glisser et en d\u00e9posant le fichier image dans la section D\u00e9posez vos fichiers ici ou cliquez sur cette zone de la page. Vous pouvez \u00e9galement cliquer sur la zone pour afficher un s\u00e9lecteur de fichier qui vous permettra de rechercher, s\u00e9lectionner et t\u00e9l\u00e9charger un fichier image \u00e0 partir de votre syst\u00e8me. Une fois que vous avez t\u00e9l\u00e9charg\u00e9 une nouvelle image, s\u00e9lectionnez simplement le bouton Save dans le coin sup\u00e9rieur droit de la page. Compte La section Compte de la page de profil est l'endroit o\u00f9 vous pouvez mettre \u00e0 jour vos coordonn\u00e9es, votre nom, votre langue, etc. Vous ne pouvez pas modifier votre nom d'utilisateur ici, car il est directement li\u00e9 \u00e0 l'endroit o\u00f9 vos informations d'utilisateur sont stock\u00e9es, mais vous pouvez modifier tout ce dont vous avez besoin. Authentification \u00e0 2 facteurs L'authentification \u00e0 2 facteurs fournit une couche de s\u00e9curit\u00e9 suppl\u00e9mentaire pour votre site Web. En savoir plus sur cette fonctionnalit\u00e9 dans la section S\u00e9curit\u00e9 de ce guide. Niveaux d'acc\u00e8s Les administrateurs trouveront la zone des autorisations particuli\u00e8rement utile. C'est ici que vous pouvez configurer exactement ce \u00e0 quoi un utilisateur pourra acc\u00e9der et faire au sein de l'administrateur. Voici une ventilation rapide des options d'autorisations et de ce qu'elles permettent \u00e0 quelqu'un de faire. OPTION DESCRIPTION admin.super D\u00e9signe l'utilisateur en tant que super administrateur, lui donnant la possibilit\u00e9 de voir et de configurer toutes les zones du site. admin.login Permet \u00e0 l'utilisateur de se connecter \u00e0 l'administrateur. Il doit \u00eatre d\u00e9fini sur Yes pour permettre \u00e0 l'utilisateur de se connecter. admin.cache Donne \u00e0 l'utilisateur l'acc\u00e8s aux boutons de r\u00e9initialisation du cache. admin.configuration Donne \u00e0 l'utilisateur l'acc\u00e8s \u00e0 la zone de configuration de l'administrateur. Cela n'inclut aucun onglet ou sous-section. admin.configuration_system Donne \u00e0 l'utilisateur l'acc\u00e8s \u00e0 l'onglet System dans la zone Configuration de l'administrateur. admin.configuration_site Donne \u00e0 l'utilisateur l'acc\u00e8s \u00e0 l'onglert Site dans la zone Configuration de l'administrateur. admin.configuration_media Donne \u00e0 l'utilisateur l'acc\u00e8s \u00e0 l'onglet Media dans la zone Configuration de l'administrateur. admin.configuration_info Donne \u00e0 l'utilisateur l'acc\u00e8s \u00e0 l'onglet Info dans la zone Configuration de l'administrateur. admin.pages Donne \u00e0 l'utilisateur l'acc\u00e8s \u00e0 la zone Pages de l'administrateur. admin.maintenance Permet \u00e0 l'utilisateur d'acc\u00e9der \u00e0 la zone Maintenance du Dashboard . admin.statistics Donne \u00e0 l'utilisateur la possibilit\u00e9 d'acc\u00e9der \u00e0 la zone Statistics du Dashboard . admin.plugins Donne \u00e0 l'utilisateur l'acc\u00e8s \u00e0 la zone Plugins de l'administrateur. admin.themes Donne \u00e0 l'utilisateur l'acc\u00e8s \u00e0 la zone Themes de l'administrateur. admin.users Permet \u00e0 l'utilisateur d'acc\u00e9der et de modifier les informations de profil d'autres utilisateurs. Cela n'inclut pas les autorisations. site.login Permet \u00e0 l'utilisateur de se connecter au frontal.","title":"Profil"},{"location":"quesque-grav/","text":"C'est quoi Grav ? Grav est une plate-forme web Rapide , Simple et Flexible bas\u00e9e sur des fichiers. Aucune installation n'est requise. Extrayez simplement l'archive ZIP et vous \u00eates d\u00e9j\u00e0 op\u00e9rationnel. Bien que Grav suive des principes similaires \u00e0 d'autres plates-formes CMS \u00e0 fichiers plats, sa philosophie de conception est la plupart du temps diff\u00e9rente. Le nom Grav n'est qu'une version abr\u00e9g\u00e9e du mot Gravity . L'espace de noms partag\u00e9 de notre plateforme et d'un film mettant en vedette Sandra Bullock est une pure co\u00efncidence ! Plus important encore, la gravit\u00e9 est \u00e9galement un principe physique fondamental qui d\u00e9crit les forces d'attraction entre les objets. Franchement, le nom a \u00e9t\u00e9 choisi comme \"nom de code\" temporaire pour le projet, et il est rest\u00e9. L'architecture sous-jacente de Grav est construite \u00e0 l'aide de technologies bien \u00e9tablies et les meilleures de leur cat\u00e9gorie. Cela garantit que Grav est simple \u00e0 utiliser et facile \u00e0 \u00e9tendre. Certaines de ces technologies cl\u00e9s comprennent : Twig Templating : pour un contr\u00f4le puissant de l'interface utilisateur. Markdown : pour une cr\u00e9ation de contenu facile. YAML : pour une configuration simple. Parsedown : pour une prise en charge rapide de Markdown et Markdown Extra. Doctrine Cache : pour la performance. Pimple Dependency Injection Container : pour l'extensibilit\u00e9 et la maintenabilit\u00e9. Symfony Event Dispatcher : pour la gestion des \u00e9v\u00e9nements du plugin. Console Symfony : pour l'interface CLI. Gregwar Image Library : pour la manipulation dynamique d'images. La place de Grav dans l'univers Il existe de nombreuses solutions CMS open source puissantes pour cr\u00e9er des sites Web complexes. Les plus couramment utilis\u00e9s sont Joomla , WordPress et Drupal . L'inconv\u00e9nient de ces platesformes est qu'elles ont une courbe d'apprentissage associ\u00e9e longue. Cela n\u00e9cessite du temps - et c'est peut-\u00eatre le temps que vous n'avez pas. Ces plateformes offrent une multitude de fonctionnalit\u00e9s que vous pouvez \u00e9tendre avec une grande vari\u00e9t\u00e9 de plugins et de th\u00e8mes open source et propri\u00e9taires. Ces extensions et th\u00e8mes sont eux-m\u00eames souvent riches en fonctionnalit\u00e9s, n\u00e9cessitant encore plus de connaissances et de temps de la part du d\u00e9veloppeur. En fin de compte, vous vous retrouvez souvent \u00e0 cr\u00e9er un site Web qui n\u00e9cessite de nombreux plugins et extensions de nombreux fournisseurs diff\u00e9rents. Cela peut rendre votre conception trop compliqu\u00e9e et difficile \u00e0 maintenir sur le long terme. Grav aborde le probl\u00e8me diff\u00e9remment. Il se concentre principalement sur votre contenu et transforme votre structure de contenu en un site navigable. Les fondements de Grav sont simples, mais via de nombreux \u00e9v\u00e9nements , vous avez un contr\u00f4le total sur chaque \u00e9tape du rendu de Grav. Cette solution permet \u00e0 des plugins simples d'ajouter rapidement et facilement des fonctionnalit\u00e9s puissantes. L'utilisation de Grav conduit \u00e9galement \u00e0 un environnement de d\u00e9veloppement rapide avec un processus d'installation qui prend quelques secondes, y compris une m\u00e9thode de cr\u00e9ation de contenu simple avec une courbe d'apprentissage minimale. Tout cela contribue \u00e0 rendre Grav convivial pour le concepteur, le d\u00e9veloppeur et l'utilisateur final. Pour qu'un site de base soit op\u00e9rationnel, il faut une exp\u00e9rience minimale en d\u00e9veloppement Web. Si vous creusez un peu plus, vous d\u00e9couvrirez qu'il y a tr\u00e8s peu de choses que Grav ne peut pas accomplir. Logos Grav et informations presse Vous pouvez trouver un r\u00e9sum\u00e9 sur Grav, y compris les logos Grav et les informations de presse , sur notre page m\u00e9dia . La fa\u00e7on la plus simple de naviguer dans la documentation consiste \u00e0 utiliser les fl\u00e8ches Pr\u00e9c\u00e9dent et Suivant en bas de chaque page.","title":"C'est quoi Grav ?"},{"location":"resume-twig/","text":"Balises, filtres & fonctions Twig Bien que Twig fournisse d\u00e9j\u00e0 une longue liste de filtres, de fonctions et de balises , Grav propose \u00e9galement une s\u00e9lection d'ajouts utiles pour faciliter le processus de th\u00e9matisation. Pour plus d'informations sur le d\u00e9veloppement de vos propres filtres Twig personnalis\u00e9s, consultez l'exemple de filtre/fonction Twig personnalis\u00e9 dans la section Twig Recipes du chapitre Cookbook . Balises Une balise fournit des fonctionnalit\u00e9s Twig de haut niveau. Des exemples de balises int\u00e9gr\u00e9es incluent des constructions telles que include , block , for , if et bien d'autres. Les tags sont identifi\u00e9s dans Twig par l'utilisation de la syntaxe {% tagname %} . De plus, la plupart des balises sont ferm\u00e9es par un {% endtagname %} . Grav inclut plusieurs balises personnalis\u00e9es utiles qui fournissent des fonctionnalit\u00e9s telles que cache , markdown , script , style , switch , etc. Grav Twig Tags Filtres Les filtres Twig vous permettent d'appliquer des fonctionnalit\u00e9s \u00e0 la variable qui appara\u00eet sur le c\u00f4t\u00e9 gauche du symbole du pipe (|) . Ils sont particuli\u00e8rement utiles lorsqu'il s'agit de manipuler du texte ou des variables. Le premier argument du filtre est toujours l'\u00e9l\u00e9ment de gauche, mais les arguments suivants peuvent \u00eatre pass\u00e9s entre parenth\u00e8ses. Les filtres ont des capacit\u00e9s sp\u00e9ciales, notamment la capacit\u00e9 d'\u00eatre sensibles au contexte et \u00e0 l'environnement. Des exemples de filtres Twig int\u00e9gr\u00e9s incluent date , escape , join , lower , slice et bien d'autres. Un exemple serait : {% set foo = \"one,two,three,four,five\"|split(',', 3) %} Grav inclut plusieurs filtres personnalis\u00e9s utiles qui fournissent des fonctionnalit\u00e9s telles que hypernize , nicetime , starts_with , contains , base64_decode et bien d'autres. Grav Twig Filters Fonctions Les fonctions Twig sont un autre moyen d'impl\u00e9menter des fonctionnalit\u00e9s dans Twig. Ils sont similaires aux filtres, mais plut\u00f4t que d'agir sur une variable via un | vous appelleriez ces fonctions directement et passeriez tous les attributs qu'elles prennent en charge entre parenth\u00e8ses apr\u00e8s le nom de la fonction. Souvent, Grav fournit \u00e0 la fois un filtre et une fonction pour la m\u00eame logique et laisse \u00e0 l'utilisateur le soin de choisir la m\u00e9thode qu'il pr\u00e9f\u00e8re. Des exemples de filtres Twig int\u00e9gr\u00e9s incluent block , dump , parent random , range , etc. Un exemple serait : {{ random(['apple', 'orange', 'citrus']) }} Grav inclut plusieurs fonctions personnalis\u00e9es utiles qui fournissent des fonctionnalit\u00e9s telles que authorize , debug , evaluate , regex_filter , medias et bien d'autres. Grav Twig Functions","title":"R\u00e9sum\u00e9"},{"location":"routage/","text":"Routage Comme nous l'avons d\u00e9j\u00e0 d\u00e9crit dans la section d'ouverture Page -> Dossiers , le routage dans Grav est principalement contr\u00f4l\u00e9 par la structure de dossiers que vous utilisez lorsque vous cr\u00e9ez le contenu de votre site. Il existe certains sc\u00e9narios o\u00f9 vous avez besoin de plus de flexibilit\u00e9 et Grav est livr\u00e9 avec une vari\u00e9t\u00e9 d'outils et d'options de configuration pour vous simplifier la vie \u00e0 cet \u00e9gard. Imaginez que vous d\u00e9placiez votre site d'une autre plate-forme CMS vers Grav, vous avez plusieurs choix pour configurer votre nouveau site : Essayez de r\u00e9pliquer les URL de votre ancien site en cr\u00e9ant la structure de dossiers correspondante. Cr\u00e9ez votre nouveau site comme vous le souhaitez, puis demandez \u00e0 votre serveur Web de \"r\u00e9\u00e9crire\" les anciennes URL pour rediriger les clients vers les nouveaux emplacements. Cr\u00e9ez votre nouveau site comme vous le souhaitez et configurez Grav pour rediriger les clients des anciennes URL vers les nouveaux emplacements. Il existe de nombreux autres cas d'utilisation dans lesquels vous souhaiterez peut-\u00eatre que le site Grav r\u00e9ponde \u00e0 des URL diff\u00e9rentes de celles dict\u00e9es par la structure des dossiers, et Grav dispose des fonctionnalit\u00e9s suivantes pour vous aider \u00e0 atteindre vos objectifs. Remplacements de routage et de redirection au niveau de la page Comme indiqu\u00e9 dans la section En-t\u00eates -> Routes , vous pouvez fournir des options de routage explicites pour la route par d\u00e9faut ainsi qu'un tableau d'alias de route : routes: default: '/my/example/page' canonical: '/canonical/url/alias' aliases: - '/some/other/route' - '/can-be-any-valid-slug' Ceux-ci sont trait\u00e9s et mis en cache par page, et sont disponibles avec ce que nous appelons la route brute qui est la route bas\u00e9e sur les slugs de la hi\u00e9rarchie des pages (c'est ainsi que Grav \u00e9tablit une route par d\u00e9faut). Ainsi, m\u00eame si vous fournissez des routes de page personnalis\u00e9es, la route brute est toujours valide \u00e9galement. Semblable au routage au niveau de la page, Grav prend \u00e9galement en charge les redirections au niveau de la page en sp\u00e9cifiant la page cible dans l'en-t\u00eate de la page. Voir la section En-t\u00eates -> Redirection pour plus de d\u00e9tails. redirect: '/some/custom/route[303]' Routes et redirections au niveau du site Grav dispose d'un puissant m\u00e9canisme bas\u00e9 sur les regex pour g\u00e9rer les alias de route et les redirections d'une page \u00e0 une autre. Cette fonctionnalit\u00e9 est particuli\u00e8rement utile lorsque vous migrez un site vers Grav et que vous souhaitez vous assurer que les anciennes URL fonctionneront toujours avec le nouveau site. Ceci est souvent mieux r\u00e9alis\u00e9 via des r\u00e8gles de r\u00e9\u00e9criture \u00e0 l'aide de votre serveur Web, mais il est parfois plus pratique et flexible de laisser Grav les g\u00e9rer. Ceux-ci sont g\u00e9r\u00e9s via la Configuration du Site . Grav est livr\u00e9 avec un exemple system/config/site.yaml mais vous pouvez remplacer ou ajouter n'importe lequel de vos propres param\u00e8tres en \u00e9ditant le fichier user/config/site.yaml . Toutes les r\u00e8gles de redirection s'appliquent sur le slug-path commen\u00e7ant apr\u00e8s la partie langue (si vous utilisez des pages multilingues) Vous devez \u00e9chapper certains caract\u00e8res dans tous les itin\u00e9raires que vous souhaitez faire correspondre. Ceci est particuli\u00e8rement important \u00e0 savoir si vous migrez un ancien site qui utilisait des liens contenant des extensions de fichiers h\u00e9rit\u00e9es (par exemple .php ) ou des param\u00e8tres d'URL ( ?foo=bar` ). Dans ces exemples, le point et le point d'interrogation doivent \u00eatre \u00e9chapp\u00e9s comme /index\\.php\\?foo=bar: '/new/location' . Alias \u200b\u200bde route Alias \u200b\u200bsimples Le type d'alias le plus basique est un mappage direct un \u00e0 un. Dans la section routes: du site.yaml , vous pouvez cr\u00e9er une liste de mappages pour indiquer l'alias et la route r\u00e9elle \u00e0 utiliser. Il est important de noter que ces alias ne sont utilis\u00e9s que si aucune page valide n'est trouv\u00e9e avec la route fournie. routes: /something/else: '/blog/focus-and-blur' Si vous avez demand\u00e9 une URL http://mysite.com/something/else et que ce n'\u00e9tait pas une page valide, la d\u00e9finition des itin\u00e9raires vous servirait en fait la page situ\u00e9e \u00e0 /blog/focus-and-blur , en supposant qu'elle existe. Cela ne redirige pas r\u00e9ellement l'utilisateur vers la page fournie, il affiche simplement la page lorsque vous demandez l'alias. L'indentation est la cl\u00e9 ici, sans elle, la redirection de route ne fonctionnera pas. Alias \u200b\u200bbas\u00e9s sur Regex Un type plus avanc\u00e9 de redirection d'alias permet l'utilisation d'une expression r\u00e9guli\u00e8re simple pour mapper une partie d'un alias sur une route. Par exemple, si vous aviez : routes: /another/(.*): '/blog/$1' Cela acheminerait le caract\u00e8re g\u00e9n\u00e9rique de l'alias vers la route, donc http://mysite.com/another/focus-and-blur afficherait en fait la page trouv\u00e9e sur la route /blog/focus-and-blur . C'est un moyen puissant de mapper un ensemble d'URL \u00e0 un autre. Id\u00e9al pour d\u00e9placer votre site de WordPress vers Grav :) Vous pouvez \u00e9galement effectuer la correspondance pour capturer n'importe quel alias et le mapper \u00e0 une route sp\u00e9cifique : routes: /one-ring/(.*): '/blog/sunshine-in-the-hills' Avec cet alias de route, toute URL qui confirme le caract\u00e8re g\u00e9n\u00e9rique : / one-ring/to-rule-them-all ou /one-ring/is-mine.html affichera toutes les deux le contenu de la page avec la route /blog/sunshine-in-the-hills . Vous pouvez m\u00eame \u00eatre beaucoup plus cr\u00e9atif et mapper plusieurs \u00e9l\u00e9ments ou utiliser n'importe quelle syntaxe regex : routes: /complex/(category|section)/(.*): /blog/$1/folder/$2 Cela correspondrait et r\u00e9\u00e9crirait ce qui suit : /complex/category/article-1 -> /blog/category/folder/article-1 /complex/section/article-2.html -> /blog/section/folder/article-2.html Cet itin\u00e9raire ne correspondra \u00e0 rien qui ne commence pas par complex/cat\u00e9gory ou complex/section . Pour plus d'informations, Regexr.com est une ressource fantastique pour apprendre et tester les expressions r\u00e9guli\u00e8res. Redirections L'autre option corollaire pour router les alia s est fournie par les redirections . Celles-ci sont similaires, mais plut\u00f4t que de conserver l'URL et de simplement servir le contenu de la route alias\u00e9e, Grav redirige en fait le navigateur vers la page mapp\u00e9e. Il existe trois options de configuration au niveau du syst\u00e8me qui affectent les redirections : pages: redirect_default_route: false redirect_default_code: 302 redirect_trailing_slash: true redirect_default_route permet \u00e0 Grav de rediriger automatiquement vers la route par d\u00e9faut de la page. redirect_default_code vous permet de d\u00e9finir les codes de redirection HTTP par d\u00e9faut : 301 : redirection permanente. Les clients effectuant des demandes ult\u00e9rieures pour cette ressource doivent utiliser le nouvel URI. Les clients ne doivent pas suivre automatiquement la redirection pour les requ\u00eates POST/PUT/DELETE. 302 : Rediriger pour une raison ind\u00e9finie. Les clients effectuant des demandes ult\u00e9rieures pour cette ressource ne doivent pas utiliser le nouvel URI. Les clients ne doivent pas suivre automatiquement la redirection pour les requ\u00eates POST/PUT/DELETE. 303 : Rediriger pour une raison ind\u00e9finie. Typiquement, 'L'op\u00e9ration est termin\u00e9e, continuez ailleurs.' Les clients effectuant des demandes ult\u00e9rieures pour cette ressource ne doivent pas utiliser le nouvel URI. Les clients doivent suivre la redirection pour les requ\u00eates POST/PUT/DELETE. 307 : Redirection temporaire. La ressource peut revenir \u00e0 cet emplacement ult\u00e9rieurement. Les clients effectuant des demandes ult\u00e9rieures pour cette ressource doivent utiliser l'ancien URI. Les clients ne doivent pas suivre automatiquement la redirection pour les requ\u00eates POST/PUT/DELETE. L'option redirect_trailing_slash vous permet de rediriger vers une version slash non finale de l'URL actuelle Par exemple : redirects: /jungle: '/blog/the-urban-jungle' Vous pouvez \u00e9galement transmettre explicitement le code de redirection entre crochets [] dans le cadre de l'URL : redirects: /jungle: '/blog/the-urban-jungle[303]' Si vous deviez pointer votre navigateur vers http://mysite.com/jungle , vous seriez en fait redirig\u00e9 et vous vous retrouveriez sur la page : http://mysite.com/blog/the-urban-jungle . Les m\u00eames fonctionnalit\u00e9s d'expression r\u00e9guli\u00e8re qui existent pour les Alias de Route existent \u00e9galement pour les redirections. Par example: redirects: /redirect-test/(.*): /$1 /complex/(category|section)/(.*): /blog/$1/folder/$2 Masquer l'itin\u00e9raire d'origine Lorsque vous d\u00e9finissez une certaine page comme page d'accueil de votre site via le fichier system.yaml : home: alias: '/home' Vous dites effectivement \u00e0 Grav d'ajouter une route de / comme alias pour cette page. Cela signifie que lorsque Grav demande la page pour l'URL / , il trouve la page que vous avez d\u00e9finie. Cependant, Grav ne fait vraiment rien de sp\u00e9cial pour les pages qui se trouvent sous cette page d'accueil. Donc, si vous avez une page appel\u00e9e /blog qui affiche une liste de vos articles de blog et que vous la d\u00e9finissez comme votre page d'accueil, cela fonctionnera comme pr\u00e9vu. Si toutefois, vous cliquez sur un article de blog qui se trouve sous le dossier /blog , l'URL peut \u00eatre /blog/my-blog-post . C'est un comportement attendu, mais ce n'est peut-\u00eatre pas ce que vous avez l'intention de faire. Il y a une nouvelle option disponible via le system.yaml qui vous permet de cacher ce /blog de niveau sup\u00e9rieur de la route si activ\u00e9. Vous pouvez activer ce comportement en basculant la valeur suivante : home: hide_in_urls: true","title":"Routage"},{"location":"securite-apercu/","text":"S\u00e9curit\u00e9 - Aper\u00e7u Si vous d\u00e9couvrez un \u00e9ventuel probl\u00e8me de s\u00e9curit\u00e9 li\u00e9 \u00e0 Grav ou \u00e0 l'une de ses extensions, veuillez envoyer un e-mail \u00e0 l'\u00e9quipe principale \u00e0 contact@getgrav.org et nous le traiterons d\u00e8s que possible. Les probl\u00e8mes ne doivent pas \u00eatre divulgu\u00e9s publiquement - y compris sur GitHub, Discord ou le forum Discourse - avant que l'\u00e9quipe principale n'ait eu la possibilit\u00e9 de les examiner et de contacter les parties concern\u00e9es pour les r\u00e9soudre. De plus, si le probl\u00e8me n'est pas une menace potentielle pour les utilisateurs de Grav, il devrait probablement \u00eatre soumis comme un probl\u00e8me \u00e0 la place. Si vous n'\u00eates pas s\u00fbr, contactez-nous et nous vous aiderons \u00e0 d\u00e9terminer \u00e0 qui appartient le rapport. Soumettre un rapport. Lorsque vous avez d\u00e9couvert une vuln\u00e9rabilit\u00e9 potentielle dans le noyau de Grav ou dans l'une de ses extensions, il est conseill\u00e9 de faire preuve de diligence raisonnable en la signalant : Incluez les num\u00e9ros de version de Grav et de toutes les extensions install\u00e9es, ainsi que le composant auquel le probl\u00e8me se rapporte. D\u00e9crivez la vuln\u00e9rabilit\u00e9 de mani\u00e8re d\u00e9taill\u00e9e et concise , afin de passer moins de temps \u00e0 rechercher sa source. Notez les \u00e9tapes exactes n\u00e9cessaires pour reproduire l'environnement dans lequel la vuln\u00e9rabilit\u00e9 se produit : quels param\u00e8tres sont d\u00e9finis dans system.yaml, quel contenu est cr\u00e9\u00e9 et quels param\u00e8tres syst\u00e8me sont appliqu\u00e9s ? Si possible, d\u00e9crivez la source de la vuln\u00e9rabilit\u00e9 et comment la corriger afin que les d\u00e9veloppeurs puissent \u00e0 la fois la reconstruire et la s\u00e9curiser. Divulgation responsable. Grav suit le mod\u00e8le de divulgation responsable pour la soumission des vuln\u00e9rabilit\u00e9s d\u00e9couvertes. Cela signifie qu'une fois qu'un probl\u00e8me est d\u00e9couvert, test\u00e9 et d\u00e9montr\u00e9 avec succ\u00e8s, le ou les d\u00e9veloppeurs doivent disposer d'un d\u00e9lai pour corriger la vuln\u00e9rabilit\u00e9 avant qu'elle ne soit divulgu\u00e9e publiquement. En effet, la recherche et le test de solutions aux probl\u00e8mes signal\u00e9s prennent du temps et sont sensibles au facteur temps, et Grav est un projet open source dont les auteurs n'ont pas un temps illimit\u00e9 \u00e0 y consacrer. Il est donc recommand\u00e9 de proposer \u00e9galement comment r\u00e9soudre le probl\u00e8me ou le corriger, si vous connaissez le code correspondant. Processus de r\u00e9solution. Si votre signalement est exact et qu'un nouveau probl\u00e8me de s\u00e9curit\u00e9 se reproduit, l'\u00e9quipe principale s'en occupera d\u00e8s que possible. Lorsque cela sera fait, le probl\u00e8me et sa solution seront inclus dans le r\u00e9f\u00e9rentiel public de rapports . Vous serez cr\u00e9dit\u00e9 par votre nom et avec un lien facultatif vers votre site Web/profil de m\u00e9dias sociaux, mais si vous pr\u00e9f\u00e9rez, vous pouvez demander qu'il soit cr\u00e9dit\u00e9 d'un pseudonyme ou d'un \"journaliste anonyme\". Les rapports et les probl\u00e8mes restent confidentiels jusqu'\u00e0 ce que le probl\u00e8me soit r\u00e9solu. Dans le cas o\u00f9 le mainteneur d'une extension ne parvient pas \u00e0 r\u00e9soudre le probl\u00e8me en temps opportun, l'extension est supprim\u00e9e de Grav Package Manner jusqu'\u00e0 ce qu'elle soit r\u00e9solue. Versions prises en charge. Seule la version major.minor actuelle de Grav est prise en charge. Cela signifie que les correctifs sont impl\u00e9ment\u00e9s dans major.minor.patch , mais pas de mani\u00e8re r\u00e9gressive vers l'arri\u00e8re pour les anciennes versions de Grav. Maintenir votre installation \u00e0 jour est important, et de nombreux changements sont b\u00e9n\u00e9fiques m\u00eame s'ils ne sont pas explicitement n\u00e9cessaires du point de vue de la s\u00e9curit\u00e9. Niveaux de risque. Grav en tant que logiciel comporte cinq niveaux de risque : Tr\u00e8s critique Critique Mod\u00e9r\u00e9ment critique Moins critique Pas critique Ceux-ci sont calcul\u00e9s sur la base du \" Common Misuse Scoring System \" (CMSS) du National Institute of Standards and Technology (NIST). Faute d'une calculatrice facilement disponible pour Grav, utilisez RiskCalc de Drupal (notes ).","title":"Aper\u00e7u"},{"location":"securite-config/","text":"Configuration recommand\u00e9e Comme pour toutes les autres applications, il est important que vous v\u00e9rifiiez les options de configuration pour s\u00e9curiser et optimiser votre site. Site de production. Il est important de s\u00e9curiser votre site de production en durcissant la configuration. Pour ce faire, nous vous recommandons de d\u00e9finir votre configuration principale dans user/config/ pour qu'elle contienne les param\u00e8tres par d\u00e9faut que vous souhaitez utiliser dans votre environnement de production et de remplacer ces param\u00e8tres dans l'environnement de votre site de d\u00e9veloppement, tels que user/env/localhost ou user /env /site.local . Vous pouvez \u00e9galement remplacer les param\u00e8tres du site de production via les environnements, par exemple si vous utilisez une configuration multisite sur plusieurs domaines. Configuration du syst\u00e8me ( user/config/system.yaml ). force_ssl: true # Use HTTPS only (redirect from HTTP -> HTTPS) cache: enabled: true # Greatly speeds up the site check: method: hash # Optimization, disables file modification checks for pages twig: cache: true # Greatly speeds up the site debug: false # We do not want to display debug messages auto_reload: false # Optimization, disables file modification checks for twig files autoescape: true # Protects from many XSS attacks, but requires twig updates if used in older sites/themes/plugins errors: display: 0 # Display only a simple error log: true # Log errors for later inspection debugger: enabled: false # Never keep debugger enabled in a live site. censored: true # In case if you happen to enable debugger, avoid displaying sensitive information session: enabled: true # NOTE: Disable sessions if you do not use user login and/or forms. secure: true # Use this as your site should be using HTTPS only httponly: true # Protects session cookies against client side scripts and XSS samesite: Strict # Prevent all cross-site scripting attacks split: true # Separate admin session from the site session for added security strict_mode: # Test your site before changing these. Removes backward compatibility and improves site security. yaml_compat: false twig_compat: false blueprint_compat: false Site de d\u00e9veloppement. Pour le serveur de d\u00e9veloppement, nous devons modifier quelques param\u00e8tres pour faciliter la mise \u00e0 jour du site. Configuration du syst\u00e8me ( user/env/localhost/config/system.yaml ). ASTUCE : remplacez localhost par le nom de votre serveur local. force_ssl: false # If the development site doesn't use SSL cache: enabled: true # Still keep cache enabled check: method: file # Allow updating pages without clearing cache twig: cache: true # Still keep cache enabled debug: true # We want to display debug messages auto_reload: true # We may be editing twig files errors: display: 1 # Display full backtrace if there are errors debugger: enabled: true # Debugger is handy to have censored: false # We may want to see secure content in debugger session: secure: false # If the development site doesn't use SSL httponly: false # If the development site doesn't use SSL strict_mode: # These settings help you to keep your site updated to use the latest standards yaml_compat: false twig_compat: false blueprint_compat: false","title":"Configuration"},{"location":"securite-dev/","text":"D\u00e9veloppeurs Lors de la cr\u00e9ation d'un plugin ou d'un th\u00e8me pour Grav, il est non seulement important de suivre les meilleures pratiques, mais de d\u00e9terminer si votre travail ouvre des voies d'attaque pour les intrus potentiels sur un site. Grav \u00e9tant un CMS \u00e0 fichier plat et d\u00e9pendant de peu de d\u00e9pendances, il est par nature plus s\u00e9curis\u00e9 que des syst\u00e8mes similaires, mais des canaux non s\u00e9curis\u00e9s peuvent \u00eatre cr\u00e9\u00e9s par inadvertance. Les meilleures pratiques. Voici quelques recommandations sur la meilleure fa\u00e7on de cr\u00e9er une extension s\u00e9curis\u00e9e et fiable pour Grav, et doivent \u00eatre consid\u00e9r\u00e9es comme des connaissances essentielles pour tout auteur de th\u00e8me ou de plugin. Lors de l'\u00e9criture de mod\u00e8les Twig qui g\u00e9n\u00e8rent des informations soumises par l'utilisateur, \u00e9chappez toujours l'entr\u00e9e , cela inclut \u00e9galement les actifs. Le code PHP doit nettoyer l'entr\u00e9e et la sortie. Les plans doivent privil\u00e9gier les options pr\u00e9d\u00e9finies : lorsque cela est possible, donnez \u00e0 l'utilisateur un ensemble de choix plut\u00f4t qu'une entr\u00e9e brute. Soyez conscient de la fa\u00e7on dont la m\u00e9moire et l'utilisation du processeur affectent l'extension et \u00e9vitez d'utiliser les ressources syst\u00e8me de mani\u00e8re injustifi\u00e9e. Utilisez l'\u00e9cosyst\u00e8me de fonctionnalit\u00e9s et de proc\u00e9dures de Grav plut\u00f4t que d'\u00e9crire du code non test\u00e9, et envisagez des biblioth\u00e8ques tierces test\u00e9es au combat si vous en avez besoin de plus. N'utilisez pas de fonctions PHP non s\u00e9curis\u00e9es . Lisez \u00e9galement les propres recommandations de PHP et le guide du PHP Security Consortium sur le sujet. Utilisez des exceptions sp\u00e9cifiques aux erreurs, et non des rapports d'erreurs, lorsqu'un script doit \u00e9chouer. N'incluez jamais de donn\u00e9es d'utilisateur, d'installation ou de syst\u00e8me dans des exceptions ou un d\u00e9bogage visible publiquement. CMS \u00e0 fichier plat. Grav a des exigences de base limit\u00e9es et modernes, et notamment son architecture de fichier plat att\u00e9nue le besoin d'une base de donn\u00e9es. Ceci est avantageux car un vecteur d'attaque commun est la base de donn\u00e9es d'un syst\u00e8me. Le nettoyage et la s\u00e9curisation des entr\u00e9es sont une t\u00e2che beaucoup plus difficile lorsque l'ensemble du CMS repose sur une base de donn\u00e9es, et les attaques par injection SQL peuvent automatiquement essayer d'ex\u00e9cuter des instructions SQL m\u00eame sur des h\u00f4tes distants.","title":"D\u00e9veloppeurs"},{"location":"securite-rapports/","text":"Rapports \u00c9tant donn\u00e9 que GitHub prend d\u00e9sormais en charge les avis de s\u00e9curit\u00e9 pour chaque r\u00e9f\u00e9rentiel, c'est ici que vous trouverez des rapports et des politiques \u00e0 jour. Vous pouvez toujours trouver plus de d\u00e9tails sur le programme CVE de MITRE et un aper\u00e7u sur les d\u00e9tails CVE . Plus important encore, Grav lui-m\u00eame et le plugin Admin sont ce sur quoi s'appuient toutes les autres extensions, c'est pourquoi leurs avis et politiques sont les plus importants \u00e0 suivre : Avis de s\u00e9curit\u00e9 et politique de s\u00e9curit\u00e9 Grav Core Avis de s\u00e9curit\u00e9 de l'administrateur et politique de s\u00e9curit\u00e9","title":"Rapports"},{"location":"securite-server/","text":"Du c\u00f4t\u00e9 serveur Prot\u00e9ger votre installation Grav c\u00f4t\u00e9 serveur consiste \u00e0 utiliser des options sensibles pour votre serveur et PHP. Ce guide ne couvre pas les param\u00e8tres du serveur sur lequel vous ex\u00e9cutez Grav, ni les conditions id\u00e9ales, mais met plut\u00f4t en \u00e9vidence quelques conseils et meilleures pratiques pour s\u00e9curiser Grav ou des liens vers des ressources qui d\u00e9taillent comment s\u00e9curiser le serveur. Ceci est pertinent pour un serveur de production, pas pour le d\u00e9veloppement local, et d\u00e9conseill\u00e9 aux utilisateurs novices ! Grav et configuration par d\u00e9faut. Pour Grav, vous devez toujours utiliser une configuration sp\u00e9cifique \u00e0 un r\u00e9pertoire \u00e0 jour et pertinente pour votre serveur. Ceux-ci se trouvent dans le r\u00e9f\u00e9rentiel GitHub . De plus, mettez \u00e0 jour p\u00e9riodiquement votre installation de Grav au fur et \u00e0 mesure que de nouveaux correctifs de s\u00e9curit\u00e9 sont impl\u00e9ment\u00e9s dans les nouvelles versions - pour plus de d\u00e9tails, consultez le CHANGELOG . Param\u00e9trage PHP. Avant de vous m\u00ealer de la configuration de PHP, sachez que la plupart des h\u00e9bergeurs partag\u00e9s aupr\u00e8s desquels vous louez de l'espace d'h\u00e9bergement auront probablement d\u00e9j\u00e0 configur\u00e9 des param\u00e8tres par d\u00e9faut sensibles et s\u00e9curis\u00e9s. De plus, dans la plupart des cas, ils ne vous permettent pas de le modifier vous-m\u00eame. Avant de d\u00e9sactiver ou de modifier une configuration, vous devez vous familiariser avec les exigences de Grav, y compris les extensions PHP et la mani\u00e8re dont les modifications les affecteront. G\u00e9n\u00e9ralement, la configuration de PHP est modifi\u00e9e via php.ini . Vous pouvez trouver l'emplacement de ce fichier \u00e0 partir de la ligne de commande avec la commande php --ini , ou si vous n'avez pas acc\u00e8s aux commandes directes, cr\u00e9ez un fichier nomm\u00e9 phpinfo.php dans le dossier racine public de votre serveur Web qui contient <? php phpinfo(); ?> et ouvrez-le avec votre navigateur. Le chemin sera r\u00e9pertori\u00e9 sous \"Fichier de configuration charg\u00e9\". Une fois localis\u00e9, supprimez le fichier phpinfo.php . Quelques recommandations g\u00e9n\u00e9rales : Gardez toujours votre version de PHP \u00e0 jour : utilisez une version de PHP prise en charge , de pr\u00e9f\u00e9rence une version en d\u00e9veloppement actif et stable. Par exemple, PHP 5.6 et PHP 7.0 n'auront des correctifs de s\u00e9curit\u00e9 impl\u00e9ment\u00e9s que jusqu'en d\u00e9cembre 2018, tandis que PHP 7.1 reste en d\u00e9veloppement actif aux c\u00f4t\u00e9s de PHP 7.2. Envisagez de d\u00e9sactiver publiquement l'affichage des erreurs et de la version PHP : article PHP.earth . Utilisez un utilisateur distinct avec des autorisations restreintes pour ex\u00e9cuter PHP pour Grav : Autorisations dans Docs . Utilisez Suhosin pour une protection avanc\u00e9e de PHP . Configuration du serveur Web. Les logiciels de serveur Web ou de serveur HTTP courants incluent Nginx et Apache, ainsi que des alternatives plus modernes telles que LiteSpeed ou CaddyServer. Les configurations de serveur Web susmentionn\u00e9es incluent les valeurs par d\u00e9faut n\u00e9cessaires pour Grav, mais vous pouvez s\u00e9curiser davantage le serveur Web gr\u00e2ce \u00e0 sa configuration. Quelques ressources pertinentes : Comment s\u00e9curiser Nginx sur DigitalOcean et les meilleures pratiques de s\u00e9curit\u00e9 de Nginx WebServer sur nixCraft. Apache Web Server Hardening & Security Guide sur Geek Flare, et Apache Web Server Security and Hardening Tips sur Tecmint. Moyens d'am\u00e9liorer la s\u00e9curit\u00e9 dans Litespee d sur Bobcares. Param\u00e9trage du serveur. Vous devez toujours garder votre syst\u00e8me d'exploitation (OS) \u00e0 jour . Les syst\u00e8mes d'exploitation sont vuln\u00e9rables aux exploits et aux intrusions, encore plus que PHP, et doivent \u00eatre mis \u00e0 jour aussi fr\u00e9quemment que possible. De plus, vous devez toujours tenir \u00e0 jour les autres logiciels : votre installation ne se limite pas \u00e0 OS, PHP et Grav. D'autres progiciels sont \u00e9galement des facteurs de risque et doivent \u00eatre mis \u00e0 jour fr\u00e9quemment. Pour prot\u00e9ger la connexion de vos utilisateurs \u00e0 votre site, vous devez activer et appliquer HTTPS avec un certificat SSL . Cela garantit que toutes les communications entre le serveur et le navigateur restent priv\u00e9es et crypt\u00e9es. Des certificats et des services gratuits sont disponibles via, par exemple, Let's Encrypt ou CloudFlare . Si votre serveur fonctionne sous Linux, activez Security Enhanced Linux . SELinux est g\u00e9n\u00e9ralement activ\u00e9 par d\u00e9faut et vaut bien la peine de l'avoir . D'autres recommandations pour SysAdmins sont disponibles sur nixCraft .","title":"Duc\u00f4t\u00e9 Serveur"},{"location":"securite-utilisateurs/","text":"Utilisateurs Lors de l'ex\u00e9cution de Grav, avec ou sans panneau d'administration install\u00e9, il y a quelques bonnes pratiques \u00e0 garder \u00e0 l'esprit. Celles-ci concernent qui peut acc\u00e9der \u00e0 quoi sur votre site Web et les risques potentiels de ne pas limiter les facteurs de risque \u00e0 cet \u00e9gard. Utilisateurs Grav et panneau d'administration. Lors de la cr\u00e9ation d'utilisateurs qui auront acc\u00e8s au panneau d'administration , vous devez d'abord d\u00e9terminer \u00e0 quoi ils auront acc\u00e8s. Le plugin Admin offre des autorisations solides qui doivent \u00eatre d\u00e9finies pour restreindre ce que les nouveaux utilisateurs peuvent faire avec le site. Si vous avez de nombreux utilisateurs, et que certains d'entre eux n'\u00e9criront que du contenu pour le site, ceux-ci ne devraient g\u00e9n\u00e9ralement avoir besoin que de la permission admin.pages - ainsi que des permissions normales comme admin.login . De plus, il est toujours pr\u00e9f\u00e9rable que vos utilisateurs n'aient pas un seul mot de passe qu'ils utilisent partout. Si quelqu'un volait son mot de passe, il pourrait alors se connecter partout. Un bon mot de passe est un mot de passe fort, mais m\u00eame une longue phrase utilisant des mots du dictionnaire est plus facile \u00e0 d\u00e9chiffrer qu'un mot de passe compos\u00e9 de symboles, de lettres et de chiffres al\u00e9atoires. Cependant, tout humain aura du mal \u00e0 se souvenir d'un mot de passe long et al\u00e9atoire - encore moins plusieurs - donc la meilleure pratique consiste \u00e0 utiliser un gestionnaire de mots de passe et jamais le m\u00eame mot de passe deux fois . De nombreuses personnes aiment \u00e9galement que leur navigateur se souvienne des mots de passe de chaque site et ne se souviennent que d'un seul mot de passe fort pour les d\u00e9verrouiller. Pour g\u00e9n\u00e9rer un mot de passe al\u00e9atoire, il vous suffit d'ouvrir le Bloc-notes et d'appuyer furieusement sur des touches al\u00e9atoires de votre clavier. Dites \u00e0 vos utilisateurs d'utiliser des mots de passe al\u00e9atoires et de cr\u00e9er un mot de passe fort et long dont ils se souviendront. \u00c0 l'occasion, ce long mot de passe doit \u00e9galement \u00eatre modifi\u00e9. Et parce que le plugin Admin le propose, ils doivent toujours utiliser l'authentification \u00e0 2 facteurs . Pour emp\u00eacher les attaques par force brute contre le panneau d'administration, l'administrateur doit \u00e9galement activer la protection contre le flood . Les utilisateurs du serveur et le Webmaster. Le webmaster est la personne responsable de la maintenance du site Web et y a g\u00e9n\u00e9ralement acc\u00e8s au niveau du serveur. Cette personne doit bien s\u00fbr s\u00e9curiser le serveur , mais \u00e9galement s'assurer qu'elle - et toute autre personne ayant acc\u00e8s au serveur - n'acc\u00e8de au serveur que de mani\u00e8re s\u00e9curis\u00e9e. Cela signifie qu'en aucun cas le protocole FTP ne doit \u00eatre utilis\u00e9 , uniquement SFTP avec des paires de cl\u00e9s s\u00e9curis\u00e9es par phrase. L'h\u00f4te du serveur dispose g\u00e9n\u00e9ralement d'informations sur la d\u00e9sactivation du FTP standard et l'acc\u00e8s au serveur via SFTP, la cr\u00e9ation de paires de cl\u00e9s est bien document\u00e9e . Plus g\u00e9n\u00e9ralement, d\u00e9terminez si un autre utilisateur a besoin d'un acc\u00e8s au serveur. Chaque utilisateur suppl\u00e9mentaire ayant acc\u00e8s est un risque potentiel, non seulement par son propre comportement, mais par le danger que si ses cl\u00e9s ou mots de passe sont vol\u00e9s, d'autres peuvent acc\u00e9der directement au serveur. Dans le m\u00eame esprit, aucun utilisateur ne doit avoir un acc\u00e8s root au serveur, et l'utilisateur syst\u00e8me qui ex\u00e9cute PHP pour Grav doit \u00eatre un utilisateur distinct auquel seul le syst\u00e8me a acc\u00e8s. Compte tenu de l'importance du serveur pour votre site Web ou votre service, il est primordial de veiller \u00e0 le prot\u00e9ger, ainsi que son contenu.","title":"Utilisateurs"},{"location":"server-ddev/","text":"D\u00e9veloppement local avec ddev ddev est un outil de d\u00e9veloppement PHP open source, bas\u00e9 sur Docker. Il peut facilement cr\u00e9er des environnements d'h\u00e9bergement locaux et ses configurations de serveur peuvent \u00eatre contr\u00f4l\u00e9es par version. Initialement destin\u00e9 au d\u00e9veloppement Drupal, ddev peut facilement h\u00e9berger des sites Drupal, WordPress et GravCMS. Puisqu'il est bas\u00e9 sur Docker, ddev est compatible avec Windows, Mac et Linux. Installation de ddev. Veuillez consulter la documentation officielle de ddev pour les instructions les plus r\u00e9centes sur l'installation de ddev. Configuration. Placez les fichiers Grav dans un dossier sur la machine h\u00f4te (/home/USER/projects/grav). Dans votre terminal, cd dans ce dossier cd /home/USER/projects/grav Tapez ddev config . Les invites suivantes s'afficheront : Nom du projet (par d\u00e9faut, le nom du dossier de [GRAV_ROOT] Chemin Docroot (par d\u00e9faut, [GRAV_ROOT]) Type de projet (utilisez le type php pour cette option) lancez ddev start depuis le dossier [GRAV_ROOT]. Laissez ddev construire les conteneurs dont il a besoin. Les informations d'identification racine/Sudo peuvent \u00eatre requises pour apporter des modifications aux h\u00f4tes locaux. Remarque sur ddev et le plugin Feed. ddev utilise par d\u00e9faut nginx et la configuration par d\u00e9faut au 2020-09-18 est suffisante pour la plupart des cas d'utilisation. Toutefois, si vous pr\u00e9voyez d'utiliser le plug-in ffed , vous devrez apporter les modifications de configuration suivantes : Modifier [GRAV_ROOT]/.ddev/nginx_full/nginx-site.conf Supprimez la ligne 3 pour rendre les modifications permanentes ( #ddev-generated ) Supprimez les lignes 58-62 qui for\u00e7aient la mise en cache statique rss et atom ( # Expire rules for static content ... ) Ex\u00e9cutez ddev restart pour charger la nouvelle configuration nginx. Si ces modifications ne sont pas apport\u00e9es, l'erreur HTTP 404 sera g\u00e9n\u00e9r\u00e9e lors des tentatives de chargement de flux RSS ou Atom. Utiliser ddev. Ex\u00e9cutez ces commandes \u00e0 partir de [GRAV_ROOT] sur la machine h\u00f4te : ddev describe - Affiche tous les services disponibles. ddev ssh - Connecte un shell au serveur Web au docroot. ddev exec 'params' - Ex\u00e9cute les param\u00e8tres au niveau du docroot (par exemple, ddev exec 'bin/grav clear' pour vider le cache). Je dois installer [insert plugin/ theme here]. Comment acc\u00e9der \u00e0 `bin/gpm` ? \u00c0 partir de [GRAV_ROOT], tapez ddev ssh et vous serez connect\u00e9 au serveur Web au docroot. \u00c0 partir de l\u00e0, vous pouvez ex\u00e9cuter n'importe quelle commande php (composer, bin/gpm, bin/grav, etc.). O\u00f9 puis-je modifier mes fichiers ? Un \u00e9diteur sur la machine h\u00f4te peut modifier les fichiers sur [GRAV_ROOT]. Les modifications seront automatiquement r\u00e9percut\u00e9es dans le conteneur ddev. Les modifications effectu\u00e9es dans le conteneur (c'est-\u00e0-dire bin/gpm install admin ) seront r\u00e9percut\u00e9es sur la machine h\u00f4te.","title":"D\u00e9veloppement local avec ddev"},{"location":"server-deploy-git/","text":"D\u00e9ployer avec Git En utilisant le syst\u00e8me de contr\u00f4le de version distribu\u00e9 Git sur vos environnements de d\u00e9veloppement et de serveur, vous pouvez mettre en place un flux de travail simple via un service Git h\u00e9berg\u00e9 comme Github ou GitLab . Essayez ceci si vous \u00eates \u00e0 l'aise avec Git et ses outils clients. Ses avantages incluent : c'est plus propre : vous n'avez qu'\u00e0 \u00e9mettre quelques instructions en ligne de commande et celles-ci peuvent \u00eatre automatis\u00e9es \u00e0 n'importe quel degr\u00e9 plus fiable : vous n'avez pas besoin de vous souvenir des fichiers \u00e0 t\u00e9l\u00e9charger et vous pouvez \u00eatre s\u00fbr de ne faire remonter que les modifications souhait\u00e9es (particuli\u00e8rement utile lorsque vous souhaitez uniquement t\u00e9l\u00e9charger certaines modifications dans les fichiers) s\u00e9curit\u00e9 : en utilisant un h\u00f4te cloud pour votre r\u00e9f\u00e9rentiel canonique (\"origine\"), les sauvegardes de sources (versionn\u00e9es) sont gratuites ; vous pouvez m\u00eame g\u00e9rer vos t\u00e2ches \u00e0 l'aide de probl\u00e8mes. Mise en place. Un flux de travail bas\u00e9 sur Git n\u00e9cessite une certaine configuration. Voici un aper\u00e7u g\u00e9n\u00e9ral de la configuration. Selon que vous souhaitez ou non valider des dossiers contenant du code tiers comme des plugins , il peut y avoir quelques \u00e9tapes suppl\u00e9mentaires lors de la premi\u00e8re configuration sur votre serveur. Dans votre environnement de d\u00e9veloppement, votre dossier user est un r\u00e9f\u00e9rentiel Git. Votre r\u00e9f\u00e9rentiel de dossiers user est \u00e9galement h\u00e9berg\u00e9 dans le cloud. Choisissez un fournisseur qui prend en charge les r\u00e9f\u00e9rentiels priv\u00e9s si vous ne souhaitez pas partager votre code avec le monde. Votre copie h\u00e9berg\u00e9e est l' origin \"distante\" de votre environnement local et serveur. Poussez les modifications sur votre site Grav depuis l'environnement local vers origin sur votre h\u00f4te cloud Git. Sur votre serveur, vous avez install\u00e9 Grav et son dossier user est un clone de votre r\u00e9f\u00e9rentiel distant. Lorsque vous \u00eates pr\u00eat \u00e0 mettre \u00e0 jour votre site Grav sur votre serveur, utilisez Git pour extraire origin . Mises \u00e0 jour. Apr\u00e8s la configuration initiale, vous n'avez vraiment besoin d'effectuer que deux \u00e9tapes apr\u00e8s chaque mise \u00e0 jour importante : pousser depuis votre environnement local, r\u00e9cup\u00e9rez les modifications sur votre serveur. Extension de votre configuration. Si vous souhaitez une automatisation plus avanc\u00e9e, vous pouvez configurer Git Hooks ou utiliser une fonctionnalit\u00e9 telle que les webhooks de Github . Vous pouvez \u00e9galement int\u00e9grer les modifications de contenu des \u00e9diteurs Web effectuant des modifications sur leurs propres installations via la console d'administration. Vous pouvez conserver des enregistrements (presque) immuables de ce qui est publi\u00e9 \u00e0 l'aide des balises Git. Les outils disponibles prennent en charge toutes sortes de workflows et d'automatisations multi-environnements. Vous pouvez \u00e9galement exploiter Git pour votre flux de travail de contenu \u00e0 l'aide du plugin Git Sync , afin que vos \u00e9diteurs de contenu puissent d\u00e9ployer des modifications via la console d'administration. Voici une suggestion pour votre fichier .gitignore dans votre r\u00e9f\u00e9rentiel de dossiers user . Cela vous aidera \u00e0 garder votre d\u00e9ploiement propre : accounts/* !accounts/.* data/* !data/.* languages/* !languages/.* plugins/* !plugins/.* themes/* !themes/.* !themes/MY_CUSTOM_THEME/ **/config/security.yaml Si vous utilisez un th\u00e8me personnalis\u00e9 ou h\u00e9rit\u00e9 que vous souhaitez inclure dans votre contr\u00f4le de code source, remplacez MY_CUSTOM_THEME ci-dessus par le nom du th\u00e8me. Pensez \u00e0 faire de m\u00eame pour tous les plugins personnalis\u00e9s sp\u00e9cifiques au site.","title":"D\u00e9ployer avec Git"},{"location":"server-php/","text":"Serveur Web PHP int\u00e9gr\u00e9 Tester l'h\u00e9bergement avec le serveur Web int\u00e9gr\u00e9 PHP La ligne de commande PHP (CLI SAPI) dispose d'un serveur Web int\u00e9gr\u00e9 qui est utile pour les tests ou les d\u00e9monstrations rapides du site Grav. Il ne s'agit pas d'un serveur Web complet et ne doit pas \u00eatre utilis\u00e9 sur un r\u00e9seau public. Utilisation du serveur Web CLI. Sur la ligne de commande, acc\u00e9dez au dossier [GRAV_ROOT]. Ex\u00e9cutez php -S localhost:8080 system/router.php pour d\u00e9marrer le serveur. Vous devriez voir une r\u00e9ponse comme celle ci-dessous. php -S localhost:8080 system/router.php PHP 7.3.27 Development Server started at Thu Jun 17 09:24:46 2021 Listening on http://localhost:8080 Document root is /Users/somerandom/Desktop/quick-grav-test Press Ctrl-C to quit. Browse to the URL specified, e.g., Acc\u00e9dez \u00e0 l'URL sp\u00e9cifi\u00e9e, par exemple, http://localhost:8080/ . Pour arr\u00eater le serveur Web, appuyez sur Ctrl-C. Erreur d'adresse d\u00e9j\u00e0 utilis\u00e9e. Si vous obtenez une erreur \"Adresse d\u00e9j\u00e0 utilis\u00e9e\" lors de l'ex\u00e9cution de la commande php -S , il existe d\u00e9j\u00e0 un serveur Web en cours d'ex\u00e9cution sur votre machine au num\u00e9ro de port sp\u00e9cifi\u00e9 (par exemple, :8080 ). Vous pouvez r\u00e9soudre ce probl\u00e8me en modifiant le num\u00e9ro de port dans votre commande (par exemple :8181 ) et en r\u00e9essayant. Affichage du journal en temps r\u00e9el. Le serveur Web CLI affiche son journal en temps r\u00e9el lorsque vous naviguez sur le site, ce qui peut \u00eatre utile pour des tests rapides. PHP 7.3.27 Development Server started at Thu Jun 17 09:24:46 2021 Listening on http://localhost:8080 Document root is /Users/somerandom/Desktop/quick-grav-test Press Ctrl-C to quit. [Thu Jun 17 09:26:15 2021] 127.0.0.1:63965 [200]: / [Thu Jun 17 09:26:15 2021] 127.0.0.1:64007 [200]: /assets/fd2c5827e1f18bb54d20265f4fc56b59.css?g-74e4c5a3 [Thu Jun 17 09:26:15 2021] 127.0.0.1:64008 [200]: /assets/d87a2d24fae663a8c55e144c963a1915.js?g-74e4c5a3 [Thu Jun 17 09:26:15 2021] 127.0.0.1:64014 [200]: /assets/1d8c5ea92966046d4649472f1630a253.js?g-74e4c5a3 [Thu Jun 17 09:26:16 2021] 127.0.0.1:64024 [200]: /user/images/navigation/logo_small.png [Thu Jun 17 09:26:16 2021] 127.0.0.1:64028 [200]: /user/images/navigation/bgdark.svg [Thu Jun 17 09:26:16 2021] 127.0.0.1:64030 [200]: /user/images/navigation/bglight_50.png [Thu Jun 17 09:26:16 2021] 127.0.0.1:64032 [200]: /user/images/navigation/brand.svg Apprendre encore plus. Visitez le site Web PHP pour en savoir plus sur le serveur Web CLI .","title":"Serveur Web PHP int\u00e9gr\u00e9"},{"location":"server-win-pour-linux/","text":"Sous-syst\u00e8me Windows pour Linux Le sous-syst\u00e8me Windows pour Linux permet aux d\u00e9veloppeurs d'ex\u00e9cuter l'environnement GNU/Linux - y compris la plupart des outils, utilitaires et applications en ligne de commande - directement sur Windows, sans modification, sans la surcharge d'une machine virtuelle. Tu peux: Choisissez vos distributions GNU/Linux pr\u00e9f\u00e9r\u00e9es dans le Windows Store. Ex\u00e9cutez des logiciels gratuits en ligne de commande courants tels que grep, sed, awk ou d'autres binaires ELF-64. Ex\u00e9cutez des scripts shell Bash et des applications de ligne de commande GNU/Linux, notamment : Outils : vim, emacs, tmux Langages : Javascript/node.js, Ruby, Python, C/C++, C# & F#, Rust, Go, etc. Services : sshd, MySQL, Apache, lighttpd Installez des logiciels suppl\u00e9mentaires \u00e0 l'aide de votre propre gestionnaire de packages de distribution GNU/Linux. Invoquez des applications Windows \u00e0 l'aide d'un shell de ligne de commande de type Unix. Appelez les applications GNU/Linux sous Windows. Pour plus d'informations, visitez : Windows Subsustem for Linux Documentation . Installation du sous-syst\u00e8me Windows pour Linux. L'installation du sous-syst\u00e8me Windows pour Linux est bien d\u00e9crite par le propre document de Microsoft Installer le sous-syst\u00e8me Windows pour Linux . Au lieu de la distribution Ubuntu standard mentionn\u00e9e dans le guide d'installation, recherchez et choisissez la derni\u00e8re version d'Ubuntu 18.04 LTS. Pour initialiser et mettre \u00e0 jour l'installation d'Ubuntu, suivez Initialisation d'une distribution nouvellement install\u00e9e . Cette \u00e9tape peut \u00eatre ignor\u00e9e si vous avez d\u00e9j\u00e0 initialis\u00e9 la distribution Ubuntu \u00e0 l'\u00e9tape pr\u00e9c\u00e9dente. Un aspect important de WSL est que les outils Windows ne peuvent pas acc\u00e9der aux fichiers stock\u00e9s dans Ubuntu. Cependant, Ubuntu peut (presque) librement lire/\u00e9crire le syst\u00e8me de fichiers Windows. Par cons\u00e9quent, les fichiers auxquels les outils Windows doivent acc\u00e9der (par exemple, votre IDE, votre sauvegarde) doivent \u00eatre stock\u00e9s sur le syst\u00e8me de fichiers Windows. Lorsque vous acc\u00e9dez au syst\u00e8me de fichiers Windows \u00e0 partir du shell bash, vous devez faire pr\u00e9c\u00e9der le chemin de /mnt/c/ . Bien que cela ne soit pas obligatoire, il est pr\u00e9f\u00e9rable d'utiliser exactement la m\u00eame casse de chemin de fichier lors de la cr\u00e9ation de liens symboliques. Installation d'Apache. Utilisez la commande suivante dans le shell bash pour installer Apache : $ | sudo apt install apache2 Le terminal utilis\u00e9 par WSL ne prend pas en charge le collage de texte comme vous en avez l'habitude. Utilisez le clic droit pour coller. Cr\u00e9ez un dossier de projet pour vos sites Web. Pour les raisons mentionn\u00e9es ci-dessus, ce dossier doit \u00eatre en dehors du syst\u00e8me de fichiers WSL. Vous pouvez utiliser par exemple : C:/Users/<Username>/Documents/Development/Web/webroot, ou simplement C:/webroot . Dans Ubuntu, cr\u00e9ez un lien symbolique vers le dossier webroot . $ | sudo ln -s /mnt/c/your/path/to/webroot /var/www/webroot Ouvrez le fichier de configuration de l'h\u00f4te virtuel par d\u00e9faut d'Apache : $ | sudo nano /etc/apache2/sites-available/000-default.conf Supprimez le contenu existant en maintenant la touche Maj enfonc\u00e9e et faites d\u00e9filer vers le bas \u00e0 l'aide de la touche \u2193. Appuyez ensuite sur Ctrl+K pour couper la s\u00e9lection. Ins\u00e9rez la configuration VirtualHost suivante : 1 | <VirtualHost *:80> 2 | 3 | ServerName localhost 4 | 5 | ServerAdmin webmaster@localhost 6 | DocumentRoot /var/www/webroot 7 | 8 | <Directory /var/www/> 9 | Options Indexes FollowSymLinks 10 | AllowOverride All 11 | Require all granted 12 | </Directory> 13 | 14 | ErrorLog ${APACHE_LOG_DIR}/error.log 15 | CustomLog ${APACHE_LOG_DIR}/access.log combined 16 | 17 | </VirtualHost> Enregistrez le fichier en appuyant sur Ctrl + O et appuyez sur Entr\u00e9e pour confirmer. Quittez avec Ctrl+X . (Dans la barre de commandes : ^ signifie Ctrl et M signifie Alt ) Ouvrez votre \u00e9diteur/IDE Windows pr\u00e9f\u00e9r\u00e9 et cr\u00e9ez un fichier index.html dans votre dossier webroot avec le contenu suivant : 1 | <!DOCTYPE html> 2 | <html lang=\"en\"> 3 | <head> 4 | <meta charset=\"utf-8\"> 5 | <title>It works!</title> 6 | </head> 7 | <body> 8 | <h1>It works!</h1> 9 | </body> 10 | </html> D\u00e9marrez le service Apache : $ | sudo service apache2 start Vous obtiendrez probablement le message d'erreur connu suivant que vous pouvez ignorer : (92) Protocole non disponible : AH00076 : \u00e9chec de l'activation de APR_TCP_DEFER_ACCEPT Ouvrez http://localhost dans votre navigateur et vous devriez voir le texte \u00ab \u00c7a marche ! \u00bb. Pour que vos futurs sites Grav fonctionnent correctement, le module Apache rewrite doit \u00eatre activ\u00e9e. $ | sudo a2enmod rewrite Installation de PHP. Utilisez la commande suivante pour installer la derni\u00e8re version de PHP : $ | sudo apt install php Pour v\u00e9rifier que PHP est install\u00e9 et v\u00e9rifier sa version, ex\u00e9cutez la commande suivante : $ | php-v Vous devriez obtenir une r\u00e9ponse semblable \u00e0 celle-ci : PHP 7.2.7-0ubuntu0.18.04.2 (cli) (construit : 4 juillet 2018 16:55:24) ( NTS ) Copyright (c) 1997-2018 Le Groupe PHP Zend Engine v3.2.0, Copyright (c) 1998-2018 Zend Technologies Pour r\u00e9pondre aux exigences PHP de Grav, quelques extensions PHP suppl\u00e9mentaires doivent \u00eatre install\u00e9es : $ | sudo apt install php-mbstring php-gd php-curl php-xml php-zip Red\u00e9marrez Apache pour r\u00e9cup\u00e9rer les modifications : $ | sudo service apache2 restart Installation de Grav. Vous pouvez installer Grav depuis Windows ou depuis Ubuntu. Option 1 : Windows. Installez Grav en t\u00e9l\u00e9chargeant le package ZIP et en l'extrayant : T\u00e9l\u00e9chargez le dernier et le meilleur package Grav ou Grav + Admin . Extrayez le fichier ZIP dans la racine Web que vous avez cr\u00e9\u00e9e auparavant. Renommez le dossier extrait en mysite . Ouvrez http://localhost/mysite dans le navigateur et vous devriez avoir une installation Grav fonctionnelle. Option 2 : Ubuntu. Ex\u00e9cutez les commandes suivantes pour installer Grav dans la racine Web par d\u00e9faut d'Apache : $ | wget -O grav.zip https://getgrav.org/download/core/grav/latest $ | sudo apt install unzip # unzip is not installed by default on WSL/Ubuntu $ | unzip grav.zip -d /var/www/webroot $ | mv /var/www/webroot/grav /var/www/webroot/mysite Ouvrez http://localhost/mysite dans le navigateur et vous devriez avoir une installation Grav fonctionnelle. Pour d'autres options d'installation, visitez la documentation d'installation de Grav. Installation de XDebug (facultatif). Si vous \u00eates d\u00e9veloppeur et que vous souhaitez d\u00e9velopper vos propres plugins et th\u00e8mes, vous devrez ~~probablement~~ in\u00e9vitablement d\u00e9boguer votre code \u00e0 un moment donn\u00e9... Installez XDebug \u00e0 l'aide de la commande suivante : $ | sudo apt install php-xdebug XDebug doit \u00eatre activ\u00e9 dans php.ini . Ouvrez l'\u00e9diteur : $ | sudo nano /etc/php/7.2/apache2/php.ini Et ajoutez les lignes suivantes \u00e0 la fin du fichier : [XDebug] xdebug.remote_enable = 1 Dans Nano, vous pouvez utiliser Alt+/ pour acc\u00e9der au bas du fichier. Red\u00e9marrez Apache : $ | sudo service apache2 restart Activation du d\u00e9bogueur. Pour commencer le d\u00e9bogage, vous devez d'abord activer le d\u00e9bogueur sur le serveur. Pour cela, vous devez d\u00e9finir un param\u00e8tre sp\u00e9cial GET/POST ou COOKIE. Vous pouvez le faire manuellement , mais il est beaucoup plus pratique d'utiliser une extension de navigateur. Il vous permet d'activer le d\u00e9bogueur en un clic. Lorsque l'extension est active, elle envoie directement le cookie XDEBUG_SESSION, au lieu de passer par XDEBUG_SESSION_START. Vous trouverez ci-dessous un tableau avec le lien vers l'extension appropri\u00e9e pour votre navigateur. Navigateur Extension d'aide Chrome Xdebug Helper Firefox Xdebug Helper ou Le Xdebug le plus simple Opera Xdebug launcher Lorsque vous souhaitez activer/d\u00e9sactiver le d\u00e9bogage d'un site Web, activez simplement \"D\u00e9bogage\" dans l'extension du navigateur. Lancement du d\u00e9bogueur dans Visual Studio Code (facultatif). Lorsque vous utilisez Visual Studio Code, les lanceurs de d\u00e9bogage PHP par d\u00e9faut ne fonctionnent pas lorsque Apache/PHP s'ex\u00e9cute dans WSL, en raison des mappages de fichiers. Ins\u00e9rez la configuration suivante dans une configuration de lancement PHP d\u00e9j\u00e0 cr\u00e9\u00e9e dans .vscode/launch.json : 1 | { 2 | \"name\": \"LSW Listen for XDebug\", 3 | \"type\": \"php\", 4 | \"request\": \"launch\", 5 | \"port\": 9000, 6 | \"pathMappings\": { 7 | \"/mnt/c\": \"c:/\", 8 | } 9 | } Ajout d'h\u00f4tes virtuels suppl\u00e9mentaires (facultatif). Au cours des diff\u00e9rentes \u00e9tapes du cycle de vie de notre site (d\u00e9veloppement, test, production) diff\u00e9rentes configurations Grav peuvent \u00eatre n\u00e9cessaires. Prenons par exemple la mise en cache ou les pipelines d'actifs. Vous voudrez peut-\u00eatre les d\u00e9sactiver pendant le d\u00e9veloppement et les activer lors des tests de performances. Pour plus d'informations, consultez la documentation sur la configuration automatique de l'environnement . D\u00e9marrez un \u00e9diteur en tant qu'administrateur et ouvrez le fichier C:/Windows/System32/drivers/etc/hosts . Vous pouvez, par exemple, ajouter les h\u00f4tes suivants : 127.0.0.1 mysite-dev 127.0.0.1 mysite-prod Les h\u00f4tes d\u00e9finis dans le fichier d'h\u00f4tes Windows seront automatiquement disponibles dans /etc/hosts dans WSL/Ubuntu. Cr\u00e9ez de nouveaux fichiers de configuration VirtualHost dans le dossier /etc/apache2/sites-available . $ | sudo nano /etc/apache2/sites-available/mysite-dev.conf Collez ce qui suit dans l'\u00e9diteur : 1 | <VirtualHost *:80> 2 | 3 | ServerName mysite-dev 4 | 5 | ServerAdmin webmaster@localhost 6 | DocumentRoot /var/www/webroot/mysite 7 | 8 | <Directory /var/www/> 9 | Options Indexes FollowSymLinks 10 | AllowOverride All 11 | Require all granted 12 | </Directory> 13 | 14 | ErrorLog ${APACHE_LOG_DIR}/error.log 15 | CustomLog ${APACHE_LOG_DIR}/access.log combined 16 | 17 | </VirtualHost> R\u00e9p\u00e9tez les commandes ci-dessus pour mysite-prod.conf et utilisez ServerName mysite-prod comme serveur. Activez les nouveaux VirtualHosts dans la configuration Apache : $ | sudo a2ensite mysite-* $ | sudo service apache2 reload $ | sudo service apache2 restart Vous pouvez maintenant pointer le navigateur vers http://mysite-dev et il ouvrira l'installation de Grav sur C:/your/path/to/webroot/mysite en utilisant les fichiers de configuration dans le dossier /user/mysite-dev/config/ . D\u00e9marrer automatiquement Apache (facultatif). Pour d\u00e9marrer et arr\u00eater Apache, des privil\u00e8ges \u00e9lev\u00e9s sont requis. Et pour b\u00e9n\u00e9ficier des privil\u00e8ges \u00e9lev\u00e9s, un mot de passe est demand\u00e9. Pour emp\u00eacher Ubuntu de demander un mot de passe, vous pouvez vous accorder des privil\u00e8ges \u00e9lev\u00e9s permanents pour certains services. D\u00e9marrez l'\u00e9diteur visudo pour modifier le fichier sudoer : $ | sudo visudo -f /etc/sudoers.d/services Copiez les lignes suivantes dans l'\u00e9diteur : %sudo ALL=(root) NOPASSWD: /usr/sbin/service * %wheel ALL=(root) NOPASSWD: /usr/sbin/service * Apache peut maintenant \u00eatre d\u00e9marr\u00e9 avec des privil\u00e8ges \u00e9lev\u00e9s sans fournir de mot de passe. Pour d\u00e9marrer Apache \u00e0 chaque d\u00e9marrage d'un shell Ubuntu, la commande sudo service apache2 start doit \u00eatre ajout\u00e9e au script de d\u00e9marrage .bashrc . Ce script est ex\u00e9cut\u00e9 chaque fois que vous d\u00e9marrez un terminal WSL. $ | nano .bashrc Ajoutez le script suivant \u00e0 la fin du fichier : 1 | ## Start apache2 if not running 2 | status=`service apache2 status` 3 | if [[ $status == *\"apache2 is not running\" ]] 4 | then 5 | sudo service apache2 start 6 | fi Et ajoutez ce qui suit \u00e0 .bash_logout pour arr\u00eater Apache lors de la fermeture du shell bash. 1 | ## Stop apache2 if running 2 | status=`service apache2 status` 3 | if [[ $status == *\"apache2 is running\" ]] 4 | then 5 | sudo service apache2 stop 6 | fi Trucs et astuces. \u00c9mulateur de terminal Linux avec interface graphique. Si vous n'\u00eates pas fan de l'exp\u00e9rience de terminal par d\u00e9faut et que vous souhaitez installer un terminal graphique Linux \"natif\", vous pouvez consulter l'article Configuration d'un \u00e9mulateur de terminal joli et utilisable pour WSL . Plusieurs sites Web, une seule base de code Grav. Si vous \u00eates comme moi et que plusieurs sites Web Grav sont d\u00e9ploy\u00e9s pour des projets distincts, vous voudrez peut-\u00eatre lire la documentation sur les liens symboliques et sur la copie d'un projet pour cr\u00e9er une copie symbolique d'un seul noyau Grav.","title":"Sous-syst\u00e8me Windows pour Linux"},{"location":"structure-dossiers/","text":"Structure des dossiers \u00c9tant donn\u00e9 que Grav est un CMS bas\u00e9 sur des fichiers plats , ce qui signifie qu'aucune base de donn\u00e9es n'est utilis\u00e9e, la structure des dossiers de votre site est tr\u00e8s importante. Au niveau sup\u00e9rieur de votre installation Grav, la structure des dossiers ressemble \u00e0 : 1 | /assets 2 | /backup 3 | /bin 4 | /cache 5 | /images 6 | /logs 7 | /system 8 | /tmp 9 | /vendor 10 | /user Alors approfondissons un peu chacun de ces dossiers de niveau sup\u00e9rieur et expliquons \u00e0 quoi ils servent : /assets Le dossier assets est utilis\u00e9 par le nouveau syst\u00e8me de gestion des assets dans Grav pour stocker les fichiers .css et .js trait\u00e9s. Ce dossier ne doit pas \u00eatre utilis\u00e9 pour stocker des donn\u00e9es utilisateur, car il est syst\u00e9matiquement vid\u00e9 de toutes les donn\u00e9es. /backup Le dossier backup est l'emplacement par d\u00e9faut des sauvegardes Grav. /bin Le dossier bin contient l'application Grav CLI qui peut \u00eatre utilis\u00e9e pour effectuer certaines t\u00e2ches pratiques \u00e0 partir de la ligne de commande. Il s'agit d'une fonctionnalit\u00e9 relativement avanc\u00e9e principalement destin\u00e9e aux d\u00e9veloppeurs, nous allons donc laisser ce sujet de c\u00f4t\u00e9 pour une discussion ult\u00e9rieure. /cache Le dossier cache est utilis\u00e9 pour stocker des fichiers temporaires en cache qui sont automatiquement g\u00e9n\u00e9r\u00e9s par Grav pour am\u00e9liorer les performances. Par d\u00e9faut, Grav g\u00e8re automatiquement la mise en cache, en s\u00e9lectionnant la meilleure option disponible pour votre environnement d'h\u00e9bergement afin de garantir que votre site fonctionne le plus rapidement possible. Si Grav d\u00e9cide que le syst\u00e8me de fichiers est la meilleure m\u00e9thode de mise en cache, les fichiers mis en cache qu'il g\u00e9n\u00e8re seront stock\u00e9s ici. Le moteur de template Twig utilise \u00e9galement cet emplacement pour stocker ses fichiers de template pr\u00e9-compil\u00e9s. Encore une fois, cela est fait pour s'assurer que Grav fonctionne \u00e0 sa vitesse optimale. Ce dossier ne doit pas \u00eatre utilis\u00e9 pour stocker des donn\u00e9es utilisateur, car il est syst\u00e9matiquement vid\u00e9 de toutes les donn\u00e9es. /images Grav est livr\u00e9 avec une biblioth\u00e8que de manipulation d'images puissante mais tr\u00e8s facile \u00e0 utiliser . Cela signifie que vous pouvez facilement redimensionner une image \u00e0 la vol\u00e9e \u00e0 partir de votre contenu ou m\u00eame d'un plugin. Ces images sont stock\u00e9es dans le dossier images afin de pouvoir \u00eatre r\u00e9utilis\u00e9es si la m\u00eame image avec la m\u00eame taille est \u00e0 nouveau demand\u00e9e. Ce dossier agit comme un cache d'images et est destin\u00e9 aux fichiers g\u00e9n\u00e9r\u00e9s automatiquement. Les m\u00e9dias fournis par l'utilisateur doivent \u00eatre stock\u00e9s dans le dossier user/pages/ , user/themes/ ou m\u00eame un dossier personnalis\u00e9 user/images/ . Ce dossier ne doit pas \u00eatre utilis\u00e9 pour stocker des donn\u00e9es utilisateur, car il est syst\u00e9matiquement vid\u00e9 de toutes les donn\u00e9es. /logs Lorsque Grav d\u00e9tecte une erreur, ou si vous avez activ\u00e9 la journalisation ou le profilage suppl\u00e9mentaire, il stocke les fichiers journaux pertinents dans le dossier logs . /system Le dossier system est l'endroit o\u00f9 les fichiers qui font fonctionner Grav en direct. Vous ne devez rien modifier dans ce dossier car une mise \u00e0 jour de Grav pourrait \u00e9craser vos modifications. Si vous avez besoin de changer quelque chose li\u00e9 au fonctionnement de Grav, vous pouvez utiliser des plugins comme indiqu\u00e9 dans les chapitres suivants. /tmp Le dossier tmp est utilis\u00e9 par Grav et les plugins pour stocker les fichiers temporaires. Ce dossier ne doit pas \u00eatre utilis\u00e9 pour stocker des donn\u00e9es utilisateur, car il est syst\u00e9matiquement vid\u00e9 de toutes les donn\u00e9es. /vendor Le dossier vendor contient des biblioth\u00e8ques importantes sur lesquelles Grav s'appuie. Ce dossier est similaire au dossier system en ce sens que son contenu ne doit pas \u00eatre modifi\u00e9 \u00e0 moins que vous ne soyez absolument certain de ce que vous faites. Si vous avez install\u00e9 Grav depuis GitHub, le dossier vendor n'aura pas \u00e9t\u00e9 install\u00e9 avec. Afin de cr\u00e9er et de remplir le dossier du fournisseur, vous devrez ex\u00e9cuter l'installation de bin/grav install ou composer install \u00e0 partir de la racine de votre instance Grav. Plus de d\u00e9tails peuvent \u00eatre trouv\u00e9s dans la section d'installation . /user C'est le dossier le plus important pour la majorit\u00e9 des utilisateurs de Grav. Ce dossier est l'endroit o\u00f9 vous passerez votre temps \u00e0 cr\u00e9er du contenu, \u00e0 utiliser des plugins et \u00e0 \u00e9diter vos th\u00e8mes. Fouillons un peu plus loin dans ce dossier : 1 | /user/accounts 2 | /user/blueprints 3 | /user/config 4 | /user/data 5 | /user/images 6 | /user/languages 7 | /user/pages 8 | /user/plugins 9 | /user/themes /user/accounts Le dossier accounts est l'endroit o\u00f9 vous d\u00e9finirez les comptes d'utilisateurs si des restrictions d'acc\u00e8s sont requises pour certaines parties de votre site. /user/blueprints Le dossier blueprints contient vos blueprints personnalis\u00e9s pour le site. /user/config Les fichiers du r\u00e9pertoire config sont utilis\u00e9s pour configurer le site Web et ont \u00e9t\u00e9 abord\u00e9s dans le chapitre pr\u00e9c\u00e9dent. /user/data Le dossier data peut \u00eatre utilis\u00e9 par des plugins pour stocker des donn\u00e9es que vous pourrez r\u00e9f\u00e9rencer ult\u00e9rieurement. Un bon exemple de plugin qui utilise ce dossier est le plugin Forms qui peut prendre un formulaire Web et stocker les donn\u00e9es soumises dans un fichier texte dans ce dossier. Vous pouvez \u00e9galement stocker d'autres \u00e9l\u00e9ments tels que les t\u00e9l\u00e9chargements d'utilisateurs ou tout ce que vous souhaitez vraiment. Ce dossier n'est pas accessible via un navigateur par d\u00e9faut. /user/images Le dossier images peut \u00eatre utilis\u00e9 pour stocker vos images. Il est accessible en utilisant image:// stream. /user/languages Le dossier languages contient les substitutions de traduction . /user/pages C'est le c\u0153ur de Grav. Le dossier pages est l'endroit o\u00f9 vous cr\u00e9ez et modifiez votre contenu. Nous entrerons beaucoup plus en profondeur dans le chapitre suivant. /user/plugins Un plugin peut \u00e9tendre le noyau rapide de Grav avec des fonctionnalit\u00e9s particuli\u00e8res dont vous pourriez avoir besoin pour votre site Web. Les plugins peuvent \u00eatre t\u00e9l\u00e9charg\u00e9s depuis GetGrav.org/downloads/plugins , ou vous pouvez d\u00e9velopper les v\u00f4tres . /user/themes Un th\u00e8me transforme votre contenu en un v\u00e9ritable site Web. Il convertit le contenu que vous avez construit en HTML qu'un navigateur comprend et affiche \u00e0 votre public. Un th\u00e8me de base est fourni avec Grav, mais vous pouvez \u00e9galement en t\u00e9l\u00e9charger d'autres depuis GetGrav.org/downloads/themes ou m\u00eame cr\u00e9er le v\u00f4tre. Le chapitre Th\u00e8mes en parlera plus en d\u00e9tail.","title":"Structure des dossiers"},{"location":"syntaxe-markdown/","text":"Syntaxe Markdown Avouons-le : \u00e9crire du contenu pour le Web est fastidieux. Les \u00e9diteurs WYSIWYG aident \u00e0 all\u00e9ger cette t\u00e2che, mais ils se traduisent g\u00e9n\u00e9ralement par un code horrible, ou pire encore, des pages Web laides. Markdown est une meilleure fa\u00e7on d'\u00e9crire du HTML , sans toutes les complexit\u00e9s et la laideur qui l'accompagnent habituellement. Certains des principaux avantages sont : Markdown est simple \u00e0 apprendre, avec un minimum de caract\u00e8res suppl\u00e9mentaires, il est donc \u00e9galement plus rapide d'\u00e9crire du contenu. Moins de risques d'erreurs lors de l'\u00e9criture en markdown. Produit une sortie XHTML valide. Maintient le contenu et l'affichage visuel s\u00e9par\u00e9s, de sorte que vous ne pouvez pas g\u00e2cher l'apparence de votre site. \u00c9crivez dans n'importe quel \u00e9diteur de texte ou application Markdown que vous aimez. Markdown est un plaisir \u00e0 utiliser ! John Gruber, l'auteur de Markdown, le dit ainsi : L'objectif primordial de la conception de la syntaxe de formatage de Markdown est de la rendre aussi lisible que possible. L'id\u00e9e est qu'un document au format Markdown doit \u00eatre publiable tel quel, en texte brut, sans donner l'impression qu'il a \u00e9t\u00e9 con\u00e7u avec des balises ou des instructions de formatage. Alors que la syntaxe de Markdown a \u00e9t\u00e9 influenc\u00e9e par plusieurs filtres texte-HTML existants, la principale source d'inspiration pour la syntaxe de Markdown est le format du courrier \u00e9lectronique en texte brut. --John Gruber Grav est livr\u00e9 avec un support int\u00e9gr\u00e9 pour Markdown et Markdown Extra . Vous devez activer Markdown Extra dans votre fichier de configuration system.yaml . Sans plus tarder, passons en revue les principaux \u00e9l\u00e9ments de Markdown et \u00e0 quoi ressemble le HTML r\u00e9sultant : Ajoutez cette page \u00e0 vos favoris pour une r\u00e9f\u00e9rence ult\u00e9rieure facile ! Titres Les titres de h1 \u00e0 h6 sont construits avec un # pour chaque niveau : # h1 Titre ## h2 Titre ### h3 Titre #### h4 Titre ##### h5 Titre ###### h6 Titre donne : h1 Titre h2 Titre h3 Titre h4 Titre h5 Titre h6 Titre HTML: <h1>h1 Titre</h1> <h2>h2 Titre</h2> <h3>h3 Titre</h3> <h4>h4 Titre</h4> <h5>h5 Titre</h5> <h6>h6 Titre</h6> Commentaires Les commentaires doivent \u00eatre compatibles HTML <!-- Ceci est un commentaire --> Le commentaire ne doit PAS \u00eatre vu : Lignes horizontales L'\u00e9l\u00e9ment HTML <hr> sert \u00e0 cr\u00e9er une \"rupture th\u00e9matique\" entre les \u00e9l\u00e9ments de niveau paragraphe. Dans Markdown, vous pouvez cr\u00e9er un <hr> avec l'un des \u00e9l\u00e9ments suivants : ___ : trois traits de soulignement cons\u00e9cutifs --- : trois tirets cons\u00e9cutifs *** : trois ast\u00e9risques cons\u00e9cutifs correspondant \u00e0 : Corps du texte Le corps du texte \u00e9crit normalement, le texte brut sera entour\u00e9 de balises <p></p> dans le rendu HTML. Donc, cette copie du corps : Lorem ipsum dolor sit amet, graecis denique ei vel, at duo primis mandamus. Et legere ocurreret pri, animal tacimates complectitur ad cum. Cu eum inermis inimicus efficiendi. Labore officiis son ex, soluta officiis concludaturque ei qui, vide sensibus vim ad. donne cela en HTML : <p>Lorem ipsum dolor sit amet, graecis denique ei vel, at duo primis mandamus. Et legere ocurreret pri, animal tacimates complectitur ad cum. Cu eum inermis inimicus efficiendi. Labore officis his ex, soluta officiis concludaturque ei qui, vide sensibus vim ad.</p> Un saut de ligne peut se faire avec 2 espaces suivis d'1 retour. HTML en ligne Si vous avez besoin d'une certaine balise HTML (avec une classe), vous pouvez simplement utiliser HTML : Paragraphe dans Markdown. <div class=\"classe\"> Ceci est <b>HTML</b> </div> Paragraphe dans Markdown. Rendus Gras Pour mettre en valeur un extrait de texte avec un poids de police plus lourd. L'extrait de texte suivant est affich\u00e9 en gras . **rendra le texte en gras** correspondant \u00e0 : rendra le texte en gras et en HTML : <strong>rendu en texte gras</strong> Italique Pour mettre en \u00e9vidence un extrait de texte en italique. L'extrait de texte suivant est rendu en italique . _rendra le texte en italique_ correspondant \u00e0 : rendra le texte en italique et en HTML : <em>rendu sous forme de texte en italique</em> Barr\u00e9 Dans GFM (GitHub aromatis\u00e9 Markdown), vous pouvez faire des barr\u00e9s. ~~Barrez ce texte.~~ correspondant \u00e0 : Barrez ce texte. et en HTML : <del>Barrez ce texte.</del> Blockquotes Pour citer des blocs de contenu provenant d'une autre source dans votre document. Ajoutez > avant tout texte que vous souhaitez citer. > **Fusion Drive** combine un disque dur avec un stockage flash (disque SSD) et le pr\u00e9sente comme un seul volume logique avec l'espace des deux disques combin\u00e9s. Correspond \u00e0 : Fusion Drive combine un disque dur avec un stockage flash (disque SSD) et le pr\u00e9sente comme un volume logique unique avec l'espace des deux disques combin\u00e9s. et en HTML : <blockquote> <p><strong>Fusion Drive</strong> combine un disque dur avec un stockage flash (disque SSD) et le pr\u00e9sente comme un volume logique unique avec l'espace des deux disques combin\u00e9s.</p> </blockquote> Les blocs de citations peuvent \u00e9galement \u00eatre imbriqu\u00e9s : > Donec massa lacus, ultricies a ullamcorper in, fermentum sed augue. Nunc augue augue, aliquam non hendrerit ac, commodo vel nisi. >> Sed adipiscing elit vitae augue consectetur a gravida nunc vehicula. Donec auctor odio non est accumsan facilisis. Aliquam id turpis in dolor tincidunt mollis ac eu diam. Correspond \u00e0 : Donec massa lacus, ultricies a ullamcorper in, fermentum sed augue. Nunc augue augue, aliquam non hendrerit ac, commodo vel nisi. Sed adipiscing elit vitae augue consectetur a gravida nunc vehicula. Donec auctor odio non est accumsan facilisis. Aliquam id turpis in dolor tincidunt mollis ac eu diam. Notices L'ancien m\u00e9canisme pour les notices rempla\u00e7ant la syntaxe des apostrophes ( >>> ) est obsol\u00e8te. Les avis sont d\u00e9sormais g\u00e9r\u00e9s via un plugin d\u00e9di\u00e9 appel\u00e9 Markdown Notices . Listes Non ordonn\u00e9es Une liste d'\u00e9l\u00e9ments dans laquelle l'ordre des \u00e9l\u00e9ments n'a pas d'importance explicite. Vous pouvez utiliser l'un des symboles suivants pour d\u00e9signer les puces de chaque \u00e9l\u00e9ment de la liste : * puce valide - puce valide + puce valide Par exemple + Lorem ipsum dolor sit amet + Consectetur adipiscing \u00e9lite + Integer molestie lorem at massa + Facilisis in pretium nisl aliquet + Nulla volutpat aliquam velit - Phasellus iaculis n\u00e8que - Ultricies de Purus sodales - Vestibulum laoreet porttitor sem - Ac tristique libero volutpat \u00e0 + Faucibus porta lacus fringilla vel + Aenean sit amet erat nunc + Eget porttitor lorem Correspond \u00e0 : Lorem ipsum dolor sit amet Consectetur adipiscing \u00e9lite Integer molestie lorem at massa Facilisis in pretium nisl aliquet Nulla volutpat aliquam velit Phasellus iaculis neque Purus sodales ultricies Vestibulum laoreet porttitor sem Ac tristique libero volutpat at Faucibus porta lacus fringilla vel Aenean sit amet erat nunc Eget porttitor lorem Et en HTML <ul> <li>Lorem ipsum dolor sit amet</li> <li>Consectetur adipiscing elit</li> <li>Entier molestie lorem at massa</li> <li>Facilisis in pretium nisl aliquet</li> <li>Nulla volutpat aliquam velit <ul> <li>Phasellus iaculis n\u00e8que</li> <li>Ultricies de Purus sodales</li> <li>Vestibulum laoreet porttitor sem</li> <li>Ac tristique libero volutpat at</li> </ul> </li> <li>Faucibus porta lacus fringilla vel</li> <li>\u00c9n\u00e9e sit amet erat nunc</li> <li>Eget porttitor lorem</li> </ul> Ordonn\u00e9es Une liste d'\u00e9l\u00e9ments dans lesquels l'ordre des \u00e9l\u00e9ments importe explicitement. 1. Lorem ipsum dolor sit amet 2. Consectetur adipiscing elit 3. Integer molestie lorem at massa 4. Facilisis in pretium nisl aliquet 5. Nulla volutpat aliquam velit 6. Faucibus porta lacus fringilla vel 7. Aenean sit amet erat nunc 8. Eget porttitor lorem Correspond \u00e0 : Lorem ipsum dolor sit amet Consectetur adipiscing elit Integer molestie lorem at massa Facilisis in pretium nisl aliquet Nulla volutpat aliquam velit Faucibus porta lacus fringilla vel Aenean sit amet erat nunc Eget porttitor lorem Et en HTML : <ol> <li>Lorem ipsum dolor sit amet</li> <li>Consectetur adipiscing elit</li> <li>Entier molestie lorem at massa</li> <li>Facilisis in pretium nisl aliquet</li> <li>Nulla volutpat aliquam velit</li> <li>Faucibus porta lacus fringilla vel</li> <li>\u00c9n\u00e9e sit amet erat nunc</li> <li>Eget porttitor lorem</li> </ol> ASTUCE : Si vous n'utilisez que 1 . pour chaque num\u00e9ro, Markdown num\u00e9rotera automatiquement chaque \u00e9l\u00e9ment. Par exemple: 1. Lorem ipsum dolor sit amet 1. Consectetur adipiscing elit 1. Integer molestie lorem at massa 1. Facilisis in pretium nisl aliquet 1. Nulla volutpat aliquam velit 1. Faucibus porta lacus fringilla vel 1. Aenean sit amet erat nunc 1. Eget porttitor lorem Correspond \u00e0 : Lorem ipsum dolor sit amet Consectetur adipiscing elit Integer molestie lorem at massa Facilisis in pretium nisl aliquet Nulla volutpat aliquam velit Faucibus porta lacus fringilla vel Aenean sit amet erat nunc Eget porttitor lorem Code Code en ligne Enveloppez les extraits de code en ligne avec ` . Dans cet exemple, `<section></section>` doit \u00eatre envelopp\u00e9 comme **code**. Correspond \u00e0 : Dans cet exemple, <section></section> doit \u00eatre envelopp\u00e9 de code . et en HTML : <p>Dans cet exemple, <code>&lt;section&gt;&lt;/section&gt;</code> doit \u00eatre entour\u00e9 de <strong>code</strong>.</p> Code indent\u00e9 Ou indentez plusieurs lignes de code d'au moins quatre espaces, comme dans : // Du commentaire ligne 1 du code ligne 2 du code ligne 3 du code Ce qui rendra : // Certains commentaires ligne 1 du code ligne 2 du code ligne 3 du code Et en HTML : <pre> <code> // Certains commentaires ligne 1 du code ligne 2 du code ligne 3 du code </code> </pre> Code de bloc \"fences\" Utilisez \"fences\" ``` pour bloquer plusieurs lignes de code avec un attribut de langue. ``` Exemple de texte ici... ``` Et en HTML : <pre language-html> <code>Exemple de texte ici...</code> </pre> Mise en \u00e9vidence de la syntaxe GFM, ou \"GitHub Flavored Markdown\" prend \u00e9galement en charge la coloration syntaxique. Pour l'activer, ajoutez simplement l'extension de fichier du langage que vous souhaitez utiliser directement apr\u00e8s le premier code \"fence\", ```js , et la coloration syntaxique sera automatiquement appliqu\u00e9e dans le rendu HTML. Par exemple, pour appliquer la coloration syntaxique au code JavaScript : ```js grunt.initConfig({ assemble: { options: { assets: 'docs/assets', data: 'src/data/*.{json,yml}', helpers: 'src/custom-helpers.js', partials: ['src/partials/**/*.{hbs,md}'] }, pages: { options: { layout: 'default.hbs' }, files: { './': ['src/templates/pages/index.hbs'] } } } }; ``` Correspond \u00e0 : grunt.initConfig({ assemble: { options: { assets: 'docs/assets', data: 'src/data/*.{json,yml}', helpers: 'src/custom-helpers.js', partials: ['src/partials/**/*.{hbs,md}'] }, pages: { options: { layout: 'default.hbs' }, files: { './': ['src/templates/pages/index.hbs'] } } } }; Pour que la coloration syntaxique fonctionne, le plugin Highlight doit \u00eatre install\u00e9 et activ\u00e9. Il utilise \u00e0 son tour un plugin jquery, donc jquery doit \u00e9galement \u00eatre charg\u00e9 dans votre th\u00e8me. Les tableaux Les tableaux sont cr\u00e9\u00e9s en ajoutant des barres comme s\u00e9parateurs entre chaque cellule et en ajoutant une ligne de tirets (\u00e9galement s\u00e9par\u00e9s par des barres) sous l'en-t\u00eate. Notez que les pipes n'ont pas besoin d'\u00eatre align\u00e9s verticalement. | Option | Description | | ------ | ----------- | | data | path to data files to supply the data that will be passed into templates. | | engine | engine to be used for processing templates. Handlebars is the default. | | ext | extension to be used for dest files. | Correspond \u00e0 : Option Description data path to data files to supply the data that will be passed into templates. engine engine to be used for processing templates. Handlebars is the default. ext extension to be used for dest files. Et en HTML : <tableau> <t\u00eate> <tr> <th>Option</th> <th>Description</th> </tr> </thead> <tbody> <tr> <td>donn\u00e9es</td> <td>chemin d'acc\u00e8s aux fichiers de donn\u00e9es pour fournir les donn\u00e9es qui seront transmises aux mod\u00e8les.</td> </tr> <tr> <td>moteur</td> <td>moteur \u00e0 utiliser pour le traitement des mod\u00e8les. Le guidon est la valeur par d\u00e9faut.</td> </tr> <tr> <td>ext</td> <td>extension \u00e0 utiliser pour les fichiers dest.</td> </tr> </tbody> </table> Texte align\u00e9 \u00e0 droite L'ajout de deux-points sur le c\u00f4t\u00e9 droit des tirets sous n'importe quel titre alignera \u00e0 droite le texte de cette colonne. | Option | Description | | ------:| -----------:| | data | path to data files to supply the data that will be passed into templates. | | engine | engine to be used for processing templates. Handlebars is the default. | | ext | extension to be used for dest files. | Option Description data path to data files to supply the data that will be passed into templates. engine engine to be used for processing templates. Handlebars is the default. ext extension to be used for dest files. Liens Lien de base [Assemble] (https://assemble.io) Rend (survolez le lien, il n'y a pas d'info-bulle): Assemble Et en HTML : <a href=\"https://assemble.io\">Assembler</a> Ajouter un titre [Upstage](https://github.com/upstage/ \"Visitez Upstage!\") Rend (passez la souris sur le lien, il devrait y avoir une info-bulle): Upstage En HTML : <a href=\"https://github.com/upstage/\" title=\"Visitez Upstage!\">Upstage</a> Ancres nomm\u00e9es Les ancres nomm\u00e9es vous permettent d'acc\u00e9der au point d'ancrage sp\u00e9cifi\u00e9 sur la m\u00eame page. Par exemple, chacun de ces chapitres : # Table des mati\u00e8res * [Chapitre 1](#chapitre-1) * [Chapitre 2](#chapitre-2) * [Chapitre 3](#chapitre-3) passera \u00e0 ces sections : ## Chapitre 1 <a id=\"chapter-1\"></a> Contenu du premier chapitre. ## Chapitre 2 <a id=\"chapter-2\"></a> Contenu du premier chapitre. ## Chapitre 3 <a id=\"chapter-3\"></a> Contenu du premier chapitre. REMARQUE que le placement sp\u00e9cifique de la balise d'ancrage semble \u00eatre arbitraire. Ils sont plac\u00e9s en ligne ici car cela semble \u00eatre discret et cela fonctionne. Images Les images ont une syntaxe similaire aux liens mais incluent un point d'exclamation pr\u00e9c\u00e9dent. ![Minion](https://octodex.github.com/images/minion.png) ou alors: ![ALt text](https://octodex.github.com/images/stormtroopocat.jpg \"Le Stormtroopocat\") Comme les liens, les images ont \u00e9galement une syntaxe de style note de bas de page : ![Alt text][id] Avec une r\u00e9f\u00e9rence plus loin dans le document d\u00e9finissant l'emplacement de l'URL : [id] : https://octodex.github.com/images/dojocat.jpg \"Le Dojocat\"","title":"Syntaxe Markdown"},{"location":"taxonomy/","text":"Taxonomie Avec Grav , la possibilit\u00e9 de regrouper ou de baliser des pages est int\u00e9gr\u00e9e directement dans le syst\u00e8me avec Taxonomy . Taxonomie (g\u00e9n\u00e9ral) , la pratique et la science (\u00e9tude) de la classification des choses ou des concepts, y compris les principes qui sous-tendent une telle classification. Wikipedia L'utilisation de la taxonomie sur votre site comporte deux \u00e9l\u00e9ments cl\u00e9s : D\u00e9finissez une liste de types de taxonomie dans votre site.yaml . Affectez vos pages aux types de taxonomy appropri\u00e9s avec des valeurs. Exemple de taxonomie Ce concept est mieux expliqu\u00e9 avec un exemple. Disons que vous voulez cr\u00e9er un blog simple. Dans ce blog, vous cr\u00e9erez des articles que vous voudrez peut-\u00eatre attribuer \u00e0 certains tags pour fournir un affichage en nuage de tags . En outre, vous pouvez avoir plusieurs auteurs et vous pouvez attribuer chaque article \u00e0 cet auteur. Accomplir cela dans Grav est une proc\u00e9dure simple. Grav fournit un fichier site.yaml par d\u00e9faut qui se trouve dans le dossier system/config . Par d\u00e9faut, cette configuration d\u00e9finit deux types de taxonomie category et tag : taxonomies: [category,tag,author] Comme le tag est d\u00e9j\u00e0 d\u00e9fini, il vous suffit d'ajouter des authors . Pour ce faire, cr\u00e9ez simplement un nouveau fichier site.yaml dans votre dossier user/config et ajoutez la ligne suivante : taxonomies: [category,tag,author] Cela remplacera les taxonomies connues de Grav afin que les pages puissent \u00eatre attribu\u00e9es \u00e0 l'une de ces trois taxonomies. L'\u00e9tape suivante consiste \u00e0 cr\u00e9er des pages qui utilisent ces types de taxonomie. Par exemple, vous pourriez avoir une page qui ressemble \u00e0 ceci : --- titre : Message 1 taxonomy : tag: [animal, dog] author : ksmith --- Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum. ...et une autre page qui ressemble \u00e0 : --- titre : Message 2 taxonomy : tag: [animal, cat] author: jdoe --- Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum. Comme vous pouvez le voir dans la configuration YAML, chaque page attribue des valeurs aux types de taxonomie que nous avons d\u00e9finis dans notre configuration utilisateur site.yaml . Ces informations sont utilis\u00e9es par Grav lors du traitement des pages et cr\u00e9ent une carte de taxonomie interne qui peut \u00eatre utilis\u00e9e pour trouver des pages en fonction de la taxonomie que vous avez d\u00e9finie. Vos pages ne doivent pas n\u00e9cessairement utiliser toutes les taxonomies que vous d\u00e9finissez dans votre site.yaml , mais vous devez d\u00e9finir toutes les taxonomies que vous utilisez. Dans votre th\u00e8me, vous pouvez facilement afficher une liste de pages \u00e9crites par ksmith en utilisant taxonomy.findTaxonomy() pour les trouver et les parcourir : <h2>Messages de Kevin Smith</h2> <ul> {% pour le message dans taxonomy.findTaxonomy({'author':'ksmith'}) %} <li>{{ post.title|e }}</li> {% endfor %} </ul> Vous pouvez \u00e9galement effectuer des recherches sophistiqu\u00e9es bas\u00e9es sur plusieurs taxonomies en utilisant des tableaux/hachages, par exemple : {% for post in taxonomy.findTaxonomy({'tag':['animal','cat'],'author':'jdoe'}) %} Cela trouvera tous les messages avec un tag d\u00e9fini sur animal et cat et author d\u00e9fini sur jdoe . Fondamentalement, cela trouvera sp\u00e9cifiquement le Post 2 . Si vous avez besoin d'une collection qui inclut un terme ou l'autre, ajoutez simplement le param\u00e8tre 'or' apr\u00e8s le tableau, exemple : {% for post in taxonomy.findTaxonomy({'tag':['dog','cat']},'or') %} Cela trouvera tous les messages avec un tag d\u00e9fini sur dog ou cat . Collections bas\u00e9es sur la taxonomie Nous avons couvert cela dans un chapitre pr\u00e9c\u00e9dent, mais il est important de se rappeler que vous pouvez \u00e9galement utiliser des taxonomies dans les en-t\u00eates de page pour filtrer une collection de pages associ\u00e9es \u00e0 une page parent. Si vous avez besoin d'un rappel sur ce sujet, veuillez vous reporter au chapitre sur les en-t\u00eates de collection de taxonomie. Ajout de valeurs de taxonomie personnalis\u00e9es par d\u00e9faut et dans les options Vous pouvez utiliser le format ci-dessous dans les blueprints pour remplacer les taxonomies par Default et/ou Options . Une remarque importante ici est que si vous utilisez cette m\u00e9thode pour remplacer ces deux attributs, vous devez ajouter validate: type: commalist , sinon cela risque de ne pas fonctionner comme vous le souhaitez. taxonomies: fields: header.taxonomy: default: category: ['blog','page'] tag: ['test'] options: category: ['grav'] validate: type: commalist","title":"Taxonomie"},{"location":"themes-base/","text":"Th\u00e8me de base Les th\u00e8mes dans Grav sont assez simples et tr\u00e8s flexibles car ils sont construits avec le puissant moteur Twig Template . Chaque th\u00e8me est cr\u00e9\u00e9 avec une combinaison de fichiers twig (un m\u00e9lange de code PHP et HTML de type brindille), appel\u00e9s mod\u00e8les, et CSS. Nous utilisons g\u00e9n\u00e9ralement l' extension CSS Sass pour g\u00e9n\u00e9rer nos fichiers CSS, mais rien ne vous emp\u00eache d'utiliser Less , ou m\u00eame le CSS standard. Cela d\u00e9pend simplement de vos pr\u00e9f\u00e9rences personnelles. Pages de contenu et mod\u00e8les twig La premi\u00e8re chose \u00e0 comprendre est la relation directe entre les pages dans Grav et les fichiers de mod\u00e8le Twig fournis dans un th\u00e8me. Chaque page que vous cr\u00e9ez fait r\u00e9f\u00e9rence \u00e0 un fichier de mod\u00e8le sp\u00e9cifique, soit par le nom du fichier de page, soit en d\u00e9finissant la variable d'en-t\u00eate de mod\u00e8le pour la page. Pour une maintenance plus simple, nous vous conseillons d'utiliser le nom de la page plut\u00f4t que de le remplacer par la variable d'en-t\u00eate, dans la mesure du possible. Travaillons \u00e0 travers un exemple simple. Si vous avez install\u00e9 le package Grav Base , vous remarquerez que dans le dossier user/pages/01.home , vous avez un fichier appel\u00e9 default.md qui contient le contenu bas\u00e9 sur le d\u00e9marquage pour la page. Le nom de ce fichier, c'est-\u00e0-dire default indique \u00e0 Grav que cette page doit \u00eatre rendue avec le mod\u00e8le Twig appel\u00e9 default.html.twig qui se trouve dans le dossier templates/ du th\u00e8me. Les mod\u00e8les de page doivent \u00eatre en minuscules, comme \"default\", \"blog\", etc. Si vous deviez avoir un fichier de page appel\u00e9 blog.md , Grav essaierait de le rendre avec le mod\u00e8le Twig : <your_theme>/templates/blog.html.twig . Les noms de fichiers dans Grav n'apparaissent pas sur le frontend de Grav. Seuls les noms de dossier le font. Ne vous inqui\u00e9tez pas si tous les articles de votre blog portent le m\u00eame nom de fichier. C'est normal. Organisation du th\u00e8me D\u00e9finition et configuration Chaque th\u00e8me doit avoir un fichier de d\u00e9finition appel\u00e9 blueprints.yaml qui contient des informations sur le th\u00e8me. Il peut \u00e9ventuellement fournir des d\u00e9finitions de formulaire \u00e0 utiliser dans le panneau d'administration pour permettre la modification des options de th\u00e8me. Le th\u00e8me Antimatter contient le fichier blueprints.yaml suivant : name: Antimatter slug: antimatter type: theme version: 1.6.7 description: \"Antimatter is the default theme included with **Grav**\" icon: empire author: name: Team Grav email: devs@getgrav.org url: https://getgrav.org homepage: https://github.com/getgrav/grav-theme-antimatter demo: https://demo.getgrav.org/blog-skeleton keywords: antimatter, theme, core, modern, fast, responsive, html5, css3 bugs: https://github.com/getgrav/grav-theme-antimatter/issues license: MIT dependencies: - { name: grav, version: '>=1.6.0' } form: validation: loose fields: dropdown.enabled: type: toggle label: Dropdown in navbar highlight: 1 default: 1 options: 1: Enabled 0: Disabled validate: type: bool Si vous souhaitez utiliser les options de configuration de th\u00e8me, vous devez fournir les param\u00e8tres par d\u00e9faut dans un fichier appel\u00e9 <your_theme>.yaml . Par example: enabled: true color: blue L'option de configuration color: blue ne fait en fait rien. Il est simplement utilis\u00e9 comme exemple de la mani\u00e8re de remplacer un param\u00e8tre. Pour en savoir plus sur les formulaires disponibles que vous pouvez cr\u00e9er, reportez-vous au chapitre 6. Formulaires Vous devez \u00e9galement fournir une image 300px x 300px de votre th\u00e8me et l'appeler thumbnail.jpg \u00e0 la racine du th\u00e8me. Il appara\u00eetra dans la section th\u00e8me de votre panneau d'administration. Mod\u00e8les Il n'y a pas de r\u00e8gles d\u00e9finies concernant la structure d'un th\u00e8me Grav, sauf qu'il doit y avoir des mod\u00e8les Twig appropri\u00e9s fournis dans le dossier templates/ pour chacun des types de page que vous utilisez dans votre contenu. En raison de ce couplage \u00e9troit entre le contenu de la page et les mod\u00e8les Twig dans un th\u00e8me, il est souvent judicieux de d\u00e9velopper des th\u00e8mes en conjonction avec le contenu avec lequel ils sont destin\u00e9s \u00e0 \u00eatre utilis\u00e9s. Un bon moyen de cr\u00e9er des th\u00e8mes g\u00e9n\u00e9raux consiste \u00e0 prendre en charge les types de mod\u00e8les utilis\u00e9s par les packages Skeleton disponibles sur notre page de t\u00e9l\u00e9chargement . Exemple de prise en charge : default , blog , error , item et modular . De mani\u00e8re g\u00e9n\u00e9rale, la racine du dossier templates/ doit \u00eatre utilis\u00e9e pour h\u00e9berger les principaux mod\u00e8les pris en charge, puis cr\u00e9er un sous-dossier appel\u00e9 partials/ pour contenir des parties ou des morceaux de mod\u00e8les plus petits. Si vous souhaitez prendre en charge les mod\u00e8les modulaire s dans votre th\u00e8me, vous devez \u00e9galement cr\u00e9er un sous-dossier de mod\u00e8les appel\u00e9 modular/ et y stocker vos fichiers de mod\u00e8les Twig modulaires. L'histoire pour les formulaires de support est la m\u00eame. Cr\u00e9ez un autre sous-dossier appel\u00e9 forms/ et stockez-y tous les mod\u00e8les de formulaires personnalis\u00e9s. SCSS / LESS / CSS Encore une fois, il n'y a rien de grav\u00e9 dans le marbre ici, mais une pratique solide consiste \u00e0 avoir un sous-dossier appel\u00e9 scss/ si vous voulez d\u00e9velopper avec Sass, ou less/ si vous pr\u00e9f\u00e9rez Less avec un dossier css/ pour mettre les fichiers CSS statiques , et un dossier css-compiled/ pour tous les fichiers g\u00e9n\u00e9r\u00e9s automatiquement \u00e0 partir de vos compilations Sass ou Less. La fa\u00e7on dont vous organisez vos fichiers ici d\u00e9pend enti\u00e8rement de vous. N'h\u00e9sitez pas \u00e0 suivre notre exemple dans le th\u00e8me antimatter par d\u00e9faut fourni avec le package Grav Base pour quelques id\u00e9es. Nous utilisons la variante scss de Sass qui ressemble plus \u00e0 CSS, et franchement plus naturelle \u00e0 \u00e9crire. Pour installer Sass sur votre ordinateur, suivez simplement les instructions sur le site sass-lang.com . Ex\u00e9cutez le script shell scss simple fourni en tapant ./scss.sh \u00e0 p artir de la racine du th\u00e8me. Ex\u00e9cuter directement la commande scss --source-map --watch scss:css-compiled qui revient au m\u00eame. Par d\u00e9faut, cela compilera vos fichiers scss dans le dossier css-compiled/ . Vous pouvez ensuite r\u00e9f\u00e9rencer le fichier CSS r\u00e9sultant dans votre th\u00e8me. Blueprints Le dossier blueprints/ est utilis\u00e9 pour d\u00e9finir des formulaires d'options et de configuration pour chacun des fichiers mod\u00e8les. Ceux-ci sont utilis\u00e9s par le panneau d'administration et sont facultatifs. Le th\u00e8me est 100% fonctionnel sans ceux-ci, mais ils ne seront pas modifiables via le panneau d'administration, sauf s'ils sont fournis. \u00c9v\u00e9nements th\u00e9matiques et plugins Une autre fonctionnalit\u00e9 puissante qui est purement facultative est la possibilit\u00e9 pour un th\u00e8me d'interagir avec Grav via l'architecture des plugins . En bref, lors de la s\u00e9quence d'initialisation de Grav, il y a plusieurs points dans la s\u00e9quence o\u00f9 vous pouvez \"accrocher\" votre propre morceau de code. Cela peut \u00eatre utile, par exemple, pour d\u00e9finir des raccourcis de chemin suppl\u00e9mentaires dans votre th\u00e8me lors de l'initialisation de Twig, afin que vous puissiez les utiliser dans vos mod\u00e8les Twig. Ces hooks sont mis \u00e0 votre disposition au travers d'un ensemble de fonctions \"vides\" aux noms pr\u00e9d\u00e9finis par le syst\u00e8me Grav, que vous pouvez remplir \u00e0 votre convenance. Le chapitre 4. Plugins contient plus d'informations sur le syst\u00e8me de plugins et les crochets d'\u00e9v\u00e9nement disponibles. Pour utiliser ces crochets dans votre th\u00e8me, cr\u00e9ez simplement un fichier appel\u00e9 mytheme.php et utilisez le format suivant : <?php namespace Grav\\Theme; use Grav\\Common\\Theme; class MyTheme extends Theme { public static function getSubscribedEvents(): array { return [ 'onThemeInitialized' => ['onThemeInitialized', 0] ]; } public function onThemeInitialized(): void { if ($this->isAdmin()) { $this->active = false; return; } $this->enable([ 'onTwigSiteVariables' => ['onTwigSiteVariables', 0] ]); } public function onTwigSiteVariables(): void { $this->grav['assets'] ->addCss('plugin://css/mytheme-core.css') ->addCss('plugin://css/mytheme-custom.css'); $this->grav['assets'] ->add('jquery', 101) ->addJs('theme://js/jquery.myscript.min.js'); } } Comme vous pouvez le constater, pour utiliser les hooks d'\u00e9v\u00e9nement, vous devez d'abord les enregistrer dans une liste avec la fonction getSubratedEvents , puis les d\u00e9finir avec votre propre code. Si vous vous abonnez \u00e0 un \u00e9v\u00e9nement pour l'utiliser, d\u00e9finissez-le \u00e9galement. Sinon, vous obtiendrez une erreur. Autres dossiers Nous vous recommandons de cr\u00e9er des dossiers individuels \u00e0 la racine de votre th\u00e8me pour images/ , fonts/ et js/ afin de contenir vos images de th\u00e8me personnalis\u00e9es, toutes les polices Web personnalis\u00e9es et les fichiers javascript requis. Exemple de th\u00e8me Prenons le th\u00e8me antimatter par d\u00e9faut comme exemple, ci-dessous vous pouvez voir la structure globale de ce th\u00e8me : Dans cet exemple, les css , les css-compiled , les fonts , les images , les js , scss et les templates ont \u00e9t\u00e9 ignor\u00e9s pour le rendre plus lisible. La chose importante \u00e0 noter est la structure globale du th\u00e8me.","title":"Theme de base"},{"location":"trucs-metadonnees/","text":"M\u00e9tadonn\u00e9es des blogs Lorsque vous utilisez Grav comme plate-forme de blogs, vous souhaiterez inclure des m\u00e9tadonn\u00e9es qui aident \u00e0 remplir les descriptions et les images lorsque les gens partagent votre message sur les r\u00e9seaux sociaux tels que Facebook, Twitter, etc. Vous ajouterez ces informations dans la section En-t\u00eate de votre page Grav. Dans la documentation, il y a une r\u00e9f\u00e9rence aux m\u00e9tadonn\u00e9es que vous devez ajouter dans la section d'en-t\u00eate, sous Meta Page Headers . Cependant, si vous \u00eates pass\u00e9 d'une plate-forme telle que WordPress o\u00f9 vous utilisez un plugin pour cela, vous ne r\u00e9aliserez peut-\u00eatre pas l'importance des m\u00e9tadonn\u00e9es. Au d\u00e9but de chacun de vos articles de blog, vous voudrez avoir ce qui suit : 1 | --- 2 | title: Blog Post Title 3 | publish_date: Date the blog post will go live 4 | date: Date the blog post was written 5 | metadata: 6 | 'og:title': Blog Post Title 7 | 'og:type': article 8 | 'og:description': Description of what your blog post is covering. This will be visible when people share your post on social media. 9 | 'og:url': The URL of the blog post 10 | 'og:site_name': The name of the overall site the blog post belongs to. 11 | 'og:locale': The language your blog post is written in 12 | 'og:image': The image you reference here will be visible when shared on social media. 13 | 'twitter:card' : The type of Twitter card that should be used. 14 | 'twitter:site' : Your Twitter handle 15 | 'twitter:title' : Blog Post Title 16 | 'twitter:description' : Description of what your blog post is covering. This will be visible when people share your post on social media. 17 | 'twitter:image' : The image you reference here will be visible when shared on social media. 18 | 'twitter:creator': The twitter handle of the blog post author. 19 | taxonomy: 20 | category: [Blog post category] 21 | tag: [Tag 1, Tag 2, Tag 3, Tag 4] 22 | author: Author's name 23 | --- En savoir plus sur les cartes Twitter En savoir plus sur le protocole Open Graph","title":"M\u00e9tadonn\u00e9es des Blogs"},{"location":"tutoriel-theme/","text":"Tutoriel sur les th\u00e8mes Souvent, la meilleure fa\u00e7on d'apprendre une nouvelle chose est d'utiliser un exemple, puis d'essayer de construire votre propre cr\u00e9ation \u00e0 partir de celui-ci. Nous allons utiliser cette m\u00eame m\u00e9thodologie pour cr\u00e9er un nouveau th\u00e8me Grav. Quark Grav est livr\u00e9 avec un th\u00e8me propre et moderne appel\u00e9 Quark qui utilise le framework Spectre.css . Spectre.css est un framework CSS l\u00e9ger, r\u00e9actif et moderne pour un d\u00e9veloppement plus rapide et extensible. Spectre fournit des styles de base pour la typographie et les \u00e9l\u00e9ments, un syst\u00e8me de mise en page r\u00e9actif bas\u00e9 sur une bo\u00eete flexible, des composants et des utilitaires CSS purs avec un codage des meilleures pratiques et un langage de conception coh\u00e9rent. Cependant, il est souvent pr\u00e9f\u00e9rable de commencer par quelque chose d'encore plus simple. Pure.css Pour les besoins de ce didacticiel, nous allons cr\u00e9er un th\u00e8me qui utilise lepolulaire framework Pure.css d\u00e9velopp\u00e9 par Yahoo! Pure est un framework CSS petit, rapide et r\u00e9actif qui contient les bases pour vous permettre de d\u00e9velopper votre site sans la surcharge de frameworks plus grands tels que Bootstrap ou Foundation . Il contient plusieurs modules qui peuvent \u00eatre utilis\u00e9s ind\u00e9pendamment, mais tous ensemble, le package r\u00e9sultant ne fait que 4,0 Ko minifi\u00e9 et gzipp\u00e9 ! Vous pouvez lire toutes les fonctionnalit\u00e9s que Pure apporte \u00e0 la table sur le site du projet Pure.css . En outre, vous devriez lire l'article du blog sur les mises \u00e0 jour importantes du th\u00e8me qui d\u00e9crit certains changements cl\u00e9s dans les th\u00e8mes Grav pour fournir le meilleur support de plugin \u00e0 l'avenir. \u00c9tape 1 - Installer le plugin DevTools Les versions pr\u00e9c\u00e9dentes de ce didacticiel n\u00e9cessitaient la cr\u00e9ation d'un th\u00e8me de base par d\u00e9faut. Tout ce processus peut \u00eatre ignor\u00e9 gr\u00e2ce \u00e0 notre nouveau plugin DevTools . La premi\u00e8re \u00e9tape de la cr\u00e9ation d'un nouveau th\u00e8me consiste \u00e0 installer le plugin DevTools . Ceci peut \u00eatre fait de deux fa\u00e7ons. Installer via CLI GPM Naviguez dans la ligne de commande jusqu'\u00e0 la racine de votre installation Grav. $ bin/gpm install devtools Installer via le plugin d'administration Une fois connect\u00e9, acc\u00e9dez simplement \u00e0 la section Plugin s depuis la barre lat\u00e9rale. Cliquez sur le bouton Add en haut \u00e0 droite. Recherchez DevTools dans la liste et cliquez sur le bouton Install . \u00c9tape 2 - Cr\u00e9er un th\u00e8me de base Pour cette prochaine \u00e9tape, vous devez vraiment \u00eatre dans la ligne de commande car les DevTools fournissent quelques commandes CLI pour faciliter le processus de cr\u00e9ation d'un nouveau th\u00e8me ! Depuis la racine de votre installation Grav saisissez la commande suivante : $ bin/plugin devtools new-theme Ce processus vous posera quelques questions n\u00e9cessaires \u00e0 la cr\u00e9ation du nouveau th\u00e8me : Nous allons utiliser du blanc pur pour cr\u00e9er un nouveau th\u00e8me, mais vous pouvez cr\u00e9er un mod\u00e8le de style d'h\u00e9ritage simple qui h\u00e9rite d'un autre th\u00e8me de base $ | bin/plugin devtools new-theme | | Enter Theme Name: MyTheme | Enter Theme Description: My New Theme | Enter Developer Name: Acme Corp | Enter Developer Email: contact@acme.co | Please choose a template type | [pure-blank ] Basic Theme using Pure.css | [inheritance] Inherit from another theme | [copy ] Copy another theme | > pure-blank | | SUCCESS theme mytheme -> Created Successfully | | Path: /www/user/themes/my-theme La commande DevTools vous indique o\u00f9 ce nouveau mod\u00e8le a \u00e9t\u00e9 cr\u00e9\u00e9. Ce mod\u00e8le cr\u00e9\u00e9 est enti\u00e8rement fonctionnel mais aussi tr\u00e8s simple. Vous voudrez le modifier en fonction de vos besoins. Afin de voir votre nouveau th\u00e8me en action, vous devrez changer le th\u00e8me par d\u00e9faut de quar k \u00e0 my-theme , et donc, \u00e9ditez votre user/config/system.yaml et changez-le : 1 | ... 2 | pages: 3 | theme: my-theme 4 | ... Rechargez votre site dans votre navigateur et vous devriez voir que le th\u00e8me a maintenant chang\u00e9. \u00c9tape 3 - Bases du th\u00e8me Maintenant que nous avons cr\u00e9\u00e9 un nouveau th\u00e8me de base qui peut \u00eatre modifi\u00e9 et d\u00e9velopp\u00e9, d\u00e9composons-le et regardons ce qui constitue un th\u00e8me. Si vous regardez dans le dossier user/themes/my-theme vous verrez : . \u251c\u2500\u2500 CHANGELOG.md \u251c\u2500\u2500 LICENSE \u251c\u2500\u2500 README.md \u251c\u2500\u2500 blueprints.yaml \u251c\u2500\u2500 css \u2502 \u2514\u2500\u2500 custom.css \u251c\u2500\u2500 fonts \u251c\u2500\u2500 images \u2502 \u2514\u2500\u2500 logo.png \u251c\u2500\u2500 js \u251c\u2500\u2500 my-theme.php \u251c\u2500\u2500 my-theme.yaml \u251c\u2500\u2500 screenshot.jpg \u251c\u2500\u2500 templates \u2502 \u251c\u2500\u2500 default.html.twig \u2502 \u251c\u2500\u2500 error.html.twig \u2502 \u2514\u2500\u2500 partials \u2502 \u251c\u2500\u2500 base.html.twig \u2502 \u2514\u2500\u2500 navigation.html.twig \u2514\u2500\u2500 thumbnail.jpg Ceci est un exemple de structure mais certaines choses sont requises : \u00c9l\u00e9ments requis pour fonctionner Ces \u00e9l\u00e9ments sont essentiels et votre th\u00e8me ne fonctionnera pas de mani\u00e8re fiable \u00e0 moins que vous ne les incluiez dans votre th\u00e8me. blueprints.yaml - Le fichier de configuration utilis\u00e9 par Grav pour obtenir des informations sur votre th\u00e8me. Il peut \u00e9galement d\u00e9finir un formulaire que l'administrateur peut afficher lors de l'affichage des d\u00e9tails du th\u00e8me. Ce formulaire vous permettra d'enregistrer les param\u00e8tres du th\u00e8me. Ce fichier est document\u00e9 dans le chapitre Formulaires. my-theme.php - Ce fichier sera nomm\u00e9 en fonction de votre th\u00e8me, mais peut \u00eatre utilis\u00e9 pour h\u00e9berger toute logique dont votre th\u00e8me a besoin. Vous pouvez utiliser n'importe quel hook d'\u00e9v\u00e9nement de plugin sauf onPluginsInitialized( ), cependant il existe un hook onThemeInitialized() sp\u00e9cifique au th\u00e8me pour les th\u00e8mes que vous pouvez utiliser \u00e0 la place. my-theme.yaml - Il s'agit de la configuration utilis\u00e9e par le plugin pour d\u00e9finir les options que le th\u00e8me pourrait utiliser. templates/ - Il s'agit d'un dossier qui contient les mod\u00e8les Twig pour rendre vos pages. \u00c9l\u00e9ments requis pour Release Ces \u00e9l\u00e9ments sont n\u00e9cessaires si vous souhaitez publier votre th\u00e8me via GPM. CHANGELOG.md - Un fichier qui suit le Format Grav Changelog pour montrer les changements dans les versions. LICENCE - un fichier de licence, devrait probablement \u00eatre MIT sauf si vous avez un besoin sp\u00e9cifique pour autre chose. README.md - Un 'Readme' qui devrait contenir toute documentation pour le th\u00e8me. Comment l'installer, le configurer et l'utiliser. screenshot.jpg - Capture d'\u00e9cran 1009px x 1009px du th\u00e8me. thumbnail.jpg - Capture d'\u00e9cran 300px x 300px du th\u00e8me. \u00c9tape 4 - Mod\u00e8le de base Comme vous le savez depuis le chapitre pr\u00e9c\u00e9dent , chaque \u00e9l\u00e9ment de contenu dans Grav a un nom de fichier particulier, par ex. default.md , qui demande \u00e0 Grav de rechercher un mod\u00e8le de rendu Twig appel\u00e9 default.html.twig . Il est possible de mettre tout ce dont vous avez besoin pour afficher une page dans ce seul fichier, et cela fonctionnerait bien. Cependant, il existe une meilleure solution. En utilisant la balise Twig Extends , vous pouvez d\u00e9finir une disposition de base avec des blocs que vous d\u00e9finissez. Cela permet \u00e0 n'importe quel mod\u00e8le twig d'\u00e9tendre le mod\u00e8le de base et fournit des d\u00e9finitions pour tout bloc d\u00e9fini dans la base. Regardez donc le fichier templates/default.html.twig et examinez son contenu : 1 | {% extends 'partials/base.html.twig' %} 2 | 3 | {% block content %} 4 | {{ page.content|raw }} 5 | {% endblock %} Il y a vraiment deux choses qui se passent ici. Tout d'abord, le mod\u00e8le \u00e9tend un mod\u00e8le situ\u00e9 dans partials/base.html.twig . Vous n'avez pas besoin d'inclure templates/ dans les templates Twig car Twig recherche d\u00e9j\u00e0 dans templates/ comme niveau racine pour n'importe quel template. Deuxi\u00e8mement, le content du bloc est remplac\u00e9 par le mod\u00e8le de base et le contenu de la page est g\u00e9n\u00e9r\u00e9 \u00e0 sa place. Pour plus de coh\u00e9rence, c'est une bonne id\u00e9e d'utiliser le dossier templates/partials pour contenir les mod\u00e8les Twig qui repr\u00e9sentent soit de petits morceaux de HTML, soit qui sont partag\u00e9s. Nous utilisons \u00e9galement des templates/modular pour les mod\u00e8les modulaires et des templates/forms pour tous les formulaires. Vous pouvez cr\u00e9er tous les sous-dossiers que vous souhaitez si vous pr\u00e9f\u00e9rez organiser vos mod\u00e8les diff\u00e9remment. Si vous regardez les templates/partials/base.html.twig , vous verrez le corps de la mise en page HTML : 1 | {% set theme_config = attribute(config.themes, config.system.pages.theme) %} 2 | <!DOCTYPE html> 3 | <html lang=\"{{ (grav.language.getActive ?: theme_config.default_lang)|e }}\"> 4 | <head> 5 | {% block head %} 6 | <meta charset=\"utf-8\" /> 7 | <title>{% if header.title %}{{ header.title|e }} | {% endif %}{{ site.title|e }}</title> 8 | 9 | <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\"> 10 | <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\"> 11 | {% include 'partials/metadata.html.twig' %} 12 | 13 | <link rel=\"icon\" type=\"image/png\" href=\"{{ url('theme://images/logo.png')|e }}\" /> 14 | <link rel=\"canonical\" href=\"{{ page.url(true, true)|e }}\" /> 15 | {% endblock head %} 16 | 17 | {% block stylesheets %} 18 | {% do assets.addCss('http://yui.yahooapis.com/pure/0.6.0/pure-min.css', 100) %} 19 | {% do assets.addCss('https://maxcdn.bootstrapcdn.com/font-awesome/4.5.0/css/font-awesome.min.css', 99) %} 20 | {% do assets.addCss('theme://css/custom.css', 98) %} 21 | {% endblock %} 22 | 23 | {% block javascripts %} 24 | {% do assets.addJs('jquery', 100) %} 25 | {% endblock %} 26 | 27 | {% block assets deferred %} 28 | {{ assets.css()|raw }} 29 | {{ assets.js()|raw }} 30 | {% endblock %} 31 | 32 | </head> 33 | <body id=\"top\" class=\"{{ page.header.body_classes|e }}\"> 34 | 35 | {% block header %} 36 | <div class=\"header\"> 37 | <div class=\"wrapper padding\"> 38 | <a class=\"logo left\" href=\"{{ (base_url == '' ? '/' : base_url)|e }}\"> 39 | <i class=\"fa fa-rebel\"></i> 40 | {{ config.site.title|e }} 41 | </a> 42 | {% block header_navigation %} 43 | <nav class=\"main-nav\"> 44 | {% include 'partials/navigation.html.twig' %} 45 | </nav> 46 | {% endblock %} 47 | </div> 48 | </div> 49 | {% endblock %} 50 | 51 | {% block body %} 52 | <section id=\"body\"> 53 | <div class=\"wrapper padding\"> 54 | {% block content %}{% endblock %} 55 | </div> 56 | </section> 57 | {% endblock %} 58 | 59 | {% block footer %} 60 | <div class=\"footer text-center\"> 61 | <div class=\"wrapper padding\"> 62 | <p><a href=\"https://getgrav.org\">Grav</a> was <i class=\"fa fa-code\"></i> with <i class=\"fa fa-heart\"></i> by <a href=\"http://www.rockettheme.com\">RocketTheme</a>.</p> 63 | </div> 64 | </div> 65 | {% endblock %} 66 | 67 | {% block bottom %} 68 | {{ assets.js('bottom')|raw }} 69 | {% endblock %} 70 | 71 |</body> ASTUCE : si la variable peut \u00eatre rendue en toute s\u00e9curit\u00e9 et contient du code HTML, utilisez toujours le filtre |raw pour que le mod\u00e8le fonctionne avec la fonction autoescape d'\u00e9chapement automatique activ\u00e9e. Il est tr\u00e8s important d'activer le param\u00e8tre d'\u00e9chappement automatique autoescape \u00e0 partir de votre Configuration Syst\u00e8me ou de ne pas oublier d'\u00e9chapper chaque variable dans les fichiers de mod\u00e8le pour prot\u00e9ger votre site contre les attaques XSS . \u00c9tape 5 - D\u00e9composition Veuillez relire le code dans le fichier base.html.twig pour essayer de comprendre ce qui se passe. Il y a plusieurs \u00e9l\u00e9ments cl\u00e9s \u00e0 noter : Une variable theme_config est d\u00e9finie avec la configuration du th\u00e8me. Parce que Twig ne fonctionne pas bien avec les tirets, pour r\u00e9cup\u00e9rer les variables avec des tirets (par exemple config.themes.my-theme ), nous utilisons la fonction attribute() Twig pour r\u00e9cup\u00e9rer dynamiquement les donn\u00e9es my-theme de config.themes . L'\u00e9l\u00e9ment <html lang=... est d\u00e9fini en fonction de la langue active de Grav s'il est activ\u00e9, sinon il utilise le default_lang tel que d\u00e9fini dans le theme_config . La syntaxe {% block head %}{% endblock head %} d\u00e9finit une zone dans le mod\u00e8le Twig de base. Notez que l'utilisation de head dans la balise {% endblock head %} n'est pas obligatoire, mais est utilis\u00e9e ici pour des raisons de lisibilit\u00e9. Dans ce bloc, nous pla\u00e7ons des \u00e9l\u00e9ments qui se trouvent g\u00e9n\u00e9ralement dans la balise HTML <head> . La balise <title> est d\u00e9finie dynamiquement en fonction de la variable title de la page telle qu'elle est d\u00e9finie dans l'en-t\u00eate de la page. header.title est une m\u00e9thode de raccourci mais \u00e9quivaut \u00e0 page.header.title . Une fois que quelques balises m\u00e9ta standard sont d\u00e9finies, il existe une r\u00e9f\u00e9rence pour inclure partials/metadata.html.twig . Ce fichier se trouve dans le dossier systems/templates/partials et contient une boucle qui parcourt les m\u00e9tadonn\u00e9es de la page. Il s'agit en fait d'une fusion des m\u00e9tadonn\u00e9es de site.yaml et de tous les remplacements sp\u00e9cifiques \u00e0 la page. L'entr\u00e9e <link rel=\"icon\"... est d\u00e9finie en pointant vers une image sp\u00e9cifique au th\u00e8me. Dans ce cas, il se trouve dans le r\u00e9pertoire du th\u00e8me sous images/logo.png . La syntaxe pour cela est {{ url('theme://images/logo.png') }} . L'entr\u00e9e <link rel=\"canonical\"... d\u00e9finit une URL canonique pour la page qui est toujours d\u00e9finie sur l'URL compl\u00e8te de la page via {{ page.url(true, true) }} . Nous d\u00e9finissons maintenant un bloc appel\u00e9 feuilles de style stylesheets , et ici nous utilisons le Gestionnaire d'Actifs pour ajouter plusieurs actifs. Le premier charge le framework Pure.css. Le second charge FontAwesome pour fournir des ic\u00f4nes utiles. La derni\u00e8re entr\u00e9e pointe vers un fichier custom.css dans le dossier css/ du th\u00e8me. Voici quelques styles utiles pour vous aider \u00e0 d\u00e9marrer, mais vous pouvez en ajouter d'autres ici. Vous pouvez \u00e9galement ajouter d'autres entr\u00e9es de fichier CSS si n\u00e9cessaire. L'appel {{ assets.css()|raw }} est ce qui d\u00e9clenche le mod\u00e8le pour afficher toutes les balises de lien CSS. Le bloc javascripts , comme le bloc des feuilles de style 'stylesheets`est un bon endroit pour mettre vos fichiers JavaScript. Dans cet exemple, nous ajoutons uniquement la biblioth\u00e8que 'jquery' qui est d\u00e9j\u00e0 fournie avec Grav, vous n'avez donc pas besoin de lui fournir un chemin. Le {{ assets.js()|raw }} affichera toutes les balises JavaScript. La balise <body> a un attribut de classe qui affichera tout ce que vous d\u00e9finissez dans la variable body_classes du frontmatter de la page. Le bloc d'en-t\u00eate header contient quelques \u00e9l\u00e9ments qui g\u00e9n\u00e8rent l'en-t\u00eate HTML de la page. Une chose importante \u00e0 noter est que le logo est li\u00e9 \u00e0 la base_url avec la logique : {{ base_url == '' ? '/' : base_url }}. Cela permet de s'assurer que s'il n'y a pas de sous-r\u00e9pertoire, le lien est juste /. Le titre du site est g\u00e9n\u00e9r\u00e9 en tant que logo dans cet exemple de th\u00e8me avec {{ config.site.title }} mais vous pouvez simplement le remplacer par une balise <img> vers un logo si vous le souhaitez. La balise <nav> contient en fait un lien vers partials/navigation.html.twig qui contient la logique pour boucler sur toutes les pages visibles et les afficher sous forme de menu. Par d\u00e9faut, il prend en charge les menus d\u00e9roulants pour les pages imbriqu\u00e9es, mais cela peut \u00eatre d\u00e9sactiv\u00e9 via la configuration du th\u00e8me. Jetez un \u0153il \u00e0 ce fichier de navigation pour avoir une id\u00e9e de la fa\u00e7on dont le menu est g\u00e9n\u00e9r\u00e9. L'utilisation de {% block content %}{% endblock %} fournit un espace r\u00e9serv\u00e9 qui nous permet de fournir du contenu \u00e0 partir d'un mod\u00e8le qui \u00e9tend celui-ci. N'oubliez pas que nous avons remplac\u00e9 cela dans default.html.twig pour afficher le contenu de la page. Le bloc de pied de page contient un pied de page simple, vous pouvez facilement le modifier selon vos besoins. Semblable au bloc de contenu, le {% block bottom %}{% endblock %} est con\u00e7u comme un espace r\u00e9serv\u00e9 pour les mod\u00e8les afin d'ajouter une initialisation JavaScript personnalis\u00e9e ou des codes analytiques. Dans cet exemple, nous produisons tout code JavaScript ajout\u00e9 au groupe d'actifs bottom . En savoir plus \u00e0 ce sujet dans la documentation d' Asset Manager . \u00c9tape 6 - Th\u00e8me CSS Vous avez peut-\u00eatre remarqu\u00e9 que dans le fichier partials/base.html.twig nous avons fait r\u00e9f\u00e9rence \u00e0 un CSS de th\u00e8me personnalis\u00e9 via Asset Manager : do assets.add('theme://css/custom.css', 98) . Ce fichier h\u00e9bergera tout CSS personnalis\u00e9 dont nous avons besoin pour combler les lacunes non fournies par le framework Pure.css. Comme Pure est un cadre tr\u00e8s minimal, il fournit l'essentiel mais presque pas de style. Dans votre dossier user/themes/my-theme/css , visualisez le custom.css : 1 | /* Core Styles */ 2 |* { 3 | -webkit-box-sizing: border-box; 4 | -moz-box-sizing: border-box; 5 | box-sizing: border-box; 6 | } 7 | 8 | body { 9 | font-size: 1rem; 10 | line-height: 1.7; 11 | color: #606d6e; 12 | } 13 | 14 | h1, 15 | h2, 16 | h3, 17 | h4, 18 | h5, 19 | h6 { 20 | color: #454B4D; 21 | } 22 | 23 | a { 24 | color: #1F8CD6; 25 | text-decoration: none; 26 | } 27 | 28 | a:hover { 29 | color: #175E91; 30 | } 31 | 32 | pre { 33 | background: #F0F0F0; 34 | margin: 1rem 0; 35 | border-radius: 2px; 36 | } 37 | 38 | blockquote { 39 | border-left: 10px solid #eee; 40 | margin: 0; 41 | padding: 0 2rem; 42 | } 43 | 44 | /* Utility Classes */ 45 | .wrapper { 46 | margin: 0 3rem; 47 | } 48 | 49 | .padding { 50 | padding: 3rem 1rem; 51 | } 52 | 53 | .left { 54 | float: left; 55 | } 56 | 57 | .right { 58 | float: right 59 | } 60 | 61 | .text-center { 62 | text-align: center; 63 | } 54 | 65 | .text-right { 66 | text-align: right; 67 | } 68 | 69 | .text-left { 70 | text-align: left; 71 | } 72 | 73 | /* Content Styling */ 74 | .header .padding { 75 | padding: 1rem 0; 76 | } 77 | 78 | .header { 79 | background-color: #1F8DD6; 80 | color: #eee; 81 | } 82 | 83 | .header a { 84 | color: #fff; 85 | } 86 | 87 | .header .logo { 88 | font-size: 1.7rem; 89 | text-transform: uppercase; 90 | } 91 | 92 | .footer { 93 | background-color: #eee; 94 | } 95 | 96 | /* Menu Settings */ 97 | .main-nav ul { 98 | text-align: center; 99 | letter-spacing: -1em; 100 | margin: 0; 101 | padding: 0; 102 | } 103 | 104 | .main-nav ul li { 105 | display: inline-block; 106 | letter-spacing: normal; 107 | } 108 | 109 | .main-nav ul li a { 110 | position: relative; 111 | display: block; 112 | line-height: 45px; 113 | color: #fff; 114 | padding: 0 20px; 115 | white-space: nowrap; 116 | } 117 | 118 | .main-nav > ul > li > a { 119 | border-radius: 2px; 120 | } 121 | 122 | /*Active dropdown nav item */ 123 | main-nav ul li:hover > a { 124 | background-color: #175E91; 125 | } 126 | 127 | /* Selected Dropdown nav item */ 128 | .main-nav ul li.selected > a { 129 | background-color: #fff; 130 | color: #175E91; 131 | } 132 | 133 | /* Dropdown CSS */ 134 | .main-nav ul li {position: relative;} 135 | 136 | .main-nav ul li ul { 137 | position: absolute; 138 | background-color: #1F8DD6; 139 | min-width: 100%; 140 | text-align: left; 141 | z-index: 999; 142 | display: none; 143 | } 144 | 145 | .main-nav ul li ul li { 146 | display: block; 147 | } 148 | 149 | /* Dropdown CSS */ 150 | .main-nav ul li ul ul { 151 | left: 100%; 152 | top: 0; 153 | } 154 | 155 | /* Active on Hover */ 156 | .main-nav li:hover > ul { 157 | display: block; 158 | } 159 | 160 | /* Child Indicator */ 161 | .main-nav .has-children > a { 162 | padding-right: 30px; 163 | } 164 | 165 | .main-nav .has-children > a:after { 166 | font-family: FontAwesome; 167 | content: '\\f107'; 168 | position: absolute; 169 | display: inline-block; 170 | right: 8px; 171 | top: 0; 172 | } 173 | 174 | .main-nav .has-children .has-children > a:after { 175 | content: '\\f105'; 176 | } C'est un truc CSS assez standard et d\u00e9finit des marges, des polices, des couleurs et des classes utilitaires de base. Il existe un style de contenu de base et un style plus \u00e9tendu requis pour afficher le menu d\u00e9roulant. N'h\u00e9sitez pas \u00e0 modifier ce fichier selon vos besoins, ou m\u00eame \u00e0 ajouter de nouveaux fichiers CSS (assurez-vous simplement d'ajouter une r\u00e9f\u00e9rence dans le bloc head en suivant l'exemple pour custom.css ). \u00c9tape 7 - Test Pour voir votre th\u00e8me en action, ouvrez votre navigateur et pointez-le vers votre site Grav. Vous devriez voir quelque chose comme ceci : F\u00e9licitations, vous avez cr\u00e9\u00e9 votre premier th\u00e8me !","title":"Tutoriel"},{"location":"tutoriel/","text":"Tutoriel de base En supposant que vous avez install\u00e9 Grav avec succ\u00e8s avec les instructions r\u00e9pertori\u00e9es dans le chapitre pr\u00e9c\u00e9dent, nous pouvons continuer et jouer un peu avec Grav pour vous mettre plus \u00e0 l'aise. Parce que Grav ne n\u00e9cessite pas de base de donn\u00e9es, il est assez facile de travailler avec, sans avoir \u00e0 se soucier de causer des probl\u00e8mes entre votre installation Grav et toute autre source de donn\u00e9es importante. Si quelque chose ne va pas, vous pouvez g\u00e9n\u00e9ralement le r\u00e9cup\u00e9rer tr\u00e8s facilement. Contenu de base Tout d'abord, familiarisons-nous avec l'endroit o\u00f9 Grav stocke le contenu. Nous reviendrons plus en d\u00e9tail dans un prochain chapitre , mais pour le moment, vous devez savoir que tout notre contenu utilisateur est stock\u00e9 dans le dossier user/pages/ de votre installation Grav. Actuellement, il y a deux dossiers dans le dossier pages, le premier s'appelle 01.home et le second 02.typography . La partie 01. du dossier est facultative mais fournit quelques \u00e9l\u00e9ments qui peuvent \u00eatre utiles. Tout d'abord, il vous permet de d\u00e9finir express\u00e9ment l'ordre de vos pages. Par exemple, 01 viendra avant 02 , mais 00 viendra avant 01 . L'autre chose que fait la partie num\u00e9rique du nom du dossier est d'informer explicitement Grav que cette page doit \u00eatre visible dans le menu. Il est important de noter que la partie num\u00e9rique jusqu'au . seront supprim\u00e9s des URL. Configuration de la page d'accueil Il existe une option dans le fichier user/config/system.yaml qui d\u00e9finit l'emplacement de la page d'accueil , en d'autres termes, o\u00f9 Grav pointe lorsque vous r\u00e9f\u00e9rencez la racine de votre site : http://votresite.com . Si vous examinez ce fichier de configuration dans votre installation, vous verrez qu'il pointe d\u00e9j\u00e0 vers l'alias de /home . Nous pouvons le laisser comme \u00e7a dans cet exemple. \u00c9dition de pages Les pages dans Grav sont compos\u00e9es dans la syntaxe Markdown . Markdown est une syntaxe de formatage de texte brut qu'un ordinateur peut facilement analyser et convertir en HTML. Il utilise des symboles de texte de base pour indiquer la pr\u00e9sentation (par exemple, gras , italique , titres, listes, etc.), ce qui facilite l'\u00e9criture sans avoir besoin de conna\u00eetre les complexit\u00e9s du HTML. Les avantages de Markdown incluent un taux d'erreur plus faible, la lisibilit\u00e9, la facilit\u00e9 d'apprentissage et d'utilisation, etc. Vous pouvez lire une description d\u00e9taill\u00e9e de la syntaxe disponible avec des exemples dans la documentation, mais pour l'instant, suivez-nous. Ouvrez la page d'accueil dans votre \u00e9diteur de texte. Le fichier qui contr\u00f4le la page d'accueil se trouve dans le dossier user/pages/01.home/ et s'appelle default.md . Tout le contenu que vous cr\u00e9ez sera cr\u00e9\u00e9 dans le dossier user/pages/ de votre installation Grav. Lorsque vous modifiez la page dans un \u00e9diteur de texte, le contenu ressemblera \u00e0 ceci : 1 | --- 2 | titre : Accueil 3 | body_classes : titre-centre titre-h1h2 4 | --- 5 | # Dites bonjour \u00e0 Grav ! 6 | ## installation r\u00e9ussie... 7 | 8 | Toutes nos f\u00e9licitations! Vous avez install\u00e9 le | **Base Grav Package**qui fournit une **page simple** et le | th\u00e8me **Quark** par d\u00e9faut pour vous aider \u00e0 d\u00e9marrer. 9 | 10 | !! Si vous voyez une **erreur 404** lorsque vous cliquez sur | `Typography` dans le menu, veuillez vous reporter au | [guide de d\u00e9pannage] (https://learn.getgrav.org/troubleshooting/page-not-found). D\u00e9composons cela un peu pour que vous puissiez voir \u00e0 quel point il est facile d'\u00e9crire dans Markdown. Les \u00e9l\u00e9ments entre les indicateurs --- sont les en-t\u00eates de page , et ceux-ci sont \u00e9crits dans un format simple appel\u00e9 YAML Ce bloc de configuration qui se trouve dans le fichier .md est commun\u00e9ment appel\u00e9 YAML Front Matter . 1 | title: Home 2 | body_classes: title-center title-h1h2 Ce bloc d\u00e9finit la balise de titre HTML de la page (le texte que vous voyez dans l'onglet du navigateur). Vous pouvez \u00e9galement y acc\u00e9der depuis vos th\u00e8mes via l'attribut page.title . Il existe quelques en-t\u00eates standard qui vous permettent de configurer une vari\u00e9t\u00e9 d'options pour cette page. Un autre exemple est le menu : Something qui vous permet de remplacer le texte utilis\u00e9 pour afficher le nom de la page dans un menu. Par d\u00e9faut, Grav utilisera le titre pour la valeur du menu. 1 | # Dites bonjour \u00e0 Grav ! 2 | ## installation r\u00e9ussie... La syntaxe # ou hashes dans Markdown indique un titre. Un seul # avec un espace puis du texte est converti en un en-t\u00eate <h1> en HTML. ## ou un double hash serait converti en une balise <h2> . Bien s\u00fbr, cela va jusqu'\u00e0 la balise HTML valide <h6> qui, bien s\u00fbr, serait compos\u00e9e de six hashes : ###### Mon en-t\u00eate de niveau H6 . 1 | F\u00e9licitations! Vous avez install\u00e9 le **Base Grav Package** qui fournit une 2 | **page simple** et le th\u00e8me **Quark** par d\u00e9faut pour vous aider \u00e0 d\u00e9marrer. Il s'agit d'un simple paragraphe qui aurait \u00e9t\u00e9 envelopp\u00e9 dans des balises <p> normales lors de sa conversion en HTML. Les marqueurs ** indiquent un texte en gras ou <strong> , anciennement <b> , en HTML. Le texte en italique est indiqu\u00e9 en enveloppant le texte dans des marqueurs _ . 1 | !! Si vous voyez une **erreur 404** lorsque vous cliquez sur `Typography` dans le menu, 2 | veuillez vous reporter au [guide de d\u00e9pannage](https://learn.getgrav.org/troubleshooting/page-not-found) Cette section utilise une fonctionnalit\u00e9 de markdown personnalis\u00e9e fournie par le plugin Markdown-notices inclus. Cela vous permet de cr\u00e9er des notices simples en pr\u00e9fixant un paragraphe de texte avec un nombre de symbole ! (point d'exclamation), \u00e0 partir de ! jusqu'\u00e0 !!!! . Cet aper\u00e7u devrait vous fournir quelques conseils cl\u00e9s pour \u00e9crire en Markdown, mais vous devriez consulter nos explications plus d\u00e9taill\u00e9es pour obtenir une compr\u00e9hension approfondie. Assurez-vous d'enregistrer vos fichiers .md en tant que fichiers UTF8 . Cela garantira qu'ils fonctionnent avec des caract\u00e8res sp\u00e9ciaux sp\u00e9cifiques \u00e0 la langue. Ajouter une nouvelle page Cr\u00e9er une nouvelle page est une affaire simple dans Grav . Suivez simplement ces \u00e9tapes : Acc\u00e9dez \u00e0 votre dossier de pages : user/pages/ et cr\u00e9ez un nouveau dossier. Dans cet exemple, nous utiliserons un ordre par d\u00e9faut explicite et appellerons le dossier 03.mypage . Lancez votre \u00e9diteur de texte, cr\u00e9ez un nouveau fichier et collez-y l'exemple de code suivant : 1 | --- 2 | titre : Ma nouvelle page 3 | --- 4 | # Ma nouvelle page ! 5 | 6 | Ceci est le corps de **ma nouvelle page** et je peux 7 | facilement utiliser la syntaxe _Markdown_ ici. Enregistrez ce fichier dans le dossier user/pages/03.mypage/ sous default.md . Cela indiquera \u00e0 Grav d'afficher la page en utilisant le mod\u00e8le par d\u00e9faut dans le th\u00e8me actuel : user/themes/quark/templates/default.html.twig . C'est \u00e7a! Rechargez votre navigateur pour voir votre nouvelle page dans le menu en haut. La page appara\u00eetra automatiquement dans le menu apr\u00e8s l'\u00e9l\u00e9ment de menu \"Typography\" . Si vous souhaitez modifier le nom qui s'affiche dans le menu, ajoutez : menu : My Page entre les tirets dans le frontmatter de la page. F\u00e9licitations , vous avez maintenant cr\u00e9\u00e9 avec succ\u00e8s une nouvelle page dans Grav. Vous pouvez faire beaucoup plus avec Grav, alors continuez \u00e0 lire pour en savoir plus sur les capacit\u00e9s avanc\u00e9es et les fonctionnalit\u00e9s approfondies. Si vous rencontrez des probl\u00e8mes pour acc\u00e9der \u00e0 cette nouvelle page, il vous manque un fichier .htaccess (serveur Web Apache uniquement) ou vous devrez peut-\u00eatre modifier la commande RewriteBase dans le fichier .htaccess . Veuillez consulter le chapitre D\u00e9pannage pour plus d'informations.","title":"Tutoriel de base"},{"location":"types-contenu/","text":"Types de contenu Type de contenu par d\u00e9faut Comme c'est g\u00e9n\u00e9ralement le cas avec la plupart des plates-formes Web, le type de contenu par d\u00e9faut de Grav est HTML . Cela signifie que lorsqu'un utilisateur demande un itin\u00e9raire dans son navigateur, par exemple : /blog/new-macbook-pros-soon , parce qu'il n'y a pas d'extension de fichier, Grav suppose que vous demandez une page HTML. Si votre page a \u00e9t\u00e9 d\u00e9finie par une page avec le nom de fichier blog-item.md , Grav recherche \u00e0 son tour un mod\u00e8le Twig appel\u00e9 blog-item.html.twig pour afficher la page. Si l'utilisateur demandait explicitement le type via /blog/new-macbook-pros-soon.html , Grav chercherait toujours ce m\u00eame fichier blog-item.html.twig . Autres types de contenu Grav est une plate-forme flexible cependant, et peut r\u00e9ellement servir n'importe quel type de contenu que vous pourriez souhaiter ( xml, rss, json, pdf , etc.), il vous suffit de fournir un moyen de le rendre de mani\u00e8re appropri\u00e9e. Si vous deviez demander une route avec une extension .xml , par exemple : /blog.xml , au lieu d'utiliser le mod\u00e8le blog.html.twig habituel pour le rendre, Grav recherche un mod\u00e8le appel\u00e9 blog.xml.twig . Vous devez vous assurer que le mod\u00e8le g\u00e9n\u00e8re la structure XML appropri\u00e9e. Exemple avec des fichiers JSON Un moyen particuli\u00e8rement courant d'acc\u00e9der aux fichiers consiste \u00e0 utiliser une extension .json . Cela permet de demander des donn\u00e9es via des fichiers JSON qui sont facilement trait\u00e9s par JavaScript. Supposons que vous vouliez le frontmatter et le contenu d'une page particuli\u00e8re au format JSON, et que cette page a \u00e9t\u00e9 d\u00e9finie dans un fichier appel\u00e9 item.md . Tout ce que vous auriez \u00e0 faire est de fournir un mod\u00e8le Twig appel\u00e9 item.json.twig . Vous pouvez le mettre dans le dossier templates/ de votre th\u00e8me, ou si vous utilisiez un plugin pour charger des mod\u00e8les personnalis\u00e9s, vous pouvez l'ajouter ici. Le contenu de ce fichier item.json.twig pourrait ressembler \u00e0 : {% set payload = {frontmatter: page.header, content: page.content} %} {{ payload|json_encode|raw }} Tout ce que fait ce fichier Twig est de cr\u00e9er un tableau avec l'en-t\u00eate de page comme frontmatter et le contenu de la page, puis utilise le filtre Twig json_encode pour l'encoder. Lorsqu'un utilisateur demande l'url /blog/new-macbook-pros-soon.json , ce nouveau fichier Twig serait utilis\u00e9 et la sortie envoy\u00e9e serait au format : { \"frontmatter\":{ \"title\":\"New Macbook Pros Arriving Soon\", \"date\": \"14:23 08/01/2016\", \"taxonomy\":{ \"category\":[ \"blog\" ], \"tag\":[ \"apple\", \"mbpr\", \"laptops\" ] } }, \"content\":\"<p>this has an -&gt; arrow here and <strong>bold</strong> here</p>\\n<blockquote> \\n<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec ultricies tristique nulla et mattis. Phasellus id massa eget nisl congue blandit sit amet id ligula. Praesent et nulla eu augue tempus sagittis. Mauris faucibus nibh et nibh cursus in vestibulum sapien egestas. Curabitur ut lectus tortor. Sed ipsum eros, egestas ut eleifend non, elementum vitae eros.\\n-- <cite> Ronald Wade</cite> </p>\\n</blockquote>\\n<p>Mauris felis diam, pellentesque vel lacinia ac, dictum a nunc. Mauris mattis nunc sed mi sagittis et facilisis tortor volutpat. Etiam tincidunt urna mattis erat placerat placerat ac eu tellus.</p>\\n<p>This is a new paragraph</p>\\n<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec ultricies tristique nulla et mattis.</p>\" } Il s'agit d'un JSON valide qui peut facilement \u00eatre analys\u00e9 et trait\u00e9 par JavaScript. Peasy facile! Types de contenu personnalis\u00e9s Afin d'envoyer les donn\u00e9es avec le type de contenu appropri\u00e9, Grav doit conna\u00eetre le type MIME que le navigateur attend pour qu'il restitue ce type de contenu. Grav conna\u00eet la plupart des types de contenu standard tels que d\u00e9finis dans le fichier system/config/media.yaml . Si vous souhaitez manipuler un type de contenu qui n'est pas fourni, il vous suffit d'ajouter une entr\u00e9e dans ce fichier. Par exemple, si vous souhaitez pouvoir restituer les \u00e9v\u00e9nements du calendrier iCal, vous devez ajouter ce type de m\u00e9dia au media.yaml : ics: type: iCal thumb: media/thumb.png mime: text/calendar Cela d\u00e9finit l'extension de fichier .ics comme un fichier iCal avec le type mime : texte/calendar . Ensuite, tout ce que vous avez \u00e0 faire est de fournir le mod\u00e8le .ical.twig appropri\u00e9 pour rendre tout fichier de ce type que vous demandez.","title":"Types de contenu"},{"location":"variables-theme/","text":"Variables de th\u00e8me Lorsque vous concevez un th\u00e8me, Grav vous donne acc\u00e8s \u00e0 toutes sortes d'objets et de variables \u00e0 partir de vos mod\u00e8les Twig. Le cadre de mod\u00e9lisation Twig fournit des moyens puissants pour lire et manipuler ces objets et variables. Ceci est enti\u00e8rement expliqu\u00e9 dans leur propre documentation ainsi que r\u00e9sum\u00e9 succinctement dans notre propre documentation . Dans Twig, vous pouvez appeler des m\u00e9thodes qui ne prennent aucun param\u00e8tre en appelant simplement le nom de la m\u00e9thode et en omettant les parenth\u00e8ses () . Si vous devez transmettre des param\u00e8tres, vous devez \u00e9galement les fournir apr\u00e8s le nom de la m\u00e9thode. page.content est \u00e9quivalent \u00e0 page.content() . Objets de base Plusieurs objets principaux sont disponibles pour un mod\u00e8le Twig, et chaque objet poss\u00e8de un ensemble de variables et de fonctions . variable base_dir La variable {{ base_dir }} renvoie le r\u00e9pertoire du fichier de base de l'installation de Grav. variable base_url Le {{ base_url }} renvoie l'URL de base au site Grav, que cela affiche ou non l'URL compl\u00e8te d\u00e9pend de l'option absolute_urls dans la configuration du syst\u00e8me . variable base_url_relative Le {{ base_url_relative }} renvoie l'URL de base au site Grav, sans les informations sur l'h\u00f4te. variable base_url_absolute Le {{ base_url_absolute }} renvoie l'URL de base au site Grav, y compris les informations sur l'h\u00f4te. variable base_url_simple Le {{ base_url_simple }} renvoie l'URL de base au site Grav, sans le code de langue. variable home_url Le {{ home_url }} est particuli\u00e8rement utile pour renvoyer vers la page d'accueil de votre site. Il est similaire \u00e0 base_url mais prend en compte la langue actuellement active. variable html_lang Le {{ html_lang }} renvoie la langue active. Le {{ theme_url }} renvoie l'URL relative au th\u00e8me actuel. Cela renverra la langue active actuelle si elle est fournie, sinon utilisez l'option configur\u00e9e site.default_lang , sinon revenez \u00e0 en . variable theme_dir La variable {{ theme_dir }} renvoie le dossier du r\u00e9pertoire de fichiers du th\u00e8me actuel. Lors de la cr\u00e9ation de liens vers des ressources telles que des images ou des fichiers JavaScript et CSS, il est recommand\u00e9 d'utiliser la fonction url() en combinaison avec le flux theme:// comme d\u00e9crit sur la page Balises Filtres & Functions TWIG . Pour JavaScript et CSS, Asset Manager est encore plus simple \u00e0 utiliser mais dans certains cas comme le chargement dynamique ou conditionnel des assets, cela ne fonctionnera pas. variable language_codes Le {{ language_codes }} renvoie la liste des langues disponibles du site. objet assets Asset Manager ajoute un moyen simple de g\u00e9rer CSS et JavaScript dans votre site. 1 | {% do assets.addCss('theme://css/foo.css') %} 2 | {% do assets.addInlineCss('a { color: red; }') %} 3 | {% do assets.addJs('theme://js/something.js') %} 4 | {% do assets.addInlineJs('alert(\"Warming!\");') %} En savoir plus sur Asset Manager . ASTUCE : Il est recommand\u00e9 d'utiliser \u00e0 la place la balise styles et la . objet config Vous pouvez acc\u00e9der \u00e0 n'importe quel param\u00e8tre de configuration Grav d\u00e9fini dans les fichiers YAML dans /user/config via l'objet config . Par example: {{ config.system.pages.theme }}{# returns the currently configured theme #} objet site Un alias de l'objet config.site . Ceci repr\u00e9sente la configuration d\u00e9finie dans le fichier site.yaml . objet system Un alias de l'objet config.system . Ceci repr\u00e9sente la configuration dans le fichier principal system.yaml . objet theme Un alias de l'objet config.theme . Cela repr\u00e9sente la configuration du th\u00e8me actif actuel. Les param\u00e8tres du plugin sont disponibles via config.plugins . objet page Parce que Grav est construit en utilisant la structure d\u00e9finie dans le dossier pages/ , chaque page est repr\u00e9sent\u00e9e par un objet page. L' objet page est probablement l'objet le plus important avec lequel vous travaillerez car il contient toutes les informations sur la page actuelle sur laquelle vous vous trouvez. La liste compl\u00e8te des m\u00e9thodes de l'objet Page est disponible sur le site API (PAGE NON CONSTRUITE). Voici une liste des m\u00e9thodes que vous trouverez les plus utiles. summary() Cela renvoie une version tronqu\u00e9e ou raccourcie de votre contenu. Vous pouvez fournir un param\u00e8tre size facultatif pour sp\u00e9cifier la longueur maximale du r\u00e9sum\u00e9, en caract\u00e8res. Alternativement, si aucune taille n'est fournie, la valeur peut \u00eatre obtenue via la variable \u00e0 l'\u00e9chelle du site summary.size \u00e0 partir de votre configuration site.yaml . {{ page.summary|brut }} ou alors {{ page.summary(50)|raw }} Une troisi\u00e8me option consiste \u00e0 utiliser un d\u00e9limiteur manuel de === dans votre contenu. Tout ce qui pr\u00e9c\u00e8de le d\u00e9limiteur sera utilis\u00e9 pour le r\u00e9sum\u00e9. content() Cela renvoie l'int\u00e9gralit\u00e9 du contenu HTML de votre page. {{ page.content|raw }} header() Cela renvoie les en-t\u00eates de page tels que d\u00e9finis dans le front-matter YAML de la page. Par exemple une page avec les en-t\u00eates suivants : 1 | title: My Page 2 | author: Joe Bloggs peut \u00eatre utilis\u00e9: The author of this page is: {{ page.header.author|e }} media() Cela renvoie un objet Media contenant tous les m\u00e9dias associ\u00e9s \u00e0 une page. Ceux-ci incluent des images , des vid\u00e9os et d'autres fichiers . Vous pouvez acc\u00e9der aux m\u00e9thodes multim\u00e9dias comme d\u00e9crit dans la documentation multim\u00e9dia pour le contenu. Parce qu'il agit comme un tableau, les filtres et fonctions Twig peuvent \u00eatre utilis\u00e9s. Remarque : les images SVG sont trait\u00e9es comme des fichiers, et non comme des images, car elles ne peuvent pas \u00eatre manipul\u00e9es \u00e0 l'aide de filtres d'image twig. Obtenir un fichier ou une image sp\u00e9cifique : {% set my_pdf = page.media['myfile.pdf'] %} Obtenez la premi\u00e8re image : {% set first_image = page.media.images|premier %} Bouclez sur toutes les images et affichez la balise HTML pour l'afficher : {% for image in page.media.images %} {{ image.html|raw }} {% endfor %} title() Cela renvoie le titre de la page tel qu'il est d\u00e9fini dans la variable title des en-t\u00eates YAML de la page elle-m\u00eame. title: My Page menu() Cela renvoie la valeur de la variable menu des en-t\u00eates YAML de la page. Si aucun n'est fourni, il s'agit par d\u00e9faut du titre. 1 | title: My Page 2 | menu: my-page visible() Ceci renvoie si la page est visible ou non. Par d\u00e9faut, les pages avec une valeur num\u00e9rique suivie d'un point sont visibles par d\u00e9faut (01.somefolder1) tandis que celles sans (subfolder2) ne sont pas consid\u00e9r\u00e9es comme visibles. Cela peut \u00eatre remplac\u00e9 dans les en-t\u00eates de page : 1 | title: My Page 2 | visible: true routable() Ceci renvoie si oui ou non une page est routable par Grav. Cela signifie que si vous pouvez pointer votre navigateur vers la page et recevoir le contenu en retour. Les pages non routables peuvent \u00eatre utilis\u00e9es dans des mod\u00e8les, des plugins, etc., mais ne peuvent pas \u00eatre atteintes directement. Cela peut \u00eatre d\u00e9fini dans les en-t\u00eates de page : 1 | title: My Page 2 | routable: true slug() Cela renvoie le nom direct tel qu'il est affich\u00e9 dans l'URL de cette page, par exemple my-blog-post . URL([include_host = false]) Cela renvoie l'URL de la page, par exemple : {{ page.url|e }} {# could return /my-section/my-category/my-blog-post #} ou alors {{ page.url(true)|e }} {# could return http://mysite.com/my-section/my-category/my-blog-post #} permalink() Cela renvoie l'URL avec les informations sur l'h\u00f4te. Particuli\u00e8rement utile lorsque vous avez besoin d'un lien rapide accessible de n'importe o\u00f9. canonical() Cela renvoie l'URL qui est la version \"pr\u00e9f\u00e9r\u00e9e\" ou le lien vers une page particuli\u00e8re. Cette valeur sera par d\u00e9faut l'URL normale \u00e0 moins que la page n'ait remplac\u00e9 l'option en-t\u00eate de page canonical: . route() Cela renvoie le routage interne d'une page. Ceci est principalement utilis\u00e9 pour le routage interne et la r\u00e9partition des pages. home() Cela renvoie true ou false selon que cette page est configur\u00e9e ou non comme page d'accueil . Ce param\u00e8tre se trouve dans le fichier system.yaml . root() Cela renvoie true ou false selon que cette page est ou non la page racine de la hi\u00e9rarchie de l'arborescence. active() Cela renvoie true ou false selon que cette page est ou non actuellement la page \u00e0 laquelle votre navigateur acc\u00e8de. Ceci est particuli\u00e8rement utile en navigation pour savoir si la page sur laquelle vous vous trouvez est la page active. modular() Cela renvoie true ou false selon que cette page est modulaire ou non. activeChild() Ceci renvoie si oui ou non l'URL de cet URI contient l'URL de la page active. Ou en d'autres termes, est l'URL de cette page dans l'URL actuelle. Encore une fois, cela est utile lors de la construction de votre navigation et vous souhaitez savoir si la page sur laquelle vous parcourez est le parent d'une page enfant active. find(url) Cela renvoie un objet de page tel que sp\u00e9cifi\u00e9 par une URL de route. {% include 'modular/author-detail.html.twig' with {'page': page.find('/authors/billy-bloggs')} %} collection() Cela renvoie la collection de pages pour ce contexte tel que d\u00e9termin\u00e9 par les en-t\u00eates de page de collection. 1 | {% for child in page.collection %} 2 | {% include 'partials/blog_item.html.twig' with {'page':child, 'truncate':true} %} 3 | {% endfor %} currentPosition() Cela renvoie l'index de la page en cours par rapport \u00e0 ses fr\u00e8res et s\u0153urs. isFirst() Cela renvoie true ou false selon que cette page est la premi\u00e8re de ses fr\u00e8res et s\u0153urs. isLast() Cela renvoie true ou false selon que cette page est la derni\u00e8re de ses fr\u00e8res et s\u0153urs. nextSibling() Cela renvoie la page suivante du tableau de fr\u00e8res et s\u0153urs en fonction de la position actuelle. prevSibling() Cela renvoie la page pr\u00e9c\u00e9dente du tableau de fr\u00e8res et s\u0153urs en fonction de la position actuelle. nextSibling() et prevSibling() ordonnent les pages dans une structure semblable \u00e0 une pile. Cela fonctionne mieux dans une situation de blog, o\u00f9 le premier article de blog a nextSibling null et prevSibling est l'article de blog pr\u00e9c\u00e9dent. Si ce sens de commande vous embrouille, nous vous sugg\u00e9rons d'utiliser page.adjacentSibling(-1) pour pointer vers la page suivante au lieu de page.nextSibling() afin de r\u00e9duire la confusion que la terminologie pourrait cr\u00e9er. Vous pouvez \u00e9galement d\u00e9finir une constante dans le th\u00e8me et l'utiliser pour une meilleure lisibilit\u00e9, comme page.adjacentSibling(NEXT_PAGE) children() Cela renvoie un tableau de pages enfants pour la page, tel que d\u00e9fini dans la structure de contenu des pages. orderBy() Cela renvoie le type de commande pour tous les enfants tri\u00e9s de la page. Les valeurs incluent g\u00e9n\u00e9ralement : default , title , date et folder . Cette valeur est g\u00e9n\u00e9ralement configur\u00e9e dans les en-t\u00eates de page. orderDir() Cela renvoie la direction de l'ordre pour tous les enfants tri\u00e9s de la page. Les valeurs peuvent \u00eatre asc pour l'ordre croissant ou desc pour l'ordre d\u00e9croissant. Cette valeur est g\u00e9n\u00e9ralement configur\u00e9e dans les en-t\u00eates de page. orderManual() Cela renvoie un tableau de classement manuel des pages pour tous les enfants de la page. Cette valeur est g\u00e9n\u00e9ralement configur\u00e9e dans les en-t\u00eates de page. maxCount() Cela renvoie le nombre maximal de pages enfants pouvant \u00eatre renvoy\u00e9es. Cette valeur est g\u00e9n\u00e9ralement configur\u00e9e dans les en-t\u00eates de page. children.count() Cela renvoie le nombre de pages enfants de la page. children.current() Cela renvoie l'\u00e9l\u00e9ment enfant actuel. Peut \u00eatre utilis\u00e9 lors de l'it\u00e9ration sur les enfants. children.next() Cela renvoie l'enfant suivant dans le tableau d'enfants. children.prev() Cela renvoie l'enfant pr\u00e9c\u00e9dent dans le tableau d'enfants. children.nth(position) Cela renvoie l'enfant identifi\u00e9 par position qui est un entier de 0 \u00e0 children.count() - 1 dans le tableau des enfants. children.sort(orderBy, orderDir) R\u00e9organise les enfants en fonction d'un orderBy ( default , title , date et folder ) et orderDir ( asc ou desc ) parent() Cela renvoie l'objet de page parent pour cette page. Ceci est tr\u00e8s utile lorsque vous avez besoin de remonter dans l'arborescence imbriqu\u00e9e des pages. isPage() Cela renvoie true ou false selon que cette page est associ\u00e9e \u00e0 un fichier .md r\u00e9el plut\u00f4t qu'\u00e0 un simple dossier de routage. isDir() Cela renvoie true ou false selon que cette page est uniquement un dossier pour le routage. id() Cela renvoie un identifiant unique pour la page. modified() Cela renvoie un horodatage de la derni\u00e8re modification de la page. date() Cela renvoie l'horodatage de la date de la page. G\u00e9n\u00e9ralement, cela est d\u00e9fini dans les en-t\u00eates pour repr\u00e9senter la date d'une page ou d'un article. Si aucune valeur n'est d\u00e9finie explicitement, l'horodatage de modification du fichier est utilis\u00e9. template() Cela renvoie le nom du mod\u00e8le de page sans l'extension .md . Par exemple default . filePath() Cela renvoie le chemin d'acc\u00e8s complet au fichier de la page. Par exemple /Users/votrenom/sites/grav/user/pages/01.home/default.md . filePathClean() Cela renvoie le chemin relatif \u00e0 partir de la racine du site Grav. Par exemple user/pages/01.home/default.md . path() Cela renvoie le chemin complet du r\u00e9pertoire contenant la page. Par exemple /Users/votrenom/sites/grav/user/pages/01.home . folder() Cela renvoie le nom du dossier de la page. Par exemple 01.home . taxonomy() Cela renvoie un tableau de la taxonomie associ\u00e9e \u00e0 une page. Celles-ci peuvent \u00eatre it\u00e9r\u00e9es. Ceci est particuli\u00e8rement utile pour afficher des \u00e9l\u00e9ments tels que des balises : 1 | {% for tag in page.taxonomy.tag %} 2 | <a href=\"search/tag:{{ tag }}\">{{ tag }}</a> 3 | {% endfor %} Objet pages L'objet pages est la page racine qui repr\u00e9sente un arbre imbriqu\u00e9 de chaque objet de page que Grav conna\u00eet. Ceci est particuli\u00e8rement utile pour la cr\u00e9ation d'un sitemap , la navigation ou si vous souhaitez trouver une page en particulier. Cet objet n'est pas le m\u00eame que grav.pages qui est une instance de la classe Pages . children method Cela renvoie les pages enfants imm\u00e9diates sous la forme d'un tableau d'objets de page . Comme l'objet pages repr\u00e9sente l'arborescence enti\u00e8re, vous pouvez parcourir enti\u00e8rement chaque page du dossier Grav pages/. Obtenez les pages de niveau sup\u00e9rieur pour un menu simple : 1 | <ul class=\"navigation\"> 2 | {% for page in pages.children %} 3 | {% if page.visible %} 4 | <li><a href=\"{{ page.url }}\">{{ page.menu }}</a></li> 5 | {% endif %} 6 | {% endfor %} 7 |</ul> Objet media Il existe un nouvel objet qui vous permet d'acc\u00e9der aux m\u00e9dias qui se trouvent en dehors des objets Page via les flux PHP de Twig. Cela fonctionne de la m\u00eame mani\u00e8re que la liaison d'images dans le contenu en utilisant des flux pour acc\u00e9der aux images et un traitement multim\u00e9dia pour manipuler le th\u00e8me. {{ media['user://media/bird.png'].resize(50, 50).rotate(90).html()|raw }} Objet uri La liste compl\u00e8te des m\u00e9thodes de l'objet Uri est disponible sur le site de l'API(PAGE NON CONSTRUITE) . Voici une liste des m\u00e9thodes que vous trouverez les plus utiles. L'objet Uri a plusieurs m\u00e9thodes pour acc\u00e9der \u00e0 des parties de l'URI actuel. Pour l'URL compl\u00e8te http://mysite.com/grav/section/category/page.json/param1:foo/param2:bar/?query1=baz&query2=qux : path() Cela renvoie la partie chemin de l'URL : (par exemple, uri.path = /section/category/page) paths() Cela renvoie le tableau des \u00e9l\u00e9ments de chemin : (par exemple, uri.paths = [section, cat\u00e9gorie, page]) route([absolute = false][, domain = false]) Cela renvoie la route sous forme d'URL absolue ou relative. (par exemple uri.route(true) = http://mysite.com/grav/section/category/page ou uri.route() = /section/category/page ) params() Cela renvoie la partie params de l'URL : (par exemple, uri.params = /param1:foo/param2:bar ) param(id) Cela renvoie la valeur d'un param\u00e8tre particulier. (par exemple, uri.param('param1') = foo ) query() Cela renvoie la partie requ\u00eate de l'URL : (par exemple, uri.query = query1=bar&query2=qux ) quer(id) Vous pouvez \u00e9galement r\u00e9cup\u00e9rer des \u00e9l\u00e9ments de requ\u00eate sp\u00e9cifiques : (par exemple, uri.query('query1') = bar ) URL([include_host = true]) Cela renvoie l'URL compl\u00e8te avec ou sans l'h\u00f4te. (par exemple uri.url(false) = grav/section/category/page/param:foo?query=bar ) extension() Cela renvoie l'extension, ou renverra html s'il n'est pas fourni : (par exemple, uri.extension = json ) host() Cela renvoie la partie h\u00f4te de l'URL. (par exemple, uri.host = mysite.com ) base() Cela renvoie la partie de base de l'URL. (par exemple, uri.base = http://monsite.com ) rootUrl([include_host = false]) Cela renvoie l'URL racine \u00e0 l'instance grav. (par exemple uri.rootUrl() = http://monsite.com/grav ) referrer() Cela renvoie les informations de r\u00e9f\u00e9rence pour cette page. Objet header L'objet d'en-t\u00eate est un alias pour page.header() de la page d'origine. C'est un moyen pratique d'acc\u00e9der aux en-t\u00eates de page d'origine lorsque vous parcourez d'autres objets page de pages enfants ou de collections. content string L'objet de contenu est un alias pour la page.content() de la page d'origine. Pour afficher le contenu de la page, vous devez : {{ content|raw }} Objet de taxonomie L'objet Taxonomy global qui contient toutes les informations de taxonomie pour le site. Pour plus d'informations, voir Taxonomy. Objet navigateur La liste compl\u00e8te des m\u00e9thodes de l'objet Browser est disponible sur le site API. Voici une liste des m\u00e9thodes que vous trouverez les plus utiles. Grav a un support int\u00e9gr\u00e9 pour d\u00e9terminer par programmation la plate-forme, le navigateur et la version de l'utilisateur. 1 | {{ browser.platform|e }} # macintosh 2 | {{ browser.browser|e }} # chrome 3 | {{ browser.version|e }} # 41 Objet utilisateur Vous pouvez acc\u00e9der indirectement \u00e0 l'objet utilisateur actuellement connect\u00e9 via l'objet Grav. Cela vous permet d'acc\u00e9der \u00e0 des donn\u00e9es telles que username , fullname , title , et email . 1 | {{ grav.user.username|e }} # admin 2 | {{ grav.user.fullname|e }} # Billy Bloggs 3 | {{ grav.user.title|e }} # Administrator 4 | {{ grav.user.email|e }} # billy@bloggs.com Ajout de variables personnalis\u00e9es Vous pouvez facilement ajouter des variables personnalis\u00e9es de diff\u00e9rentes mani\u00e8res. Si la variable est une variable \u00e0 l'\u00e9chelle du site, vous pouvez placer la variable dans votre fichier user/config/site.yaml puis y acc\u00e9der via : {{ site.my_variable|e }} Alternativement, si la variable n'est n\u00e9cessaire que pour une page particuli\u00e8re, vous pouvez ajouter la variable au front-matter YAML de votre page et y acc\u00e9der via l'objet page.header . Par example: title: My Page author: Joe Bloggs pourrait \u00eatre utilis\u00e9 comme : The author of this page is: {{ page.header.author|e }} Ajout d'objets personnalis\u00e9s Un moyen avanc\u00e9 d'ajouter des objets personnalis\u00e9s consiste \u00e0 utiliser un plugin pour ajouter des objets \u00e0 l'objet Twig. Ceci est un sujet avanc\u00e9 et est couvert plus en d\u00e9tail dans le chapitre plugins .","title":"Variables"},{"location":"vps-hebergement-digitalocean/","text":"DigitalOcean Peut-\u00eatre le plus populaire et le plus utilis\u00e9 de tous les fournisseurs de VPS, DigitalOcean propose une gamme d'options VPS. \u00c0 partir de 5 $/mois pour un syst\u00e8me \u00e0 1 processeur, 1024 Mo jusqu'\u00e0 960 $/mois pour une configuration \u00e0 32 processeurs, 192 Go, DigitalOcean propose des solutions qui peuvent \u00e9voluer avec vous. Tous leurs serveurs sont construits avec des disques SSD RAID, du mat\u00e9riel hexa-core moderne, une virtualisation KVM et une bande passante de niveau 1 fiable pour garantir des performances maximales. Ils constituent une option fantastique pour h\u00e9berger votre site bas\u00e9 sur Grav. Apr\u00e8s avoir cr\u00e9\u00e9 un compte et y avoir d\u00e9pos\u00e9 du cr\u00e9dit, vous pouvez commencer. DigitalOcean vous permet de cr\u00e9er des Droplets qui repr\u00e9sentent une instance VPS. Cliquez simplement sur le bouton Create Droplet dans votre panneau de configuration et remplissez le formulaire : Choisissez simplement un nom pour votre Droplet et choisissez une taille en fonction du prix et des besoins du serveur. Grav fonctionnera bien sur n'importe quelle configuration, m\u00eame l'option de base \u00e0 5 $/mois ex\u00e9cutera Grav rapidement et efficacement. Ensuite, s\u00e9lectionnez une r\u00e9gion o\u00f9 votre VPS sera situ\u00e9. Il est pr\u00e9f\u00e9rable de choisir une r\u00e9gion qui servira le mieux votre public cible. Si le serveur est uniquement \u00e0 des fins de d\u00e9veloppement, choisissez celui qui est le plus proche de vous. Enfin, vous devrez s\u00e9lectionner une image \u00e0 installer. DigitalOcean vous permet de choisir parmi une grande vari\u00e9t\u00e9 de distributions Linux en stock, ainsi que des applications compl\u00e8tes et m\u00eame des instantan\u00e9s enregistr\u00e9s pr\u00e9c\u00e9demment. Pour les besoins de ce guide, nous allons installer la derni\u00e8re version d'Ubuntu 18.04 LTS qui est tr\u00e8s populaire et tr\u00e8s bien prise en charge. Vous pouvez laisser toutes les autres options \u00e0 leurs valeurs par d\u00e9faut. Apr\u00e8s avoir cliqu\u00e9 sur Cr\u00e9er un droplet , votre droplet sera cr\u00e9\u00e9 dans les 55 secondes et vous le verrez r\u00e9pertori\u00e9 dans votre liste de droplets. Vous devriez recevoir un email avec votre mot de passe root. En cliquant sur le droplet que vous venez de cr\u00e9er, vous verrez diff\u00e9rentes options. L'onglet Acc\u00e8s du Droplet Manager vous permet de vous connecter rapidement \u00e0 votre instance, mais l'utilisation de SSH est une exp\u00e9rience plus agr\u00e9able. L'authentification par cl\u00e9 publique est \u00e9galement recommand\u00e9e, et DigitalOcean dispose d'une excellente documentation d'authentification par cl\u00e9 publique SSH qui vous guide \u00e0 travers les \u00e9tapes requises. Mettre \u00e0 jour et mettre \u00e0 niveau les packages. \u00c0 ce stade, vous souhaiterez peut-\u00eatre soit configurer une entr\u00e9e /etc/hosts locale pour donner \u00e0 l'adresse IP fournie un nom convivial tel que digitalocean.dev. De cette fa\u00e7on, vous pouvez plus facilement vous connecter en SSH \u00e0 votre serveur avec ssh root@digitalocean.dev. Apr\u00e8s avoir r\u00e9ussi \u00e0 vous connecter en SSH \u00e0 votre serveur en tant que root , la premi\u00e8re chose \u00e0 faire est de mettre \u00e0 jour et de mettre \u00e0 niveau tous les packages install\u00e9s. Cela garantira que vous utilisez le dernier et le meilleur : $ | # apt update $ | # apt upgrade R\u00e9pondez simplement Y si vous y \u00eates invit\u00e9. Avant d'aller plus loin, supprimons Apache2 que nous remplacerons par Nginx : $ | # apt remove apache2* $ | # apt autoremove REMARQUE : Vous ne l'avez peut-\u00eatre pas install\u00e9. Mais mieux vaut pr\u00e9venir que gu\u00e9rir ! Ensuite, vous voudrez installer certains packages essentiels : $ | # apt install vim zip unzip nginx git php-fpm php-cli php-gd php-curl php-mbstring php-xml php-zip php-apcu Cela installera l'\u00e9diteur VIM complet (plut\u00f4t que la version mini fournie avec Ubuntu), le serveur Web Nginx, les commandes GIT et PHP 7.2 . Configurer PHP7.2 FPM. Une fois php-fpm install\u00e9, il y a un l\u00e9ger changement de configuration qui doit avoir lieu pour une configuration plus s\u00e9curis\u00e9e. $ | # vim /etc/php/7.2/fpm/php.ini Recherchez cgi.fix_pathinfo . Ceci sera comment\u00e9 par d\u00e9faut et mis \u00e0 '1'. Il s'agit d'un param\u00e8tre extr\u00eamement peu s\u00fbr car il indique \u00e0 PHP d'essayer d'ex\u00e9cuter le fichier le plus proche qu'il peut trouver si le fichier PHP demand\u00e9 est introuvable. Cela permettrait essentiellement aux utilisateurs de cr\u00e9er des requ\u00eates PHP d'une mani\u00e8re qui leur permettrait d'ex\u00e9cuter des scripts qu'ils ne devraient pas \u00eatre autoris\u00e9s \u00e0 ex\u00e9cuter. D\u00e9commentez cette ligne et changez '1' en '0' pour qu'elle ressemble \u00e0 ceci : $ | cgi.fix_pathinfo=0 Enregistrez et fermez le fichier, puis red\u00e9marrez le service. $ | # systemctl restart php7.2-fpm Configurer le pool de connexions Nginx. Nginx a d\u00e9j\u00e0 \u00e9t\u00e9 install\u00e9, mais vous devez le configurer pour qu'il utilise un pool de connexions PHP sp\u00e9cifique \u00e0 l'utilisateur. Cela garantira votre s\u00e9curit\u00e9 et \u00e9vitera toute autorisation de fichier potentielle lorsque vous travaillez sur les fichiers en tant que compte d'utilisateur et via le serveur Web. Acc\u00e9dez au r\u00e9pertoire du pool et cr\u00e9ez une nouvelle configuration grav : $ | # cd /etc/php/7.2/fpm/pool.d $ | # mv www.conf www.conf.bak $ | # vim grav.conf Dans Vim, vous pouvez coller la configuration de pool suivante : 1 | [grav] 2 | 3 | user = grav 4 | group = grav 5 | 6 | listen = /var/run/php/php7.2-fpm.sock 7 | 8 | listen.owner = www-data 9 | listen.group = www-data 10 | 11 | pm = dynamic 12 | pm.max_children = 5 13 | pm.start_servers = 2 14 | pm.min_spare_servers = 1 15 | pm.max_spare_servers = 3 16 | 17 | chdir = / Les \u00e9l\u00e9ments cl\u00e9s ici sont que user et droup sont d\u00e9finis sur un utilisateur appel\u00e9 grav et que le socket d'\u00e9coute a un nom unique \u00e0 partir du socket standard. Enregistrez et quittez ce fichier. Nous devons cr\u00e9er l'utilisateur grav d\u00e9di\u00e9 maintenant : $ | # adduser grav Fournissez un mot de passe fort et laissez les autres valeurs par d\u00e9faut. Nous devons ensuite cr\u00e9er un emplacement appropri\u00e9 pour que Nginx serve les fichiers, alors changeons d'utilisateur et cr\u00e9ons ces dossiers, et cr\u00e9ons quelques fichiers de test : $ | # su - grav $ | $ mkdir -p www/html $ | $ cd www/html Cr\u00e9ez un index.html simple avec le contenu de : <h1>\u00c7a marche !</h1> ...et un fichier appel\u00e9 info.php avec le contenu de : <?php phpinfo(); Nous pouvons maintenant quitter cet utilisateur et revenir \u00e0 root afin de configurer la configuration du serveur Nginx : $ | $ exit $ | # cd /etc/nginx/sites-available/ $ | # vim grav Ensuite, collez simplement cette configuration : 1 | server { 2 | #listen 80; 3 | index index.html index.php; 4 | 5 | ## Begin - Server Info 6 | root /home/grav/www/html; 7 | server_name localhost; 8 | ## End - Server Info 9 | 10 | ## Begin - Index 11 | # for subfolders, simply adjust: 12 | # `location /subfolder {` 13 | # and the rewrite to use `/subfolder/index.php` 14 | location / { 15 | try_files $uri $uri/ /index.php?$query_string; 16 | } 17 | ## End - Index 18 | 19 | ## Begin - Security 20 | # deny all direct access for these folders 21 | location ~* /(\\.git|cache|bin|logs|backup|tests)/.*$ { return 403; } 22 | # deny running scripts inside core system folders 23 | location ~* /(system|vendor)/.*\\.(txt|xml|md|html|yaml|yml|php|pl|py|cgi|twig|sh| bat)$ { return 403; } 24 | # deny running scripts inside user folder 25 | location ~* /user/.*\\.(txt|md|yaml|yml|php|pl|py|cgi|twig|sh|bat)$ { return 403; } 26 | # deny access to specific files in the root folder 27 | location ~ /(LICENSE\\.txt|composer\\.lock|composer\\.json|nginx\\.conf|web\\.config|htaccess\\.txt|\\.htaccess) { return 403; } 28 | ## End - Security 29 | 30 | ## Begin - PHP 31 | location ~ \\.php$ { 32 | # Choose either a socket or TCP/IP address 33 | fastcgi_pass unix:/var/run/php/php7.2-fpm.sock; 34 | # fastcgi_pass unix:/var/run/php5-fpm.sock; #legacy 35 | # fastcgi_pass 127.0.0.1:9000; 36 | 37 | fastcgi_split_path_info ^(.+\\.php)(/.+)$; 38 | fastcgi_index index.php; 39 | include fastcgi_params; 40 | fastcgi_param SCRIPT_FILENAME $document_root/$fastcgi_script_name; 41 | } 42 | ## End - PHP 43 | } Il s'agit du fichier stock nginx.conf fourni avec Grav avec 2 modifications. 1) root a \u00e9t\u00e9 adapt\u00e9e \u00e0 notre utilisateur/dossier que nous venons de cr\u00e9er et l'option fastcgi_pass a \u00e9t\u00e9 d\u00e9finie sur le socket que nous avons d\u00e9fini dans notre pool grav . Il ne nous reste plus qu'\u00e0 lier ce fichier de mani\u00e8re appropri\u00e9e pour qu'il soit activ\u00e9 : $ | # cd ../sites-enabled $ | # ln -s ../sites-available/grav $ | # rm default Vous pouvez tester la configuration avec la commande nginx -t . Il devrait renvoyer ce qui suit. $ | nginx: the configuration file /etc/nginx/nginx.conf syntax is ok $ | nginx: configuration file /etc/nginx/nginx.conf test is successful Maintenant, tout ce que nous avons \u00e0 faire est de red\u00e9marrer Nginx et le processus php7-fpm et de tester pour nous assurer que nous avons correctement configur\u00e9 Nginx et le pool de connexion PHP : $ | # systemctl restart nginx $ | # systemctl restart php7.2-fpm Pointez maintenant votre navigateur sur votre serveur : http://digitalocean.dev et vous devriez voir le texte : Working ! Vous pouvez \u00e9galement tester pour vous assurer que PHP est install\u00e9 et fonctionne correctement en pointant votre navigateur vers : http://digitalocean.dev/info.php . Vous devriez voir une page d'informations PHP standard avec APCu, Opcache, etc. Installation de Grav. C'est la partie facile ! Nous devons d'abord revenir \u00e0 l'utilisateur Grav, donc SSH en tant que grav@digitalocean.dev ou su - grav \u00e0 partir de la connexion root. puis suivez ces \u00e9tapes : $ | $ cd ~/www $ | $ wget -O grav.zip https://getgrav.org/download/core/grav/latest $ | $ unzip grav.zip $ | $ rm -Rf html $ | $ mv grav html Maintenant que c'est fait, vous pouvez confirmer que Grav est install\u00e9 en pointant votre navigateur sur http://digitalocean.dev et vous devriez \u00eatre accueilli avec la page Grav est en cours d'ex\u00e9cution ! . Parce que vous avez suivi ces instructions avec diligence, vous pourrez \u00e9galement utiliser les commandes Grav CLI et Grav GPM telles que : $ | $ cd ~/www/html $ | $ bin/grav clear $ | $ | Clearing cache $ | $ | Cleared: cache/twig/* $ | Cleared: cache/compiled/* $ | $ | Touched: /home/grav/www/html/user/config/system.yaml et commandes GPM : $ | $ bin/gpm index","title":"DigitalOcean"},{"location":"vps-hebergement-linode/","text":"Linode Linode est dans le jeu VPS depuis un certain temps et se concentre sur la fourniture de serveurs Linux \u00e9quip\u00e9s de SSD ultra-rapides pour les d\u00e9veloppeurs. Il existe un processus simple et rapide pour mettre en place un serveur et le faire fonctionner : choisir un plan tarifaire , choisir une distribution Linux , puis choisir un emplacement de n\u0153ud le mieux adapt\u00e9 \u00e0 vos besoins. Vous pouvez maintenant priv\u00e9 virtuel en utilisant leur application Linode Maketplace . Apr\u00e8s avoir cr\u00e9\u00e9 un compte et navigu\u00e9 vers le Linode Manager , vous devez d'abord ajouter un Linode. Pour ce test, nous choisirons l'option la plus petite et la moins ch\u00e8re \u00e0 10 $/mois pour 1 c\u0153ur de processeur et 24 Go d'espace disque SSD. Il existe de nombreuses options de mise \u00e0 l'\u00e9chelle jusqu'\u00e0 20 c\u0153urs de processeur et 2 Go d'espace disque ! N'oubliez pas \u00e9galement de choisir un emplacement appropri\u00e9 dans la liste d\u00e9roulante : Une fois le Linode cr\u00e9\u00e9, vous devrez cliquer sur le lien Tableau de bord dans la colonne des options. Cela vous am\u00e8nera \u00e0 la page o\u00f9 vous pourrez maintenant choisir votre distribution. Dans le tableau de bord, choisissez D\u00e9ployer une image . Pour des raisons de compatibilit\u00e9 et de facilit\u00e9 d'utilisation, j'aime choisir une distribution stable d'Ubuntu. C'est donc Ubuntu 18.04 LTS ! Laissez le reste par d\u00e9faut et fournissez un mot de passe fort, puis cliquez sur d\u00e9ployer : La cr\u00e9ation de votre serveur devrait prendre environ 30 secondes, apr\u00e8s quoi vous pourrez cliquer sur le bouton Boot pour le faire fonctionner : Vous pouvez cliquer sur l'onglet Acc\u00e8s \u00e0 distance dans le Linode Manager pour obtenir des informations pertinentes sur la fa\u00e7on de se connecter \u00e0 distance \u00e0 l'instance VPS que vous venez de configurer. Vous pouvez vous connecter en SSH via la commande fournie dans cet onglet en utilisant le mot de passe que vous avez saisi lors de la cr\u00e9ation de l'instance de distribution. L'authentification par cl\u00e9 publique est recommand\u00e9e, et Linode a une bonne documentation d'authentification par cl\u00e9 publique SSH qui vous guide \u00e0 travers les \u00e9tapes requises. Mettre \u00e0 jour et mettre \u00e0 niveau les packages. \u00c0 ce stade, vous souhaiterez peut-\u00eatre soit configurer une entr\u00e9e /etc/hosts locale pour donner \u00e0 l'adresse IP fournie un nom convivial tel que linode.dev . De cette fa\u00e7on, vous pouvez plus facilement vous connecter en SSH \u00e0 votre serveur avec ssh root@linode.dev . Apr\u00e8s avoir r\u00e9ussi \u00e0 vous connecter en SSH \u00e0 votre serveur en tant que root, la premi\u00e8re chose \u00e0 faire est de mettre \u00e0 jour et de mettre \u00e0 niveau tous les packages install\u00e9s. Cela garantira que vous utilisez le dernier et le meilleur : $ | # apt update $ | # apt upgrade R\u00e9pondez simplement Y si vous y \u00eates invit\u00e9. Avant d'aller plus loin, supprimons Apache2 que nous remplacerons par Nginx : $ | # apt remove apache2* $ | # apt autoremove REMARQUE : Vous ne l'avez peut-\u00eatre pas install\u00e9. Mais mieux vaut pr\u00e9venir que gu\u00e9rir ! Ensuite, vous voudrez installer certains packages essentiels : $ | # apt install vim zip unzip nginx git php-fpm php-cli php-gd php-curl php-mbstring php-xml php-zip php-apcu Cela installera l'\u00e9diteur VIM complet (plut\u00f4t que la version mini fournie avec Ubuntu), le serveur Web Nginx, les commandes GIT et PHP 7.2 . Configurer PHP7.2 FPM. Une fois php-fpm install\u00e9, il y a un l\u00e9ger changement de configuration qui doit avoir lieu pour une configuration plus s\u00e9curis\u00e9e. $ | # vim /etc/php/7.2/fpm/php.ini Recherchez cgi.fix_pathinfo . Ceci sera comment\u00e9 par d\u00e9faut et mis \u00e0 '1'. Il s'agit d'un param\u00e8tre extr\u00eamement peu s\u00fbr car il indique \u00e0 PHP d'essayer d'ex\u00e9cuter le fichier le plus proche qu'il peut trouver si le fichier PHP demand\u00e9 est introuvable. Cela permettrait essentiellement aux utilisateurs de cr\u00e9er des requ\u00eates PHP d'une mani\u00e8re qui leur permettrait d'ex\u00e9cuter des scripts qu'ils ne devraient pas \u00eatre autoris\u00e9s \u00e0 ex\u00e9cuter. D\u00e9commentez cette ligne et changez '1' en '0' pour qu'elle ressemble \u00e0 ceci $ | cgi.fix_pathinfo=0 Enregistrez et fermez le fichier, puis red\u00e9marrez le service. $ | # systemctl restart php7.2-fpm Configurer le pool de connexions Nginx. Nginx a d\u00e9j\u00e0 \u00e9t\u00e9 install\u00e9, mais vous devez le configurer pour qu'il utilise un pool de connexions PHP sp\u00e9cifique \u00e0 l'utilisateur. Cela garantira votre s\u00e9curit\u00e9 et \u00e9vitera toute autorisation de fichier potentielle lorsque vous travaillez sur les fichiers en tant que compte d'utilisateur et via le serveur Web. Acc\u00e9dez au r\u00e9pertoire du pool et cr\u00e9ez une nouvelle configuration grav : $ | # cd /etc/php/7.2/fpm/pool.d $ | # mv www.conf www.conf.bak $ | # vim grav.conf Dans Vim, vous pouvez coller la configuration de pool suivante : 1 | [grav] 2 | 3 | utilisateur = grav 4 | groupe = grav 5 | 6 | \u00e9couter = /var/run/php/php7.2-fpm.sock 7 | 8 | listen.owner = www-data 9 | listen.group = www-data 10 | 11 | pm = dynamique 12 | pm.max_enfants = 5 13 | pm.start_servers = 2 14 | pm.min_spare_servers = 1 15 | pm.max_spare_servers = 3 16 | 17 | chdir = / Les \u00e9l\u00e9ments cl\u00e9s ici sont que user et group sont d\u00e9finis sur un utilisateur appel\u00e9 grav et que le socket d'\u00e9coute a un nom unique \u00e0 partir du socket standard. Enregistrez et quittez ce fichier. Nous devons cr\u00e9er l'utilisateur grav d\u00e9di\u00e9 maintenant : $ | # adduser grav Fournissez un mot de passe fort et laissez les autres valeurs par d\u00e9faut. Nous devons ensuite cr\u00e9er un emplacement appropri\u00e9 pour que Nginx serve les fichiers, alors changeons d'utilisateur et cr\u00e9ons ces dossiers, et cr\u00e9ons quelques fichiers de test : $ | # su - grav $ | $ mkdir -p www/html $ | $ cd www/html Cr\u00e9ez un index.html simple avec le contenu de : <h1>\u00c7a marche !</h1> ...et un fichier appel\u00e9 info.php avec le contenu de : <?php phpinfo(); Nous pouvons maintenant quitter cet utilisateur et revenir \u00e0 root afin de configurer la configuration du serveur Nginx : $ | $ exit $ | # cd /etc/nginx/sites-available/ $ | # vim grav Ensuite, collez simplement cette configuration : 1 - server { 2 | #listen 80; 3 | index index.html index.php; 4 | 5 | ## Begin - Server Info 6 | root /home/grav/www/html; 7 | server_name localhost; 8 | ## End - Server Info 9 | 10 | ## Begin - Index 11 | # for subfolders, simply adjust: 12 | # `location /subfolder {` 13 | # and the rewrite to use `/subfolder/index.php` 14 | location / { 15 | try_files $uri $uri/ /index.php?$query_string; 16 | } 17 | ## End - Index 18 | 19 | ## Begin - Security 20 | # deny all direct access for these folders 21 | location ~* /(\\.git|cache|bin|logs|backup|tests)/.*$ { return 403; } 22 | # deny running scripts inside core system folders 23 | location ~* /(system|vendor)/.*\\.(txt|xml|md|html|yaml|yml|php|pl|py|cgi|twig|sh|bat)$ { return 403; } 24 | # deny running scripts inside user folder 25 | location ~* /user/.*\\.(txt|md|yaml|yml|php|pl|py|cgi|twig|sh|bat)$ { return 403; } 26 | # deny access to specific files in the root folder 27 | location ~ /(LICENSE\\.txt|composer\\.lock|composer\\.json|nginx\\.conf|web\\.config|28 - htaccess\\.txt|\\.htaccess) { return 403; } 28 | ## End - Security 29 | 30 | ## Begin - PHP 31 | location ~ \\.php$ { 32 | # Choose either a socket or TCP/IP address 33 | fastcgi_pass unix:/var/run/php/php7.2-fpm.sock; 34 | # fastcgi_pass unix:/var/run/php5-fpm.sock; #legacy 35 | # fastcgi_pass 127.0.0.1:9000; 36 | 37 | fastcgi_split_path_info ^(.+\\.php)(/.+)$; 38 | fastcgi_index index.php; 39 | include fastcgi_params; 40 | fastcgi_param SCRIPT_FILENAME $document_root/$fastcgi_script_name; 41 | } 42 | ## End - PHP 43 | } Il s'agit du fichier stock nginx.conf fourni avec Grav avec 2 modifications. 1) root a \u00e9t\u00e9 adapt\u00e9e \u00e0 notre utilisateur/dossier que nous venons de cr\u00e9er et l'option fastcgi_pass a \u00e9t\u00e9 d\u00e9finie sur le socket que nous avons d\u00e9fini dans notre pool grav . Il ne nous reste plus qu'\u00e0 lier ce fichier de mani\u00e8re appropri\u00e9e pour qu'il soit activ\u00e9 : $ | # cd ../sites-enabled $ | # ln -s ../sites-available/grav $ | # rm default Vous pouvez tester la configuration avec la commande nginx -t . Il devrait renvoyer ce qui suit. $ | nginx: the configuration file /etc/nginx/nginx.conf syntax is ok $ | nginx: configuration file /etc/nginx/nginx.conf test is successful Maintenant, tout ce que nous avons \u00e0 faire est de red\u00e9marrer Nginx et le processus php7-fpm et de tester pour nous assurer que nous avons correctement configur\u00e9 Nginx et le pool de connexion PHP : $ | # systemctl restart nginx $ | # systemctl restart php7.2-fpm Pointez maintenant votre navigateur vers votre serveur : http://linode.dev et vous devriez voir le texte : Working ! Vous pouvez \u00e9galement tester pour vous assurer que PHP est install\u00e9 et fonctionne correctement en pointant votre navigateur vers : http://linode.dev/info.php . Vous devriez voir une page d'informations PHP standard avec APCu, Opcache, etc. Installation de Grav. C'est la partie facile ! Nous devons d'abord revenir \u00e0 l'utilisateur Grav, donc SSH en tant que grav@linode.dev ou su - grav \u00e0 partir de la connexion root. puis suivez ces \u00e9tapes : $ | $ cd ~/www $ | $ wget -O grav.zip https://getgrav.org/download/core/grav/latest $ | $ unzip grav.zip $ | $ rm -Rf html $ | $ mv grav html Maintenant que c'est fait, vous pouvez confirmer que Grav est install\u00e9 en pointant votre navigateur sur http://linode.dev et vous devriez \u00eatre accueilli avec la page Grav est en cours d'ex\u00e9cution ! . Parce que vous avez suivi ces instructions avec diligence, vous pourrez \u00e9galement utiliser les commandes Grav CLI et Grav GPM telles que : ```console $ | $ cd ~/www/html $ | $ bin/grav clear $ | $ | Clearing cache $ | $ | Cleared: cache/twig/ $ | Cleared: cache/compiled/ $ | $ | Touched: /home/grav/www/html/user/config/system.yaml et commandes GPM : $ | $ bin/gpm index","title":"Linode"},{"location":"vps-hebergement-rosehosting/","text":"RoseHosting En 2001, RoseHosting \u00e9tait la premi\u00e8re et la seule entreprise au monde \u00e0 proposer des serveurs virtuels Linux commerciaux. Ils proposent d\u00e9sormais une large gamme de packages d'h\u00e9bergement Linux, y compris Linux VPS aliment\u00e9 par le stockage SSD d'entreprise. Tous leurs plans d'h\u00e9bergement sont enti\u00e8rement g\u00e9r\u00e9s et incluent une assistance gratuite 24h/24 et 7j/7 , afin qu'ils puissent installer et configurer Grav pour vous gratuitement. Acc\u00e9dez \u00e0 leur page d' h\u00e9bergement VPS Linux et choisissez un plan d'h\u00e9bergement VPS qui vous convient le mieux. Vous pouvez m\u00eame cr\u00e9er un VPS personnalis\u00e9 en fonction de vos besoins. Pour ce guide, nous utiliserons le plus petit plan, \"SSD 1 VPS\". Apr\u00e8s avoir entr\u00e9 les informations de votre nom de domaine existant ou en avoir command\u00e9 un nouveau, vous serez redirig\u00e9 vers la page de configuration du produit o\u00f9 vous pourrez choisir votre cycle de facturation et le syst\u00e8me d'exploitation que vous souhaitez utiliser. Pour ce guide, nous utiliserons Ubuntu 18.04 LTS . Vous pouvez obtenir un service DNS suppl\u00e9mentaire gratuitement et commander des addons comme WHM/cPanel et Softaculous. Leur \u00e9quipe de support peut installer gratuitement Webmin ou toute autre application sur votre VPS. Confirmez les informations de commande et les informations de facturation et soumettez-les. Votre commande sera trait\u00e9e et confirm\u00e9e, apr\u00e8s quoi vous recevrez un e-mail avec des informations sur votre VPS. Vous obtiendrez un identifiant et un mot de passe SSH avec un acc\u00e8s root complet . Mettre \u00e0 jour et mettre \u00e0 niveau les packages. \u00c0 ce stade, vous souhaiterez peut-\u00eatre soit configurer une entr\u00e9e /etc/hosts locale pour donner \u00e0 l'adresse IP fournie un nom convivial tel que rose.dev . De cette fa\u00e7on, vous pouvez plus facilement vous connecter en SSH \u00e0 votre serveur avec ssh root@rose.dev -p7022 . L'option de configuration -p7022 est requise pour pouvoir utiliser le port SSH non standard. Apr\u00e8s avoir r\u00e9ussi \u00e0 vous connecter en SSH \u00e0 votre serveur en tant que root , la premi\u00e8re chose \u00e0 faire est de mettre \u00e0 jour et de mettre \u00e0 niveau tous les packages install\u00e9s. Cela garantira que vous utilisez le dernier et le meilleur : $ | # apt update $ | # apt upgrade R\u00e9pondez simplement Y si vous y \u00eates invit\u00e9. Avant d'aller plus loin, supprimons Apache2 que nous remplacerons par Nginx : $ | # apt remove apache2* $ | # apt autoremove REMARQUE : Vous ne l'avez peut-\u00eatre pas install\u00e9. Mais mieux vaut pr\u00e9venir que gu\u00e9rir ! Ensuite, vous voudrez installer certains packages essentiels : $ | # apt install vim zip unzip nginx git php-fpm php-cli php-gd php-curl php-mbstring php-xml php-zip php-apcu Cela installera l'\u00e9diteur VIM complet (plut\u00f4t que la version mini fournie avec Ubuntu), le serveur Web Nginx, les commandes GIT et PHP 7.2 . Configurer PHP7.2 FPM. Une fois php-fpm install\u00e9, il y a un l\u00e9ger changement de configuration qui doit avoir lieu pour une configuration plus s\u00e9curis\u00e9e. $ | # vim /etc/php/7.2/fpm/php.ini Recherchez cgi.fix_pathinfo . Ceci sera comment\u00e9 par d\u00e9faut et mis \u00e0 '1'. Il s'agit d'un param\u00e8tre extr\u00eamement peu s\u00fbr car il indique \u00e0 PHP d'essayer d'ex\u00e9cuter le fichier le plus proche qu'il peut trouver si le fichier PHP demand\u00e9 est introuvable. Cela permettrait essentiellement aux utilisateurs de cr\u00e9er des requ\u00eates PHP d'une mani\u00e8re qui leur permettrait d'ex\u00e9cuter des scripts qu'ils ne devraient pas \u00eatre autoris\u00e9s \u00e0 ex\u00e9cuter. D\u00e9commentez cette ligne et changez '1' en '0' pour qu'elle ressemble \u00e0 ceci $ | cgi.fix_pathinfo=0 Enregistrez et fermez le fichier, puis red\u00e9marrez le service. $ | # systemctl restart php7.2-fpm Configurer le pool de connexions Nginx. Nginx a d\u00e9j\u00e0 \u00e9t\u00e9 install\u00e9, mais vous devez le configurer pour qu'il utilise un pool de connexions PHP sp\u00e9cifique \u00e0 l'utilisateur. Cela garantira votre s\u00e9curit\u00e9 et \u00e9vitera toute autorisation de fichier potentielle lorsque vous travaillez sur les fichiers en tant que compte d'utilisateur et via le serveur Web. Acc\u00e9dez au r\u00e9pertoire du pool et cr\u00e9ez une nouvelle configuration grav : $ | # cd /etc/php/7.2/fpm/pool.d $ | # mv www.conf www.conf.bak $ | # vim grav.conf Dans Vim, vous pouvez coller la configuration de pool suivante : 1 | [grav] 2 | 3 | user = grav 4 | group = grav 5 | 6 | listen = /var/run/php/php7.2-fpm.sock 7 | 8 | listen.owner = www-data 9 | listen.group = www-data 10 | 11 | pm = dynamic 12 | pm.max_children = 5 13 | pm.start_servers = 2 14 | pm.min_spare_servers = 1 15 | pm.max_spare_servers = 3 16 | 17 | chdir = / Les \u00e9l\u00e9ments cl\u00e9s ici sont que user et group sont d\u00e9finis sur un utilisateur appel\u00e9 grav et que le socket d'\u00e9coute a un nom unique \u00e0 partir du socket standard. Enregistrez et quittez ce fichier. Nous devons cr\u00e9er l'utilisateur grav d\u00e9di\u00e9 maintenant : $ | # adduser grav Fournissez un mot de passe fort et laissez les autres valeurs par d\u00e9faut. Nous devons ensuite cr\u00e9er un emplacement appropri\u00e9 pour que Nginx serve les fichiers, alors changeons d'utilisateur et cr\u00e9ons ces dossiers, et cr\u00e9ons quelques fichiers de test : $ | # su - grav $ | $ mkdir -p www/html $ | $ cd www/html Cr\u00e9ez un index.html simple avec le contenu de : <h1>\u00c7a marche !</h1> ..et un fichier appel\u00e9 info.php avec le contenu de : <?php phpinfo(); Nous pouvons maintenant quitter cet utilisateur et revenir \u00e0 root afin de configurer la configuration du serveur Nginx : $ | $ exit $ | # cd /etc/nginx/sites-available/ $ | # vim grav Ensuite, collez simplement cette configuration : 1 | server { 2 | #listen 80; 3 | index index.html index.php; 4 | 5 | ## Begin - Server Info 6 | root /home/grav/www/html; 7 | server_name localhost; 8 | ## End - Server Info 9 | 10 | ## Begin - Index 11 | # for subfolders, simply adjust: 12 | # `location /subfolder {` 13 | # and the rewrite to use `/subfolder/index.php` 14 | location / { 15 | try_files $uri $uri/ /index.php?$query_string; 16 | } 17 | ## End - Index 18 | 19 | ## Begin - Security 20 | # deny all direct access for these folders 21 | location ~* /(\\.git|cache|bin|logs|backup|tests)/.*$ { return 403; } 22 | # deny running scripts inside core system folders 23 | location ~* /(system|vendor)/.*\\.(txt|xml|md|html|yaml|yml|php|pl|py|cgi|twig|sh|bat)$ { return 403; } 24 | # deny running scripts inside user folder 25 | location ~* /user/.*\\.(txt|md|yaml|yml|php|pl|py|cgi|twig|sh|bat)$ { return 403; } 26 | # deny access to specific files in the root folder 27 | location ~ /(LICENSE\\.txt|composer\\.lock|composer\\.json|nginx\\.conf|web\\.config|htaccess\\.txt|\\.htaccess) { return 403; } 28 | ## End - Security 29 | 30 | ## Begin - PHP 31 | location ~ \\.php$ { 32 | # Choose either a socket or TCP/IP address 33 | fastcgi_pass unix:/var/run/php/php7.2-fpm.sock; 34 | # fastcgi_pass unix:/var/run/php5-fpm.sock; #legacy 35 | # fastcgi_pass 127.0.0.1:9000; 36 | 37 | fastcgi_split_path_info ^(.+\\.php)(/.+)$; 38 | fastcgi_index index.php; 39 | include fastcgi_params; 40 | fastcgi_param SCRIPT_FILENAME $document_root/$fastcgi_script_name; 41 | } 42 | ## End - PHP 43 | } Il s'agit du fichier stock nginx.conf fourni avec Grav avec 2 modifications. 1) root a \u00e9t\u00e9 adapt\u00e9e \u00e0 notre utilisateur/dossier que nous venons de cr\u00e9er et l'option fastcgi_pass a \u00e9t\u00e9 d\u00e9finie sur le socket que nous avons d\u00e9fini dans notre pool grav . Il ne nous reste plus qu'\u00e0 lier ce fichier de mani\u00e8re appropri\u00e9e pour qu'il soit activ\u00e9 : $ | # cd ../sites-enabled $ | # ln -s ../sites-available/grav $ | # rm default Vous pouvez tester la configuration avec la commande nginx -t . Il devrait renvoyer ce qui suit. $ | nginx : la syntaxe du fichier de configuration /etc/nginx/nginx.conf est correcte $ | nginx : le test du fichier de configuration /etc/nginx/nginx.conf est r\u00e9ussi Maintenant, tout ce que nous avons \u00e0 faire est de red\u00e9marrer Nginx et le processus php7-fpm et de tester pour nous assurer que nous avons correctement configur\u00e9 Nginx et le pool de connexion PHP : $ | # systemctl restart nginx $ | # systemctl restart php7.2-fpm Pointez maintenant votre navigateur vers votre serveur : http://rose.dev et vous devriez voir le texte : Working ! Vous pouvez \u00e9galement tester pour vous assurer que PHP est install\u00e9 et fonctionne correctement en pointant votre navigateur vers : http://rose.dev/info.php . Vous devriez voir une page d'informations PHP standard avec APCu, Opcache, etc. Installation de Grav. C'est la partie facile ! Nous devons d'abord revenir \u00e0 l'utilisateur Grav, donc SSH en tant que grav@rose.dev ou su - grav \u00e0 partir de la connexion root. puis suivez ces \u00e9tapes : $ | $ cd ~/www $ | $ wget -O grav.zip https://getgrav.org/download/core/grav/latest $ | $ unzip grav.zip $ | $ rm -Rf html $ | $ mv grav html Maintenant que c'est fait, vous pouvez confirmer que Grav est install\u00e9 en pointant votre navigateur sur http://rose.dev et vous devriez \u00eatre accueilli avec la page Grav est en cours d'ex\u00e9cution ! Parce que vous avez suivi ces instructions avec diligence, vous pourrez \u00e9galement utiliser les commandes Grav CLI et Grav GPM telles que : $ | $ cd ~/www/html $ | $ bin/grav clear $ | $ | Clearing cache $ | $ | Cleared: cache/twig/* $ | Cleared: cache/compiled/* $ | $ | Touched: /home/grav/www/html/user/config/system.yaml et commandes GPM : $ | $ bin/gpm index","title":"RoseHosting"},{"location":"vps-hebergement-vultr/","text":"Vultr Vultr est une autre entr\u00e9e sur le march\u00e9 des VPS aliment\u00e9s par SSD et offre des caract\u00e9ristiques et des fonctionnalit\u00e9s similaires \u00e0 celles des autres fournisseurs de VPS, mais pour un prix l\u00e9g\u00e8rement inf\u00e9rieur. Vous b\u00e9n\u00e9ficiez d'un stockage 100 % SSD , de processeurs Intel ultra rapides et de 14 emplacements \u00e0 faible latence . Apr\u00e8s avoir cr\u00e9\u00e9 un compte et acc\u00e9d\u00e9 \u00e0 Vultr Control Manager , cliquez sur l'onglet D\u00e9ployer . Laissez le type de serveur sur les instances de calcul et choisissez un emplacement : S\u00e9lectionnez ensuite le syst\u00e8me d'exploitation dans la liste disponible. Nous avons s\u00e9lectionn\u00e9 Ubuntu 18.04 LTS pour \u00eatre coh\u00e9rent avec les autres guides et parce qu'il s'agit de la distribution la plus r\u00e9cente, tr\u00e8s populaire, fiable et bien prise en charge. Pour la taille du serveur , vous pouvez choisir une taille qui vous convient, mais Grav fonctionnera tr\u00e8s bien sur n'importe lequel d'entre eux. Pour les besoins de ce guide, nous utiliserons l'option 1 CPU, 1 Go de m\u00e9moire qui est actuellement au prix de 8 $/mois. Vous pouvez choisir les fonctionnalit\u00e9s facultatives que vous souhaitez, puis fournir une simple \u00e9tiquette de serveur pour identifier l'instance VPS. Nous utiliserons Grav . Cliquez ensuite sur Passer une commande pour cr\u00e9er et installer le serveur. Apr\u00e8s environ une minute, votre serveur devrait \u00eatre pr\u00eat et vous pouvez cliquer sur le lien de gestion \u00e0 c\u00f4t\u00e9 de votre serveur dans la liste pour obtenir les d\u00e9tails du serveur. Sur cette page, vous verrez un panneau de contr\u00f4le pour le serveur qui vous permet de contr\u00f4ler l'\u00e9tat, ainsi que le nom d'utilisateur et le mot de passe root initiaux. Vous pouvez vous connecter en SSH via la commande fournie dans cet onglet en utilisant le mot de passe que vous avez saisi lors de la cr\u00e9ation de l'instance de distribution. L'authentification par cl\u00e9 publique est recommand\u00e9e et Vultur dispose d'une documentation d'authentification par cl\u00e9 publique SSH qui vous guide \u00e0 travers les \u00e9tapes requises. Mettre \u00e0 jour et mettre \u00e0 niveau les packages. \u00c0 ce stade, vous souhaiterez peut-\u00eatre soit configurer une entr\u00e9e /etc/hosts locale pour donner \u00e0 l'adresse IP fournie un nom convivial tel que vultr.dev . De cette fa\u00e7on, vous pouvez plus facilement vous connecter en SSH \u00e0 votre serveur avec ssh root@vultr.dev . Apr\u00e8s avoir r\u00e9ussi \u00e0 vous connecter en SSH \u00e0 votre serveur en tant que root , la premi\u00e8re chose \u00e0 faire est de mettre \u00e0 jour et de mettre \u00e0 niveau tous les packages install\u00e9s. Cela garantira que vous utilisez le dernier et le meilleur : $ | # apt update $ | # apt upgrade R\u00e9pondez simplement Y si vous y \u00eates invit\u00e9. Avant d'aller plus loin, supprimons Apache2 que nous remplacerons par Nginx : $ | # apt remove apache2* $ | # apt autoremove REMARQUE : Vous ne l'avez peut-\u00eatre pas install\u00e9. Mais mieux vaut pr\u00e9venir que gu\u00e9rir ! Ensuite, vous voudrez installer certains packages essentiels : $ |# apt install vim zip unzip nginx git php-fpm php-cli php-gd php-curl php-mbstring php-xml php-zip php-apcu Cela installera l'\u00e9diteur VIM complet (plut\u00f4t que la version mini fournie avec Ubuntu), le serveur Web Nginx, les commandes GIT et PHP 7.2 . Configurer PHP7.2 FPM. Une fois php-fpm install\u00e9, il y a un l\u00e9ger changement de configuration qui doit avoir lieu pour une configuration plus s\u00e9curis\u00e9e. $ | # vim /etc/php/7.2/fpm/php.ini Recherchez cgi.fix_pathinfo . Ceci sera comment\u00e9 par d\u00e9faut et mis \u00e0 '1'. Il s'agit d'un param\u00e8tre extr\u00eamement peu s\u00fbr car il indique \u00e0 PHP d'essayer d'ex\u00e9cuter le fichier le plus proche qu'il peut trouver si le fichier PHP demand\u00e9 est introuvable. Cela permettrait essentiellement aux utilisateurs de cr\u00e9er des requ\u00eates PHP d'une mani\u00e8re qui leur permettrait d'ex\u00e9cuter des scripts qu'ils ne devraient pas \u00eatre autoris\u00e9s \u00e0 ex\u00e9cuter. D\u00e9commentez cette ligne et changez '1' en '0' pour qu'elle ressemble \u00e0 ceci $ | cgi.fix_pathinfo=0 Enregistrez et fermez le fichier, puis red\u00e9marrez le service. $ | # systemctl restart php7.2-fpm Configurer le pool de connexions Nginx. Nginx a d\u00e9j\u00e0 \u00e9t\u00e9 install\u00e9, mais vous devez le configurer pour qu'il utilise un pool de connexions PHP sp\u00e9cifique \u00e0 l'utilisateur. Cela garantira votre s\u00e9curit\u00e9 et \u00e9vitera toute autorisation de fichier potentielle lorsque vous travaillez sur les fichiers en tant que compte d'utilisateur et via le serveur Web. Acc\u00e9dez au r\u00e9pertoire du pool et cr\u00e9ez une nouvelle configuration grav : $ | # cd /etc/php/7.2/fpm/pool.d $ | # mv www.conf www.conf.bak $ | # vim grav.conf Dans Vim, vous pouvez coller la configuration de pool suivante : 1 | [grav] 2 | 3 | user = grav 4 | group = grav 5 | 6 | listen = /var/run/php/php7.2-fpm.sock 7 | 8 | listen.owner = www-data 9 | listen.group = www-data 10 | 11 | pm = dynamic 12 | pm.max_children = 5 13 | pm.start_servers = 2 14 | pm.min_spare_servers = 1 15 | pm.max_spare_servers = 3 16 | 17 | chdir = / Les \u00e9l\u00e9ments cl\u00e9s ici sont que user et group sont d\u00e9finis sur un utilisateur appel\u00e9 grav et que le socket d'\u00e9coute a un nom unique \u00e0 partir du socket standard. Enregistrez et quittez ce fichier. Nous devons cr\u00e9er l'utilisateur grav d\u00e9di\u00e9 maintenant : $ | # adduser grav Fournissez un mot de passe fort et laissez les autres valeurs par d\u00e9faut. Nous devons ensuite cr\u00e9er un emplacement appropri\u00e9 pour que Nginx serve les fichiers, alors changeons d'utilisateur et cr\u00e9ons ces dossiers, et cr\u00e9ons quelques fichiers de test : $ | # su - grav $ | mkdir -p www/html $ | $ cd www/html Cr\u00e9ez un index.html simple avec le contenu de : <h1>\u00c7a marche !</h1> ...et un fichier appel\u00e9 info.php avec le contenu de : <?php phpinfo(); Nous pouvons maintenant quitter cet utilisateur et revenir \u00e0 root afin de configurer la configuration du serveur Nginx : $ | $ exit $ | # cd /etc/nginx/sites-available/ $ | # vim grav Ensuite, collez simplement cette configuration : 1 | server { 2 | #listen 80; 3 | index index.html index.php; 4 | 5 | ## Begin - Server Info 6 | root /home/grav/www/html; 7 | server_name localhost; 8 | ## End - Server Info 9 | 10 | ## Begin - Index 11 | # for subfolders, simply adjust: 12 | # `location /subfolder {` 13 | # and the rewrite to use `/subfolder/index.php` 14 | location / { 15 | try_files $uri $uri/ /index.php?$query_string; 16 | } 17 | ## End - Index 18 | 19 | ## Begin - Security 20 | # deny all direct access for these folders 21 | location ~* /(\\.git|cache|bin|logs|backup|tests)/.*$ { return 403; } 22 | # deny running scripts inside core system folders 23 | location ~* /(system|vendor)/.*\\.(txt|xml|md|html|yaml|yml|php|pl|py|cgi|twig|sh|bat)$ { return 403; } 24 | # deny running scripts inside user folder 25 | location ~* /user/.*\\.(txt|md|yaml|yml|php|pl|py|cgi|twig|sh|bat)$ { return 403; } 26 | # deny access to specific files in the root folder 27 | location ~ /(LICENSE\\.txt|composer\\.lock|composer\\.json|nginx\\.conf|web\\.config|htaccess\\.txt|\\.htaccess) { return 403; } 28 | ## End - Security 29 | 30 | ## Begin - PHP 31 | location ~ \\.php$ { 32 | # Choose either a socket or TCP/IP address 33 | fastcgi_pass unix:/var/run/php/php7.2-fpm.sock; 34 | # fastcgi_pass unix:/var/run/php5-fpm.sock; #legacy 35 | # fastcgi_pass 127.0.0.1:9000; 36 | 37 | fastcgi_split_path_info ^(.+\\.php)(/.+)$; 38 | fastcgi_index index.php; 39 | include fastcgi_params; 40 | fastcgi_param SCRIPT_FILENAME $document_root/$fastcgi_script_name; 41 | } 42 | ## End - PHP 43 | } Il s'agit du fichier stock nginx.conf fourni avec Grav avec 2 modifications. root a \u00e9t\u00e9 adapt\u00e9e \u00e0 notre utilisateur/dossier que nous venons de cr\u00e9er et l'option fastcgi_pass a \u00e9t\u00e9 d\u00e9finie sur le socket que nous avons d\u00e9fini dans notre pool grav . Il ne nous reste plus qu'\u00e0 lier ce fichier de mani\u00e8re appropri\u00e9e pour qu'il soit activ\u00e9 : $ | # cd ../sites-enabled $ | # ln -s ../sites-available/grav $ | # rm default Vous pouvez tester la configuration avec la commande nginx -t . Il devrait renvoyer ce qui suit. $ | nginx: the configuration file /etc/nginx/nginx.conf syntax is ok $ | nginx: configuration file /etc/nginx/nginx.conf test is successful Maintenant, tout ce que nous avons \u00e0 faire est de red\u00e9marrer Nginx et le processus php7-fpm et de tester pour nous assurer que nous avons correctement configur\u00e9 Nginx et le pool de connexion PHP : $ | # systemctl restart nginx $ | # systemctl restart php7.2-fpm Pointez maintenant votre navigateur sur votre serveur : http://vultr.dev et vous devriez voir le texte : Working ! Vous pouvez \u00e9galement tester pour vous assurer que PHP est install\u00e9 et fonctionne correctement en pointant votre navigateur vers : http://vultr.dev/info.php . Vous devriez voir une page d'informations PHP standard avec APCu, Opcache, etc. Installation de Grav. C'est la partie facile ! Nous devons d'abord revenir \u00e0 l'utilisateur Grav, donc SSH en tant que grav@vultr.dev ou su - grav \u00e0 partir de la connexion root. puis suivez ces \u00e9tapes : $ | $ cd ~/www $ | $ wget -O grav.zip https://getgrav.org/download/core/grav/latest $ | $ unzip grav.zip $ | $ rm -Rf html $ | $ mv grav html Maintenant que c'est fait, vous pouvez confirmer que Grav est install\u00e9 en pointant votre navigateur sur http://vultr.dev et vous devriez \u00eatre accueilli avec la page Grav est en cours d'ex\u00e9cution ! Parce que vous avez suivi ces instructions avec diligence, vous pourrez \u00e9galement utiliser les commandes Grav CLI et Grav GPM telles que : $ | $ cd ~/www/html $ | $ bin/grav clear $ | $ | Clearing cache $ | $ | Cleared: cache/twig/* $ | Cleared: cache/compiled/* $ | $ | Touched: /home/grav/www/html/user/config/system.yaml et commandes GPM : $ | $ bin/gpm index","title":"Vultr"},{"location":"web-hebergement-alwaysdata/","text":"alwaysdata alwaysdata est un fournisseur d'h\u00e9bergement europ\u00e9en qui propose diff\u00e9rents plans sur une plate-forme mutualis\u00e9e ou des serveurs g\u00e9r\u00e9s d\u00e9di\u00e9s. Ils incluent de nombreuses fonctionnalit\u00e9s int\u00e9ressantes telles que des sauvegardes automatiques, des certificats SSL gratuits, un acc\u00e8s SSH, etc. Un plan d'h\u00e9bergement partag\u00e9 gratuit est disponible pour les sites de moins de 100 Mo d'espace disque. Sinon, les forfaits d\u00e9marrent \u00e0 8\u20ac/mois. Installer Grav depuis Marketplace. Une place de march\u00e9 publique fournit de nombreuses applications, dont Grav. En fournissant tr\u00e8s peu d'informations, votre instance sera disponible instantan\u00e9ment (HTTPS), sur le plan gratuit , avec les sauvegardes incluses . Personnaliser PHP. Pour configurer PHP, l'instance du site peut \u00eatre personnalis\u00e9e. Ajustez la version PHP et php.ini sur le panneau personnalis\u00e9 fourni par alwaysdata. Comme indiqu\u00e9 dans leur documentation sur les extensions PHP , OPCache est activ\u00e9 par d\u00e9faut. Configurer l'acc\u00e8s SSH. Pour aller plus loin et acc\u00e9der \u00e0 votre espace, il vous suffit d'activer l'acc\u00e8s SSH puisqu'il est d\u00e9sactiv\u00e9 par d\u00e9faut. Une fois de plus, l'action se d\u00e9roule sur le panneau.","title":"alwaysdata"},{"location":"web-hebergement-arvixe/","text":"Arvixe Arvixe est une soci\u00e9t\u00e9 d'h\u00e9bergement prim\u00e9e qui est fi\u00e8re de fournir un h\u00e9bergement Web de qualit\u00e9, abordable et d'une fiabilit\u00e9 in\u00e9gal\u00e9e. Avec d'excellentes fonctionnalit\u00e9s et une position conviviale pour les d\u00e9veloppeurs , l'h\u00e9bergement partag\u00e9 Arvixe est une excellente option pour un site bas\u00e9 sur Grav. Dans ce guide : Nous couvrirons l'essentiel pour configurer un compte d'h\u00e9bergement mutualis\u00e9 Arvixe assez standard pour fonctionner de mani\u00e8re optimale avec Grav. Choisir votre plan d'h\u00e9bergement. Au moment de la r\u00e9daction, Arvixe propose deux options d'h\u00e9bergement partag\u00e9 bas\u00e9es sur Linux qui co\u00fbtent 4,00 $ / mois pour la PersonalClass et 7,00 $ pour le plan PersonalClass Pro . Les deux plans sont presque identiques, mais le plan Pro offre des domaines simultan\u00e9s illimit\u00e9s. L'un ou l'autre fonctionnera bien avec Grav. Configurer PHP. Arvixe fournit un panneau de contr\u00f4le cPanel tr\u00e8s complet. L'URL correspondante est fournie avec votre e-mail de bienvenue. Parce que la version PHP par d\u00e9faut d'Arvixe est 5.3 , la premi\u00e8re chose \u00e0 faire est de changer la version par d\u00e9faut de PHP avec laquelle votre site fonctionne. Sur la page d'accueil principale de cPanel, il y a une section intitul\u00e9e Logiciels/Services . Vous trouverez ici le ntPHSSelector . Lorsque vous cliquez dessus, vous serez confront\u00e9 \u00e0 une arborescence de dossiers dans laquelle vous pouvez d\u00e9finir un dossier sp\u00e9cifique ou d\u00e9finir la version \u00e0 l'\u00e9chelle du site en cliquant sur public_html . Lorsque vous choisissez un dossier, vous pouvez s\u00e9lectionner la version de PHP, s\u00e9lectionnez simplement 5.5 et cliquez sur Soumettre. Cliquez sur Enregistrer pour que cela prenne effet. Vous devriez pouvoir acc\u00e9der \u00e0 votre site via l'URL de votre site Web avec phpinfo.php ajout\u00e9 \u00e0 la fin. Par exemple : http://myarvixe.com/phpinfo.php . Vous pouvez vous assurer que vous utilisez la bonne version de PHP. PHP 5.5 d'Arvixe inclut d\u00e9j\u00e0 Zend OPcache activ\u00e9, il n'y a donc aucune \u00e9tape suppl\u00e9mentaire requise pour obtenir cette configuration. Activation de SSH. Tout d'abord, vous devrez ouvrir l'option Acc\u00e8s SSH/Shell dans la section S\u00e9curit\u00e9 de cPanel. Sur cette page d'acc\u00e8s SSH, vous devez cliquer sur le bouton G\u00e9rer les cl\u00e9s SSH . Il y a deux options \u00e0 ce stade. G\u00e9n\u00e9rez une nouvelle cl\u00e9 ou importez une cl\u00e9 . Il est plus simple de cr\u00e9er votre paire de cl\u00e9s publique/priv\u00e9e localement sur votre ordinateur, puis d'importer simplement la cl\u00e9 publique DSA. Les utilisateurs de Windows devront d'abord installer Cygwin pour fournir de nombreux outils GNU et open source utiles disponibles sur les plates-formes Mac et Linux. Lorsque vous \u00eates invit\u00e9 \u00e0 choisir des packages, assurez-vous de cocher l'option SSH. Apr\u00e8s l'installation, lancez Cygwin Terminal Lancez une fen\u00eatre de terminal et tapez : $ | ssh-keygen -t dsa Ce script de g\u00e9n\u00e9ration de cl\u00e9 vous invitera \u00e0 remplir certaines valeurs, ou vous pouvez simplement appuyer sur [return] pour accepter les valeurs par d\u00e9faut. Cela cr\u00e9era un id_dsa (cl\u00e9 priv\u00e9e) et un id_dsa.pub (cl\u00e9 publique) dans un dossier appel\u00e9 .ssh/ dans votre r\u00e9pertoire personnel. Il est important de vous assurer que vous ne donnez JAMAIS votre cl\u00e9 priv\u00e9e, ni ne la t\u00e9l\u00e9chargez nulle part, uniquement votre cl\u00e9 publique . Une fois g\u00e9n\u00e9r\u00e9, vous pouvez coller le contenu de votre cl\u00e9 publique id_dsa.pub dans le champ Public Key de la section Import SSH key de la page SSH Access : Apr\u00e8s le t\u00e9l\u00e9chargement, vous devriez voir la cl\u00e9 r\u00e9pertori\u00e9e dans la section Cl\u00e9s publiques de la page G\u00e9rer les cl\u00e9s SSH. Vous devez ensuite cliquer sur G\u00e9rer pour vous assurer que la cl\u00e9 est autoris\u00e9e : Cela signifie que vous \u00eates pr\u00eat \u00e0 tester ssh sur votre serveur. $ | ssh arvixe_username@arvixe_servername \u00c9videmment, vous devrez entrer votre nom d'utilisateur fourni par Arvixe pour arvixe_username et le nom de serveur fourni par Arvixe pour arvixe_servername . Configurer l'interface de ligne de commande PHP. Au moment d'\u00e9crire ces lignes, la version PHP par d\u00e9faut d'Arvixe est 5.3 . \u00c9tant donn\u00e9 que Grav n\u00e9cessite PHP 5.5+ , nous devons nous assurer que Grav utilise une version plus r\u00e9cente de PHP sur la ligne de commande (CLI). Pour ce faire, vous devez utiliser SSH pour acc\u00e9der \u00e0 votre serveur et modifier votre fichier .bash_profile et modifier le chemin afin qu'il r\u00e9f\u00e9rence le chemin PHP appropri\u00e9 avant le chemin normal : # .bash_profile # Get the aliases and functions if [ -f ~/.bashrc ]; then . ~/.bashrc fi # User specific environment and startup programs PATH=/opt/ntphp/php55/bin:$PATH:$HOME/bin export PATH Vous aurez besoin de sourcer le profil : $ source ~/.bash_profile ou de vous reconnecter \u00e0 votre terminal pour que votre changement de chemin prenne effet, mais apr\u00e8s cela, vous devriez pouvoir taper php -v et voir : $ | php -v $ | PHP 5.5.18 (cli) (built: Nov 19 2014 14:29:20) $ | Copyright (c) 1997-2014 The PHP Group $ | Zend Engine v2.5.0, Copyright (c) 1998-2014 Zend Technologies $ | with Zend OPcache v7.0.4-dev, Copyright (c) 1999-2014, by Zend Technologies Installer et tester Grav. En utilisant vos nouvelles capacit\u00e9s SSH trouv\u00e9es, connectons-nous en SSH \u00e0 votre serveur Arvixe (si vous n'y \u00eates pas d\u00e9j\u00e0) et t\u00e9l\u00e9chargez la derni\u00e8re version de Grav, d\u00e9compressez-la et testez-la ! Nous allons extraire Grav dans un sous-dossier /grav , mais vous pouvez d\u00e9compresser directement \u00e0 la racine de votre dossier ~/public_html/ pour vous assurer que Grav est accessible directement. $ | $ cd ~/public_html $ | [~/public_html]$ curl -L -O https://github.com/getgrav/grav/releases/download/1.7.28/grav-v1.7.28.zip $ | [~/public_html]$ unzip grav-v1.7.28.zip Vous devriez maintenant pouvoir pointer votre navigateur vers http://myarvixe.com/grav en utilisant bien s\u00fbr l'URL appropri\u00e9e. Parce que vous avez suivi ces instructions avec diligence, vous pourrez \u00e9galement utiliser les commandes Grav CLI et Grav GPM telles que : $ | $ cd ~/public_html/grav $ | $ bin/grav clear-cache | | Clearing cache | | Cleared: cache/twig/* | Cleared: cache/doctrine/* | Cleared: cache/compiled/* | Cleared: cache/validated-* | Cleared: images/* | Cleared: assets/* | | Touched: /home/your_user/public_html/grav/user/config/system.yaml","title":"Arvixe"},{"location":"web-hebergement-crucial/","text":"H\u00e9bergement Web Crucial Crucial Web Hosting est un autre des nouveaux pains des plates-formes d'h\u00e9bergement Web modernes qui se concentre \u00e0 la fois sur la vitesse et le support. L'utilisation de disques SSD et de serveurs Web Litespeed avec les derniers processeurs Intel XEON garantit que Grav fonctionne de mani\u00e8re fantastique. Crucial fournit \u00e9galement PHP jusqu'aux derni\u00e8res versions de PHP 7.0. Dans ce guide, nous couvrirons les \u00e9l\u00e9ments essentiels pour configurer le package d'h\u00e9bergement Tier-1 Split-Shared pour qu'il fonctionne de mani\u00e8re optimale avec Grav. Choisir votre plan d'h\u00e9bergement. L'h\u00e9bergement Web Crucial propose deux options principales en mati\u00e8re d'h\u00e9bergement : l'h\u00e9bergement Spit-Shared et Split-Dedicated . Selon Crucial, ces options bas\u00e9es sur le cloud sont sup\u00e9rieures aux configurations d'h\u00e9bergement traditionnelles car elles offrent une meilleure isolation et de meilleures performances. L'h\u00e9bergement partag\u00e9 partag\u00e9 varie de 10 $/mois \u00e0 100 $/mois selon la m\u00e9moire et l'espace SSD. Split Dedicated varie de 150 $/mois \u00e0 650 $/mois en fonction du nombre de c\u0153urs, de la m\u00e9moire, de l'espace SSD et de la bande passante. Nous n'utiliserons que l'option de base de 10 $/mois fournie avec 256 Mo de m\u00e9moire et 10 Go d'espace SSD. Activation de SSH. Tout d'abord, vous devrez ouvrir l'option Basculer l'acc\u00e8s SSH dans la section S\u00e9curit\u00e9 de cPanel. Sur cette page d'acc\u00e8s SSH, vous devez cliquer sur le bouton Activer l'acc\u00e8s SSH . Ensuite, dans la section S\u00e9curit\u00e9 , cliquez \u00e0 nouveau sur l'option G\u00e9rer les cl\u00e9s SSH . Il y a deux options \u00e0 ce stade. G\u00e9n\u00e9rez une nouvelle cl\u00e9 ou importez une cl\u00e9 . Il est plus simple de cr\u00e9er votre paire de cl\u00e9s publique/priv\u00e9e localement sur votre ordinateur, puis d'importer simplement la cl\u00e9 publique DSA. Les utilisateurs de Windows devront d'abord installer Cygwin pour fournir de nombreux outils GNU et open source utiles disponibles sur les plates-formes Mac et Linux. Lorsque vous \u00eates invit\u00e9 \u00e0 choisir des packages, assurez-vous de cocher l'option SSH. Apr\u00e8s l'installation, lancez le Cygwin Terminal . Lancez une fen\u00eatre de terminal et tapez : $ | ssh-keygen -t dsa Ce script de g\u00e9n\u00e9ration de cl\u00e9 vous invitera \u00e0 remplir certaines valeurs, ou vous pouvez simplement appuyer sur [return] pour accepter les valeurs par d\u00e9faut. Cela cr\u00e9era un id_dsa (cl\u00e9 priv\u00e9e) et un id_dsa.pub (cl\u00e9 publique) dans un dossier appel\u00e9 .ssh/ dans votre r\u00e9pertoire personnel. Il est important de vous assurer que vous ne donnez JAMAIS votre cl\u00e9 priv\u00e9e, ni ne la t\u00e9l\u00e9chargez nulle part, uniquement votre cl\u00e9 publique . Une fois g\u00e9n\u00e9r\u00e9, vous pouvez coller le contenu de votre cl\u00e9 publique id_dsa.pub dans le champ Public Key de la section Import SSH key de la page SSH Access : Apr\u00e8s le t\u00e9l\u00e9chargement, vous devriez voir la cl\u00e9 r\u00e9pertori\u00e9e dans la section Cl\u00e9s publiques de la page G\u00e9rer les cl\u00e9s SSH. Vous devez ensuite cliquer sur G\u00e9rer pour vous assurer que la cl\u00e9 est autoris\u00e9e : Cela signifie que vous \u00eates pr\u00eat \u00e0 tester ssh sur votre serveur. $ | ssh crucial_username@crucial_servername \u00c9videmment, vous devrez entrer votre nom d'utilisateur fourni par Crucial pour crucial_username et le nom de serveur fourni par crucial pour crucial_servername . Configurer PHP. Actuellement, Crucial Web Hosting utilise par d\u00e9faut PHP 5.3 , ce qui n'est pas \u00e0 la hauteur des exigences minimales pour Grav. Heureusement, Crucial prend en charge PHP jusqu'\u00e0 la derni\u00e8re version de PHP 7.0 , nous changeons donc la version de PHP pour quelque chose de plus actuel. Pour ce faire, nous devons ajouter un appel de gestionnaire sp\u00e9cial dans le fichier .htaccess \u00e0 la racine Web. Cr\u00e9ez donc le fichier ~/www/.htaccess et mettez ce qui suit : $ | Application AddHandler/x-httpd-php70 .php Enregistrez le fichier. Pour tester que vous avez la bonne version de PHP , vous pouvez cr\u00e9er un fichier temporaire : ~/www/info.php et le mettre dans le contenu : <?php phpinfo(); Enregistrez le fichier et pointez votre navigateur vers ce fichier info.php sur votre site, et vous devriez \u00eatre accueilli avec des informations PHP refl\u00e9tant la version que vous avez s\u00e9lectionn\u00e9e pr\u00e9c\u00e9demment : Si vous installez Grav \u00e0 la racine de votre compte d'h\u00e9bergement, vous devrez ajouter la m\u00e9thode AddHandler en haut du fichier .htaccess fourni avec Grav. Vous pouvez choisir une autre version de php pour ex\u00e9cuter Grav sous en utilisant comme PHP 5.6 avec x-httpd-php56 par exemple. Configurer l'interface de ligne de commande PHP. Au moment d'\u00e9crire ces lignes, la version PHP par d\u00e9faut de Crucial est la 5.3 . \u00c9tant donn\u00e9 que Grav n\u00e9cessite PHP 5.5+ , nous devons nous assurer que Grav utilise une version plus r\u00e9cente de PHP sur la ligne de commande (CLI). Pour ce faire, vous devez utiliser SSH pour acc\u00e9der \u00e0 votre serveur et cr\u00e9er un nouveau lien symbolique vers une version plus r\u00e9cente de PHP dans le dossier bin/ de votre utilisateur : $ | ln -s /usr/local/bin/php-70 ~/bin/php Ensuite, modifiez votre fichier .bash_profile et ajoutez la r\u00e9f\u00e9rence $HOME/bin devant la cha\u00eene $PATH normale : 1 | # .bash_profile 2 | 3 | # Get the aliases and functions 4 | if [ -f ~/.bashrc ]; then 5 | . ~/.bashrc 6 | fi 7 | 8 | # User specific environment and startup programs 9 | 10| PATH=$HOME/bin:$PATH 11| 12| export PATH Vous aurez besoin de sourcer le profil : $ source ~/.bash_profile ou de vous reconnecter \u00e0 votre terminal pour que votre changement de chemin prenne effet, mais apr\u00e8s cela, vous devriez pouvoir taper php -v et voir : $ | php -v | PHP 7.0.1 (cli) (built: Dec 28 2015 17:55:36) ( NTS ) | Copyright (c) 1997-2015 The PHP Group | Zend Engine v3.0.0, Copyright (c) 1998-2015 Zend Technologies | with Zend OPcache v7.0.6-dev, Copyright (c) 1999-2015, by Zend Technologies Installer et tester Grav. En utilisant vos nouvelles capacit\u00e9s SSH trouv\u00e9es, connectons-nous en SSH \u00e0 votre serveur Crucial (si vous n'y \u00eates pas d\u00e9j\u00e0) et t\u00e9l\u00e9chargez la derni\u00e8re version de Grav, d\u00e9compressez-la et testez-la ! Nous allons extraire Grav dans un sous-dossier /grav , mais vous pouvez d\u00e9compresser directement \u00e0 la racine de votre dossier ~/www/ pour vous assurer que Grav est accessible directement. $ | cd ~/www $ | wget --no-check-certificate https://getgrav.org/download/core/grav/latest $ | unzip grav-v1.7.28.zip Vous devriez maintenant pouvoir pointer votre navigateur vers http://mycrucialserver.com/grav en utilisant bien s\u00fbr l'URL appropri\u00e9e. Parce que vous avez suivi ces instructions avec diligence, vous pourrez \u00e9galement utiliser les commandes Grav CLI et Grav GPM telles que : $ | cd ~/public_html/grav $ | bin/grav clear-cache | | Clearing cache | | Cleared: cache/twig/* | Cleared: cache/doctrine/* | Cleared: cache/compiled/* | Cleared: cache/validated-* | Cleared: images/* | Cleared: assets/* | | Touched: /home/your_user/public_html/grav/user/config/system.yaml","title":"Crucial"},{"location":"web-hebergement-dreamhost/","text":"Dreamhost Dreamhost est un c\u00e9l\u00e8bre fournisseur d'h\u00e9bergement qui propose diff\u00e9rents niveaux de service allant de l'h\u00e9bergement partag\u00e9 aliment\u00e9 par SSD aux serveurs d\u00e9di\u00e9s. Concentrons-nous sur l'offre bas de gamme, l'h\u00e9bergement mutualis\u00e9. Il est livr\u00e9 avec un excellent panneau d'administration, pas le cPanel habituel, mais un panneau personnalis\u00e9 que vous pouvez utiliser pour tout configurer, de la gestion des utilisateurs SSH au choix de la version PHP que vous ex\u00e9cutez. Configurer PHP. Vous pouvez configurer chaque (sous-)domaine pour qu'il ait sa propre version de PHP. Au moment de la r\u00e9daction, la version PHP par d\u00e9faut pour les nouveaux sites est 7.4. Vous pouvez choisir d'utiliser une version ult\u00e9rieure (8.0 disponible), et nous vous recommandons de le faire car PHP 7.3.6+ est requis pour Grav. Activation de SSH. Ouvrez le panneau Utilisateurs. Chaque utilisateur Dreamhost peut avoir diff\u00e9rents niveaux d'acc\u00e8s. D\u00e9finissez votre utilisateur sur Shell User. Au moment de la r\u00e9daction, la version par d\u00e9faut de PHP CLI est 8.0.8, vous n'avez donc rien \u00e0 faire pour que les outils Grav CLI fonctionnent correctement. Installer et tester Grav. Lorsque vous ajoutez un nouveau domaine, Dreamhost cr\u00e9e un dossier pour celui-ci sous le dossier de votre compte. Acc\u00e9dez au serveur en utilisant SSH et allez dans ce dossier, puis t\u00e9l\u00e9chargez Grav dedans : $ | wget https://github.com/getgrav/grav/releases/download/1.7.28/grav-v1.7.28.zip (Veuillez v\u00e9rifier la derni\u00e8re version disponible) D\u00e9compressez avec unzip grav-v1.7.28.zip . Cela cr\u00e9era un dossier grav , nous devons donc d\u00e9placer les fichiers vers le dossier actuel. Tapez simplement : $ | mv grav/* grav/.htaccess ./; rmdir grav Vous pouvez maintenant \u00e9galement supprimer le fichier zip : $ | rm grav-v1.7.28.zip Grav a maintenant \u00e9t\u00e9 install\u00e9 avec succ\u00e8s. Essayez d'acc\u00e9der au site \u00e0 partir du navigateur, vous devriez voir un message de bienvenue Grav. Vous pouvez maintenant installer des plugins et des th\u00e8mes, par exemple tapez ceci pour installer le plugin Grav Admin : $ | bin/gpm install admin Activer OPCache. Sur les plans d'h\u00e9bergement mutualis\u00e9 Dreamhost. OPCache est activ\u00e9 par d\u00e9faut. Sur les forfaits VPS Dreamhost. OPCache est pris en charge mais n'est pas activ\u00e9 par d\u00e9faut. Vous devez l'activer manuellement en cr\u00e9ant un fichier phprc sous votre dossier utilisateur, sous .php/7.4/phprc (changez le num\u00e9ro en fonction de votre version de PHP). Dans ce fichier, mettez le code suivant : zend_extension=opcache.so Vous pouvez personnaliser davantage OPCache dans ce fichier en fonction de vos besoins.","title":"Dreamhost"},{"location":"web-hebergement-rochen/","text":"H\u00e9bergement Web Rochen Rochen Web Hosting est le partenaire d'h\u00e9bergement de longue date de GetGrav.org et de RocketTheme.com . Rochen propose d\u00e9sormais une nouvelle offre d'h\u00e9bergement mutualis\u00e9 premium qui utilise des disques SSD , les serveurs Web Litespeed avec les derniers processeurs Intel XEON garantissent que Grav fonctionne de mani\u00e8re optimale. Ils offrent \u00e9galement le choix de serveurs bas\u00e9s aux \u00c9tats-Unis ou au Royaume-Uni, afin que vous puissiez choisir la meilleure option pour vos utilisateurs. Choisir votre plan d'h\u00e9bergement. Rochen Web Hosting propose deux options en mati\u00e8re d'h\u00e9bergement : l'h\u00e9bergement partag\u00e9 et l'h\u00e9bergement en rafale . Rochen recommande l'option Burst pour les sites plus fr\u00e9quent\u00e9s et plus exigeants. Pour les besoins de ce guide, nous utiliserons l'option Partag\u00e9 de base. L'h\u00e9bergement partag\u00e9 varie de 7,95 $/mois \u00e0 13,95 $/mois selon la dur\u00e9e de l'engagement. Activation de SSH. Tout d'abord, vous devrez ouvrir l'option Basculer l'acc\u00e8s SSH dans la section S\u00e9curit\u00e9 de cPanel. Sur cette page d'acc\u00e8s SSH, vous devez cliquer sur le bouton Activer l'acc\u00e8s SSH . Ensuite, dans la section S\u00e9curit\u00e9 , cliquez \u00e0 nouveau sur l'option G\u00e9rer les cl\u00e9s SSH . Il y a deux options \u00e0 ce stade. G\u00e9n\u00e9rez une nouvelle cl\u00e9 ou importez une cl\u00e9 . Il est plus simple de cr\u00e9er votre paire de cl\u00e9s publique/priv\u00e9e localement sur votre ordinateur, puis d'importer simplement la cl\u00e9 publique DSA. Les utilisateurs de Windows devront d'abord installer Cygwin pour fournir de nombreux outils GNU et open source utiles disponibles sur les plates-formes Mac et Linux. Lorsque vous \u00eates invit\u00e9 \u00e0 choisir des packages, assurez-vous de cocher l'option SSH. Apr\u00e8s l'installation, lancez Cygwin Terminal . Lancez une fen\u00eatre de terminal et tapez : $ | ssh-keygen -t dsa Ce script de g\u00e9n\u00e9ration de cl\u00e9 vous invitera \u00e0 remplir certaines valeurs, ou vous pouvez simplement appuyer sur [return] pour accepter les valeurs par d\u00e9faut. Cela cr\u00e9era un id_dsa (cl\u00e9 priv\u00e9e) et un id_dsa.pub (cl\u00e9 publique) dans un dossier appel\u00e9 .ssh/ dans votre r\u00e9pertoire personnel. Il est important de vous assurer que vous ne donnez JAMAIS votre cl\u00e9 priv\u00e9e, ni ne la t\u00e9l\u00e9chargez nulle part, uniquement votre cl\u00e9 publique . Une fois g\u00e9n\u00e9r\u00e9, vous pouvez coller le contenu de votre cl\u00e9 publique id_dsa.pub dans le champ Public Key de la section Import SSH key de la page SSH Access : Apr\u00e8s le t\u00e9l\u00e9chargement, vous devriez voir la cl\u00e9 r\u00e9pertori\u00e9e dans la section Cl\u00e9s publiques de la page G\u00e9rer les cl\u00e9s SSH. Vous devez ensuite cliquer sur G\u00e9rer pour vous assurer que la cl\u00e9 est autoris\u00e9e : Pour activer l'acc\u00e8s SSH pour votre compte, acc\u00e9dez simplement \u00e0 la section Services g\u00e9r\u00e9s sur le portail my.rochen.com et cliquez sur les informations de votre compte d'h\u00e9bergement mutualis\u00e9 . \u00c0 c\u00f4t\u00e9 de l'option SSH , cliquez sur le lien D\u00e9sactiv\u00e9 et confirmez que vous souhaitez activer SSH. Cela signifie que vous \u00eates pr\u00eat \u00e0 tester ssh sur votre serveur. $ | ssh rochen_username@rochen_servername \u00c9videmment, vous devrez entrer votre nom d'utilisateur fourni par Rochen pour rochen_username et le nom de serveur fourni par rochen pour rochen_servername . Configuration de PHP et de la mise en cache. Rochen utilise PHP 5.4 par d\u00e9faut, mais vous avez la possibilit\u00e9 d'utiliser une version 5.5 ou 5.6 plus r\u00e9cente qui est requise pour Grav. La premi\u00e8re chose \u00e0 faire est de changer la version par d\u00e9faut de PHP avec laquelle votre site fonctionne. Cliquez donc sur le lien S\u00e9lectionner la version PHP dans la section Logiciels et services . Vous verrez une page indiquant la version actuelle de PHP. Vous trouverez ci-dessous une liste d\u00e9roulante qui vous permet de choisir des versions alternatives. Choisissez 5.6 et cliquez sur le bouton Set as current . Rochen est une race rare dans le monde des h\u00e9bergeurs, en ce sens qu'ils fournissent des extensions de mise en cache sophistiqu\u00e9es pour PHP. Pour en profiter, activez l'extension de mise en cache apcu , ainsi que l'extension Zend opcache . Ensuite, cliquez sur Save en bas de ces options. Une optimisation que vous devriez faire est de d\u00e9sactiver l'extension xdebug qui est activ\u00e9e par d\u00e9faut, mais pas n\u00e9cessaire dans un environnement de production, en fait cela ne fait que ralentir les choses. Pour tester que vous avez la bonne version de PHP , Zend OPcache et APCu en cours d'ex\u00e9cution, vous pouvez cr\u00e9er un fichier temporaire : public_html/info.php et le mettre dans le contenu : <?php phpinfo(); Enregistrez le fichier et pointez votre navigateur vers ce fichier info.php sur votre site, et vous devriez \u00eatre accueilli avec des informations PHP refl\u00e9tant la version que vous avez s\u00e9lectionn\u00e9e pr\u00e9c\u00e9demment : Vous devriez \u00e9galement pouvoir faire d\u00e9filer vers le bas et voir Zend OPcache r\u00e9pertori\u00e9 dans le bloc moteur zend , et une section APCu en dessous : Installer et tester Grav. En utilisant vos nouvelles capacit\u00e9s SSH trouv\u00e9es, connectons-nous en SSH \u00e0 votre serveur Rochen (si vous n'y \u00eates pas d\u00e9j\u00e0) et t\u00e9l\u00e9chargez la derni\u00e8re version de Grav, d\u00e9compressez-la et testez-la ! Nous allons extraire Grav dans un sous-dossier /grav , mais vous pouvez d\u00e9compresser directement \u00e0 la racine de votre dossier ~/www/ pour vous assurer que Grav est accessible directement. $ | cd ~/www $ | wget https://getgrav.org/download/core/grav/latest $ |unzip grav-v1.7.28.zip Vous devriez maintenant pouvoir pointer votre navigateur vers http://myrochenserver.com/grav en utilisant l'URL appropri\u00e9e bien s\u00fbr. Parce que vous avez suivi ces instructions avec diligence, vous pourrez \u00e9galement utiliser les commandes Grav CLI et Grav GPM telles que : $ | cd ~/public_html/grav $ | bin/grav clear-cache | | Clearing cache | | Cleared: cache/twig/* | Cleared: cache/doctrine/* | Cleared: cache/compiled/* | Cleared: cache/validated-* | Cleared: images/* | Cleared: assets/* | | Touched: /home/your_user/public_html/grav/user/config/system.yaml","title":"Rochen"},{"location":"web-hebergement-siteground/","text":"SiteGround Le slogan de SiteGround est Web Hosting Crafted With Care , et c'est pour cette raison qu'il s'est av\u00e9r\u00e9 \u00eatre une solution d'h\u00e9bergement populaire pour les membres des communaut\u00e9s Joomla et WordPress. C'est \u00e9galement une bonne option pour h\u00e9berger un site Web bas\u00e9 sur Grav. Dans ce guide, nous couvrirons les \u00e9l\u00e9ments essentiels pour configurer un compte d'h\u00e9bergement partag\u00e9 SiteGround assez standard pour fonctionner de mani\u00e8re optimale avec Grav. Choisir votre plan d'h\u00e9bergement. Au moment de la r\u00e9daction de cet article, SiteGround propose trois options d'h\u00e9bergement partag\u00e9 allant de 3,95 $/mois bas de gamme \u00e0 14,95 $/mois pour ce qu'ils appellent le plan GoGeek . Nous vous sugg\u00e9rons fortement d'opter pour le plan GoGeek haut de gamme mais toujours tr\u00e8s bon march\u00e9. Cela fournit un meilleur mat\u00e9riel de serveur et moins d'utilisateurs sur le serveur. Configuration. SiteGround fournit un panneau de contr\u00f4le cPanel tr\u00e8s complet. Celui-ci est directement accessible via l'onglet Mes comptes . Activation de SSH. Tout d'abord, vous devrez ouvrir l'option Acc\u00e8s SSH/Shell dans la section AVANC\u00c9 de cPanel. SiteGround fournit un didacticiel tr\u00e8s complet pour l' utilisation de SSH , mais il est plus simple de cr\u00e9er votre paire de cl\u00e9s publique/priv\u00e9e localement sur votre ordinateur, puis de simplement t\u00e9l\u00e9charger la cl\u00e9 publique DSA. Les utilisateurs de Windows devront d'abord installer Cygwin pour fournir de nombreux outils GNU et open source utiles disponibles sur les plates-formes Mac et Linux. Lorsque vous \u00eates invit\u00e9 \u00e0 choisir des packages, assurez-vous de cocher l'option SSH. Apr\u00e8s l'installation, lancez le Cygwin Terminal . Lancez une fen\u00eatre de terminal et tapez : $ | $ ssh-keygen -t dsa Ce script de g\u00e9n\u00e9ration de cl\u00e9 vous invitera \u00e0 remplir certaines valeurs, ou vous pouvez simplement appuyer sur [return] pour accepter les valeurs par d\u00e9faut. Cela cr\u00e9era un id_dsa (cl\u00e9 priv\u00e9e) et un id_dsa.pub (cl\u00e9 publique) dans un dossier appel\u00e9 .ssh/ dans votre r\u00e9pertoire personnel. Il est important de vous assurer que vous ne donnez JAMAIS votre cl\u00e9 priv\u00e9e, ni ne la t\u00e9l\u00e9chargez nulle part, uniquement votre cl\u00e9 publique . Une fois g\u00e9n\u00e9r\u00e9, vous pouvez coller le contenu de votre cl\u00e9 publique id_dsa.pub dans le champ Public Key de la section Upload SSH key de la page SSH/Shell Access : Apr\u00e8s le t\u00e9l\u00e9chargement, vous devriez voir la cl\u00e9 r\u00e9pertori\u00e9e au bas de cette page. Cela signifie que vous \u00eates pr\u00eat \u00e0 tester SSH sur votre serveur. $ | $ ssh siteground_username@siteground_servername -p18765 \u00c9videmment, vous devrez entrer votre nom d'utilisateur fourni par SiteGround pour siteground_username et le nom de serveur fourni par SiteGround pour siteground_servername . Le -p18765 est important car il s'agit du port non standard sur lequel SiteGround ex\u00e9cute SSH. Activer PHP OPcache. Mise \u00e0 jour [2016-03] : le support de Siteground a indiqu\u00e9 qu'OPCache est disponible \u00e0 partir de PHP7 et non de 5.5. OPCache \u00e9tait alors activ\u00e9 par d\u00e9faut, et donc aucune configuration suppl\u00e9mentaire n'\u00e9tait requise \u00e0 cette \u00e9tape de la configuration, de sorte que certaines des instructions ci-dessous peuvent ne plus \u00eatre n\u00e9cessaires. Par d\u00e9faut, l'h\u00e9bergement SiteGround prend en charge Zend OPcache , mais il n'est pas activ\u00e9 . Vous devez l'activer manuellement en cr\u00e9ant un fichier php.ini dans votre dossier public_html/ avec le contenu : zend_extension=opcache.so Pour tester que vous avez la bonne version de PHP et que Zend OPcache fonctionne, vous pouvez cr\u00e9er un fichier temporaire : public_html/info.php et le mettre dans le contenu : <?php phpinfo(); Enregistrez le fichier et pointez votre navigateur vers ce fichier info.php sur votre site et vous devriez \u00eatre accueilli avec une information PHP refl\u00e9tant la version que vous avez s\u00e9lectionn\u00e9e pr\u00e9c\u00e9demment : Vous devriez \u00e9galement pouvoir faire d\u00e9filer vers le bas et voir une section appel\u00e9e Zend OPcache : Installer et tester Grav. En utilisant vos nouvelles capacit\u00e9s SSH trouv\u00e9es, connectons-nous en SSH \u00e0 votre serveur SiteGround (si vous n'y \u00eates pas d\u00e9j\u00e0) et t\u00e9l\u00e9chargez la derni\u00e8re version de Grav, d\u00e9compressez-la et testez-la ! Nous allons extraire Grav dans un sous-dossier /grav, mais vous pouvez d\u00e9compresser directement \u00e0 la racine de votre dossier ~/public_html/ pour vous assurer que Grav est accessible directement. $ | cd ~/public_html $ | [~/public_html]$ curl -L -O https://github.com/getgrav/grav/releases/download/1.7.28/grav-v1.7.28.zip $ | [~/public_html]$ unzip grav-v1.7.28.zip Vous devriez maintenant pouvoir pointer votre navigateur vers http://mysiteground.com/grav en utilisant bien s\u00fbr l'URL appropri\u00e9e. Mise \u00e0 jour [2016-03] : Le chemin d'acc\u00e8s \u00e0 la CLI pour PHP 7 sur l'h\u00e9bergement mutualis\u00e9 Siteground semble actuellement \u00eatre : /usr/local/php70/bin/php-cli , et donc pour l'utilisation en ligne de commande de gpm/grav vous pourrait cr\u00e9er un alias, puis r\u00e9f\u00e9rencer le php-cli directement via le terminal, par ex. alias php-cli=\"/usr/local/php70/bin/php-cli \". Ensuite, vous pouvez l'utiliser comme : $php-cli bin/grav list . Parce que vous avez suivi ces instructions avec diligence, vous pourrez \u00e9galement utiliser les commandes Grav CLI et Grav GPM telles que : $ | $ cd ~/public_html/grav $ | $ bin/grav clear-cache | | Clearing cache | | Cleared: cache/twig/* | Cleared: cache/doctrine/* | Cleared: cache/compiled/* | Cleared: cache/validated-* | Cleared: images/* | Cleared: assets/* | | Touched: /home/your_user/public_html/grav/user/config/system.yaml Pour utiliser le gestionnaire de paquets Grav (gpm), vous devrez le d\u00e9finir comme ex\u00e9cutable en ex\u00e9cutant cette commande dans votre dossier Grav. $ chmod +x bin/gpm","title":"SiteGround"},{"location":"web-hebergement-wirenine/","text":"WIreNine WireNine est un fournisseur d'h\u00e9bergement rapide et moderne qui se concentre sur les performances gr\u00e2ce \u00e0 l'utilisation d'un stockage 100% SSD , de serveurs Web Litespeed , des derniers processeurs Intel E5 avec RAM DDR4 rapide. Ces fonctionnalit\u00e9s garantissent que leurs offres d'h\u00e9bergement partag\u00e9 sont une solution fantastique pour les sites Grav. Dans ce guide, nous couvrirons l'essentiel pour configurer un compte d'h\u00e9bergement mutualis\u00e9 au milieu de la route pour qu'il fonctionne de mani\u00e8re optimale avec Grav. Choisir votre plan d'h\u00e9bergement. WireNine propose trois plans d'h\u00e9bergement partag\u00e9 allant de 9 $/mois pour un plan de base \u00e0 18 $/mois pour leur option de trafic intense. La configuration de tous ces plans est la m\u00eame, mais nous recommandons le plan interm\u00e9diaire Plus \u00e0 14 $/mois car il offre un bon compromis avec 1 CPU et 1 Go de m\u00e9moire. Activation de SSH. Tout d'abord, vous devrez ouvrir l'option Acc\u00e8s SSH dans la section S\u00e9curit\u00e9 de cPanel. Sur cette page d'acc\u00e8s SSH, vous devez cliquer sur le bouton G\u00e9rer les cl\u00e9s SSH . Il y a deux options \u00e0 ce stade. G\u00e9n\u00e9rez une nouvelle cl\u00e9 ou importez une cl\u00e9 . Il est plus simple de cr\u00e9er votre paire de cl\u00e9s publique/priv\u00e9e localement sur votre ordinateur, puis d'importer simplement la cl\u00e9 publique DSA. Les utilisateurs de Windows devront d'abord installer Cygwin pour fournir de nombreux outils GNU et open source utiles disponibles sur les plates-formes Mac et Linux. Lorsque vous \u00eates invit\u00e9 \u00e0 choisir des packages, assurez-vous de cocher l'option SSH. Apr\u00e8s l'installation, lancez le Cygwin Terminal . Lancez une fen\u00eatre de terminal et tapez : $ | ssh-keygen -t dsa Ce script de g\u00e9n\u00e9ration de cl\u00e9 vous invitera \u00e0 remplir certaines valeurs, ou vous pouvez simplement appuyer sur [return] pour accepter les valeurs par d\u00e9faut. Cela cr\u00e9era un id_dsa (cl\u00e9 priv\u00e9e) et un id_dsa.pub (cl\u00e9 publique) dans un dossier appel\u00e9 .ssh/ dans votre r\u00e9pertoire personnel. Il est important de vous assurer que vous ne donnez JAMAIS votre cl\u00e9 priv\u00e9e, ni ne la t\u00e9l\u00e9chargez nulle part, uniquement votre cl\u00e9 publique . Une fois g\u00e9n\u00e9r\u00e9, vous pouvez coller le contenu de votre cl\u00e9 publique id_dsa.pub dans le champ Public Key de la section Import SSH key de la page SSH Access : Apr\u00e8s le t\u00e9l\u00e9chargement, vous devriez voir la cl\u00e9 r\u00e9pertori\u00e9e dans la section Cl\u00e9s publiques de la page G\u00e9rer les cl\u00e9s SSH. Vous devez ensuite cliquer sur G\u00e9rer pour vous assurer que la cl\u00e9 est autoris\u00e9e : WireNine ne semble pas activer Shell Access sur leurs comptes par d\u00e9faut. Vous devrez ouvrir un ticket d'assistance et demander l'activation de l'acc\u00e8s au shell pour votre compte. Cela signifie que vous \u00eates pr\u00eat \u00e0 tester ssh sur votre serveur. $ | ssh wirenine_username@wirenine_servername -p2200 \u00c9videmment, vous devrez entrer votre nom d'utilisateur fourni par WireNine pour wirenine_username et le nom de serveur fourni par WireNine pour wirenine_servername . Le -p2200 est important car il s'agit du port non standard sur lequel WireNine ex\u00e9cute SSH. Erreurs 403 interdites. Il semble que dans certaines configurations WireNine, les autorisations par d\u00e9faut sur les fichiers cr\u00e9\u00e9s par l'utilisateur soient incorrectes et provoquent des erreurs 403 Forbidden en raison du d\u00e9clenchement des indicateurs de s\u00e9curit\u00e9. Le probl\u00e8me est que l' umask par d\u00e9faut est incorrect et que les fichiers sont cr\u00e9\u00e9s avec 775 pour les dossiers et 664 pour les fichiers. Ces fichiers doivent \u00eatre respectivement 755 et 644 pour fonctionner correctement. Cela devrait \u00eatre configur\u00e9 automatiquement, mais ce n'est pas le cas actuellement. Cependant, la solution est facile. Modifiez simplement votre fichier .bash_profile et ajoutez cette ligne au bas de celui-ci. $ | masque 022 Vous devrez vous reconnecter \u00e0 votre terminal pour que ce changement soit pris en compte. Configuration de PHP et de la mise en cache. WireNine utilise PHP 5.4 par d\u00e9faut, mais vous avez la possibilit\u00e9 d'utiliser les nouvelles versions 5.5 , 5.6 ou 7.0 . Grav n\u00e9cessite au moins PHP 5.5.9 pour fonctionner. WireNine fournit un panneau de contr\u00f4le cPanel tr\u00e8s complet. Celui-ci est directement accessible via l'onglet Mes comptes . La premi\u00e8re chose \u00e0 faire est de changer la version par d\u00e9faut de PHP avec laquelle votre site fonctionne. Cliquez donc sur le lien S\u00e9lectionner la version PHP dans la section Logiciels. Vous verrez une page indiquant la version actuelle de PHP. Vous trouverez ci-dessous une liste d\u00e9roulante qui vous permet de choisir des versions alternatives. Choisissez 5.6 et cliquez sur le bouton Set as current . Vous devrez d'abord activer mbstring et l'extension zip . WireNine est un pain rare dans le monde des h\u00e9bergeurs, en ce sens qu'il fournit des extensions de mise en cache sophistiqu\u00e9es pour PHP. Pour en profiter, activez l'extension de mise en cache apcu , ainsi que l'extension Zend opcache . Ensuite, cliquez sur Save en bas de ces options. Pour tester que vous avez la bonne version de PHP , Zend OPcache et APCu en cours d'ex\u00e9cution, vous pouvez cr\u00e9er un fichier temporaire : public_html/info.php et le mettre dans le contenu : <?php phpinfo(); Enregistrez le fichier et pointez votre navigateur vers ce fichier info.php sur votre site, et vous devriez \u00eatre accueilli avec des informations PHP refl\u00e9tant la version que vous avez s\u00e9lectionn\u00e9e pr\u00e9c\u00e9demment : Vous devriez \u00e9galement pouvoir faire d\u00e9filer vers le bas et voir Zend OPcache r\u00e9pertori\u00e9 dans le bloc moteur zend , et une section APCu en dessous : Installer et tester Grav. En utilisant vos nouvelles capacit\u00e9s SSH trouv\u00e9es, connectons SSH \u00e0 votre serveur WireNine (si vous n'y \u00eates pas d\u00e9j\u00e0) et t\u00e9l\u00e9chargez la derni\u00e8re version de Grav, d\u00e9compressez-la et testez-la ! Nous allons extraire Grav dans un sous-dossier /grav , mais vous pouvez d\u00e9compresser directement \u00e0 la racine de votre dossier ~/public_html/ pour vous assurer que Grav est accessible directement. $ | cd ~/public_html $ | wget https://getgrav.org/download/core/grav/latest $ | unzip grav-v1.7.28.zip Vous devriez maintenant pouvoir pointer votre navigateur vers http://mywirenineserver.com/grav en utilisant bien s\u00fbr l'URL appropri\u00e9e. Parce que vous avez suivi ces instructions avec diligence, vous pourrez \u00e9galement utiliser les commandes Grav CLI et Grav GPM telles que : $ | cd ~/public_html/grav $ | bin/grav clear-cache | | Clearing cache | | Cleared: cache/twig/* | Cleared: cache/doctrine/* | Cleared: cache/compiled/* | Cleared: cache/validated-* | Cleared: images/* | Cleared: assets/* | | Touched: /home/your_user/public_html/grav/user/config/system.yaml M\u00e9thode d'installation alternative : Softaculous. Disponible dans Cpanel, Softaculous est une m\u00e9thode d'installation simple et rapide pour Grav. Vous le trouverez en bas de votre tableau de bord Cpanel dans la cat\u00e9gorie Portails/CMS . Une fois que vous avez s\u00e9lectionn\u00e9 cette cat\u00e9gorie, vous pouvez faire d\u00e9filer vers le bas et trouver l'entr\u00e9e Grav. \u00c0 ce stade, vous pouvez s\u00e9lectionner l'ic\u00f4ne de t\u00e9l\u00e9chargement pour acc\u00e9der \u00e0 la page principale du produit pour Grav. Cette page comprend des informations suppl\u00e9mentaires, ainsi que le lien o\u00f9 vous pouvez installer Grav directement sur votre serveur. Une fois l\u00e0-bas, vous pouvez s\u00e9lectionner le bouton bleu Installer dans la partie sup\u00e9rieure gauche de la page pour commencer le processus d'installation. Cela vous am\u00e8nera \u00e0 une page de configuration vous permettant de configurer votre installation de Grav, y compris le r\u00e9pertoire dans lequel vous souhaitez l'installer, et un compte administrateur afin que vous puissiez vous lancer dans Grav Admin. Une fois que vous avez configur\u00e9 cette page comme vous le souhaitez, vous \u00eates pr\u00eat \u00e0 partir !","title":"WireNine"},{"location":"web-nginx/","text":"Nginx Nginx est un logiciel de serveur HTTP ax\u00e9 sur les fonctionnalit\u00e9s de base du serveur Web et du proxy. Il est tr\u00e8s courant en raison de son efficacit\u00e9 des ressources et de sa r\u00e9activit\u00e9 sous charge. Nginx g\u00e9n\u00e8re des processus de travail, chacun pouvant g\u00e9rer des milliers de connexions. Chacune des connexions g\u00e9r\u00e9es par le travailleur est plac\u00e9e dans une boucle d'\u00e9v\u00e9nements o\u00f9 elle existe avec d'autres connexions. Dans la boucle, les \u00e9v\u00e9nements sont trait\u00e9s de mani\u00e8re asynchrone, ce qui permet de g\u00e9rer le travail de mani\u00e8re non bloquante. Lorsque la connexion se ferme, elle est supprim\u00e9e de la boucle. Ce style de traitement des connexions permet \u00e0 Nginx d'\u00e9voluer incroyablement loin avec des ressources limit\u00e9es. Conditions. Cette page explique comment ex\u00e9cuter Grav avec Nginx en tant que serveur HTTP et PHP-FPM (FastCGI Process Manager) pour traiter les scripts PHP. Ces packages doivent donc \u00eatre install\u00e9s sur votre serveur : nginx php-fpm Configuration. Si vous \u00eates nouveau sur Nginx et que vous n'avez pas encore une compr\u00e9hension de base des directives/contexte de bloc, il est recommand\u00e9 de lire le Guide du d\u00e9butant Nginx, en particulier les sections Structure du fichier de configuration et Servir du contenu statique . Il est suppos\u00e9 que votre configuration Nginx se trouve dans /etc/nginx/ et que votre installation Grav est stock\u00e9e dans /var/www/grav/ . La structure de la configuration est un bloc http qui contient des directives g\u00e9n\u00e9rales pertinentes pour toutes les pages servies par Nginx, ainsi qu'un ou plusieurs blocs de server pour chaque page, contenant des directives sp\u00e9cifiques au site. Le fichier de configuration principal du serveur est nginx.conf et stocke le bloc http , tandis que les configurations sp\u00e9cifiques au site (blocs de server ) sont stock\u00e9es dans sites-available et li\u00e9es symboliquement aux sites-enabled . Autorisations de fichier. Le r\u00e9pertoire /var/www et tous les fichiers et dossiers contenus doivent appartenir \u00e0 $USER:www-data (ou quel que soit le nom que vous donnez \u00e0 l'utilisateur/groupe Nginx). La section D\u00e9pannage/Autorisations explique comment configurer les autorisations de fichiers et de r\u00e9pertoires pour Grav, dans ce cas en utilisant un groupe partag\u00e9. Fondamentalement, ce que vous voulez, c'est 775 pour les r\u00e9pertoires et 664 pour les fichiers dans le r\u00e9pertoire Grav, donc Grav est autoris\u00e9 \u00e0 modifier le contenu et \u00e0 se mettre \u00e0 niveau. Vous devez ajouter votre utilisateur au groupe www-data afin de pouvoir acc\u00e9der aux fichiers cr\u00e9\u00e9s par Grav/Nginx. Exemple nginx.conf. La configuration suivante est une version am\u00e9lior\u00e9e du fichier /etc/nginx/nginx.conf par d\u00e9faut, principalement avec des am\u00e9liorations de github.com/h5bp/server-configs-nginx . Consultez leur r\u00e9f\u00e9rentiel pour obtenir des explications sur ces param\u00e8tres ou la documentation du module principal Nginx et du module http pour rechercher des directives sp\u00e9cifiques. Il est recommand\u00e9 d'utiliser un fichier de d\u00e9finition de types MIME mis \u00e0 jour ( mime.types ) \u00e0 partir de github.com/h5bp/server-configs-nginx . Cela garantira que les types sont correctement d\u00e9finis pour la compression gzip. nginx.conf : 1 | user www-data; 2 | worker_processes auto; 3 | worker_rlimit_nofile 8192; # should be bigger than worker_connections 4 | pid /run/nginx.pid; 5 | 6 | events { 7 | use epoll; 8 | worker_connections 8000; 9 | multi_accept on; 10 | } 11 | 12 | http { 13 | sendfile on; 14 | tcp_nopush on; 15 | tcp_nodelay on; 16 | 17 | keepalive_timeout 30; # longer values are better for each ssl client, but take up a worker connection longer 18 | types_hash_max_size 2048; 19 | server_tokens off; 20 | 21 | # maximum file upload size 22 | # update 'upload_max_filesize' & 'post_max_size' in /etc/php/fpm/php.ini accordingly 23 | client_max_body_size 32m; 24 | # client_body_timeout 60s; # increase for very long file uploads 25 | 26 | # set default index file (can be overwritten for each site individually) 27 | index index.html; 28 | 29 | # load MIME types 30 | include mime.types; # get this file from https://github.com/h5bp/server-configs-nginx 31 | default_type application/octet-stream; # set default MIME type 32 | 33 | # logging 34 | access_log /var/log/nginx/access.log; 35 | error_log /var/log/nginx/error.log; 36 | 37 | # turn on gzip compression 38 | gzip on; 39 | gzip_disable \"msie6\"; 40 | gzip_vary on; 41 | gzip_proxied any; 42 | gzip_comp_level 5; 43 | gzip_buffers 16 8k; 44 | gzip_http_version 1.1; 45 | gzip_min_length 256; 46 | gzip_types 47 | application/atom+xml 48 | application/javascript 49 | application/json 50 | application/ld+json 51 | application/manifest+json 52 | application/rss+xml 53 | application/vnd.geo+json 34 | application/vnd.ms-fontobject 55 | application/x-font-ttf 56 | application/x-web-app-manifest+json 57 | application/xhtml+xml 58 | application/xml 59 | font/opentype 60 | image/bmp 61 | image/svg+xml 32 | image/x-icon 63 | text/cache-manifest 64 | text/css 65 | text/plain 66 | text/vcard 67 | text/vnd.rim.location.xloc 68 | text/vtt 69 | text/x-component 70 | text/x-cross-domain-policy; 71 | 72 | # disable content type sniffing for more security 73 | add_header \"X-Content-Type-Options\" \"nosniff\"; 74 | 75 | # force the latest IE version 76 | add_header \"X-UA-Compatible\" \"IE=Edge\"; 77 | 78 | # enable anti-cross-site scripting filter built into IE 8+ 79 | add_header \"X-XSS-Protection\" \"1; mode=block\"; 80 | 81 | # include virtual host configs 82 | include sites-enabled/*; 83 | } Configuration du site Grav. Grav est livr\u00e9 avec un fichier de configuration pour votre site dans le r\u00e9pertoire webserver-configs de votre installation Grav. Vous pouvez copier ce fichier dans votre r\u00e9pertoire de configuration nginx : $ | cp /var/www/grav/webserver-configs/nginx.conf /etc/nginx/sites-available/grav-site Ouvrez ce fichier avec un \u00e9diteur et remplacez \"example.com\" par votre domaine/IP (ou \"localhost\" si vous voulez simplement l'ex\u00e9cuter localement), remplacez la ligne \"root\" par \"root /var/www/grav/; \" puis cr\u00e9ez un lien symbolique de votre site-config dans sites-enabled : $ | ln -s /etc/nginx/sites-available/grav-site /etc/nginx/sites-enabled/grav-site Enfin laissez Nginx recharger sa configuration : $ | nginx -s reload Correction contre la vuln\u00e9rabilit\u00e9 httpoxy. httpoxy est un ensemble de vuln\u00e9rabilit\u00e9s qui affectent le code d'application s'ex\u00e9cutant dans des environnements CGI ou de type CGI. Source : https://httpoxy.org . Afin de s\u00e9curiser votre site contre cette vuln\u00e9rabilit\u00e9, vous devez bloquer l'en-t\u00eate Proxy . Cela peut \u00eatre fait en ajoutant un param\u00e8tre FastCGI \u00e0 votre config. Ouvrez simplement le fichier /etc/nginx/fastcgi.conf et ajoutez cette ligne \u00e0 la fin : fastcgi_param HTTP_PROXY \"\"; Utilisation de SSL (avec un certificat existant). Si vous souhaitez utiliser un certificat SSL existant pour chiffrer le trafic de votre site Web, cette section fournit les \u00e9tapes n\u00e9cessaires pour modifier votre configuration Nginx pour cela. Tout d'abord, cr\u00e9ez un fichier /etc/nginx/ssl.conf avec le contenu suivant et ajustez les chemins vers votre certificat et votre fichier de cl\u00e9. La derni\u00e8re section concerne l'agrafage OSCP et vous demande de fournir un certificat chain+root. Si vous ne le souhaitez pas, vous pouvez commenter ou supprimer tout ce qui se trouve sous le commentaire OCSP Stapling . Si votre site Web est SSL uniquement (y compris les sous-domaines), vous pouvez soumettre votre domaine pour le pr\u00e9chargement dans les navigateurs \u00e0 l'adresse https://hstspreload.appspot.com . Si ce n'est pas le cas, vous pouvez supprimer preload ; \u00e0 partir de la ligne qui ajoute l'en-t\u00eate \"Strict-Transport-Security\". Assurez-vous de v\u00e9rifier si toutes ces options fonctionnent pour votre configuration. ssl.conf : 1 | # set the paths to your cert and key files here 2 | ssl_certificate /etc/ssl/certs/example.com.crt; 3 | ssl_certificate_key /etc/ssl/private/example.com.key; 4 | 5 | ssl_protocols TLSv1 TLSv1.1 TLSv1.2; 6 | 7 | ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:ECDHE-RSA-DES-CBC3-SHA:ECDHE-ECDSA-DES-CBC3-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:AES:CAMELLIA:DES-CBC3-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!aECDH:!EDH-DSS-DES-CBC3-SHA:!EDH-RSA-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA; 8 | ssl_prefer_server_ciphers on; 9 | 10 | ssl_session_cache shared:SSL:10m; # a 1mb cache can hold about 4000 sessions, so we can hold 40000 sessions 11 | ssl_session_timeout 24h; 12 | 13 | # Use a higher keepalive timeout to reduce the need for repeated handshakes 14 | keepalive_timeout 300s; # up from 75 secs default 15 | 16 | # submit domain for preloading in browsers at: https://hstspreload.appspot.com 17 | add_header Strict-Transport-Security \"max-age=31536000; includeSubDomains; preload;\"; 18 | 19 | # OCSP stapling 20 | # nginx will poll the CA for signed OCSP responses, and send them to clients so clients don't make their own OCSP calls. 21 | # see https://sslmate.com/blog/post/ocsp_stapling_in_apache_and_nginx on how to create the chain+root 22 | ssl_stapling on; 23 | ssl_stapling_verify on; 24 | ssl_trusted_certificate /etc/ssl/certs/example.com.chain+root.crt; 25 | resolver 198.51.100.1 198.51.100.2 203.0.113.66 203.0.113.67 valid=60s; 26 | resolver_timeout 2s; Modifiez maintenant le contenu de votre configuration sp\u00e9cifique \u00e0 Grav /etc/nginx/sites-available/grav-site pour rediriger les requ\u00eates HTTP non chiffr\u00e9es vers HTTPS, c'est-\u00e0-dire vers un bloc server \u00e9coutant sur le port 443 et incluant votre ssl.conf (remplacez \"exemple .com\" avec votre domaine/IP). Vous pouvez \u00e9galement modifier cela pour rediriger la version non-www vers la version www de votre domaine. grav-site : 1 | # redirect http to non-www https 2 - server { 3 | listen [::]:80; 4 | listen 80; 5 | server_name example.com www.example.com; 6 | 7 | return 302 https://example.com$request_uri; 8 | } 9 | 10 | # redirect www https to non-www https 11 | server { 12 | listen [::]:443 ssl; 13 | listen 443 ssl; 14 | server_name www.example.com; 15 | 16 | # add ssl cert & options 17 | include ssl.conf; 18 | 19 | return 302 https://example.com$request_uri; 20 | } 21 | 22 | # serve website 23 | server { 24 | listen [::]:443 ssl; 25 | listen 443 ssl; 26 | server_name example.com; 27 | 28 | # add ssl cert & options 29 | include ssl.conf; 30 | 31 | root /var/www/example.com; 32 | 33 | index index.html index.php; 34 | 35 | # ... 36 | # the rest of this server block (location directives) is identical to the one from the shipped config 37 | } Rechargez enfin votre configuration Nginx : $ | nginx -s reload En-t\u00eates de cache Nginx pour les ressources. Il est \u00e9galement recommand\u00e9 d'activer ceux en production. Ces ajouts au fichier de configuration les g\u00e9reront. 'expires' d\u00e9finit le d\u00e9lai d'expiration du cache, 30 jours dans ce cas. Veuillez consulter la documentation compl\u00e8te sur les en-t\u00eates http pour nginx ici http://nginx.org/en/docs/http/ngx_http_headers_module.html . 1 | location ~* ^/forms-basic-captcha-image.jpg$ { 2 | try_files $uri $uri/ /index.php$is_args$args; 3 | } 4 | 5 | location ~* \\.(?:ico|css|js|gif|jpe?g|png)$ { 6 | expires 30d; 7 | add_header Vary Accept-Encoding; 8 | log_not_found off; 9 | } 10 | 11 | location ~* ^.+\\.(?:css|cur|js|jpe?g|gif|htc|ico|png|html|xml|otf|ttf|eot|woff|woff2|svg)$ { 12 | access_log off; 13 | expires 30d; 14 | add_header Cache-Control public; 15 | 16 | ## No need to bleed constant updates. Send the all shebang in one 17 | ## fell swoop. 18 | tcp_nodelay off; 19 | 20 | ## Set the OS file cache. 21 | open_file_cache max=3000 inactive=120s; 22 | open_file_cache_valid 45s; 23 | open_file_cache_min_uses 2; 24 | open_file_cache_errors off; 25 | }","title":"Nginx"},{"location":"web-serveur-grav/","text":"Serveur Web int\u00e9gr\u00e9 Grav Pour que Grav soit op\u00e9rationnel rapidement, vous pouvez ex\u00e9cuter Grav \u00e0 l'aide d'une simple commande \u00e0 partir du terminal / invite de commande en utilisant le serveur PHP int\u00e9gr\u00e9 disponible tant que PHP est install\u00e9. Tout ce que vous avez \u00e0 faire est d'acc\u00e9der \u00e0 la racine de votre installation Grav \u00e0 l'aide du terminal ou de l'invite de commande et d'entrer le serveur bin/grav server . Bien que techniquement tout ce dont vous avez besoin est PHP install\u00e9, si vous installez l'application Symfony CLI , le serveur fournira un certificat SSL afin que vous puissiez utiliser https:// et utiliser PHP-FPM pour de meilleures performances. La saisie de cette commande vous pr\u00e9sentera une sortie semblable \u00e0 la suivante : $ | \u279c bin/grav server | | Grav Web Server | =============== | | Tailing Web Server log file (/Users/joeblow/.symfony/log/ 96e710135f52930318e745e901e4010d0907cec3.log) | Tailing PHP-FPM log file (/Users/joeblow/.symfony/log/96e710135f52930318e745e901e4010d0907cec3/53fb8ec204547646acb3461995e4da5a54cc7575.log) | Tailing PHP-FPM log file (/Users/joeblow/.symfony/log/96e710135f52930318e745e901e4010d0907cec3/53fb8ec204547646acb3461995e4da5a54cc7575.log) | | [OK] Web server listening | The Web server is using PHP FPM 8.0.8 | https://127.0.0.1:8000 | | [Web Server ] Jul 30 14:54:53 |DEBUG | PHP Reloading PHP versions | [Web Server ] Jul 30 14:54:54 |DEBUG | PHP Using PHP version 8.0.8 (from default version in $PATH) | [PHP-FPM ] Jul 6 14:40:17 |NOTICE | FPM fpm is running, pid 64992 | [PHP-FPM ] Jul 6 14:40:17 |NOTICE | FPM ready to handle connections | [PHP-FPM ] Jul 6 14:40:17 |NOTICE | FPM fpm is running, pid 64992 | [PHP-FPM ] Jul 6 14:40:17 |NOTICE | FPM ready to handle connections | [Web Server ] Jul 30 14:54:54 |INFO | PHP listening path=\"/usr/local/Cellar/php/8.0.8_2/sbin/php-fpm\" php=\"8.0.8\" port=65140 | [PHP-FPM ] Jul 30 14:54:54 |NOTICE | FPM fpm is running, pid 73709 | [PHP-FPM ] Jul 30 14:54:54 |NOTICE | FPM ready to handle connections | [PHP-FPM ] Jul 30 14:54:54 |NOTICE | FPM fpm is running, pid 73709 | [PHP-FPM ] Jul 30 14:54:54 |NOTICE | FPM ready to handle connections Votre terminal vous donnera \u00e9galement des mises \u00e0 jour en temps r\u00e9el de toute activit\u00e9 sur ce serveur de style ad hoc. Vous pouvez copier l'URL fournie dans la ligne [OK] Web Server listening et la coller dans le navigateur de votre choix pour acc\u00e9der \u00e0 votre site, y compris l'administrateur. https://127.0.0.1:8000 Il s'agit d'un outil utile pour un d\u00e9veloppement rapide et ne doit pas \u00eatre utilis\u00e9 \u00e0 la place d'un serveur Web d\u00e9di\u00e9 tel qu'Apache ou Nginx.","title":"Serveur Web Grav int\u00e9gr\u00e9"}]}